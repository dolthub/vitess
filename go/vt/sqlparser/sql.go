// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const RETURNING = 57368
const ALL = 57369
const DISTINCT = 57370
const AS = 57371
const EXISTS = 57372
const ASC = 57373
const DESC = 57374
const DUPLICATE = 57375
const DEFAULT = 57376
const SET = 57377
const LOCK = 57378
const UNLOCK = 57379
const KEYS = 57380
const OF = 57381
const OUTFILE = 57382
const DUMPFILE = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const OPTIONALLY = 57390
const STARTING = 57391
const UNIQUE = 57392
const KEY = 57393
const SYSTEM_TIME = 57394
const CONTAINED = 57395
const VERSION = 57396
const VERSIONS = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const SQL_CALC_FOUND_ROWS = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const STRING = 57419
const ID = 57420
const HEX = 57421
const INTEGRAL = 57422
const FLOAT = 57423
const HEXNUM = 57424
const VALUE_ARG = 57425
const LIST_ARG = 57426
const COMMENT = 57427
const COMMENT_KEYWORD = 57428
const BIT_LITERAL = 57429
const NULL = 57430
const TRUE = 57431
const FALSE = 57432
const OFF = 57433
const INTO = 57434
const OR = 57435
const XOR = 57436
const AND = 57437
const NOT = 57438
const BETWEEN = 57439
const CASE = 57440
const WHEN = 57441
const THEN = 57442
const ELSE = 57443
const ELSEIF = 57444
const END = 57445
const LE = 57446
const GE = 57447
const NE = 57448
const NULL_SAFE_EQUAL = 57449
const IS = 57450
const LIKE = 57451
const REGEXP = 57452
const IN = 57453
const ASSIGNMENT_OP = 57454
const UNBOUNDED = 57455
const PARTITION = 57456
const RANGE = 57457
const ROWS = 57458
const GROUPS = 57459
const PRECEDING = 57460
const FOLLOWING = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_ARMSCII8 = 57469
const UNDERSCORE_ASCII = 57470
const UNDERSCORE_BIG5 = 57471
const UNDERSCORE_BINARY = 57472
const UNDERSCORE_CP1250 = 57473
const UNDERSCORE_CP1251 = 57474
const UNDERSCORE_CP1256 = 57475
const UNDERSCORE_CP1257 = 57476
const UNDERSCORE_CP850 = 57477
const UNDERSCORE_CP852 = 57478
const UNDERSCORE_CP866 = 57479
const UNDERSCORE_CP932 = 57480
const UNDERSCORE_DEC8 = 57481
const UNDERSCORE_EUCJPMS = 57482
const UNDERSCORE_EUCKR = 57483
const UNDERSCORE_GB18030 = 57484
const UNDERSCORE_GB2312 = 57485
const UNDERSCORE_GBK = 57486
const UNDERSCORE_GEOSTD8 = 57487
const UNDERSCORE_GREEK = 57488
const UNDERSCORE_HEBREW = 57489
const UNDERSCORE_HP8 = 57490
const UNDERSCORE_KEYBCS2 = 57491
const UNDERSCORE_KOI8R = 57492
const UNDERSCORE_KOI8U = 57493
const UNDERSCORE_LATIN1 = 57494
const UNDERSCORE_LATIN2 = 57495
const UNDERSCORE_LATIN5 = 57496
const UNDERSCORE_LATIN7 = 57497
const UNDERSCORE_MACCE = 57498
const UNDERSCORE_MACROMAN = 57499
const UNDERSCORE_SJIS = 57500
const UNDERSCORE_SWE7 = 57501
const UNDERSCORE_TIS620 = 57502
const UNDERSCORE_UCS2 = 57503
const UNDERSCORE_UJIS = 57504
const UNDERSCORE_UTF16 = 57505
const UNDERSCORE_UTF16LE = 57506
const UNDERSCORE_UTF32 = 57507
const UNDERSCORE_UTF8 = 57508
const UNDERSCORE_UTF8MB3 = 57509
const UNDERSCORE_UTF8MB4 = 57510
const INTERVAL = 57511
const JSON_EXTRACT_OP = 57512
const JSON_UNQUOTE_EXTRACT_OP = 57513
const CREATE = 57514
const ALTER = 57515
const DROP = 57516
const RENAME = 57517
const ANALYZE = 57518
const ADD = 57519
const MODIFY = 57520
const CHANGE = 57521
const SCHEMA = 57522
const TABLE = 57523
const INDEX = 57524
const INDEXES = 57525
const VIEW = 57526
const TO = 57527
const IGNORE = 57528
const IF = 57529
const PRIMARY = 57530
const COLUMN = 57531
const SPATIAL = 57532
const VECTOR = 57533
const FULLTEXT = 57534
const KEY_BLOCK_SIZE = 57535
const CHECK = 57536
const ACTION = 57537
const CASCADE = 57538
const CONSTRAINT = 57539
const FOREIGN = 57540
const NO = 57541
const REFERENCES = 57542
const RESTRICT = 57543
const FIRST = 57544
const AFTER = 57545
const LAST = 57546
const SHOW = 57547
const DESCRIBE = 57548
const EXPLAIN = 57549
const DATE = 57550
const ESCAPE = 57551
const REPAIR = 57552
const OPTIMIZE = 57553
const TRUNCATE = 57554
const FORMAT = 57555
const EXTENDED = 57556
const PLAN = 57557
const MAXVALUE = 57558
const REORGANIZE = 57559
const LESS = 57560
const THAN = 57561
const PROCEDURE = 57562
const TRIGGER = 57563
const TRIGGERS = 57564
const FUNCTION = 57565
const STATUS = 57566
const VARIABLES = 57567
const WARNINGS = 57568
const ERRORS = 57569
const KILL = 57570
const CONNECTION = 57571
const SEQUENCE = 57572
const ENABLE = 57573
const DISABLE = 57574
const EACH = 57575
const ROW = 57576
const BEFORE = 57577
const FOLLOWS = 57578
const PRECEDES = 57579
const DEFINER = 57580
const INVOKER = 57581
const INOUT = 57582
const OUT = 57583
const DETERMINISTIC = 57584
const CONTAINS = 57585
const READS = 57586
const MODIFIES = 57587
const SQL = 57588
const SECURITY = 57589
const TEMPORARY = 57590
const ALGORITHM = 57591
const MERGE = 57592
const TEMPTABLE = 57593
const UNDEFINED = 57594
const EVENT = 57595
const EVENTS = 57596
const SCHEDULE = 57597
const EVERY = 57598
const STARTS = 57599
const ENDS = 57600
const COMPLETION = 57601
const PRESERVE = 57602
const CASCADED = 57603
const INSTANT = 57604
const INPLACE = 57605
const COPY = 57606
const DISCARD = 57607
const IMPORT = 57608
const SHARED = 57609
const EXCLUSIVE = 57610
const WITHOUT = 57611
const VALIDATION = 57612
const COALESCE = 57613
const EXCHANGE = 57614
const REBUILD = 57615
const REMOVE = 57616
const PARTITIONING = 57617
const CLASS_ORIGIN = 57618
const SUBCLASS_ORIGIN = 57619
const MESSAGE_TEXT = 57620
const MYSQL_ERRNO = 57621
const CONSTRAINT_CATALOG = 57622
const CONSTRAINT_SCHEMA = 57623
const CONSTRAINT_NAME = 57624
const CATALOG_NAME = 57625
const SCHEMA_NAME = 57626
const TABLE_NAME = 57627
const COLUMN_NAME = 57628
const CURSOR_NAME = 57629
const SIGNAL = 57630
const RESIGNAL = 57631
const SQLSTATE = 57632
const DECLARE = 57633
const CONDITION = 57634
const CURSOR = 57635
const CONTINUE = 57636
const EXIT = 57637
const UNDO = 57638
const HANDLER = 57639
const FOUND = 57640
const SQLWARNING = 57641
const SQLEXCEPTION = 57642
const FETCH = 57643
const OPEN = 57644
const CLOSE = 57645
const LOOP = 57646
const LEAVE = 57647
const ITERATE = 57648
const REPEAT = 57649
const UNTIL = 57650
const WHILE = 57651
const DO = 57652
const RETURN = 57653
const USER = 57654
const IDENTIFIED = 57655
const ROLE = 57656
const REUSE = 57657
const GRANT = 57658
const GRANTS = 57659
const REVOKE = 57660
const NONE = 57661
const ATTRIBUTE = 57662
const RANDOM = 57663
const PASSWORD = 57664
const INITIAL = 57665
const AUTHENTICATION = 57666
const SSL = 57667
const X509 = 57668
const CIPHER = 57669
const ISSUER = 57670
const SUBJECT = 57671
const ACCOUNT = 57672
const EXPIRE = 57673
const NEVER = 57674
const OPTION = 57675
const OPTIONAL = 57676
const ADMIN = 57677
const PRIVILEGES = 57678
const MAX_QUERIES_PER_HOUR = 57679
const MAX_UPDATES_PER_HOUR = 57680
const MAX_CONNECTIONS_PER_HOUR = 57681
const MAX_USER_CONNECTIONS = 57682
const FLUSH = 57683
const FAILED_LOGIN_ATTEMPTS = 57684
const PASSWORD_LOCK_TIME = 57685
const REQUIRE = 57686
const PROXY = 57687
const ROUTINE = 57688
const TABLESPACE = 57689
const CLIENT = 57690
const SLAVE = 57691
const EXECUTE = 57692
const FILE = 57693
const RELOAD = 57694
const REPLICATION = 57695
const SHUTDOWN = 57696
const SUPER = 57697
const USAGE = 57698
const LOGS = 57699
const ENGINE = 57700
const ERROR = 57701
const GENERAL = 57702
const HOSTS = 57703
const OPTIMIZER_COSTS = 57704
const RELAY = 57705
const SLOW = 57706
const USER_RESOURCES = 57707
const NO_WRITE_TO_BINLOG = 57708
const CHANNEL = 57709
const UNKNOWN = 57710
const APPLICATION_PASSWORD_ADMIN = 57711
const AUDIT_ABORT_EXEMPT = 57712
const AUDIT_ADMIN = 57713
const AUTHENTICATION_POLICY_ADMIN = 57714
const BACKUP_ADMIN = 57715
const BINLOG_ADMIN = 57716
const BINLOG_ENCRYPTION_ADMIN = 57717
const CLONE_ADMIN = 57718
const CONNECTION_ADMIN = 57719
const ENCRYPTION_KEY_ADMIN = 57720
const FIREWALL_ADMIN = 57721
const FIREWALL_EXEMPT = 57722
const FIREWALL_USER = 57723
const FLUSH_OPTIMIZER_COSTS = 57724
const FLUSH_STATUS = 57725
const FLUSH_TABLES = 57726
const FLUSH_USER_RESOURCES = 57727
const GROUP_REPLICATION_ADMIN = 57728
const GROUP_REPLICATION_STREAM = 57729
const INNODB_REDO_LOG_ARCHIVE = 57730
const INNODB_REDO_LOG_ENABLE = 57731
const NDB_STORED_USER = 57732
const PASSWORDLESS_USER_ADMIN = 57733
const PERSIST_RO_VARIABLES_ADMIN = 57734
const REPLICATION_APPLIER = 57735
const REPLICATION_SLAVE_ADMIN = 57736
const RESOURCE_GROUP_ADMIN = 57737
const RESOURCE_GROUP_USER = 57738
const ROLE_ADMIN = 57739
const SENSITIVE_VARIABLES_OBSERVER = 57740
const SESSION_VARIABLES_ADMIN = 57741
const SET_USER_ID = 57742
const SHOW_ROUTINE = 57743
const SKIP_QUERY_REWRITE = 57744
const SYSTEM_VARIABLES_ADMIN = 57745
const TABLE_ENCRYPTION_ADMIN = 57746
const TP_CONNECTION_ADMIN = 57747
const VERSION_TOKEN_ADMIN = 57748
const XA_RECOVER_ADMIN = 57749
const REPLICA = 57750
const REPLICAS = 57751
const SOURCE = 57752
const STOP = 57753
const RESET = 57754
const FILTER = 57755
const LOG = 57756
const MASTER = 57757
const SOURCE_HOST = 57758
const SOURCE_SSL = 57759
const SOURCE_USER = 57760
const SOURCE_PASSWORD = 57761
const SOURCE_PORT = 57762
const SOURCE_CONNECT_RETRY = 57763
const SOURCE_RETRY_COUNT = 57764
const SOURCE_AUTO_POSITION = 57765
const REPLICATE_DO_TABLE = 57766
const REPLICATE_IGNORE_TABLE = 57767
const IO_THREAD = 57768
const SQL_THREAD = 57769
const BEGIN = 57770
const START = 57771
const TRANSACTION = 57772
const COMMIT = 57773
const ROLLBACK = 57774
const SAVEPOINT = 57775
const WORK = 57776
const RELEASE = 57777
const CHAIN = 57778
const CONSISTENT = 57779
const SNAPSHOT = 57780
const BIT = 57781
const TINYINT = 57782
const SMALLINT = 57783
const MEDIUMINT = 57784
const INT = 57785
const INTEGER = 57786
const BIGINT = 57787
const INTNUM = 57788
const SERIAL = 57789
const INT1 = 57790
const INT2 = 57791
const INT3 = 57792
const INT4 = 57793
const INT8 = 57794
const REAL = 57795
const DOUBLE = 57796
const FLOAT_TYPE = 57797
const DECIMAL = 57798
const NUMERIC = 57799
const DEC = 57800
const FIXED = 57801
const PRECISION = 57802
const TIME = 57803
const TIMESTAMP = 57804
const DATETIME = 57805
const CHAR = 57806
const VARCHAR = 57807
const BOOL = 57808
const CHARACTER = 57809
const VARBINARY = 57810
const NCHAR = 57811
const NVARCHAR = 57812
const NATIONAL = 57813
const VARYING = 57814
const VARCHARACTER = 57815
const TEXT = 57816
const TINYTEXT = 57817
const MEDIUMTEXT = 57818
const LONGTEXT = 57819
const LONG = 57820
const BLOB = 57821
const TINYBLOB = 57822
const MEDIUMBLOB = 57823
const LONGBLOB = 57824
const JSON = 57825
const ENUM = 57826
const GEOMETRY = 57827
const POINT = 57828
const LINESTRING = 57829
const POLYGON = 57830
const GEOMETRYCOLLECTION = 57831
const MULTIPOINT = 57832
const MULTILINESTRING = 57833
const MULTIPOLYGON = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const SKIP = 57837
const LOCKED = 57838
const NULLX = 57839
const AUTO_INCREMENT = 57840
const APPROXNUM = 57841
const SIGNED = 57842
const UNSIGNED = 57843
const ZEROFILL = 57844
const SRID = 57845
const COLLATION = 57846
const DATABASES = 57847
const SCHEMAS = 57848
const TABLES = 57849
const FULL = 57850
const PROCESSLIST = 57851
const COLUMNS = 57852
const FIELDS = 57853
const ENGINES = 57854
const PLUGINS = 57855
const NAMES = 57856
const CHARSET = 57857
const GLOBAL = 57858
const SESSION = 57859
const ISOLATION = 57860
const LEVEL = 57861
const READ = 57862
const WRITE = 57863
const ONLY = 57864
const REPEATABLE = 57865
const COMMITTED = 57866
const UNCOMMITTED = 57867
const SERIALIZABLE = 57868
const ENCRYPTION = 57869
const CURRENT_TIMESTAMP = 57870
const NOW = 57871
const DATABASE = 57872
const CURRENT_DATE = 57873
const CURRENT_USER = 57874
const CURRENT_TIME = 57875
const LOCALTIME = 57876
const LOCALTIMESTAMP = 57877
const UTC_DATE = 57878
const UTC_TIME = 57879
const UTC_TIMESTAMP = 57880
const REPLACE = 57881
const CONVERT = 57882
const CAST = 57883
const POSITION = 57884
const SUBSTR = 57885
const SUBSTRING = 57886
const TRIM = 57887
const LEADING = 57888
const TRAILING = 57889
const BOTH = 57890
const GROUP_CONCAT = 57891
const SEPARATOR = 57892
const TIMESTAMPADD = 57893
const TIMESTAMPDIFF = 57894
const EXTRACT = 57895
const GET_FORMAT = 57896
const OVER = 57897
const WINDOW = 57898
const GROUPING = 57899
const CURRENT = 57900
const AVG = 57901
const BIT_AND = 57902
const BIT_OR = 57903
const BIT_XOR = 57904
const COUNT = 57905
const JSON_ARRAYAGG = 57906
const JSON_OBJECTAGG = 57907
const MAX = 57908
const MIN = 57909
const STDDEV_POP = 57910
const STDDEV = 57911
const STD = 57912
const STDDEV_SAMP = 57913
const SUM = 57914
const VAR_POP = 57915
const VARIANCE = 57916
const VAR_SAMP = 57917
const CUME_DIST = 57918
const DENSE_RANK = 57919
const FIRST_VALUE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const ROW_NUMBER = 57926
const PERCENT_RANK = 57927
const RANK = 57928
const DUAL = 57929
const JSON_TABLE = 57930
const PATH = 57931
const AVG_ROW_LENGTH = 57932
const CHECKSUM = 57933
const COMPACT = 57934
const COMPRESSED = 57935
const COMPRESSION = 57936
const DISK = 57937
const DIRECTORY = 57938
const DELAY_KEY_WRITE = 57939
const DYNAMIC = 57940
const ENGINE_ATTRIBUTE = 57941
const ENCRYPTED = 57942
const ENCRYPTION_KEY_ID = 57943
const HASH = 57944
const INSERT_METHOD = 57945
const ITEF_QUOTES = 57946
const LIST = 57947
const MIN_ROWS = 57948
const MAX_ROWS = 57949
const PACK_KEYS = 57950
const MEMORY = 57951
const PAGE_CHECKSUM = 57952
const PAGE_COMPRESSED = 57953
const PAGE_COMPRESSION_LEVEL = 57954
const PARTITIONS = 57955
const REDUNDANT = 57956
const ROW_FORMAT = 57957
const SECONDARY_ENGINE = 57958
const SECONDARY_ENGINE_ATTRIBUTE = 57959
const STATS_AUTO_RECALC = 57960
const STATS_PERSISTENT = 57961
const STATS_SAMPLE_PAGES = 57962
const STORAGE = 57963
const SUBPARTITION = 57964
const SUBPARTITIONS = 57965
const TABLE_CHECKSUM = 57966
const TRANSACTIONAL = 57967
const VERSIONING = 57968
const YES = 57969
const PREPARE = 57970
const DEALLOCATE = 57971
const MATCH = 57972
const AGAINST = 57973
const BOOLEAN = 57974
const LANGUAGE = 57975
const WITH = 57976
const QUERY = 57977
const EXPANSION = 57978
const MICROSECOND = 57979
const SECOND = 57980
const MINUTE = 57981
const HOUR = 57982
const DAY = 57983
const WEEK = 57984
const MONTH = 57985
const QUARTER = 57986
const YEAR = 57987
const SECOND_MICROSECOND = 57988
const MINUTE_MICROSECOND = 57989
const MINUTE_SECOND = 57990
const HOUR_MICROSECOND = 57991
const HOUR_SECOND = 57992
const HOUR_MINUTE = 57993
const DAY_MICROSECOND = 57994
const DAY_SECOND = 57995
const DAY_MINUTE = 57996
const DAY_HOUR = 57997
const YEAR_MONTH = 57998
const NAME = 57999
const SYSTEM = 58000
const ACCESSIBLE = 58001
const ASENSITIVE = 58002
const CUBE = 58003
const DELAYED = 58004
const DISTINCTROW = 58005
const EMPTY = 58006
const FLOAT4 = 58007
const FLOAT8 = 58008
const GET = 58009
const HIGH_PRIORITY = 58010
const INSENSITIVE = 58011
const IO_AFTER_GTIDS = 58012
const IO_BEFORE_GTIDS = 58013
const LINEAR = 58014
const MASTER_BIND = 58015
const MASTER_SSL_VERIFY_SERVER_CERT = 58016
const MIDDLEINT = 58017
const PURGE = 58018
const READ_WRITE = 58019
const RLIKE = 58020
const SENSITIVE = 58021
const SPECIFIC = 58022
const SQL_BIG_RESULT = 58023
const SQL_SMALL_RESULT = 58024
const UNUSED = 58025
const DESCRIPTION = 58026
const LATERAL = 58027
const MEMBER = 58028
const RECURSIVE = 58029
const BUCKETS = 58030
const CLONE = 58031
const COMPONENT = 58032
const DEFINITION = 58033
const ENFORCED = 58034
const NOT_ENFORCED = 58035
const EXCLUDE = 58036
const GEOMCOLLECTION = 58037
const GET_MASTER_PUBLIC_KEY = 58038
const HISTOGRAM = 58039
const HISTORY = 58040
const INACTIVE = 58041
const INVISIBLE = 58042
const MASTER_COMPRESSION_ALGORITHMS = 58043
const MASTER_PUBLIC_KEY_PATH = 58044
const MASTER_TLS_CIPHERSUITES = 58045
const MASTER_ZSTD_COMPRESSION_LEVEL = 58046
const NESTED = 58047
const NETWORK_NAMESPACE = 58048
const NOWAIT = 58049
const NULLS = 58050
const OJ = 58051
const OLD = 58052
const ORDINALITY = 58053
const ORGANIZATION = 58054
const OTHERS = 58055
const PERSIST = 58056
const PERSIST_ONLY = 58057
const PRIVILEGE_CHECKS_USER = 58058
const PROCESS = 58059
const REFERENCE = 58060
const REQUIRE_ROW_FORMAT = 58061
const RESOURCE = 58062
const RESPECT = 58063
const RESTART = 58064
const RETAIN = 58065
const SECONDARY = 58066
const SECONDARY_LOAD = 58067
const SECONDARY_UNLOAD = 58068
const THREAD_PRIORITY = 58069
const TIES = 58070
const VCPU = 58071
const VISIBLE = 58072
const INFILE = 58073
const ACTIVE = 58074
const AGGREGATE = 58075
const ANY = 58076
const ARRAY = 58077
const ASCII = 58078
const AT = 58079
const AUTOEXTEND_SIZE = 58080
const GENERATED = 58081
const ALWAYS = 58082
const STORED = 58083
const VIRTUAL = 58084
const NVAR = 58085
const PASSWORD_LOCK = 58086

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"RETURNING",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"UNKNOWN",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	764, 41,
	-2, 80,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	200, 1811,
	201, 1832,
	-2, 336,
	-1, 62,
	243, 1186,
	244, 1186,
	-2, 1175,
	-1, 90,
	272, 336,
	-2, 1817,
	-1, 94,
	8, 59,
	9, 59,
	10, 59,
	-2, 52,
	-1, 95,
	8, 62,
	9, 62,
	-2, 53,
	-1, 546,
	1, 2515,
	6, 2515,
	7, 2515,
	29, 2515,
	188, 2515,
	764, 2515,
	-2, 1221,
	-1, 559,
	188, 1842,
	-2, 1836,
	-1, 560,
	188, 1843,
	-2, 1837,
	-1, 664,
	1, 687,
	764, 687,
	-2, 685,
	-1, 673,
	1, 1327,
	8, 1327,
	9, 1327,
	10, 1327,
	17, 1327,
	18, 1327,
	19, 1327,
	20, 1327,
	22, 1327,
	24, 1327,
	26, 1327,
	35, 1327,
	36, 1327,
	65, 1327,
	66, 1327,
	67, 1327,
	68, 1327,
	69, 1327,
	71, 1327,
	72, 1327,
	75, 1327,
	76, 1327,
	78, 1327,
	79, 1327,
	97, 1327,
	527, 1327,
	575, 1327,
	653, 1327,
	764, 1327,
	-2, 1826,
	-1, 678,
	1, 1435,
	8, 1435,
	9, 1435,
	10, 1435,
	17, 1435,
	18, 1435,
	19, 1435,
	20, 1435,
	22, 1435,
	24, 1435,
	26, 1435,
	35, 1435,
	36, 1435,
	65, 1435,
	66, 1435,
	67, 1435,
	68, 1435,
	69, 1435,
	71, 1435,
	72, 1435,
	75, 1435,
	76, 1435,
	78, 1435,
	79, 1435,
	97, 1435,
	527, 1435,
	575, 1435,
	653, 1435,
	764, 1435,
	-2, 1826,
	-1, 707,
	188, 2211,
	-2, 1449,
	-1, 740,
	188, 2319,
	-2, 1719,
	-1, 741,
	188, 2401,
	-2, 1451,
	-1, 742,
	188, 2231,
	-2, 1452,
	-1, 811,
	188, 2182,
	-2, 1683,
	-1, 814,
	188, 2197,
	-2, 1601,
	-1, 815,
	188, 2200,
	-2, 1601,
	-1, 816,
	188, 2411,
	-2, 1601,
	-1, 818,
	188, 2198,
	-2, 1601,
	-1, 819,
	188, 2412,
	-2, 1601,
	-1, 820,
	188, 2413,
	-2, 1601,
	-1, 879,
	188, 2199,
	-2, 1601,
	-1, 962,
	188, 2299,
	-2, 1601,
	-1, 963,
	188, 2300,
	-2, 1601,
	-1, 1076,
	110, 2528,
	121, 2528,
	188, 2528,
	-2, 1793,
	-1, 1077,
	110, 2659,
	121, 2659,
	188, 2659,
	-2, 1794,
	-1, 1082,
	110, 2556,
	121, 2556,
	188, 2556,
	-2, 1795,
	-1, 1083,
	110, 2607,
	121, 2607,
	188, 2607,
	-2, 1796,
	-1, 1084,
	110, 2608,
	121, 2608,
	188, 2608,
	-2, 1797,
	-1, 1085,
	110, 2455,
	121, 2455,
	188, 2455,
	-2, 1802,
	-1, 1087,
	110, 2584,
	121, 2584,
	188, 2584,
	-2, 1804,
	-1, 1259,
	454, 1200,
	-2, 1204,
	-1, 1261,
	454, 1200,
	-2, 1204,
	-1, 1386,
	1, 687,
	764, 687,
	-2, 685,
	-1, 1388,
	1, 688,
	764, 688,
	-2, 685,
	-1, 1411,
	1, 1328,
	8, 1328,
	9, 1328,
	10, 1328,
	17, 1328,
	18, 1328,
	19, 1328,
	20, 1328,
	22, 1328,
	24, 1328,
	26, 1328,
	35, 1328,
	36, 1328,
	65, 1328,
	66, 1328,
	67, 1328,
	68, 1328,
	69, 1328,
	71, 1328,
	72, 1328,
	75, 1328,
	76, 1328,
	78, 1328,
	79, 1328,
	97, 1328,
	527, 1328,
	575, 1328,
	653, 1328,
	764, 1328,
	-2, 1826,
	-1, 1422,
	1, 1435,
	8, 1435,
	9, 1435,
	10, 1435,
	17, 1435,
	18, 1435,
	19, 1435,
	20, 1435,
	22, 1435,
	24, 1435,
	26, 1435,
	35, 1435,
	36, 1435,
	65, 1435,
	66, 1435,
	67, 1435,
	68, 1435,
	69, 1435,
	71, 1435,
	72, 1435,
	75, 1435,
	76, 1435,
	78, 1435,
	79, 1435,
	97, 1435,
	527, 1435,
	575, 1435,
	653, 1435,
	764, 1435,
	-2, 1826,
	-1, 1471,
	8, 60,
	9, 60,
	10, 60,
	-2, 50,
	-1, 1719,
	1, 687,
	764, 687,
	-2, 685,
	-1, 1721,
	1, 687,
	764, 687,
	-2, 685,
	-1, 2280,
	188, 1846,
	-2, 1695,
	-1, 2283,
	188, 2747,
	-2, 1698,
	-1, 2284,
	188, 2748,
	-2, 1699,
	-1, 2285,
	188, 1845,
	-2, 1841,
	-1, 2435,
	76, 99,
	78, 99,
	-2, 103,
	-1, 2453,
	188, 2323,
	-2, 1798,
	-1, 2460,
	1, 908,
	764, 908,
	-2, 685,
	-1, 2649,
	50, 929,
	207, 932,
	209, 929,
	210, 929,
	211, 929,
	-2, 1046,
	-1, 2731,
	8, 60,
	9, 60,
	10, 60,
	79, 50,
	-2, 1481,
	-1, 2748,
	1, 1373,
	8, 1373,
	9, 1373,
	10, 1373,
	17, 1373,
	18, 1373,
	19, 1373,
	20, 1373,
	22, 1373,
	24, 1373,
	26, 1373,
	35, 1373,
	36, 1373,
	65, 1373,
	66, 1373,
	67, 1373,
	68, 1373,
	69, 1373,
	71, 1373,
	72, 1373,
	75, 1373,
	76, 1373,
	78, 1373,
	79, 1373,
	97, 1373,
	527, 1373,
	575, 1373,
	653, 1373,
	764, 1373,
	-2, 1826,
	-1, 2926,
	213, 1040,
	217, 1040,
	-2, 796,
	-1, 2927,
	213, 1110,
	217, 1110,
	-2, 797,
	-1, 3198,
	1, 1435,
	8, 1435,
	9, 1435,
	10, 1435,
	17, 1435,
	18, 1435,
	19, 1435,
	20, 1435,
	22, 1435,
	24, 1435,
	26, 1435,
	35, 1435,
	36, 1435,
	65, 1435,
	66, 1435,
	67, 1435,
	68, 1435,
	69, 1435,
	71, 1435,
	72, 1435,
	75, 1435,
	76, 1435,
	78, 1435,
	79, 1435,
	97, 1435,
	527, 1435,
	575, 1435,
	653, 1435,
	764, 1435,
	-2, 1826,
	-1, 3302,
	1, 1751,
	26, 1751,
	75, 1751,
	764, 1751,
	-2, 1826,
	-1, 3505,
	50, 929,
	207, 932,
	209, 929,
	210, 929,
	211, 929,
	-2, 1046,
	-1, 3525,
	207, 933,
	213, 1040,
	217, 1040,
	-2, 931,
	-1, 3715,
	78, 2094,
	79, 2094,
	188, 2094,
	-2, 1229,
	-1, 3716,
	77, 1760,
	253, 1760,
	-2, 2143,
	-1, 3717,
	77, 1761,
	253, 1761,
	-2, 2713,
	-1, 4108,
	47, 1857,
	-2, 1855,
	-1, 4386,
	316, 433,
	-2, 1913,
	-1, 4387,
	316, 434,
	-2, 1954,
	-1, 4388,
	316, 435,
	-2, 2131,
	-1, 4625,
	105, 419,
	107, 419,
	109, 419,
	-2, 80,
	-1, 4706,
	107, 426,
	108, 426,
	109, 426,
	-2, 80,
}

const yyPrivate = 57344

const yyLast = 83209

var yyAct = [...]int{
	753, 44, 4642, 4679, 4579, 4629, 699, 4616, 2943, 2450,
	4581, 4102, 494, 1192, 4494, 4359, 3797, 4495, 4617, 2942,
	4369, 4247, 8, 3661, 571, 4278, 28, 4246, 7, 709,
	4245, 6, 4010, 4380, 2374, 4248, 9, 713, 3467, 4392,
	3310, 4067, 698, 2373, 4379, 108, 3989, 4097, 3278, 726,
	4371, 657, 4222, 1421, 4393, 2727, 4146, 4357, 3923, 4115,
	3367, 1638, 3916, 4103, 2984, 3512, 1540, 2664, 3631, 706,
	3875, 3051, 2924, 4106, 1753, 2923, 689, 4052, 3874, 3721,
	550, 553, 1462, 2310, 3910, 3713, 2477, 107, 3188, 3866,
	3957, 3480, 598, 3934, 653, 3010, 2541, 675, 101, 1752,
	3820, 2715, 3803, 3445, 2255, 4370, 1469, 3311, 3368, 108,
	2188, 1416, 3909, 1173, 2954, 752, 3706, 1755, 3124, 3517,
	1152, 3626, 2931, 2930, 3637, 2996, 1569, 1568, 3087, 817,
	1220, 3605, 3593, 2481, 2179, 1160, 2509, 1164, 3584, 1270,
	2467, 1418, 105, 2647, 135, 2640, 2879, 2857, 2613, 1392,
	2646, 1269, 3465, 3186, 1381, 1081, 1209, 718, 712, 2880,
	3240, 1758, 2571, 2117, 2243, 700, 2241, 1420, 1729, 2180,
	1413, 4104, 2483, 2644, 2158, 2505, 1246, 2977, 4244, 3,
	2052, 3024, 694, 1450, 1078, 1614, 641, 716, 1618, 2363,
	1458, 2595, 2287, 1453, 2718, 2882, 673, 1303, 2122, 2092,
	1645, 2170, 1281, 3091, 1155, 1617, 1074, 2248, 669, 2437,
	1387, 1075, 2732, 670, 682, 1478, 3287, 1391, 1399, 1191,
	1390, 574, 1168, 109, 43, 573, 1389, 656, 2084, 3722,
	3286, 1265, 2085, 1280, 556, 2051, 1722, 1156, 1179, 692,
	4706, 130, 126, 1175, 665, 1181, 1182, 2326, 4700, 4687,
	4671, 4657, 4625, 4623, 4594, 4591, 4590, 4589, 4574, 4572,
	4474, 4470, 4465, 100, 4148, 4147, 3383, 3886, 2115, 2526,
	1183, 3458, 3639, 4341, 2756, 2558, 2557, 4030, 3881, 3882,
	3879, 3880, 3427, 3428, 679, 3515, 86, 109, 4650, 1441,
	4612, 3171, 4610, 4028, 3513, 4695, 4649, 3885, 3461, 4611,
	3366, 3137, 2988, 1732, 4407, 3459, 4031, 4406, 42, 42,
	42, 4615, 4355, 97, 688, 4556, 4228, 566, 662, 2676,
	94, 3804, 2555, 4038, 655, 3008, 3460, 3990, 1355, 99,
	2044, 3806, 667, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 3992, 2387, 2385, 2384, 2383, 2386, 2382, 2381,
	2380, 2555, 4506, 2394, 88, 2393, 2392, 2242, 2391, 2390,
	2389, 2388, 71, 4372, 4313, 3904, 3187, 2712, 4354, 123,
	4122, 3268, 47, 505, 89, 89, 89, 4227, 1185, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 42, 1393, 1503, 2661, 3775, 4643, 3573, 570, 4062,
	2685, 3241, 3772, 3622, 3860, 3337, 1151, 2375, 2387, 2385,
	2384, 2383, 2386, 2382, 2381, 2380, 2376, 2377, 2394, 2378,
	2393, 2392, 2379, 2391, 2390, 2389, 2388, 3586, 3336, 3985,
	42, 3907, 2660, 149, 4414, 146, 3307, 147, 3864, 3606,
	3308, 3147, 1356, 3986, 3146, 3908, 4340, 4214, 3809, 2682,
	4429, 4169, 4111, 2968, 3301, 2833, 3698, 89, 1172, 2588,
	3322, 3323, 2121, 3991, 2447, 2448, 4363, 4363, 115, 113,
	114, 2245, 545, 151, 150, 3307, 3408, 1068, 1259, 3308,
	568, 2648, 3409, 3410, 3244, 4358, 2757, 2594, 2119, 2120,
	3321, 3807, 3808, 3810, 3811, 3812, 89, 96, 96, 96,
	1619, 138, 1620, 4360, 4360, 2629, 154, 2871, 1224, 1225,
	2870, 2446, 1228, 2872, 2161, 2162, 2196, 3330, 2955, 4431,
	1242, 668, 1243, 1244, 1245, 1244, 1245, 1253, 4342, 3659,
	1363, 3942, 2139, 1333, 565, 564, 2118, 3935, 2966, 89,
	2479, 2480, 1314, 1341, 3221, 650, 2593, 1300, 1226, 1227,
	2651, 2650, 2663, 2670, 2649, 2662, 2653, 2494, 4447, 2686,
	2493, 3544, 2498, 3110, 1710, 152, 2956, 153, 4364, 4364,
	2695, 2487, 2486, 137, 2488, 3679, 3683, 3681, 2625, 2163,
	96, 1229, 2213, 702, 1405, 1406, 1375, 2673, 2671, 2666,
	2577, 2576, 2090, 4649, 2668, 4611, 2484, 4609, 540, 563,
	645, 644, 3355, 1262, 1254, 1255, 2684, 2706, 2657, 2656,
	647, 1401, 1404, 1405, 1406, 1402, 1216, 1403, 1408, 96,
	3940, 2719, 2720, 645, 491, 4448, 2652, 2484, 2506, 1373,
	1401, 1404, 1405, 1406, 1402, 2398, 1403, 1408, 1358, 1359,
	646, 1230, 2658, 2659, 543, 3486, 2676, 666, 2667, 2669,
	2672, 2674, 3066, 4694, 1152, 598, 4467, 4650, 1382, 4468,
	4029, 4469, 4648, 1385, 2159, 2160, 1350, 1353, 4647, 4612,
	1354, 2169, 651, 3902, 3894, 1412, 1417, 2168, 643, 2167,
	3117, 1435, 1436, 1152, 4329, 1152, 1152, 4498, 2166, 1152,
	2614, 2617, 2615, 2616, 2618, 2619, 2620, 2621, 2165, 2702,
	1152, 2164, 1377, 1337, 1338, 3003, 1256, 4095, 1512, 1514,
	3892, 733, 1516, 734, 736, 737, 738, 739, 1414, 3116,
	1204, 735, 2322, 3114, 2710, 3044, 3115, 1409, 1456, 3248,
	3247, 3249, 3246, 4306, 3452, 2692, 4560, 3253, 4163, 3245,
	3242, 1369, 4559, 3243, 1531, 3251, 4497, 1307, 1535, 1536,
	1537, 1538, 1539, 3638, 1541, 3199, 4510, 3199, 4056, 3250,
	3199, 1316, 1368, 1364, 1365, 1366, 1367, 1370, 1371, 1372,
	1374, 2150, 1316, 3484, 2151, 3479, 3252, 3254, 1384, 1268,
	4466, 3048, 1330, 148, 4568, 4308, 4174, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 3514, 4173, 1414, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 2589, 1562, 1563, 1565, 1565, 1565, 1427, 1570,
	1570, 1570, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1395, 109, 3585, 2319, 4449, 1223, 2194,
	3329, 3515, 679, 679, 1340, 664, 3007, 4171, 3832, 3993,
	4045, 1411, 4411, 3850, 4042, 2678, 139, 3049, 2607, 4047,
	1570, 155, 3805, 3608, 3455, 1316, 567, 3994, 2400, 2401,
	2399, 4165, 4025, 544, 3821, 3549, 1513, 3481, 1323, 3005,
	1415, 2542, 3824, 4123, 2689, 2172, 3109, 2195, 3328, 1218,
	3830, 143, 1376, 3855, 3822, 3823, 4423, 2655, 4405, 2197,
	4703, 3255, 4093, 3116, 127, 4673, 2601, 3627, 3628, 3629,
	3630, 4702, 109, 4672, 2955, 3446, 3447, 3448, 3449, 3450,
	1378, 1564, 1566, 1567, 4669, 4587, 4462, 1571, 1572, 4633,
	110, 110, 87, 2969, 3136, 4039, 4226, 3009, 4361, 4361,
	4421, 2091, 1321, 1570, 1570, 551, 1217, 2679, 2680, 3114,
	3996, 2683, 1263, 4215, 2688, 1444, 2693, 2690, 2691, 1379,
	2694, 2687, 2956, 2697, 2696, 2698, 1378, 2699, 2700, 2701,
	4569, 3862, 2703, 2704, 2705, 2707, 2708, 2709, 1443, 1443,
	3995, 2681, 2711, 1438, 4413, 1438, 1438, 1604, 3863, 1438,
	2971, 2675, 1437, 116, 1442, 1442, 3611, 3609, 1449, 1267,
	2121, 1261, 3607, 2955, 4339, 129, 1322, 1308, 1318, 554,
	2508, 4496, 3127, 110, 2490, 133, 141, 140, 3610, 4576,
	1349, 2491, 144, 3901, 1407, 3893, 2119, 2120, 3891, 1315,
	3920, 2152, 4307, 4460, 4461, 4164, 3443, 3636, 3190, 1241,
	1319, 1320, 3446, 3447, 3448, 3449, 3450, 4334, 3441, 1607,
	1215, 2956, 110, 1407, 4206, 3173, 3537, 555, 3181, 3183,
	3182, 1177, 1176, 137, 3175, 1475, 1476, 1474, 1396, 4068,
	1605, 1606, 1407, 138, 142, 1717, 3191, 1475, 1476, 1474,
	3190, 1737, 1738, 1736, 1477, 4022, 1727, 1180, 3006, 2320,
	2321, 4021, 1081, 4020, 1178, 2677, 1477, 1081, 4019, 1317,
	1324, 1325, 1327, 1328, 1329, 4170, 1331, 1332, 4044, 1334,
	1335, 1336, 4041, 1339, 4018, 1342, 1343, 1344, 1345, 1346,
	4026, 1326, 3454, 137, 4016, 1180, 4017, 3551, 3552, 137,
	4585, 2175, 4580, 1635, 142, 4158, 4159, 131, 4442, 132,
	2536, 2537, 2532, 1459, 4375, 4376, 4242, 663, 4583, 3632,
	3633, 2123, 4154, 3032, 3033, 1238, 1239, 1484, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	3079, 552, 2054, 1257, 2531, 107, 598, 1266, 1240, 3550,
	1237, 2176, 1236, 1235, 1234, 4419, 4323, 1731, 549, 3594,
	2125, 4237, 3595, 2124, 3596, 598, 2476, 3867, 3868, 1762,
	1702, 1703, 1704, 1705, 1706, 1542, 1754, 1629, 1611, 1167,
	2086, 3106, 4696, 2474, 4512, 3635, 1707, 4511, 3094, 1167,
	3094, 3523, 4683, 3104, 4709, 1712, 3103, 2044, 4312, 3372,
	1634, 1432, 1433, 4704, 4688, 4660, 1730, 1174, 642, 1622,
	668, 1735, 2543, 552, 1623, 3176, 1152, 1482, 3126, 1635,
	139, 2228, 4197, 4087, 1426, 3900, 2476, 3897, 1423, 1425,
	3634, 2555, 3477, 1561, 1714, 1715, 3111, 2094, 3102, 3043,
	1432, 1433, 1726, 2096, 3039, 1312, 2095, 3013, 1733, 3012,
	1434, 1708, 2476, 552, 2602, 3082, 2156, 2670, 3081, 1742,
	1740, 2098, 1264, 1426, 1608, 1609, 4592, 1760, 1423, 1425,
	2525, 2078, 1171, 3538, 3539, 3540, 598, 2079, 4471, 2227,
	2226, 109, 1170, 4090, 3177, 3472, 1394, 2059, 2060, 1434,
	1193, 2673, 2671, 2666, 1184, 2476, 489, 3189, 2668, 3883,
	2055, 1518, 1519, 696, 2804, 3658, 2042, 1423, 1425, 3320,
	89, 2149, 124, 3041, 2112, 2067, 2475, 3040, 2068, 2069,
	2070, 2877, 3100, 3094, 3093, 128, 552, 2074, 3097, 2057,
	1744, 3096, 3101, 2544, 3016, 4582, 4584, 2082, 2132, 3015,
	1517, 2046, 2050, 2452, 1515, 2185, 3083, 3084, 675, 675,
	675, 675, 2667, 2669, 2672, 2674, 3371, 1419, 3052, 1713,
	1424, 2130, 1725, 1635, 1718, 1716, 2774, 2071, 1417, 2073,
	2222, 1311, 4681, 2750, 1734, 4682, 2475, 4680, 89, 3522,
	141, 140, 3100, 3094, 1751, 1750, 124, 2636, 3097, 4332,
	1630, 3096, 3101, 3125, 2093, 2556, 2533, 109, 2110, 2053,
	1424, 1631, 2475, 1410, 119, 1414, 2442, 2258, 1520, 3094,
	2221, 2215, 1520, 1633, 1167, 2216, 2476, 3095, 2474, 1534,
	2199, 1517, 3126, 2223, 1533, 2801, 2225, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 1424,
	2088, 1503, 1532, 2087, 2476, 2475, 1762, 1423, 1425, 2097,
	1483, 1298, 122, 1206, 4168, 652, 2247, 3884, 2127, 2103,
	2104, 2203, 4196, 2106, 2200, 1635, 1493, 4195, 1520, 1503,
	733, 1503, 734, 736, 737, 738, 739, 1518, 1519, 2109,
	735, 2322, 2171, 2174, 2131, 2043, 2128, 2312, 2311, 3788,
	3786, 1258, 1541, 121, 2867, 675, 3474, 2081, 2318, 2323,
	4204, 96, 4231, 4230, 2181, 2286, 3876, 1414, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 4443, 4444, 2367, 2572, 4478, 2173, 3501,
	3500, 3389, 3387, 3956, 2221, 679, 679, 679, 679, 3117,
	2224, 109, 2349, 2352, 2285, 3115, 109, 2190, 3102, 2313,
	2365, 3787, 2288, 4440, 4441, 679, 2193, 3093, 2177, 2191,
	675, 2201, 2202, 2189, 2204, 2192, 2475, 560, 2395, 2396,
	3075, 3074, 2347, 3094, 4033, 96, 2355, 2214, 1167, 1424,
	2648, 3095, 2474, 2451, 3174, 2265, 1635, 1415, 3072, 3071,
	2858, 3502, 1415, 3388, 2475, 2278, 1762, 3125, 1518, 1519,
	1160, 3120, 3135, 3134, 1081, 2279, 669, 688, 4479, 3123,
	3133, 4034, 1630, 3132, 3131, 2319, 3130, 2874, 2873, 3129,
	2263, 3128, 1477, 1631, 2289, 164, 4188, 492, 504, 2747,
	2744, 164, 3076, 2741, 1247, 103, 164, 2315, 2251, 2317,
	2566, 3062, 2294, 109, 2058, 2275, 640, 1475, 1476, 1474,
	3073, 1474, 1232, 3061, 2329, 164, 2332, 2292, 2293, 2291,
	3060, 2459, 3059, 2795, 164, 2794, 1477, 1222, 1477, 3058,
	109, 2077, 1496, 1497, 1498, 1499, 1500, 1493, 164, 2875,
	1503, 111, 679, 117, 3057, 1475, 1476, 1474, 1249, 164,
	1166, 1476, 1474, 3056, 2285, 2403, 3055, 3270, 2408, 2624,
	2410, 2623, 2464, 2413, 1477, 2108, 1274, 2551, 1187, 1477,
	2473, 164, 640, 1186, 2256, 2257, 2364, 2436, 2817, 1542,
	4663, 4630, 4662, 492, 164, 2048, 2048, 2048, 2048, 4686,
	2434, 2364, 4659, 2333, 2334, 2335, 2336, 2337, 1248, 2515,
	2516, 2517, 2518, 2519, 2567, 2458, 4570, 679, 1069, 1070,
	1071, 2501, 2502, 2503, 3011, 2457, 1233, 2361, 4516, 1720,
	1169, 1475, 1476, 1474, 109, 4507, 2549, 2550, 1221, 4690,
	2489, 2492, 2440, 2444, 2495, 2496, 2497, 2449, 2443, 3831,
	1477, 1475, 1476, 1474, 3825, 2511, 2512, 2513, 2514, 1251,
	1260, 2463, 2461, 4534, 2535, 2520, 3037, 2485, 2249, 2504,
	1477, 1475, 1476, 1474, 2771, 2772, 2773, 1542, 2133, 4518,
	3381, 2136, 2137, 2138, 4697, 2140, 2141, 4675, 3917, 2142,
	1477, 1470, 2507, 2143, 2316, 4381, 2144, 4515, 3199, 4514,
	2145, 2146, 4410, 2147, 2148, 1491, 1501, 1502, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1493, 2522, 3903, 1503, 3764,
	3762, 2552, 4708, 2340, 2341, 2342, 1475, 1476, 1474, 2346,
	3763, 2348, 2351, 2354, 2264, 2359, 2360, 4692, 2320, 2321,
	4381, 2370, 4456, 4698, 4455, 1477, 2271, 2273, 2274, 2238,
	2527, 89, 2529, 2249, 2272, 2402, 4304, 2404, 2405, 4707,
	2240, 702, 2409, 2290, 2411, 2412, 2267, 2268, 2269, 2260,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 1475, 1476, 1474, 4319, 2239, 4310, 4303, 3082,
	4234, 2670, 3081, 4639, 2261, 4063, 2796, 2262, 2950, 4032,
	3915, 1477, 2983, 2957, 4550, 3408, 1068, 4305, 3398, 3399,
	3401, 3409, 3410, 3400, 3402, 3403, 1475, 1476, 1474, 2962,
	2961, 1475, 1476, 1474, 4459, 2673, 2671, 2666, 3404, 3405,
	3406, 3407, 2668, 1542, 3914, 1477, 2237, 3181, 3183, 3182,
	1477, 2344, 2345, 3913, 2958, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 3614, 3612, 1503,
	2964, 3912, 2940, 4549, 1482, 1475, 1476, 1474, 3613, 3841,
	2941, 3795, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	3083, 3084, 1503, 3769, 1477, 4547, 2667, 2669, 2672, 2674,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	4166, 1565, 1503, 1475, 1476, 1474, 1475, 1476, 1474, 3794,
	4381, 3562, 2452, 2944, 3272, 4691, 3496, 2234, 1152, 3495,
	3211, 2456, 1477, 696, 3494, 1477, 696, 164, 2236, 2430,
	2101, 3493, 2372, 3492, 3181, 3183, 3182, 3433, 3384, 2094,
	3767, 2982, 2230, 492, 4546, 2096, 2980, 2967, 2095, 1306,
	1305, 4167, 1393, 2232, 2235, 2100, 3457, 3456, 2584, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 4674, 3619, 1503, 4668, 4596, 2960, 4588, 4472, 2231,
	2963, 4453, 1167, 4452, 3617, 1163, 4398, 4397, 2953, 2580,
	2592, 3181, 3183, 3182, 4391, 4390, 4172, 4070, 3705, 1412,
	3541, 1386, 164, 2521, 2233, 1312, 3027, 3026, 2578, 1278,
	1385, 2563, 2562, 2314, 2102, 2089, 1749, 1748, 1721, 1719,
	1301, 4505, 2568, 3181, 3183, 3182, 562, 2574, 4504, 2229,
	4503, 1277, 4394, 2564, 3208, 3181, 3183, 3182, 675, 2808,
	4502, 4499, 4428, 4408, 4349, 2570, 4343, 2736, 2737, 2738,
	2611, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 4236, 4235, 1503, 2632, 4162, 4161, 4142,
	4094, 4046, 4043, 4015, 2610, 3984, 3983, 3952, 3906, 640,
	3905, 3840, 3839, 3838, 3837, 3828, 3827, 3826, 2729, 3793,
	3790, 1762, 164, 3765, 3760, 3751, 2093, 2735, 3747, 3742,
	2775, 3741, 696, 3740, 3615, 89, 3604, 3592, 3588, 3581,
	1456, 1456, 3580, 164, 3579, 3499, 2714, 2579, 3491, 2739,
	2740, 3490, 3489, 2742, 2743, 2637, 3205, 2745, 2746, 3415,
	2583, 3220, 3219, 3217, 2591, 3077, 2978, 2876, 1530, 2599,
	492, 1529, 1528, 2631, 2590, 2598, 2561, 2105, 696, 2730,
	4211, 696, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 3642, 4558, 1503, 1743, 2654, 2606,
	1347, 2798, 2609, 2749, 696, 3777, 4541, 3931, 3777, 4418,
	3777, 4416, 2777, 2778, 2779, 696, 679, 3642, 696, 2285,
	4069, 2769, 2770, 2628, 4008, 2633, 2630, 4007, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	3707, 2734, 1503, 3725, 2645, 4077, 696, 3435, 2723, 3777,
	4239, 3642, 4150, 3642, 4145, 679, 3418, 2288, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	2458, 3417, 1503, 4091, 696, 3025, 2809, 2810, 2811, 2438,
	2279, 3642, 4050, 3199, 696, 2955, 2635, 696, 675, 3642,
	3927, 675, 2044, 3858, 3416, 2761, 2759, 2760, 2044, 3857,
	3777, 3776, 3642, 3641, 102, 1762, 3425, 3424, 2780, 3421,
	3422, 3421, 3420, 2749, 696, 3025, 2959, 2604, 2603, 2338,
	2586, 2952, 2338, 696, 2217, 696, 2862, 3930, 2044, 2289,
	4641, 2438, 1081, 2956, 2776, 1487, 2217, 1490, 3307, 2439,
	2253, 2441, 3308, 2784, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 2860, 1488, 1489, 1486, 3929, 1637, 1636, 2153, 89,
	2540, 1310, 2749, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 1382, 3725, 1503, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	2154, 2439, 1503, 2044, 2217, 2252, 3725, 1309, 2934, 2937,
	1310, 2338, 2816, 1760, 2539, 4350, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 2264, 4224,
	1503, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 2861, 3967, 1503, 3199, 598, 3642, 2217,
	3436, 3423, 2929, 3218, 2932, 2933, 3054, 2445, 3031, 2827,
	2825, 2824, 1312, 2749, 1708, 2622, 2608, 2925, 2863, 2107,
	2886, 2864, 2560, 2555, 1730, 2554, 3267, 2254, 1380, 2116,
	2044, 1741, 1739, 2832, 2834, 679, 1616, 2865, 679, 1622,
	3019, 2841, 2842, 2843, 2868, 1383, 4446, 4417, 2728, 4191,
	4189, 4009, 3030, 2878, 3785, 3782, 2482, 2510, 2185, 2484,
	3193, 3034, 3035, 3065, 3064, 2506, 2922, 1316, 2970, 2972,
	2719, 2720, 2985, 2973, 2974, 2534, 2975, 2976, 2939, 2500,
	2499, 1711, 1297, 3842, 2573, 1213, 4438, 1212, 2979, 2986,
	4678, 4677, 2605, 4654, 2981, 4652, 4646, 4645, 4618, 164,
	4613, 2785, 2786, 2787, 2788, 2789, 4607, 4605, 1166, 4552,
	4551, 3029, 3045, 3922, 3918, 3707, 3434, 2951, 3004, 3429,
	3022, 3021, 3001, 2722, 2716, 2553, 2155, 2126, 1313, 2814,
	2212, 1463, 1464, 2209, 2726, 2211, 1459, 2725, 2210, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 3023, 3206, 1503, 2207, 3209, 3028, 539, 3212, 2208,
	2724, 2206, 1466, 1461, 2205, 4353, 3038, 1468, 1467, 3222,
	1465, 2758, 4193, 1762, 3092, 134, 4400, 3195, 2766, 675,
	2765, 4129, 3088, 3099, 3898, 3201, 3202, 3203, 3873, 3098,
	3105, 492, 3108, 3780, 3531, 3197, 3121, 3530, 3085, 3414,
	3042, 3119, 3413, 3412, 2938, 3172, 2928, 3063, 3047, 640,
	640, 3050, 3213, 4219, 640, 3068, 4348, 2181, 3069, 4401,
	2790, 4347, 1166, 164, 541, 542, 4345, 3080, 640, 640,
	4344, 3180, 145, 4109, 164, 4107, 4157, 4156, 492, 492,
	492, 492, 4049, 561, 3279, 2582, 2818, 2581, 2099, 4035,
	4036, 3067, 3113, 164, 164, 164, 164, 164, 3112, 164,
	1451, 3233, 1463, 1464, 4477, 3890, 3736, 3542, 3304, 3309,
	3959, 2285, 1452, 675, 3386, 164, 164, 2638, 1632, 3259,
	640, 3260, 3261, 3314, 3262, 3263, 164, 1295, 3264, 3256,
	1279, 1276, 3258, 1466, 1275, 1219, 4634, 4080, 1468, 1467,
	4079, 1465, 1393, 3462, 3273, 3274, 3275, 3276, 3312, 3835,
	3303, 2256, 2257, 3200, 1272, 1273, 2528, 3836, 1410, 3833,
	1352, 4351, 3216, 3269, 3214, 3701, 1166, 3834, 4309, 4053,
	3798, 3784, 2279, 3431, 2327, 2328, 3958, 1271, 2178, 640,
	640, 640, 2101, 2100, 1166, 3227, 1447, 1448, 1361, 3226,
	3231, 690, 3230, 3305, 1445, 1446, 3229, 1439, 1440, 3224,
	4522, 3382, 2764, 4521, 4520, 4012, 679, 3257, 3395, 2627,
	2763, 1252, 4435, 4434, 4433, 640, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 4432, 4220,
	1503, 4183, 4175, 4127, 3938, 3086, 691, 3390, 1382, 102,
	3937, 3664, 3025, 164, 164, 2990, 2991, 2992, 164, 4473,
	1166, 4656, 4655, 3363, 3374, 3375, 3376, 3394, 3377, 3378,
	3853, 3380, 164, 640, 3485, 164, 164, 164, 164, 598,
	3483, 3482, 3053, 2826, 2805, 2802, 2768, 164, 2072, 3180,
	3451, 2886, 1472, 3317, 1211, 164, 109, 1210, 4655, 164,
	4656, 3324, 4233, 3316, 3411, 3318, 3319, 2250, 683, 3229,
	679, 4538, 3280, 3281, 3282, 3283, 3284, 3285, 3306, 3437,
	687, 686, 2520, 4261, 65, 3373, 4263, 23, 4262, 22,
	4264, 24, 4265, 25, 4259, 18, 3288, 3289, 3290, 3291,
	3292, 3293, 3294, 3295, 3296, 3297, 3298, 104, 3464, 68,
	164, 4258, 17, 4399, 3524, 4257, 16, 492, 4260, 19,
	4256, 15, 4250, 11, 3453, 4285, 39, 4283, 37, 4282,
	36, 4286, 40, 4281, 32, 3392, 3393, 4280, 31, 4279,
	30, 4276, 27, 4275, 26, 2048, 4255, 14, 4252, 13,
	4251, 12, 1, 1166, 4338, 1166, 4249, 10, 1166, 3473,
	106, 4, 3432, 3478, 3419, 1166, 677, 50, 2600, 2134,
	1166, 1166, 1166, 3487, 597, 3819, 3442, 3818, 3625, 3444,
	3002, 164, 164, 4333, 4205, 3829, 2713, 1728, 4024, 3526,
	3527, 3528, 1190, 2538, 1302, 3468, 3533, 3534, 4346, 3536,
	3470, 4108, 4217, 4216, 3471, 3802, 3624, 3801, 2995, 2994,
	1296, 3192, 3700, 3554, 3194, 2587, 3559, 2114, 3089, 3090,
	3014, 3078, 3520, 3488, 4181, 2626, 2157, 2612, 1362, 2460,
	3362, 2465, 3859, 3511, 4061, 3510, 3509, 1154, 118, 2565,
	1231, 3497, 3498, 513, 3085, 3503, 164, 164, 164, 2654,
	3504, 2462, 3640, 1708, 3521, 2948, 2925, 4218, 3591, 3553,
	3662, 702, 1299, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 1166, 2947, 1503, 2965, 2478,
	1388, 3980, 2946, 2945, 3180, 3657, 4311, 2949, 1642, 3696,
	1640, 1641, 1639, 1644, 3648, 3649, 3650, 3651, 3652, 3653,
	3654, 3655, 3656, 1643, 519, 1624, 3529, 4385, 3704, 3271,
	3589, 1473, 746, 136, 3122, 648, 649, 125, 521, 1511,
	2762, 2869, 3667, 1079, 1080, 3714, 1072, 4476, 2752, 4229,
	4110, 4221, 4374, 1457, 3314, 3532, 4112, 2185, 3936, 3663,
	2815, 1560, 2362, 715, 661, 3720, 3955, 4114, 3545, 2270,
	3547, 729, 1166, 164, 3665, 3693, 3694, 3695, 1427, 3312,
	3643, 3560, 3709, 3563, 728, 3565, 3567, 3569, 3571, 727,
	724, 164, 725, 2397, 4362, 2259, 3710, 164, 164, 640,
	640, 640, 164, 3300, 3299, 3302, 3774, 1485, 3426, 1360,
	704, 1431, 1430, 1429, 1428, 3674, 3675, 3676, 1422, 3677,
	672, 2431, 3036, 3678, 1400, 3680, 1398, 3682, 1397, 1746,
	1612, 2721, 2717, 671, 676, 46, 2767, 1250, 3697, 1565,
	1565, 1565, 1570, 1570, 1570, 1573, 1574, 1575, 1576, 1570,
	1570, 1570, 4121, 112, 685, 3730, 684, 3708, 693, 3379,
	29, 3789, 21, 20, 1207, 2643, 2665, 1188, 3750, 48,
	3574, 54, 3576, 53, 51, 52, 2989, 3691, 2530, 3712,
	4384, 4578, 1282, 4595, 4628, 1357, 38, 35, 3597, 3598,
	3599, 34, 3783, 33, 3180, 4277, 4271, 4270, 3726, 3727,
	3728, 3729, 3621, 4273, 4272, 3791, 3668, 3669, 3670, 3671,
	3672, 4269, 4274, 4268, 4267, 4266, 2181, 3745, 3752, 4284,
	3748, 4254, 4253, 109, 4562, 4561, 3761, 3370, 5, 98,
	95, 3662, 3724, 41, 120, 3845, 3781, 3469, 1150, 3731,
	3814, 3815, 3816, 3778, 3779, 3843, 2, 0, 0, 0,
	0, 0, 3861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3723, 0, 0, 1564, 1566, 1567, 0, 3799,
	1571, 1572, 0, 0, 0, 0, 1604, 1605, 1606, 0,
	0, 3792, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1493, 0, 0, 1503, 0, 0, 3856,
	0, 0, 3813, 0, 0, 3847, 3817, 0, 0, 0,
	3849, 0, 0, 0, 0, 0, 0, 3848, 0, 0,
	3869, 3870, 3851, 3852, 0, 3854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3871, 0, 0, 0,
	0, 3844, 0, 0, 3878, 0, 0, 0, 0, 0,
	0, 3575, 0, 0, 0, 0, 0, 3732, 3733, 3734,
	3092, 0, 0, 0, 0, 0, 0, 3889, 3088, 3099,
	0, 3899, 0, 0, 0, 3098, 3865, 0, 3753, 3754,
	3755, 0, 0, 3895, 0, 3872, 0, 0, 0, 0,
	0, 0, 3519, 3771, 0, 0, 0, 0, 0, 0,
	3933, 3887, 164, 0, 0, 0, 0, 0, 3924, 3926,
	0, 0, 0, 3896, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3519, 0, 0, 0, 3925, 0,
	164, 0, 0, 0, 0, 3662, 3662, 0, 0, 3939,
	3941, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3964, 0, 0, 3714, 0, 0, 0, 0,
	675, 0, 0, 3969, 0, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 164, 3180, 164, 0, 3314, 3921,
	1166, 0, 0, 0, 3699, 1166, 0, 3911, 0, 0,
	0, 0, 3919, 0, 0, 0, 0, 0, 3943, 3944,
	3945, 3946, 3962, 3312, 0, 0, 3950, 0, 0, 0,
	3953, 3954, 640, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3963, 0, 3960,
	0, 0, 0, 0, 0, 0, 0, 3977, 0, 0,
	0, 0, 0, 0, 0, 4011, 0, 0, 0, 3978,
	0, 4002, 3981, 3971, 4005, 0, 3961, 0, 0, 0,
	3229, 669, 0, 3972, 164, 164, 0, 0, 3968, 0,
	1166, 0, 0, 164, 0, 0, 0, 0, 3180, 0,
	0, 0, 0, 0, 0, 0, 4000, 4001, 0, 0,
	0, 0, 0, 4065, 4066, 0, 0, 1166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3988, 3998, 3999, 3180, 3997, 3987, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 2371, 0,
	0, 0, 0, 0, 4089, 4014, 0, 679, 4013, 0,
	0, 0, 0, 0, 3690, 0, 0, 0, 0, 4023,
	4027, 0, 0, 4057, 4058, 0, 4060, 4055, 4040, 4037,
	0, 4064, 0, 0, 0, 0, 4073, 4048, 0, 4051,
	4054, 0, 0, 0, 0, 0, 0, 0, 0, 4075,
	0, 0, 0, 4059, 0, 0, 4071, 4072, 0, 0,
	0, 4098, 0, 0, 0, 3964, 3714, 0, 0, 4084,
	0, 4086, 4082, 4088, 4083, 0, 0, 4081, 0, 0,
	0, 0, 0, 0, 0, 0, 4074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4099,
	4100, 4101, 0, 0, 0, 695, 697, 0, 4133, 0,
	4096, 1635, 0, 0, 0, 0, 0, 0, 4131, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 0, 0, 1503, 0, 4139, 0, 0, 0, 0,
	0, 4128, 0, 0, 4153, 0, 4155, 4134, 4136, 0,
	164, 4132, 4130, 4152, 4126, 164, 0, 0, 164, 164,
	164, 0, 4182, 4137, 0, 0, 0, 0, 4187, 0,
	4151, 0, 0, 0, 4149, 4140, 0, 0, 0, 0,
	0, 3519, 0, 2639, 2927, 0, 0, 0, 0, 0,
	2936, 2936, 4160, 0, 0, 0, 0, 0, 0, 0,
	0, 3180, 0, 0, 4185, 0, 3519, 0, 0, 0,
	4202, 0, 0, 0, 0, 0, 0, 0, 0, 4176,
	0, 0, 0, 0, 0, 4177, 0, 0, 4178, 0,
	0, 4180, 4179, 0, 0, 0, 4186, 0, 0, 0,
	0, 0, 0, 164, 109, 0, 0, 0, 4192, 4194,
	4190, 1166, 1166, 0, 1635, 0, 1152, 640, 0, 0,
	4198, 0, 0, 0, 0, 4203, 4212, 0, 4199, 4240,
	0, 164, 164, 640, 1166, 0, 4201, 0, 492, 1460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 640, 0, 0, 4232, 0, 4241, 0, 3973, 3974,
	3975, 3976, 3180, 1152, 0, 3689, 0, 0, 0, 0,
	4243, 0, 0, 0, 0, 0, 1166, 0, 0, 0,
	640, 0, 1166, 4302, 1166, 0, 4318, 1166, 0, 0,
	0, 0, 0, 0, 0, 0, 3924, 158, 0, 0,
	0, 0, 0, 538, 0, 0, 3314, 0, 158, 4315,
	4320, 558, 4322, 1166, 1166, 4321, 3925, 4330, 4373, 0,
	4377, 4314, 0, 0, 0, 4335, 4331, 658, 4328, 0,
	4326, 3312, 0, 0, 4366, 4337, 158, 0, 0, 0,
	4325, 0, 0, 0, 4352, 0, 0, 0, 0, 4365,
	658, 703, 0, 0, 1152, 4368, 1152, 1089, 0, 0,
	0, 158, 1152, 0, 0, 0, 0, 0, 0, 0,
	1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1493, 0, 158, 1503, 0, 0, 0, 3179, 0,
	0, 0, 109, 0, 0, 4395, 158, 0, 0, 0,
	0, 4404, 3370, 4430, 0, 0, 1166, 4422, 0, 0,
	0, 0, 3279, 0, 1166, 1166, 1166, 0, 0, 0,
	0, 0, 4424, 0, 3924, 0, 0, 4409, 0, 0,
	4402, 0, 0, 0, 4439, 0, 0, 0, 0, 0,
	164, 0, 0, 4426, 3925, 0, 164, 0, 0, 0,
	4427, 4451, 1166, 4425, 4445, 0, 0, 0, 0, 0,
	4437, 0, 0, 4436, 0, 0, 0, 0, 4420, 4113,
	4116, 0, 0, 4457, 4484, 0, 0, 4139, 0, 0,
	4489, 0, 4475, 4454, 4450, 598, 0, 0, 0, 0,
	0, 0, 4501, 0, 0, 0, 4483, 4486, 0, 4488,
	4490, 1542, 4500, 0, 0, 0, 0, 4463, 0, 0,
	0, 1166, 0, 0, 0, 0, 4485, 1152, 0, 4491,
	1152, 0, 4389, 0, 0, 0, 1152, 1152, 1152, 1152,
	0, 1152, 1152, 4492, 0, 1152, 1152, 0, 4487, 4493,
	164, 0, 0, 3662, 4513, 4509, 4540, 4523, 4457, 4508,
	3314, 1152, 0, 0, 0, 1166, 4517, 0, 0, 4519,
	0, 0, 0, 0, 0, 0, 4528, 4529, 4530, 0,
	4548, 4533, 4545, 4555, 0, 3312, 1152, 0, 4537, 1152,
	4526, 0, 1635, 4557, 0, 4526, 0, 0, 4553, 4526,
	4536, 4575, 2451, 4586, 0, 4567, 3179, 0, 0, 4564,
	492, 4566, 0, 0, 4565, 4544, 2936, 2936, 2936, 4563,
	2936, 2936, 598, 4597, 4539, 4571, 492, 0, 4573, 4542,
	0, 4604, 4601, 4598, 4577, 0, 0, 0, 0, 1152,
	0, 164, 0, 1152, 3370, 1152, 4622, 4606, 4619, 1152,
	4608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1152, 1152, 1152, 1152, 0, 1152, 0, 1471, 0, 1542,
	0, 0, 0, 1166, 0, 0, 0, 0, 4620, 0,
	4600, 0, 0, 0, 0, 0, 1166, 1166, 1166, 0,
	0, 0, 0, 640, 1152, 4653, 1152, 4526, 1152, 4526,
	164, 640, 4638, 4631, 4664, 4651, 4524, 4666, 0, 1166,
	1166, 0, 0, 0, 4526, 4526, 4526, 4676, 0, 4526,
	0, 0, 0, 0, 0, 0, 0, 640, 1152, 1166,
	4684, 640, 0, 0, 1152, 0, 0, 4661, 0, 158,
	0, 640, 1152, 0, 0, 0, 0, 0, 4526, 0,
	4526, 0, 164, 164, 0, 0, 0, 0, 1152, 0,
	0, 1152, 0, 0, 0, 0, 4116, 0, 0, 0,
	109, 1152, 0, 4689, 4667, 492, 0, 1152, 0, 0,
	0, 0, 4526, 492, 492, 492, 492, 0, 0, 0,
	1166, 492, 492, 1166, 492, 0, 4526, 0, 0, 0,
	4701, 0, 0, 1166, 0, 1166, 0, 492, 492, 1166,
	164, 492, 4526, 0, 158, 0, 1166, 0, 1166, 1166,
	1166, 1166, 1166, 1166, 3370, 4526, 3370, 0, 0, 4378,
	4382, 4526, 0, 0, 0, 0, 3688, 0, 4396, 0,
	0, 3179, 0, 0, 0, 0, 3577, 3578, 0, 0,
	0, 0, 0, 3266, 3587, 0, 0, 3590, 0, 0,
	0, 0, 0, 0, 3600, 3601, 3602, 3603, 0, 0,
	0, 0, 3616, 3618, 3620, 0, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 3265, 0, 1166, 0, 3623,
	590, 0, 584, 595, 577, 0, 678, 0, 0, 0,
	0, 164, 0, 0, 658, 0, 1166, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 4458, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 0, 157, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 548, 1492, 1491, 1501, 1502,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3232, 0, 1166, 0, 0, 0, 0, 1166, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	0, 4531, 1503, 0, 0, 0, 0, 0, 1153, 1492,
	1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1493, 3179, 2751, 1503, 0, 0, 3738, 3739, 0, 0,
	1189, 0, 0, 0, 3746, 0, 0, 3749, 0, 0,
	0, 0, 3370, 1205, 3756, 3757, 3758, 3759, 0, 0,
	0, 0, 0, 3766, 3768, 3770, 0, 0, 0, 3773,
	576, 575, 578, 0, 4593, 3210, 0, 0, 0, 0,
	583, 0, 0, 1492, 1491, 1501, 1502, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1493, 0, 3207, 1503, 587, 0,
	0, 0, 0, 591, 1492, 1491, 1501, 1502, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1493, 0, 164, 1503, 594,
	0, 0, 164, 0, 1166, 1492, 1491, 1501, 1502, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1493, 0, 0, 1503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 579, 3204, 0, 1166, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 640, 0, 0, 0, 0,
	640, 640, 4665, 640, 0, 0, 0, 0, 0, 4670,
	0, 1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1493, 0, 0, 1503, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 534, 2936, 0,
	0, 0, 0, 0, 582, 0, 0, 1166, 0, 492,
	0, 2799, 0, 0, 0, 0, 0, 0, 0, 492,
	1492, 1491, 1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1493, 0, 0, 1503, 0, 492, 0, 580, 581,
	588, 2129, 592, 593, 596, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 0, 0, 0, 0,
	0, 0, 3179, 506, 0, 0, 0, 0, 2781, 0,
	0, 1615, 0, 0, 1089, 0, 0, 0, 0, 1089,
	1166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1166, 1492, 1491, 1501,
	1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493, 0,
	509, 1503, 0, 0, 0, 0, 0, 0, 0, 520,
	532, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2218, 2219, 2220, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 0, 0, 164, 164, 515, 0,
	522, 518, 0, 0, 527, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3179, 1724, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 158, 0, 0, 1724, 558,
	0, 0, 1757, 0, 0, 0, 1759, 0, 0, 0,
	0, 1304, 3179, 0, 0, 492, 0, 0, 2936, 2936,
	1166, 0, 0, 1166, 0, 158, 158, 158, 158, 158,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2075, 2076, 0,
	0, 0, 0, 0, 0, 524, 0, 0, 2083, 2339,
	0, 0, 0, 0, 0, 0, 0, 2343, 0, 0,
	0, 0, 0, 0, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	2406, 2407, 0, 0, 0, 0, 0, 0, 2414, 2415,
	2416, 2936, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2429, 0, 0, 0,
	0, 0, 0, 0, 492, 1166, 492, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 516, 530, 0, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 1166, 0, 0, 0, 158, 158, 0, 0, 0,
	658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 1757, 158, 158, 158,
	158, 0, 0, 0, 0, 507, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 658, 0, 0, 0, 0, 0, 0, 3179, 0,
	0, 0, 0, 0, 0, 2246, 0, 0, 0, 0,
	0, 0, 523, 510, 511, 0, 537, 492, 0, 0,
	512, 514, 0, 508, 536, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 703,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 526, 0, 1166, 0, 0, 0, 0, 0, 0,
	0, 0, 2936, 0, 0, 0, 2246, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 164, 3179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 658, 158, 2246, 2246, 2246, 0, 1166,
	0, 2246, 0, 2246, 2246, 2246, 0, 2246, 2246, 0,
	0, 0, 1089, 2246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2246, 2246, 2246,
	2246, 0, 0, 2246, 2246, 2246, 2246, 2246, 2246, 0,
	0, 0, 2246, 2246, 2246, 2246, 2246, 2246, 2246, 2246,
	2246, 2246, 2246, 2246, 0, 0, 0, 0, 158, 158,
	158, 0, 0, 0, 0, 0, 1089, 0, 0, 0,
	0, 0, 0, 0, 0, 1166, 0, 492, 0, 492,
	0, 0, 0, 1759, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 714, 0, 2920, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1393,
	0, 0, 0, 0, 0, 0, 0, 2892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 1613, 0,
	159, 0, 495, 0, 0, 0, 1757, 0, 1166, 0,
	0, 159, 0, 158, 0, 0, 0, 0, 0, 158,
	158, 0, 0, 0, 158, 0, 2889, 0, 0, 0,
	659, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	1090, 0, 0, 0, 159, 1158, 0, 0, 1166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2575, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 492, 2893, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 2902, 1166, 0,
	0, 0, 2061, 2062, 2063, 2064, 2065, 0, 2066, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2634, 0,
	0, 0, 1166, 2891, 2914, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1166,
	2731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2918, 1613, 1613, 0, 0, 42, 45, 0, 0,
	0, 0, 2899, 2782, 0, 2783, 0, 0, 0, 0,
	71, 2198, 0, 0, 158, 0, 0, 93, 0, 0,
	47, 75, 76, 0, 0, 0, 0, 0, 72, 2791,
	2792, 2793, 0, 0, 0, 2797, 0, 2800, 0, 0,
	2803, 88, 158, 2806, 2807, 0, 0, 0, 2812, 2813,
	0, 0, 0, 0, 2819, 2820, 2821, 0, 63, 2822,
	0, 2823, 89, 0, 0, 0, 0, 0, 0, 0,
	2641, 2642, 0, 2911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 658, 2266,
	0, 2828, 2829, 2830, 2831, 0, 0, 2835, 2836, 2837,
	2838, 2839, 2840, 0, 0, 0, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 0, 2856,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 495, 0,
	0, 0, 2884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2896, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 80, 0, 96, 658, 158, 0, 0,
	0, 0, 0, 0, 0, 658, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	0, 0, 1089, 1089, 0, 2433, 0, 2435, 1759, 0,
	0, 0, 77, 0, 2885, 2887, 0, 0, 2890, 0,
	0, 2895, 0, 2900, 2897, 2898, 0, 2901, 2894, 0,
	2904, 2903, 2905, 0, 2906, 2907, 2908, 0, 0, 2910,
	2912, 2913, 2915, 2916, 2917, 0, 0, 0, 2888, 2919,
	0, 0, 0, 0, 0, 0, 0, 0, 2921, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 69, 70, 0, 0, 2246, 0, 0, 0,
	0, 0, 745, 2246, 2246, 2246, 2246, 2246, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 79, 1090, 0, 0, 0, 0, 0, 0,
	0, 2246, 2524, 0, 0, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	2545, 0, 0, 0, 60, 0, 2547, 2548, 0, 0,
	161, 1613, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2883, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 158, 0, 0, 0, 0, 158, 0, 0,
	158, 2866, 1759, 660, 1089, 82, 83, 0, 0, 0,
	0, 3198, 0, 0, 161, 1162, 0, 0, 0, 0,
	0, 0, 64, 81, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3234, 3235, 3236, 3237, 3238, 3239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3070, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 158, 2056, 3107, 0, 0, 0,
	0, 0, 0, 0, 0, 3118, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 0,
	0, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156,
	3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166,
	3167, 3168, 3169, 3170, 0, 3184, 3185, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	0, 0, 59, 61, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2559, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 2569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 1090, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 0, 0, 2246,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 1304, 0, 0, 0, 0, 158, 703,
	0, 0, 0, 0, 0, 2246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3325, 3326, 3327,
	0, 3331, 3332, 3333, 3334, 3335, 0, 0, 3338, 3339,
	3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349,
	3350, 3351, 3352, 3353, 3354, 0, 3356, 3357, 3358, 3359,
	3360, 3361, 161, 3364, 3365, 0, 495, 0, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	1089, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 495, 495, 495, 495, 0, 0, 0,
	0, 0, 0, 1665, 0, 0, 0, 0, 159, 159,
	159, 159, 159, 0, 159, 0, 0, 161, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3645, 3646, 3647, 0, 0, 0, 4464, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 0, 71, 3666,
	0, 1157, 0, 158, 0, 93, 0, 0, 47, 3673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3684, 3685, 3686, 3687, 0,
	0, 0, 0, 3692, 0, 0, 0, 660, 0, 0,
	0, 0, 1652, 0, 3702, 3703, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 4294, 0, 161, 0,
	0, 0, 158, 0, 3543, 0, 0, 0, 0, 0,
	0, 0, 0, 3711, 0, 0, 0, 4287, 0, 0,
	4627, 4630, 4626, 0, 0, 496, 0, 0, 159, 159,
	0, 0, 0, 659, 0, 2182, 0, 0, 0, 0,
	3582, 3583, 0, 0, 0, 0, 0, 159, 1676, 0,
	159, 159, 159, 159, 158, 158, 0, 0, 0, 0,
	0, 0, 659, 0, 0, 1666, 0, 0, 0, 2859,
	159, 0, 0, 0, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 158, 96, 0, 0, 0, 0, 0, 4288,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 2281, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3017, 3018, 0, 0, 0, 0, 659, 159, 0, 0,
	0, 0, 0, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2366, 0, 0, 0, 0,
	69, 70, 3735, 4290, 3737, 0, 0, 0, 0, 0,
	3743, 3744, 0, 4299, 4291, 4292, 4293, 4297, 4298, 4295,
	0, 4296, 0, 4300, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 159, 159, 0, 0, 0, 0, 0, 1090,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 2281, 0, 0, 0,
	1158, 1089, 0, 0, 0, 0, 1680, 1683, 1684, 1685,
	1686, 1687, 1688, 0, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 0, 1667, 1668,
	1669, 1649, 1648, 1681, 1650, 1653, 1647, 1651, 1646, 0,
	0, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4301, 4289, 0, 66, 67, 73, 0, 74, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 159, 159, 161, 0, 0, 159, 0, 3223,
	0, 0, 3947, 3948, 3949, 0, 3951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 3965, 3966, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 3970, 0, 0, 0, 3888, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 1682,
	0, 0, 4003, 0, 0, 0, 0, 0, 0, 0,
	4006, 0, 1670, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 496, 496, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 2920, 0, 0, 161, 161,
	161, 161, 161, 0, 161, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	1393, 0, 0, 0, 0, 0, 0, 0, 2892, 0,
	0, 0, 0, 4076, 0, 0, 0, 0, 0, 0,
	3385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 2881, 0, 0, 0, 4092, 0,
	0, 0, 0, 0, 1757, 0, 0, 2889, 0, 0,
	3979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3463,
	0, 0, 4117, 4118, 4119, 4120, 0, 0, 0, 2648,
	0, 0, 4124, 4125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4138, 159, 161, 161,
	658, 1613, 1613, 660, 0, 2183, 0, 0, 658, 158,
	0, 0, 0, 0, 0, 1089, 0, 161, 0, 0,
	161, 161, 161, 161, 0, 159, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 2893, 0, 0,
	161, 0, 0, 0, 660, 0, 0, 0, 2902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 659, 0, 4184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2891, 2914, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 2282, 0, 4207, 4208,
	4209, 4210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4238, 0,
	0, 0, 0, 0, 0, 0, 660, 161, 0, 659,
	159, 0, 0, 0, 0, 0, 0, 2909, 659, 0,
	0, 0, 0, 0, 0, 4141, 0, 4143, 4144, 0,
	0, 0, 0, 1088, 4316, 4317, 0, 0, 1088, 1625,
	0, 0, 2918, 0, 0, 1090, 1090, 0, 4327, 0,
	0, 2281, 0, 2899, 0, 0, 0, 0, 0, 4336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 161, 161, 0, 0, 0, 0, 4356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2282, 0, 0, 0,
	1162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 1723, 557, 0,
	0, 1756, 0, 4412, 0, 0, 0, 4415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2884, 0, 0, 161, 0, 0, 0,
	0, 0, 161, 161, 0, 0, 3796, 161, 0, 0,
	0, 3800, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 2896, 0, 0, 159, 0, 0, 0, 4324,
	159, 0, 0, 159, 0, 0, 0, 1090, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3846,
	0, 0, 0, 0, 0, 0, 0, 2113, 0, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2885, 2887, 0, 0, 2890,
	0, 0, 2895, 0, 2900, 2897, 2898, 0, 2901, 2894,
	0, 2904, 2903, 2905, 0, 2906, 2907, 2908, 0, 0,
	2910, 2912, 2913, 2915, 2916, 2917, 0, 0, 159, 2888,
	2919, 0, 0, 0, 0, 0, 0, 0, 0, 2921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2187, 0, 0, 0, 0, 159, 159, 0, 4554,
	0, 0, 0, 495, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4599, 0,
	0, 4602, 4603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2182, 0,
	0, 0, 0, 2883, 0, 2712, 0, 0, 0, 0,
	0, 0, 2187, 0, 0, 0, 0, 0, 0, 4644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1393, 0, 2661, 0, 0, 0, 0, 0, 2685, 0,
	0, 0, 744, 0, 2187, 0, 2187, 0, 0, 2324,
	0, 0, 0, 0, 0, 0, 2325, 0, 0, 0,
	0, 2187, 2331, 2187, 0, 0, 0, 0, 0, 0,
	2660, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2682, 0, 0,
	0, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 493, 0, 0, 161, 0, 0, 0, 0,
	0, 160, 0, 2281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 658, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 1088, 0, 0, 0, 161,
	0, 660, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2187, 0, 160, 1159, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 2651, 3506,
	2663, 0, 3505, 2662, 2653, 0, 0, 2686, 493, 160,
	0, 0, 0, 0, 0, 42, 0, 0, 2695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 3313, 0, 159, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2523, 2684, 2706, 2657, 2656, 0, 660,
	161, 0, 0, 0, 0, 1756, 0, 0, 660, 0,
	0, 0, 0, 0, 2652, 0, 0, 0, 0, 658,
	0, 89, 0, 0, 0, 0, 0, 4294, 0, 0,
	3507, 3508, 0, 0, 2676, 495, 0, 0, 0, 0,
	0, 2282, 0, 0, 0, 0, 0, 0, 4287, 0,
	0, 495, 0, 4705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2710, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2692, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 159, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 4200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 0, 0, 0, 0, 495, 495,
	495, 495, 0, 0, 0, 161, 495, 495, 0, 495,
	161, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 495, 495, 0, 159, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	0, 69, 70, 0, 4290, 0, 0, 0, 0, 0,
	0, 0, 0, 2678, 4299, 4291, 4292, 4293, 4297, 4298,
	4295, 0, 4296, 0, 4300, 0, 0, 0, 0, 78,
	0, 79, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2689, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 84, 2655, 0, 0, 161, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 4367, 0, 161, 161, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2679, 2680, 160, 0, 2683,
	0, 0, 2688, 0, 2693, 2690, 2691, 0, 2694, 2687,
	0, 2697, 2696, 2698, 0, 2699, 2700, 2701, 0, 0,
	2703, 2704, 2705, 2707, 2708, 2709, 0, 2585, 0, 2681,
	2711, 4301, 4289, 0, 66, 67, 73, 0, 74, 2675,
	0, 2597, 0, 0, 0, 0, 2597, 0, 0, 0,
	0, 0, 0, 0, 3313, 0, 0, 2182, 2183, 0,
	42, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 4213, 0,
	0, 0, 4294, 0, 0, 493, 0, 0, 0, 1665,
	0, 2733, 0, 2677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4287, 0, 0, 0, 0, 4699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2755, 0,
	0, 1088, 1088, 2282, 0, 0, 0, 2187, 0, 0,
	0, 0, 159, 0, 0, 161, 0, 159, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 1652, 96,
	0, 0, 0, 0, 0, 4288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 495,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 85,
	57, 0, 0, 0, 495, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4290,
	0, 496, 0, 1088, 0, 0, 0, 0, 0, 4299,
	4291, 4292, 4293, 4297, 4298, 4295, 161, 4296, 0, 4300,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2993, 2997, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 659, 159, 0, 0, 3020, 0, 0, 3313, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 161, 0,
	0, 0, 0, 0, 0, 0, 4301, 4289, 0, 66,
	67, 73, 0, 74, 160, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 2597, 496, 496,
	496, 496, 0, 3046, 0, 2597, 496, 496, 2597, 496,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 496, 0, 161, 496, 0, 0, 0,
	0, 0, 0, 0, 2187, 2187, 0, 0, 0, 0,
	0, 0, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 0,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 0, 1667, 1668, 1669, 1649, 1648, 1681,
	1650, 1653, 1647, 1651, 1646, 0, 493, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1671, 1672,
	1673, 1674, 1675, 1677, 1678, 1679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 660, 0, 0, 1761,
	0, 0, 0, 493, 493, 493, 493, 3196, 0, 495,
	0, 495, 0, 495, 0, 3196, 3196, 3196, 160, 160,
	160, 160, 160, 0, 160, 0, 0, 0, 0, 2187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 3277, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 160,
	0, 0, 0, 0, 0, 2184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	160, 160, 160, 160, 0, 0, 0, 0, 0, 0,
	495, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	160, 0, 161, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	42, 0, 0, 0, 3430, 160, 0, 0, 0, 0,
	0, 0, 493, 0, 71, 0, 2280, 3438, 3439, 3440,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	3196, 3196, 495, 0, 495, 0, 0, 0, 0, 0,
	495, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	3476, 0, 0, 0, 496, 0, 89, 0, 0, 0,
	0, 0, 4294, 0, 0, 0, 0, 160, 0, 0,
	0, 496, 0, 0, 0, 0, 3313, 0, 0, 0,
	159, 0, 0, 4287, 0, 0, 0, 0, 4693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2733, 0, 0, 3535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2733, 0, 2733, 0, 0, 0,
	3555, 160, 160, 160, 0, 0, 0, 2733, 0, 2733,
	3564, 2733, 2733, 2733, 2733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2280, 0, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 42, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4288, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 3196, 62, 92, 91, 0, 0, 3644, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 0, 0, 0, 3660, 0, 0,
	0, 660, 161, 0, 0, 0, 0, 0, 160, 0,
	0, 89, 0, 0, 0, 0, 0, 4294, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	495, 0, 160, 160, 0, 0, 0, 160, 4287, 0,
	659, 0, 0, 4685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 0, 4290,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 4299,
	4291, 4292, 4293, 4297, 4298, 4295, 0, 4296, 0, 4300,
	1088, 0, 0, 2187, 78, 0, 79, 0, 2733, 0,
	3313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 496,
	0, 496, 659, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4301, 4289, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2997, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4290, 3196, 0, 0, 0, 0,
	0, 0, 0, 0, 4299, 4291, 4292, 4293, 4297, 4298,
	4295, 0, 4296, 0, 4300, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 0, 84, 71, 0, 0, 0, 0,
	0, 0, 93, 60, 0, 47, 0, 0, 3877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 71,
	0, 0, 0, 4294, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	496, 0, 0, 161, 4287, 0, 0, 0, 0, 4658,
	0, 4301, 4289, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 89, 87, 0, 0, 0, 0, 4294, 0, 160,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 3928, 0, 0, 0, 0, 0, 0, 4287, 0,
	0, 0, 0, 4640, 0, 0, 0, 2187, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 496, 0, 496, 0, 4288, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 1088, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	161, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 2280, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 3196, 0, 0, 3196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4290, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	4299, 4291, 4292, 4293, 4297, 4298, 4295, 0, 4296, 0,
	4300, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	84, 69, 70, 0, 4290, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 4299, 4291, 4292, 4293, 4297, 4298,
	4295, 0, 4296, 0, 4300, 4078, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4085, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	660, 0, 2187, 0, 0, 0, 0, 4301, 4289, 0,
	66, 67, 73, 0, 74, 160, 0, 0, 0, 0,
	160, 0, 0, 160, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 4301, 4289, 0, 66, 67, 73, 0, 74, 0,
	0, 71, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 71, 0, 0, 0, 4294,
	0, 0, 93, 0, 3196, 47, 160, 160, 0, 0,
	0, 0, 660, 493, 0, 0, 0, 0, 0, 0,
	4287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1665, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	4223, 0, 0, 4294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4287, 0, 0, 59, 61, 4636,
	0, 0, 0, 87, 0, 0, 0, 0, 2184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4288, 0, 0, 85, 3196, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	62, 92, 91, 0, 1652, 0, 0, 57, 0, 0,
	2187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 1088, 0, 0, 0, 4288, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 2280, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 160, 0, 69, 70, 0, 4290, 1666, 0, 2187,
	0, 0, 0, 0, 0, 0, 4299, 4291, 4292, 4293,
	4297, 4298, 4295, 4637, 4296, 0, 4300, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 69, 70, 0,
	4290, 0, 0, 0, 0, 60, 0, 0, 0, 4223,
	4299, 4291, 4292, 4293, 4297, 4298, 4295, 0, 4296, 0,
	4300, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4301, 4289, 0, 66, 67, 73, 2187,
	74, 0, 0, 0, 0, 493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3196, 0, 0, 0, 0,
	0, 493, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2187, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1088, 4301, 4289, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 1683,
	1684, 1685, 1686, 1687, 1688, 160, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 0,
	1667, 1668, 1669, 1649, 1648, 1681, 1650, 1653, 1647, 1651,
	1646, 0, 0, 1654, 1655, 1656, 1657, 1658, 1659, 1660,
	1661, 1662, 1663, 1664, 1671, 1672, 1673, 1674, 1675, 1677,
	1678, 1679, 0, 0, 0, 0, 0, 160, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 493, 493,
	493, 493, 0, 0, 0, 0, 493, 493, 0, 493,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 493, 493, 0, 160, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1670, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 160, 0, 0, 0, 0, 160, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 1492, 1491,
	1501, 1502, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1493,
	0, 0, 1503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 493,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 493, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 493, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 493, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	493, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 493,
	0, 493, 0, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 0,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 493, 0, 0, 0, 0, 0,
	493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 903, 1046,
	160, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	708, 858, 891, 260, 707, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 980, 1053, 89, 0, 0,
	0, 0, 733, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 0, 940, 985, 1065,
	856, 705, 722, 861, 811, 4381, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 0, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	493, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 708, 858, 891, 260,
	707, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 696, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 705, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 0, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 708, 858, 891, 260, 707, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 0, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 705, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 2244, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1036, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1043, 864,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 804, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 708, 858,
	891, 260, 707, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 812, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1052, 911, 980, 1053, 89, 0, 0, 0, 0,
	733, 559, 734, 736, 737, 738, 739, 0, 0, 172,
	735, 740, 741, 742, 0, 940, 985, 1065, 856, 705,
	722, 861, 811, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 719, 720, 701, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 799, 1036, 928,
	302, 192, 1042, 926, 825, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 809,
	199, 314, 1021, 892, 905, 730, 0, 393, 981, 468,
	711, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 813, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 710, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 731, 732,
	247, 802, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 879, 1068, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 950, 1043, 864, 810, 1019, 821, 822,
	823, 824, 990, 1062, 798, 243, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 808, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 804, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 708, 858, 891, 260, 707, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	812, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1052, 911, 2453,
	1053, 89, 0, 0, 0, 0, 2455, 559, 734, 736,
	737, 738, 739, 0, 0, 172, 735, 740, 741, 742,
	2454, 940, 985, 1065, 856, 705, 722, 861, 811, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 719, 720, 0,
	0, 0, 0, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 799, 1036, 928, 302, 192, 1042, 926,
	825, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 809, 199, 314, 1021, 892,
	905, 730, 0, 393, 981, 468, 711, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	813, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 710, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 731, 732, 247, 802, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 879, 1068, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1043, 864, 810, 1019, 821, 822, 823, 824, 990, 1062,
	798, 243, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 808, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	708, 858, 891, 260, 707, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 980, 1053, 89, 0, 0,
	0, 0, 2353, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 0, 940, 985, 1065,
	856, 705, 722, 861, 811, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 2244, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 708, 858, 891, 260,
	707, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 2350, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 705, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 2244, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 42, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 708, 858, 891, 260, 707, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 0, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 705, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1544, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 950, 1043, 864,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1543, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 804, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 708, 858,
	891, 260, 707, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 812, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 796, 797, 930, 988, 877,
	975, 1052, 911, 980, 1053, 89, 0, 2111, 0, 0,
	733, 559, 734, 736, 737, 738, 739, 0, 0, 172,
	735, 740, 741, 742, 0, 940, 985, 1065, 856, 705,
	722, 861, 811, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 719, 720, 0, 0, 0, 0, 827, 0, 721,
	0, 871, 717, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 723, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 799, 1036, 928,
	302, 192, 1042, 926, 825, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 809,
	199, 314, 1021, 892, 905, 730, 0, 393, 981, 468,
	711, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 813, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 710, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 731, 732,
	247, 802, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 879, 1068, 826, 814, 815,
	818, 962, 963, 816, 819, 820, 828, 800, 801, 803,
	805, 806, 807, 950, 1043, 864, 810, 1019, 821, 822,
	823, 824, 990, 1062, 798, 243, 747, 840, 841, 842,
	748, 843, 844, 749, 750, 845, 846, 847, 848, 751,
	849, 850, 851, 829, 830, 831, 832, 833, 834, 835,
	836, 839, 837, 838, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 808, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 804, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 708, 858, 891, 260, 707, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	812, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 796, 797, 930, 988, 877, 975, 1052, 911, 980,
	1053, 89, 0, 0, 0, 0, 733, 559, 734, 736,
	737, 738, 739, 0, 0, 172, 735, 740, 741, 742,
	0, 940, 985, 1065, 856, 705, 722, 861, 811, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 719, 720, 0,
	0, 0, 0, 827, 0, 721, 0, 871, 717, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 723, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 799, 1036, 928, 302, 192, 1042, 926,
	825, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 809, 199, 314, 1021, 892,
	905, 730, 0, 393, 981, 468, 711, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	813, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 710, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 731, 732, 247, 802, 1055, 212,
	869, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 879, 1068, 826, 814, 815, 818, 962, 963, 816,
	819, 820, 828, 800, 801, 803, 805, 806, 807, 950,
	1043, 864, 810, 1019, 821, 822, 823, 824, 990, 1062,
	798, 243, 747, 840, 841, 842, 748, 843, 844, 749,
	750, 845, 846, 847, 848, 751, 849, 850, 851, 829,
	830, 831, 832, 833, 834, 835, 836, 839, 837, 838,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 808, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 804, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	1108, 858, 891, 260, 1106, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 812, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 796, 797, 930,
	988, 877, 975, 1052, 911, 980, 1053, 89, 0, 0,
	0, 0, 733, 559, 734, 736, 737, 738, 739, 0,
	0, 172, 735, 740, 741, 742, 0, 940, 985, 1065,
	856, 1125, 722, 861, 811, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 719, 720, 0, 0, 0, 0, 827,
	0, 721, 0, 871, 717, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 723, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 799,
	1036, 928, 302, 192, 1042, 926, 825, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 809, 199, 314, 1021, 892, 905, 730, 0, 393,
	981, 468, 711, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 813, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 710,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	731, 732, 247, 802, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 879, 1068, 826,
	814, 815, 818, 962, 963, 816, 819, 820, 828, 800,
	801, 803, 805, 806, 807, 950, 1043, 864, 810, 1019,
	821, 822, 823, 824, 990, 1062, 798, 243, 747, 840,
	841, 842, 748, 843, 844, 749, 750, 845, 846, 847,
	848, 751, 849, 850, 851, 829, 830, 831, 832, 833,
	834, 835, 836, 839, 837, 838, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 808,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 804,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 1108, 858, 891, 260,
	1106, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 812, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 796, 797, 930, 988, 877, 975, 1052,
	911, 980, 1053, 89, 0, 0, 0, 0, 733, 559,
	734, 736, 737, 738, 739, 0, 0, 172, 735, 740,
	741, 742, 0, 940, 985, 1065, 856, 1125, 722, 861,
	811, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 719,
	720, 0, 0, 0, 0, 827, 0, 721, 0, 871,
	717, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 723, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 799, 1036, 928, 302, 192,
	1042, 926, 825, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 809, 199, 314,
	1021, 892, 905, 730, 0, 393, 981, 468, 711, 279,
	0, 4543, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 813, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 710, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 731, 732, 247, 802,
	1055, 212, 869, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 879, 1068, 826, 814, 815, 818, 962,
	963, 816, 819, 820, 828, 800, 801, 803, 805, 806,
	807, 950, 1043, 864, 810, 1019, 821, 822, 823, 824,
	990, 1062, 798, 243, 747, 840, 841, 842, 748, 843,
	844, 749, 750, 845, 846, 847, 848, 751, 849, 850,
	851, 829, 830, 831, 832, 833, 834, 835, 836, 839,
	837, 838, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 808, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	903, 1046, 0, 0, 449, 804, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 1108, 858, 891, 260, 1106, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 812, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 796,
	797, 930, 988, 877, 975, 1052, 911, 980, 1053, 89,
	0, 0, 0, 0, 733, 559, 734, 736, 737, 738,
	739, 0, 0, 172, 735, 740, 741, 742, 0, 940,
	985, 1065, 856, 1125, 722, 861, 811, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 719, 720, 0, 0, 0,
	0, 827, 0, 721, 0, 871, 717, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 723,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 799, 1036, 928, 302, 192, 1042, 926, 825, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 809, 199, 314, 1021, 892, 905, 730,
	0, 393, 981, 468, 711, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 813, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 710, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 731, 732, 247, 802, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 879,
	1068, 826, 814, 815, 818, 962, 963, 816, 819, 820,
	828, 800, 801, 803, 805, 806, 807, 2356, 2357, 2358,
	810, 1019, 821, 822, 823, 824, 990, 1062, 798, 243,
	747, 840, 841, 842, 748, 843, 844, 749, 750, 845,
	846, 847, 848, 751, 849, 850, 851, 829, 830, 831,
	832, 833, 834, 835, 836, 839, 837, 838, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 808, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 1832, 2012, 0, 3715,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 173, 479, 191, 3716, 315, 1988, 499, 3717, 424,
	340, 502, 501, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 89, 0, 696, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 1925, 2010, 1836, 500, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 3719, 1862,
	302, 192, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 178,
	199, 314, 1978, 1818, 1835, 246, 2186, 393, 1930, 468,
	498, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	181, 407, 406, 1850, 293, 1965, 182, 171, 386, 183,
	303, 205, 1990, 487, 221, 310, 451, 497, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1960, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 193, 194,
	1998, 1999, 195, 1892, 2008, 1780, 0, 1976, 189, 190,
	175, 180, 1939, 2036, 1852, 243, 165, 1776, 1777, 1778,
	166, 1882, 1883, 168, 169, 1994, 1993, 1992, 1995, 170,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 3718, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 173, 479, 191,
	2023, 315, 1988, 499, 477, 424, 340, 502, 501, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1925, 2010, 1836,
	500, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 3215,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 192, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 178, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 2284, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 181, 407, 406, 1850,
	293, 1965, 182, 171, 386, 183, 303, 205, 1990, 487,
	221, 310, 451, 2283, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1960, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 193, 194, 1998, 1999, 195, 1892,
	2008, 1780, 0, 1976, 189, 190, 175, 180, 1939, 2036,
	1852, 243, 165, 1776, 1777, 1778, 166, 1882, 1883, 168,
	169, 1994, 1993, 1992, 1995, 170, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 173, 479, 191, 2023, 315, 1988, 499,
	477, 424, 340, 502, 501, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1925, 2010, 1836, 500, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 192, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 178, 199, 314, 1978, 1818, 1835, 246, 2186, 393,
	1930, 468, 498, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 181, 407, 406, 1850, 293, 1965, 182, 171,
	386, 183, 303, 205, 1990, 487, 221, 310, 451, 497,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1960, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	193, 194, 1998, 1999, 195, 1892, 2008, 1780, 0, 1976,
	189, 190, 175, 180, 1939, 2036, 1852, 243, 165, 1776,
	1777, 1778, 166, 1882, 1883, 168, 169, 1994, 1993, 1992,
	1995, 170, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 173,
	479, 191, 2023, 315, 1988, 499, 477, 424, 340, 502,
	501, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 1925,
	2010, 1836, 500, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 2277, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 192,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 178, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 2284, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 181, 407,
	406, 1850, 293, 1965, 182, 171, 386, 183, 303, 205,
	1990, 487, 221, 310, 451, 2283, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1960,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 193, 194, 1998, 1999,
	195, 1892, 2008, 1780, 0, 1976, 189, 190, 175, 180,
	1939, 2036, 1852, 243, 165, 1776, 1777, 1778, 166, 1882,
	1883, 168, 169, 1994, 1993, 1992, 1995, 170, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 173, 479, 191, 2023, 315,
	1988, 499, 477, 424, 340, 502, 501, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 1925, 2010, 1836, 500, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 192, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 178, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 2284, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 181, 407, 406, 1850, 293, 1965,
	182, 171, 386, 183, 303, 205, 1990, 487, 221, 310,
	451, 2283, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1960, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 193, 194, 1998, 1999, 195, 1892, 2008, 1780,
	0, 1976, 189, 190, 175, 180, 1939, 2036, 1852, 243,
	165, 1776, 1777, 1778, 166, 1882, 1883, 168, 169, 1994,
	1993, 1992, 1995, 170, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 903, 1046, 0, 0,
	449, 1113, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 1108, 858,
	891, 260, 1106, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 1146, 315, 0, 499, 477, 424,
	340, 502, 501, 945, 0, 1120, 1133, 930, 988, 877,
	975, 1052, 911, 980, 1053, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 1128, 1142, 1109, 500, 940, 985, 1065, 856, 1125,
	0, 861, 1097, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 871, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 1135, 1036, 928,
	302, 192, 1042, 926, 1112, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 178,
	199, 314, 1021, 892, 905, 246, 3315, 393, 981, 468,
	2369, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 1131, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 2368, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 464, 465,
	247, 1098, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 1103, 0, 1105, 1101, 1104,
	1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099, 193, 194,
	1140, 1141, 195, 950, 1043, 864, 0, 1019, 189, 190,
	175, 180, 990, 1062, 1111, 243, 165, 1094, 1095, 1096,
	166, 1115, 1116, 168, 169, 1138, 1137, 1136, 1139, 170,
	1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126,
	1127, 1134, 1129, 1130, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1123, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 173, 479, 191,
	2023, 315, 1988, 499, 477, 424, 340, 502, 501, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1925, 2010, 1836,
	500, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 2867,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 192, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 178, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 498, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 181, 407, 406, 1850,
	293, 1965, 182, 171, 386, 183, 303, 205, 1990, 487,
	221, 310, 451, 497, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1960, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 0, 0, 1998, 1999, 0, 1892,
	2008, 1780, 0, 1976, 189, 190, 175, 180, 1939, 2036,
	1852, 243, 0, 1776, 1777, 1778, 0, 1882, 1883, 0,
	0, 1994, 1993, 1992, 1995, 0, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 903, 1046,
	0, 0, 449, 1113, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	1108, 858, 891, 260, 1106, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 1146, 315, 0, 499,
	477, 424, 340, 502, 501, 945, 0, 1120, 1133, 930,
	988, 877, 975, 1052, 911, 980, 1053, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1128, 1142, 1109, 500, 940, 985, 1065,
	856, 1125, 0, 861, 1097, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 871, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 1135,
	1036, 928, 302, 192, 1042, 926, 1112, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 178, 199, 314, 1021, 892, 905, 246, 0, 393,
	981, 468, 2369, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 1131, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 2368,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	464, 465, 247, 1098, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 1103, 0, 1105,
	1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099,
	193, 194, 1140, 1141, 195, 950, 1043, 864, 0, 1019,
	189, 190, 175, 180, 990, 1062, 1111, 243, 165, 1094,
	1095, 1096, 166, 1115, 1116, 168, 169, 1138, 1137, 1136,
	1139, 170, 1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118,
	1119, 1126, 1127, 1134, 1129, 1130, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1123,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 173,
	479, 191, 2023, 315, 1988, 499, 477, 424, 340, 502,
	501, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 1925,
	2010, 1836, 500, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 192,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 178, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 498, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 181, 407,
	406, 1850, 293, 1965, 182, 171, 386, 183, 303, 205,
	1990, 487, 221, 310, 451, 497, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1960,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 0, 0, 1998, 1999,
	0, 1892, 2008, 1780, 0, 1976, 189, 190, 175, 180,
	1939, 2036, 1852, 243, 0, 1776, 1777, 1778, 0, 1882,
	1883, 0, 0, 1994, 1993, 1992, 1995, 0, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	903, 1046, 0, 0, 449, 1113, 1050, 890, 913, 1060,
	919, 921, 986, 865, 961, 358, 910, 866, 1011, 0,
	0, 857, 1108, 858, 891, 260, 1106, 1020, 964, 1048,
	947, 979, 989, 259, 245, 954, 953, 1037, 902, 901,
	984, 1033, 1047, 0, 0, 173, 479, 191, 1146, 315,
	0, 0, 477, 424, 340, 0, 0, 945, 0, 1120,
	1133, 930, 988, 877, 975, 1052, 911, 980, 1053, 0,
	0, 0, 0, 0, 0, 559, 0, 1454, 0, 0,
	1455, 0, 0, 172, 0, 1128, 1142, 1109, 0, 940,
	985, 1065, 856, 1125, 0, 861, 1097, 0, 1038, 898,
	899, 264, 0, 0, 0, 0, 0, 0, 0, 943,
	960, 1004, 927, 0, 469, 991, 1000, 1015, 920, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 871, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 876, 854, 896, 1006, 855, 853, 341,
	868, 1135, 1036, 928, 302, 192, 1042, 926, 1112, 994,
	872, 1024, 1058, 914, 312, 870, 196, 867, 873, 912,
	354, 1003, 1009, 178, 199, 314, 1021, 892, 905, 246,
	0, 393, 981, 468, 1092, 279, 0, 967, 392, 316,
	461, 995, 1044, 467, 915, 443, 478, 483, 272, 948,
	235, 421, 262, 255, 897, 1014, 860, 285, 376, 250,
	307, 931, 987, 893, 242, 998, 974, 1026, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1022,
	1008, 1028, 888, 874, 880, 875, 904, 1045, 294, 286,
	1029, 1027, 906, 362, 225, 958, 951, 944, 1131, 472,
	1061, 258, 1010, 474, 181, 407, 406, 918, 293, 1012,
	182, 171, 386, 183, 303, 205, 1032, 487, 221, 310,
	451, 1091, 278, 353, 983, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 1007, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 1051, 323, 267,
	271, 287, 298, 982, 390, 428, 475, 976, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1005, 217, 238, 429,
	211, 1040, 1023, 969, 933, 939, 862, 0, 210, 934,
	935, 936, 937, 938, 1001, 895, 907, 887, 977, 886,
	282, 993, 464, 465, 247, 1098, 1055, 212, 869, 1054,
	350, 357, 349, 1057, 1056, 460, 1041, 970, 957, 955,
	863, 1039, 968, 956, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 959, 426, 321, 0, 207,
	0, 425, 1049, 1067, 440, 227, 881, 1016, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 997, 1064, 361, 394, 234, 470, 422, 263, 1103,
	0, 1105, 1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145,
	1132, 1099, 193, 194, 1140, 1141, 195, 950, 1043, 864,
	0, 1019, 189, 190, 175, 180, 990, 1062, 1111, 243,
	165, 1094, 1095, 1096, 166, 1115, 1116, 168, 169, 1138,
	1137, 1136, 1139, 170, 1148, 1147, 1149, 1100, 1107, 1110,
	1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130, 0, 946,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1123, 200, 213, 313, 1063, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1017, 973, 0,
	923, 925, 924, 883, 885, 884, 882, 1066, 347, 1035,
	852, 859, 878, 889, 894, 900, 908, 909, 917, 922,
	932, 941, 942, 952, 965, 966, 972, 996, 999, 1013,
	1018, 1025, 1030, 1031, 473, 253, 949, 971, 1002, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 929, 197, 0, 0, 203, 0, 204, 206,
	916, 202, 1034, 1059, 978, 992, 903, 1046, 0, 0,
	449, 1113, 1050, 890, 913, 1060, 919, 921, 986, 865,
	961, 358, 910, 866, 1011, 0, 0, 857, 1108, 858,
	891, 260, 1106, 1020, 964, 1048, 947, 979, 989, 259,
	245, 954, 953, 1037, 902, 901, 984, 1033, 1047, 0,
	0, 173, 479, 191, 1146, 315, 0, 0, 477, 424,
	340, 0, 0, 945, 0, 1120, 1133, 930, 988, 877,
	975, 1052, 911, 980, 1053, 0, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 1128, 1142, 1109, 0, 940, 985, 1065, 856, 1125,
	0, 861, 1097, 0, 1038, 898, 899, 264, 0, 0,
	0, 0, 0, 0, 0, 943, 960, 1004, 927, 0,
	469, 991, 1000, 1015, 920, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 871, 1093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 876,
	854, 896, 1006, 855, 853, 341, 868, 1135, 1036, 928,
	302, 192, 1042, 926, 1112, 994, 872, 1024, 1058, 914,
	312, 870, 196, 867, 873, 912, 354, 1003, 1009, 178,
	199, 314, 1021, 892, 905, 246, 0, 393, 981, 468,
	1092, 279, 0, 967, 392, 316, 461, 995, 1044, 467,
	915, 443, 478, 483, 272, 948, 235, 421, 262, 255,
	897, 1014, 860, 285, 376, 250, 307, 931, 987, 893,
	242, 998, 974, 1026, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1022, 1008, 1028, 888, 874,
	880, 875, 904, 1045, 294, 286, 1029, 1027, 906, 362,
	225, 958, 951, 944, 1131, 472, 1061, 258, 1010, 474,
	181, 407, 406, 918, 293, 1012, 182, 171, 386, 183,
	303, 205, 1032, 487, 221, 310, 451, 1091, 278, 353,
	983, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 1007, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 1051, 323, 267, 271, 287, 298, 982,
	390, 428, 475, 976, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1005, 217, 238, 429, 211, 1040, 1023, 969,
	933, 939, 862, 0, 210, 934, 935, 936, 937, 938,
	1001, 895, 907, 887, 977, 886, 282, 993, 464, 465,
	247, 1098, 1055, 212, 869, 1054, 350, 357, 349, 1057,
	1056, 460, 1041, 970, 957, 955, 863, 1039, 968, 956,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 959, 426, 321, 0, 207, 0, 425, 1049, 1067,
	440, 227, 881, 1016, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 997, 1064, 361,
	394, 234, 470, 422, 263, 1103, 0, 1105, 1101, 1104,
	1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099, 193, 194,
	1140, 1141, 195, 950, 1043, 864, 0, 1019, 189, 190,
	175, 180, 990, 1062, 1111, 243, 165, 1094, 1095, 1096,
	166, 1115, 1116, 168, 169, 1138, 1137, 1136, 1139, 170,
	1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126,
	1127, 1134, 1129, 1130, 0, 946, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1123, 200, 213,
	313, 1063, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1017, 973, 0, 923, 925, 924, 883,
	885, 884, 882, 1066, 347, 1035, 852, 859, 878, 889,
	894, 900, 908, 909, 917, 922, 932, 941, 942, 952,
	965, 966, 972, 996, 999, 1013, 1018, 1025, 1030, 1031,
	473, 253, 949, 971, 1002, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 929, 197,
	0, 0, 203, 0, 204, 206, 916, 202, 1034, 1059,
	978, 992, 903, 1046, 0, 0, 449, 1113, 1050, 890,
	913, 1060, 919, 921, 986, 865, 961, 358, 910, 866,
	1011, 0, 0, 857, 1108, 858, 891, 260, 1106, 1020,
	964, 1048, 947, 979, 989, 259, 245, 954, 953, 1037,
	902, 901, 984, 1033, 1047, 0, 0, 173, 479, 191,
	1146, 315, 0, 0, 477, 424, 340, 0, 0, 945,
	0, 1120, 1133, 930, 988, 877, 975, 1052, 911, 980,
	1053, 0, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1128, 1142, 1109,
	0, 940, 985, 1065, 856, 1125, 0, 861, 1097, 0,
	1038, 898, 899, 264, 0, 0, 0, 0, 0, 0,
	0, 943, 960, 1004, 927, 0, 469, 991, 1000, 1015,
	920, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 871, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 0, 876, 854, 896, 1006, 855,
	853, 341, 868, 1135, 1036, 928, 302, 192, 1042, 926,
	1112, 994, 872, 1024, 1058, 914, 312, 870, 196, 867,
	873, 912, 354, 1003, 1009, 178, 199, 314, 1021, 892,
	905, 246, 0, 393, 981, 468, 1092, 279, 0, 967,
	392, 316, 461, 995, 1044, 467, 915, 443, 478, 483,
	272, 948, 235, 421, 262, 255, 897, 1014, 860, 285,
	376, 250, 307, 931, 987, 893, 242, 998, 974, 1026,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1022, 1008, 1028, 888, 874, 880, 875, 904, 1045,
	294, 286, 1029, 1027, 906, 362, 225, 958, 951, 944,
	1131, 472, 1061, 258, 1010, 474, 181, 407, 406, 918,
	293, 1012, 182, 171, 386, 183, 303, 205, 1032, 487,
	221, 310, 451, 1091, 278, 353, 983, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 1007, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 1051,
	323, 267, 271, 287, 298, 982, 390, 428, 475, 976,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1005, 217,
	238, 429, 211, 1040, 1023, 969, 933, 939, 862, 0,
	210, 934, 935, 936, 937, 938, 1001, 895, 907, 887,
	977, 886, 282, 993, 464, 465, 247, 1098, 1055, 212,
	1086, 1054, 350, 357, 349, 1057, 1056, 460, 1041, 970,
	957, 955, 863, 1039, 968, 956, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 1082, 959, 426, 321,
	0, 207, 0, 425, 1049, 1067, 440, 227, 881, 1016,
	455, 179, 382, 228, 280, 268, 373, 1087, 1085, 1076,
	1077, 309, 317, 997, 1064, 361, 394, 234, 470, 422,
	263, 1103, 0, 1105, 1101, 1104, 1102, 1121, 1122, 1143,
	1144, 1145, 1132, 1099, 193, 194, 1140, 1141, 195, 950,
	1043, 864, 0, 1019, 189, 190, 175, 180, 990, 1062,
	1111, 243, 165, 1094, 1095, 1096, 166, 1115, 1116, 168,
	169, 1138, 1137, 1136, 1139, 170, 1148, 1147, 1149, 1100,
	1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134, 1129, 1130,
	0, 946, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1123, 200, 213, 313, 1063, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1017,
	973, 0, 923, 925, 924, 883, 885, 884, 882, 1066,
	347, 1035, 852, 859, 878, 889, 894, 900, 908, 909,
	917, 922, 932, 941, 942, 952, 965, 966, 972, 996,
	999, 1013, 1018, 1025, 1030, 1031, 473, 253, 949, 971,
	1002, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 1083, 1084, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 929, 197, 0, 0, 203, 0,
	204, 206, 916, 202, 1034, 1059, 978, 992, 903, 1046,
	0, 0, 449, 1113, 1050, 890, 913, 1060, 919, 921,
	986, 865, 961, 358, 910, 866, 1011, 0, 0, 857,
	1108, 858, 891, 260, 1106, 1020, 964, 1048, 947, 979,
	989, 259, 245, 954, 953, 1037, 902, 901, 984, 1033,
	1047, 0, 0, 173, 479, 191, 1146, 315, 0, 0,
	477, 424, 340, 0, 0, 945, 0, 1120, 1133, 930,
	988, 877, 975, 1052, 911, 980, 1053, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 1128, 1142, 1109, 0, 940, 985, 1065,
	856, 1125, 0, 861, 1097, 0, 1038, 898, 899, 264,
	0, 0, 0, 0, 0, 0, 0, 943, 960, 1004,
	927, 0, 469, 991, 1000, 1015, 920, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 871, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 876, 854, 896, 1006, 855, 853, 341, 868, 1135,
	1036, 928, 302, 192, 1042, 926, 1112, 994, 872, 1024,
	1058, 914, 312, 870, 196, 867, 873, 912, 354, 1003,
	1009, 178, 199, 314, 1021, 892, 905, 246, 0, 393,
	981, 468, 1092, 279, 0, 967, 392, 316, 461, 995,
	1044, 467, 915, 443, 478, 483, 272, 948, 235, 421,
	262, 255, 897, 1014, 860, 285, 376, 250, 307, 931,
	987, 893, 242, 998, 974, 1026, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1022, 1008, 1028,
	888, 874, 880, 875, 904, 1045, 294, 286, 1029, 1027,
	906, 362, 225, 958, 951, 944, 1131, 472, 1061, 258,
	1010, 474, 181, 407, 406, 918, 293, 1012, 182, 171,
	386, 183, 303, 205, 1032, 487, 221, 310, 451, 1091,
	278, 353, 983, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 1007, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 1051, 323, 267, 271, 287,
	298, 982, 390, 428, 475, 976, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 1621,
	230, 408, 411, 486, 1005, 217, 238, 429, 211, 1040,
	1023, 969, 933, 939, 862, 0, 210, 934, 935, 936,
	937, 938, 1001, 895, 907, 887, 977, 886, 282, 993,
	464, 465, 247, 1098, 1055, 212, 869, 1054, 350, 357,
	349, 1057, 1056, 460, 1041, 970, 957, 955, 863, 1039,
	968, 956, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 959, 426, 321, 0, 207, 0, 425,
	1049, 1067, 440, 227, 881, 1016, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 997,
	1064, 361, 394, 234, 470, 422, 263, 1103, 0, 1105,
	1101, 1104, 1102, 1121, 1122, 1143, 1144, 1145, 1132, 1099,
	193, 194, 1140, 1141, 195, 950, 1043, 864, 0, 1019,
	189, 190, 175, 180, 990, 1062, 1111, 243, 165, 1094,
	1095, 1096, 166, 1115, 1116, 168, 169, 1138, 1137, 1136,
	1139, 170, 1148, 1147, 1149, 1100, 1107, 1110, 1117, 1118,
	1119, 1126, 1127, 1134, 1129, 1130, 0, 946, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1123,
	200, 213, 313, 1063, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1017, 973, 0, 923, 925,
	924, 883, 885, 884, 882, 1066, 347, 1035, 852, 859,
	878, 889, 894, 900, 908, 909, 917, 922, 932, 941,
	942, 952, 965, 966, 972, 996, 999, 1013, 1018, 1025,
	1030, 1031, 473, 253, 949, 971, 1002, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	929, 197, 0, 0, 203, 0, 204, 206, 916, 202,
	1034, 1059, 978, 992, 903, 1046, 0, 0, 449, 1113,
	1050, 890, 913, 1060, 919, 921, 986, 865, 961, 358,
	910, 866, 1011, 0, 0, 857, 1108, 858, 891, 260,
	1106, 1020, 964, 1048, 947, 979, 989, 259, 245, 954,
	953, 1037, 902, 901, 984, 1033, 1047, 0, 0, 173,
	479, 191, 1146, 315, 0, 0, 477, 424, 340, 0,
	0, 945, 0, 1120, 1133, 930, 988, 877, 975, 1052,
	911, 980, 1053, 0, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 1128,
	1142, 1109, 0, 940, 985, 1065, 856, 1125, 0, 861,
	1097, 0, 1038, 898, 899, 264, 0, 0, 0, 0,
	0, 0, 0, 943, 960, 1004, 927, 0, 469, 991,
	1000, 1015, 920, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 871,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 876, 854, 896,
	1006, 855, 853, 341, 868, 1135, 1036, 928, 302, 192,
	1042, 926, 1112, 994, 872, 1024, 1058, 914, 312, 870,
	196, 867, 873, 912, 354, 1003, 1009, 178, 199, 314,
	1021, 892, 905, 246, 0, 393, 981, 468, 1092, 279,
	0, 967, 392, 316, 461, 995, 1044, 467, 915, 443,
	478, 483, 272, 948, 235, 421, 262, 255, 897, 1014,
	860, 285, 376, 250, 307, 931, 987, 893, 242, 998,
	974, 1026, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1022, 1008, 1028, 888, 874, 880, 875,
	904, 1045, 294, 286, 1029, 1027, 906, 362, 225, 958,
	951, 944, 1131, 472, 1061, 258, 1010, 474, 181, 407,
	406, 918, 293, 1012, 182, 171, 386, 183, 303, 205,
	1032, 487, 221, 310, 451, 1091, 278, 353, 983, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 1007,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 1051, 323, 267, 271, 287, 298, 982, 390, 428,
	475, 976, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 1073, 230, 408, 411, 486,
	1005, 217, 238, 429, 211, 1040, 1023, 969, 933, 939,
	862, 0, 210, 934, 935, 936, 937, 938, 1001, 895,
	907, 887, 977, 886, 282, 993, 464, 465, 247, 1098,
	1055, 212, 1086, 1054, 350, 357, 349, 1057, 1056, 460,
	1041, 970, 957, 955, 863, 1039, 968, 956, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 1082, 959,
	426, 321, 0, 207, 0, 425, 1049, 1067, 440, 227,
	881, 1016, 455, 179, 382, 228, 280, 268, 373, 1087,
	1085, 1076, 1077, 309, 317, 997, 1064, 361, 394, 234,
	470, 422, 263, 1103, 0, 1105, 1101, 1104, 1102, 1121,
	1122, 1143, 1144, 1145, 1132, 1099, 193, 194, 1140, 1141,
	195, 950, 1043, 864, 0, 1019, 189, 190, 175, 180,
	990, 1062, 1111, 243, 165, 1094, 1095, 1096, 166, 1115,
	1116, 168, 169, 1138, 1137, 1136, 1139, 170, 1148, 1147,
	1149, 1100, 1107, 1110, 1117, 1118, 1119, 1126, 1127, 1134,
	1129, 1130, 0, 946, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1123, 200, 213, 313, 1063,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1017, 973, 0, 923, 925, 924, 883, 885, 884,
	882, 1066, 347, 1035, 852, 859, 878, 889, 894, 900,
	908, 909, 917, 922, 932, 941, 942, 952, 965, 966,
	972, 996, 999, 1013, 1018, 1025, 1030, 1031, 473, 253,
	949, 971, 1002, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 1083,
	1084, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 929, 197, 0, 0,
	203, 0, 204, 206, 916, 202, 1034, 1059, 978, 992,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 0, 479, 0, 2023, 315,
	1988, 0, 477, 424, 340, 0, 0, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 3173, 3178, 0, 3181, 3183, 3182,
	0, 0, 0, 3175, 0, 1925, 2010, 1836, 0, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 0, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 0, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 0, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 3176, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 0, 407, 406, 1850, 293, 1965,
	0, 0, 386, 3177, 303, 205, 1990, 487, 221, 310,
	451, 0, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 1960, 383, 409, 456, 223,
	427, 0, 0, 0, 399, 0, 0, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 0,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 0, 0, 1998, 1999, 0, 1892, 2008, 1780,
	0, 1976, 0, 0, 0, 0, 1939, 2036, 1852, 243,
	0, 1776, 1777, 1778, 0, 1882, 1883, 0, 0, 1994,
	1993, 1992, 1995, 0, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 0, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 0, 479, 0, 2023, 315, 1988, 0, 477, 424,
	340, 0, 0, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	3982, 3178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 2010, 1836, 0, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 0, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 0,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	0, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	0, 407, 406, 1850, 293, 1965, 0, 0, 386, 0,
	303, 205, 1990, 487, 221, 310, 451, 0, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 1960, 383, 409, 456, 223, 427, 0, 0, 0,
	399, 0, 0, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 0, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 0, 0,
	1998, 1999, 0, 1892, 2008, 1780, 0, 1976, 0, 0,
	0, 0, 1939, 2036, 1852, 243, 0, 1776, 1777, 1778,
	0, 1882, 1883, 0, 0, 1994, 1993, 1992, 1995, 0,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 0, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 0, 479, 0,
	2023, 315, 1988, 0, 477, 424, 340, 0, 0, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 2010, 1836,
	0, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 3932,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 0, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 0, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 0, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 0, 407, 406, 1850,
	293, 1965, 0, 0, 386, 0, 303, 205, 1990, 487,
	221, 310, 451, 0, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1960, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 0, 0, 1998, 1999, 0, 1892,
	2008, 1780, 0, 1976, 0, 0, 0, 0, 1939, 2036,
	1852, 243, 0, 1776, 1777, 1778, 0, 1882, 1883, 0,
	0, 1994, 1993, 1992, 1995, 0, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 0, 479, 0, 2023, 315, 1988, 0,
	477, 424, 340, 0, 0, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 2010, 1836, 0, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 3228, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 0, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 0, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 0, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 0, 407, 406, 1850, 293, 1965, 0, 0,
	386, 0, 303, 205, 1990, 487, 221, 310, 451, 0,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 1960, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 0, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	0, 0, 1998, 1999, 0, 1892, 2008, 1780, 0, 1976,
	0, 0, 0, 0, 1939, 2036, 1852, 243, 0, 1776,
	1777, 1778, 0, 1882, 1883, 0, 0, 1994, 1993, 1992,
	1995, 0, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 1832, 2012, 0, 1974, 449, 1866,
	2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781, 1904, 358,
	1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770, 1817, 260,
	1813, 1977, 1907, 2014, 1886, 1928, 1938, 259, 245, 1896,
	1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885, 0, 0,
	479, 0, 2023, 315, 1988, 0, 477, 424, 340, 0,
	0, 1881, 1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018,
	1843, 1929, 2019, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1925,
	2010, 1836, 0, 1876, 1934, 2039, 1768, 1921, 0, 1773,
	1784, 2033, 2003, 1827, 1828, 264, 0, 0, 0, 0,
	0, 0, 0, 1879, 1903, 1955, 1861, 0, 469, 1940,
	1950, 1969, 1853, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 1918, 0, 0, 0, 1789,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1796, 1766, 1824,
	1957, 1767, 1764, 341, 1785, 1971, 2001, 1862, 302, 0,
	2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846, 312, 1788,
	196, 1783, 1791, 1844, 354, 1954, 1962, 0, 199, 314,
	1978, 1818, 1835, 246, 0, 393, 1930, 468, 0, 279,
	0, 1911, 392, 316, 461, 1945, 2009, 467, 1847, 443,
	478, 483, 272, 1887, 235, 421, 262, 255, 1826, 1968,
	1772, 285, 376, 250, 307, 1865, 1936, 1819, 242, 1948,
	1919, 1983, 420, 458, 201, 335, 459, 482, 0, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 1979, 1961, 1985, 1812, 1792, 1803, 1793,
	1834, 2011, 294, 286, 1986, 1984, 1837, 362, 225, 1900,
	1893, 1880, 1958, 472, 2035, 258, 1963, 474, 0, 407,
	406, 1850, 293, 1965, 0, 0, 386, 0, 303, 205,
	1990, 487, 221, 310, 451, 0, 278, 353, 1932, 363,
	198, 381, 330, 332, 329, 333, 283, 0, 0, 1960,
	383, 409, 456, 223, 427, 0, 0, 0, 399, 0,
	0, 2017, 323, 267, 271, 287, 298, 1931, 390, 428,
	475, 1922, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	1956, 217, 238, 429, 211, 2005, 1980, 1913, 1868, 1874,
	1774, 0, 210, 1869, 1870, 1871, 1872, 1873, 1952, 1823,
	1839, 1811, 1926, 1810, 282, 1943, 464, 465, 247, 1786,
	2025, 212, 1787, 2024, 350, 357, 349, 2028, 2026, 460,
	2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 1901,
	426, 321, 0, 207, 0, 425, 2015, 2041, 440, 227,
	1805, 1972, 455, 2330, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 1947, 2038, 361, 394, 234,
	470, 422, 263, 1801, 0, 1804, 1799, 1802, 1800, 1905,
	1906, 2020, 2021, 2022, 1959, 1794, 0, 0, 1998, 1999,
	0, 1892, 2008, 1780, 0, 1976, 0, 0, 0, 0,
	1939, 2036, 1852, 243, 0, 1776, 1777, 1778, 0, 1882,
	1883, 0, 0, 1994, 1993, 1992, 1995, 0, 2029, 2027,
	2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970,
	1942, 1951, 1825, 1884, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 1910, 200, 213, 313, 2037,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 1973, 1917, 0, 1856, 1858, 1857, 1807, 1809, 1808,
	1806, 2040, 347, 2000, 1763, 1771, 1798, 1814, 1821, 1829,
	1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909,
	1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989, 473, 253,
	1890, 1915, 1953, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 0, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 1863, 197, 0, 0,
	203, 0, 204, 206, 1848, 202, 1996, 2032, 1927, 1941,
	1832, 2012, 0, 1974, 449, 1866, 2016, 1815, 1845, 2034,
	1851, 1854, 1935, 1781, 1904, 358, 1842, 1782, 1964, 1765,
	1820, 1769, 1833, 1770, 1817, 260, 1813, 1977, 1907, 2014,
	1886, 1928, 1938, 259, 245, 1896, 1895, 2002, 1831, 1830,
	1933, 1991, 2013, 1885, 0, 0, 479, 0, 2023, 315,
	1988, 0, 477, 424, 340, 0, 0, 1881, 1997, 1902,
	1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929, 2019, 0,
	0, 0, 0, 0, 0, 1165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1925, 2010, 1836, 0, 1876,
	1934, 2039, 1768, 1921, 0, 1773, 1784, 2033, 2003, 1827,
	1828, 264, 0, 0, 0, 0, 0, 0, 0, 1879,
	1903, 1955, 1861, 0, 469, 1940, 1950, 1969, 1853, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 1918, 0, 0, 0, 1789, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1796, 1766, 1824, 1957, 1767, 1764, 341,
	1785, 1971, 2001, 1862, 302, 0, 2007, 1860, 1859, 1944,
	1790, 1981, 2031, 1846, 312, 1788, 196, 1783, 1791, 1844,
	354, 1954, 1962, 0, 199, 314, 1978, 1818, 1835, 246,
	0, 393, 1930, 468, 0, 279, 0, 1911, 392, 316,
	461, 1945, 2009, 467, 1847, 443, 478, 483, 272, 1887,
	235, 421, 262, 255, 1826, 1968, 1772, 285, 376, 250,
	307, 1865, 1936, 1819, 242, 1948, 1919, 1983, 420, 458,
	201, 335, 459, 482, 0, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 1979,
	1961, 1985, 1812, 1792, 1803, 1793, 1834, 2011, 294, 286,
	1986, 1984, 1837, 362, 225, 1900, 1893, 1880, 1958, 472,
	2035, 258, 1963, 474, 0, 407, 406, 1850, 293, 1965,
	0, 0, 386, 0, 303, 205, 1990, 487, 221, 310,
	451, 0, 278, 353, 1932, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 1960, 383, 409, 456, 223,
	427, 0, 0, 0, 399, 0, 0, 2017, 323, 267,
	271, 287, 298, 1931, 390, 428, 475, 1922, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 1956, 217, 238, 429,
	211, 2005, 1980, 1913, 1868, 1874, 1774, 0, 210, 1869,
	1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810,
	282, 1943, 464, 465, 247, 1786, 2025, 212, 1787, 2024,
	350, 357, 349, 2028, 2026, 460, 2006, 1914, 1899, 1897,
	1779, 2004, 1912, 1898, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 1901, 426, 321, 0, 207,
	0, 425, 2015, 2041, 440, 227, 1805, 1972, 455, 0,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 1947, 2038, 361, 394, 234, 470, 422, 263, 1801,
	0, 1804, 1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022,
	1959, 1794, 0, 0, 1998, 1999, 0, 1892, 2008, 1780,
	0, 1976, 0, 0, 0, 0, 1939, 2036, 1852, 243,
	0, 1776, 1777, 1778, 0, 1882, 1883, 0, 0, 1994,
	1993, 1992, 1995, 0, 2029, 2027, 2030, 1795, 1816, 1838,
	1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 1910, 200, 213, 313, 2037, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 1973, 1917, 0,
	1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040, 347, 2000,
	1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855,
	1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967,
	1975, 1982, 1987, 1989, 473, 253, 1890, 1915, 1953, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 4105, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 0, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 1863, 197, 0, 0, 203, 0, 204, 206,
	1848, 202, 1996, 2032, 1927, 1941, 1832, 2012, 0, 1974,
	449, 1866, 2016, 1815, 1845, 2034, 1851, 1854, 1935, 1781,
	1904, 358, 1842, 1782, 1964, 1765, 1820, 1769, 1833, 1770,
	1817, 260, 1813, 1977, 1907, 2014, 1886, 1928, 1938, 259,
	245, 1896, 1895, 2002, 1831, 1830, 1933, 1991, 2013, 1885,
	0, 0, 479, 0, 2023, 315, 1988, 0, 477, 424,
	340, 0, 0, 1881, 1997, 1902, 1966, 1864, 1937, 1797,
	1920, 2018, 1843, 1929, 2019, 0, 0, 0, 0, 0,
	0, 1165, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1925, 2010, 1836, 0, 1876, 1934, 2039, 1768, 1921,
	0, 1773, 1784, 2033, 2003, 1827, 1828, 264, 0, 0,
	0, 0, 0, 0, 0, 1879, 1903, 1955, 1861, 0,
	469, 1940, 1950, 1969, 1853, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 1918, 0, 0,
	0, 1789, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1796,
	1766, 1824, 1957, 1767, 1764, 341, 1785, 1971, 2001, 1862,
	302, 0, 2007, 1860, 1859, 1944, 1790, 1981, 2031, 1846,
	312, 1788, 196, 1783, 1791, 1844, 354, 1954, 1962, 0,
	199, 314, 1978, 1818, 1835, 246, 0, 393, 1930, 468,
	0, 279, 0, 1911, 392, 316, 461, 1945, 2009, 467,
	1847, 443, 478, 483, 272, 1887, 235, 421, 262, 255,
	1826, 1968, 1772, 285, 376, 250, 307, 1865, 1936, 1819,
	242, 1948, 1919, 1983, 420, 458, 201, 335, 459, 482,
	0, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 1979, 1961, 1985, 1812, 1792,
	1803, 1793, 1834, 2011, 294, 286, 1986, 1984, 1837, 362,
	225, 1900, 1893, 1880, 1958, 472, 2035, 258, 1963, 474,
	0, 407, 406, 1850, 293, 1965, 0, 0, 386, 0,
	303, 205, 1990, 487, 221, 310, 451, 0, 278, 353,
	1932, 363, 198, 381, 330, 332, 329, 333, 283, 0,
	0, 1960, 383, 409, 456, 223, 427, 0, 0, 0,
	399, 0, 0, 2017, 323, 267, 271, 287, 298, 1931,
	390, 428, 475, 1922, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 1956, 217, 238, 429, 211, 2005, 1980, 1913,
	1868, 1874, 1774, 0, 210, 1869, 1870, 1871, 1872, 1873,
	1952, 1823, 1839, 1811, 1926, 1810, 282, 1943, 464, 465,
	247, 1786, 2025, 212, 1787, 2024, 350, 357, 349, 2028,
	2026, 460, 2006, 1914, 1899, 1897, 1779, 2004, 1912, 1898,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 1901, 426, 321, 0, 207, 0, 425, 2015, 2041,
	440, 227, 1805, 1972, 455, 0, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 1947, 2038, 361,
	394, 234, 470, 422, 263, 1801, 0, 1804, 1799, 1802,
	1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794, 0, 0,
	1998, 1999, 0, 1892, 2008, 1780, 0, 1976, 0, 0,
	0, 0, 1939, 2036, 1852, 243, 0, 1776, 1777, 1778,
	0, 1882, 1883, 0, 0, 1994, 1993, 1992, 1995, 0,
	2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889, 1891, 1923,
	1924, 1970, 1942, 1951, 1825, 1884, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 1910, 200, 213,
	313, 2037, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 1973, 1917, 0, 1856, 1858, 1857, 1807,
	1809, 1808, 1806, 2040, 347, 2000, 1763, 1771, 1798, 1814,
	1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877, 1878, 1894,
	1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982, 1987, 1989,
	473, 253, 1890, 1915, 1953, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 0, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 1863, 197,
	0, 0, 203, 0, 204, 206, 1848, 202, 1996, 2032,
	1927, 1941, 1832, 2012, 0, 1974, 449, 1866, 2016, 1815,
	1845, 2034, 1851, 1854, 1935, 1781, 1904, 358, 1842, 1782,
	1964, 1765, 1820, 1769, 1833, 1770, 1817, 260, 1813, 1977,
	1907, 2014, 1886, 1928, 1938, 259, 245, 1896, 1895, 2002,
	1831, 1830, 1933, 1991, 2013, 1885, 0, 0, 479, 0,
	2023, 315, 1988, 0, 477, 424, 340, 0, 0, 1881,
	1997, 1902, 1966, 1864, 1937, 1797, 1920, 2018, 1843, 1929,
	2019, 0, 0, 0, 0, 0, 0, 4383, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1925, 2010, 1836,
	0, 1876, 1934, 2039, 1768, 1921, 0, 1773, 1784, 2033,
	2003, 1827, 1828, 264, 0, 0, 0, 0, 0, 0,
	0, 1879, 1903, 1955, 1861, 0, 469, 1940, 1950, 1969,
	1853, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 1918, 0, 0, 0, 1789, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1796, 1766, 1824, 1957, 1767,
	1764, 341, 1785, 1971, 2001, 1862, 302, 0, 2007, 1860,
	1859, 1944, 1790, 1981, 2031, 1846, 312, 1788, 196, 1783,
	1791, 1844, 354, 1954, 1962, 0, 199, 314, 1978, 1818,
	1835, 246, 0, 393, 1930, 468, 0, 279, 0, 1911,
	392, 316, 461, 1945, 2009, 467, 1847, 443, 478, 483,
	272, 1887, 235, 421, 262, 255, 1826, 1968, 1772, 285,
	376, 250, 307, 1865, 1936, 1819, 242, 1948, 1919, 1983,
	420, 458, 201, 335, 459, 482, 0, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 1979, 1961, 1985, 1812, 1792, 1803, 4386, 4387, 4388,
	294, 286, 1986, 1984, 1837, 362, 225, 1900, 1893, 1880,
	1958, 472, 2035, 258, 1963, 474, 0, 407, 406, 1850,
	293, 1965, 0, 0, 386, 0, 303, 205, 1990, 487,
	221, 310, 451, 0, 278, 353, 1932, 363, 198, 381,
	330, 332, 329, 333, 283, 0, 0, 1960, 383, 409,
	456, 223, 427, 0, 0, 0, 399, 0, 0, 2017,
	323, 267, 271, 287, 298, 1931, 390, 428, 475, 1922,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 1956, 217,
	238, 429, 211, 2005, 1980, 1913, 1868, 1874, 1774, 0,
	210, 1869, 1870, 1871, 1872, 1873, 1952, 1823, 1839, 1811,
	1926, 1810, 282, 1943, 464, 465, 247, 1786, 2025, 212,
	1787, 2024, 350, 357, 349, 2028, 2026, 460, 2006, 1914,
	1899, 1897, 1779, 2004, 1912, 1898, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 1901, 426, 321,
	0, 207, 0, 425, 2015, 2041, 440, 227, 1805, 1972,
	455, 0, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 1947, 2038, 361, 394, 234, 470, 422,
	263, 1801, 0, 1804, 1799, 1802, 1800, 1905, 1906, 2020,
	2021, 2022, 1959, 1794, 0, 0, 1998, 1999, 0, 1892,
	2008, 1780, 0, 1976, 0, 0, 0, 0, 1939, 2036,
	1852, 243, 0, 1776, 1777, 1778, 0, 1882, 1883, 0,
	0, 1994, 1993, 1992, 1995, 0, 2029, 2027, 2030, 1795,
	1816, 1838, 1888, 1889, 1891, 1923, 1924, 1970, 1942, 1951,
	1825, 1884, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 1910, 200, 213, 313, 2037, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 1973,
	1917, 0, 1856, 1858, 1857, 1807, 1809, 1808, 1806, 2040,
	347, 2000, 1763, 1771, 1798, 1814, 1821, 1829, 1840, 1841,
	1849, 1855, 1867, 1877, 1878, 1894, 1908, 1909, 1916, 1946,
	1949, 1967, 1975, 1982, 1987, 1989, 473, 253, 1890, 1915,
	1953, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	0, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 1863, 197, 0, 0, 203, 0,
	204, 206, 1848, 202, 1996, 2032, 1927, 1941, 1832, 2012,
	0, 1974, 449, 1866, 2016, 1815, 1845, 2034, 1851, 1854,
	1935, 1781, 1904, 358, 1842, 1782, 1964, 1765, 1820, 1769,
	1833, 1770, 1817, 260, 1813, 1977, 1907, 2014, 1886, 1928,
	1938, 259, 245, 1896, 1895, 2002, 1831, 1830, 1933, 1991,
	2013, 1885, 0, 0, 479, 0, 2023, 315, 1988, 0,
	477, 424, 340, 0, 0, 1881, 1997, 1902, 1966, 1864,
	1937, 1797, 1920, 2018, 1843, 1929, 2019, 0, 0, 0,
	0, 0, 0, 3178, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1925, 2010, 1836, 0, 1876, 1934, 2039,
	1768, 1921, 0, 1773, 1784, 2033, 2003, 1827, 1828, 264,
	0, 0, 0, 0, 0, 0, 0, 1879, 1903, 1955,
	1861, 0, 469, 1940, 1950, 1969, 1853, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 1918,
	0, 0, 0, 1789, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1796, 1766, 1824, 1957, 1767, 1764, 341, 1785, 1971,
	2001, 1862, 302, 0, 2007, 1860, 1859, 1944, 1790, 1981,
	2031, 1846, 312, 1788, 196, 1783, 1791, 1844, 354, 1954,
	1962, 0, 199, 314, 1978, 1818, 1835, 246, 0, 393,
	1930, 468, 0, 279, 0, 1911, 392, 316, 461, 1945,
	2009, 467, 1847, 443, 478, 483, 272, 1887, 235, 421,
	262, 255, 1826, 1968, 1772, 285, 376, 250, 307, 1865,
	1936, 1819, 242, 1948, 1919, 1983, 420, 458, 201, 335,
	459, 482, 0, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 1979, 1961, 1985,
	1812, 1792, 1803, 1793, 1834, 2011, 294, 286, 1986, 1984,
	1837, 362, 225, 1900, 1893, 1880, 1958, 472, 2035, 258,
	1963, 474, 0, 407, 406, 1850, 293, 1965, 0, 0,
	386, 0, 303, 205, 1990, 487, 221, 310, 451, 0,
	278, 353, 1932, 363, 198, 381, 330, 332, 329, 333,
	283, 0, 0, 1960, 383, 409, 456, 223, 427, 0,
	0, 0, 399, 0, 0, 2017, 323, 267, 271, 287,
	298, 1931, 390, 428, 475, 1922, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 1956, 217, 238, 429, 211, 2005,
	1980, 1913, 1868, 1874, 1774, 0, 210, 1869, 1870, 1871,
	1872, 1873, 1952, 1823, 1839, 1811, 1926, 1810, 282, 1943,
	464, 465, 247, 1786, 2025, 212, 1787, 2024, 350, 357,
	349, 2028, 2026, 460, 2006, 1914, 1899, 1897, 1779, 2004,
	1912, 1898, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 1901, 426, 321, 0, 207, 0, 425,
	2015, 2041, 440, 227, 1805, 1972, 455, 0, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 1947,
	2038, 361, 394, 234, 470, 422, 263, 1801, 0, 1804,
	1799, 1802, 1800, 1905, 1906, 2020, 2021, 2022, 1959, 1794,
	0, 0, 1998, 1999, 0, 1892, 2008, 1780, 0, 1976,
	0, 0, 0, 0, 1939, 2036, 1852, 243, 0, 1776,
	1777, 1778, 0, 1882, 1883, 0, 0, 1994, 1993, 1992,
	1995, 0, 2029, 2027, 2030, 1795, 1816, 1838, 1888, 1889,
	1891, 1923, 1924, 1970, 1942, 1951, 1825, 1884, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 1910,
	200, 213, 313, 2037, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 1973, 1917, 0, 1856, 1858,
	1857, 1807, 1809, 1808, 1806, 2040, 347, 2000, 1763, 1771,
	1798, 1814, 1821, 1829, 1840, 1841, 1849, 1855, 1867, 1877,
	1878, 1894, 1908, 1909, 1916, 1946, 1949, 1967, 1975, 1982,
	1987, 1989, 473, 253, 1890, 1915, 1953, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 0, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	1863, 197, 0, 0, 203, 0, 204, 206, 1848, 202,
	1996, 2032, 1927, 1941, 590, 449, 584, 595, 577, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 0, 0,
	1348, 0, 0, 0, 0, 0, 260, 0, 0, 585,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 638, 639, 0, 733, 0,
	734, 736, 737, 738, 739, 0, 0, 0, 735, 2322,
	3396, 3397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	3391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 0, 576, 575, 578, 0, 0, 0,
	341, 0, 0, 0, 583, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 587, 0, 0, 199, 314, 591, 0, 0,
	246, 0, 393, 2319, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 594, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 579, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 582, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 1351, 409, 456,
	223, 427, 580, 581, 588, 589, 592, 593, 596, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 599, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 2320, 2321, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 3408, 1068, 0, 3398, 3399, 3401, 3409,
	3410, 3400, 3402, 3403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3404, 3405, 3406, 3407,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 586,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 0, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 590, 449, 584, 595, 577, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 0, 0, 569,
	0, 0, 0, 0, 0, 260, 0, 0, 585, 0,
	0, 0, 0, 259, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 0, 0, 315,
	0, 0, 477, 424, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 638, 639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 576, 575, 578, 0, 0, 0, 341,
	0, 0, 0, 583, 302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 0, 196, 0, 0, 0,
	354, 587, 0, 0, 199, 314, 591, 0, 0, 246,
	0, 393, 0, 468, 0, 279, 0, 0, 392, 316,
	461, 0, 594, 467, 0, 443, 478, 483, 272, 0,
	235, 421, 262, 255, 0, 0, 0, 285, 376, 250,
	307, 0, 0, 0, 242, 0, 0, 0, 420, 458,
	201, 335, 459, 482, 579, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 286,
	0, 0, 0, 362, 225, 0, 0, 0, 0, 472,
	0, 258, 0, 474, 0, 407, 406, 582, 293, 0,
	0, 0, 386, 0, 303, 205, 0, 487, 221, 310,
	451, 0, 278, 353, 0, 363, 198, 381, 330, 332,
	329, 333, 283, 0, 0, 0, 572, 409, 456, 223,
	427, 580, 581, 588, 589, 592, 593, 596, 323, 267,
	271, 287, 298, 0, 390, 428, 475, 0, 218, 471,
	599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 614, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 0, 217, 238, 429,
	211, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 464, 465, 247, 0, 0, 212, 0, 0,
	350, 357, 349, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 0, 426, 321, 0, 207,
	0, 425, 0, 0, 440, 227, 0, 0, 455, 0,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 0, 0, 361, 394, 234, 470, 422, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 0, 200, 213, 313, 0, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 253, 0, 0, 0, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 586, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 449, 197, 0, 0, 203, 0, 204, 206,
	0, 202, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 259, 245, 0, 0, 0, 0, 0, 0, 0,
	2472, 2476, 0, 173, 479, 191, 0, 315, 0, 499,
	477, 424, 340, 502, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1165, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 2475, 302, 192, 0, 0, 0, 2468, 0, 2469,
	2471, 2470, 312, 1167, 196, 0, 2466, 2474, 354, 0,
	0, 178, 199, 314, 0, 0, 0, 246, 1161, 393,
	0, 468, 498, 279, 0, 0, 392, 316, 461, 0,
	0, 467, 0, 443, 478, 483, 272, 0, 235, 421,
	262, 255, 0, 0, 0, 285, 376, 250, 307, 0,
	0, 0, 242, 0, 0, 0, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 286, 0, 0,
	0, 362, 225, 0, 0, 0, 0, 472, 0, 258,
	0, 474, 181, 407, 406, 0, 293, 0, 182, 171,
	386, 183, 303, 205, 0, 487, 221, 310, 451, 497,
	278, 353, 0, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 0, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 0, 323, 267, 271, 287,
	298, 0, 390, 428, 475, 0, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 0, 217, 238, 429, 211, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	464, 465, 247, 0, 0, 212, 0, 0, 350, 357,
	349, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 0, 426, 321, 0, 207, 0, 425,
	0, 0, 440, 227, 0, 0, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 0,
	0, 361, 394, 234, 470, 422, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 0, 0, 195, 0, 0, 0, 0, 0,
	189, 190, 175, 180, 0, 0, 0, 243, 165, 0,
	0, 0, 166, 0, 0, 168, 169, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 0,
	200, 213, 313, 0, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 253, 0, 0, 0, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	449, 197, 0, 0, 203, 0, 204, 206, 0, 202,
	0, 358, 0, 0, 0, 0, 0, 1479, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 259,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 479, 191, 0, 315, 0, 499, 477, 424,
	340, 502, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 1480, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 500, 0, 1475, 1476, 1474, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 1477, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	302, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 196, 0, 0, 0, 354, 0, 0, 178,
	199, 314, 0, 0, 0, 246, 0, 393, 0, 468,
	498, 279, 0, 0, 392, 316, 461, 0, 0, 467,
	0, 443, 478, 483, 272, 0, 235, 421, 262, 255,
	0, 0, 0, 285, 376, 250, 307, 0, 0, 0,
	242, 0, 0, 0, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 286, 0, 0, 0, 362,
	225, 0, 0, 0, 0, 472, 0, 258, 0, 474,
	181, 407, 406, 0, 293, 0, 182, 171, 386, 183,
	303, 205, 0, 487, 221, 310, 451, 497, 278, 353,
	0, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 0, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 0, 323, 267, 271, 287, 298, 0,
	390, 428, 475, 0, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 0, 217, 238, 429, 211, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 464, 465,
	247, 0, 0, 212, 0, 0, 350, 357, 349, 0,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 0, 426, 321, 0, 207, 0, 425, 0, 0,
	440, 227, 0, 0, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 0, 0, 361,
	394, 234, 470, 422, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	0, 0, 195, 0, 0, 0, 0, 0, 189, 190,
	175, 180, 0, 0, 0, 243, 165, 0, 0, 0,
	166, 0, 0, 168, 169, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 0, 200, 213,
	313, 0, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 253, 0, 0, 0, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 449, 197,
	0, 0, 203, 0, 204, 206, 0, 202, 0, 358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 259, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	479, 191, 0, 315, 0, 499, 477, 424, 340, 502,
	501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 377, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 341, 0, 0, 0, 0, 302, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 312, 1167,
	196, 0, 1163, 0, 354, 0, 0, 178, 199, 314,
	0, 0, 0, 246, 1161, 393, 0, 468, 498, 279,
	0, 0, 392, 316, 461, 0, 0, 467, 0, 443,
	478, 483, 272, 0, 235, 421, 262, 255, 0, 0,
	0, 285, 376, 250, 307, 0, 0, 0, 242, 0,
	0, 0, 420, 458, 201, 335, 459, 482, 167, 273,
	412, 274, 442, 265, 236, 379, 215, 305, 0, 0,
	256, 300, 0, 0, 485, 476, 226, 275, 387, 391,
	368, 222, 450, 336, 346, 239, 241, 240, 216, 413,
	457, 229, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 286, 0, 0, 0, 362, 225, 0,
	0, 0, 0, 472, 0, 258, 0, 474, 181, 407,
	406, 0, 293, 0, 182, 171, 386, 183, 303, 205,
	0, 487, 221, 310, 451, 497, 278, 353, 0, 363,
	198, 381, 330, 332, 329, 333, 283, 176, 184, 0,
	383, 409, 456, 223, 427, 174, 177, 186, 399, 187,
	188, 0, 323, 267, 271, 287, 298, 0, 390, 428,
	475, 0, 218, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 395, 396, 430, 447, 401, 281, 322,
	324, 432, 433, 438, 434, 435, 431, 437, 436, 397,
	398, 308, 439, 209, 441, 466, 230, 408, 411, 486,
	0, 217, 238, 429, 211, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 0, 464, 465, 247, 0,
	0, 212, 0, 0, 350, 357, 349, 0, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 270,
	289, 374, 318, 375, 290, 344, 343, 345, 320, 0,
	426, 321, 0, 207, 0, 425, 0, 0, 440, 227,
	0, 0, 455, 179, 382, 228, 280, 268, 373, 348,
	219, 292, 423, 309, 317, 0, 0, 361, 394, 234,
	470, 422, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 0, 0,
	195, 0, 0, 0, 0, 0, 189, 190, 175, 180,
	0, 0, 0, 243, 165, 0, 0, 0, 166, 0,
	0, 168, 169, 0, 0, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 208, 220, 231, 232, 233,
	257, 254, 252, 261, 269, 0, 0, 295, 304, 0,
	319, 338, 331, 367, 334, 0, 0, 0, 369, 388,
	410, 416, 417, 444, 445, 446, 448, 452, 453, 454,
	0, 0, 0, 378, 249, 0, 200, 213, 313, 0,
	385, 277, 337, 414, 339, 299, 248, 484, 342, 384,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 253,
	0, 0, 0, 214, 224, 237, 251, 266, 0, 276,
	288, 291, 296, 297, 301, 306, 325, 326, 327, 328,
	351, 352, 355, 356, 359, 360, 364, 365, 366, 371,
	372, 380, 185, 389, 400, 402, 403, 404, 405, 415,
	418, 419, 462, 463, 480, 481, 449, 197, 0, 0,
	203, 0, 204, 206, 0, 202, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 259, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 479, 191,
	0, 315, 0, 499, 477, 424, 340, 502, 501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	0, 377, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 341, 0, 0, 0, 0, 302, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 312, 3558, 196, 0,
	0, 3557, 354, 0, 0, 178, 199, 314, 0, 0,
	0, 246, 0, 393, 0, 468, 498, 279, 0, 0,
	392, 316, 461, 0, 0, 467, 0, 443, 478, 483,
	272, 0, 235, 421, 262, 255, 0, 0, 0, 285,
	376, 250, 307, 0, 0, 0, 242, 0, 0, 0,
	420, 458, 201, 335, 459, 482, 167, 273, 412, 274,
	442, 265, 236, 379, 215, 305, 0, 0, 256, 300,
	0, 0, 485, 476, 226, 275, 387, 391, 368, 222,
	450, 336, 346, 239, 241, 240, 216, 413, 457, 229,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	294, 286, 0, 0, 0, 362, 225, 0, 0, 0,
	0, 472, 0, 258, 0, 474, 181, 407, 406, 0,
	293, 0, 182, 171, 386, 183, 303, 205, 0, 487,
	221, 310, 451, 497, 278, 353, 0, 363, 198, 381,
	330, 332, 329, 333, 283, 176, 184, 0, 383, 409,
	456, 223, 427, 174, 177, 186, 399, 187, 188, 0,
	323, 267, 271, 287, 298, 0, 390, 428, 475, 0,
	218, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 396, 430, 447, 401, 281, 322, 324, 432,
	433, 438, 434, 435, 431, 437, 436, 397, 398, 308,
	439, 209, 441, 466, 230, 408, 411, 486, 0, 217,
	238, 429, 211, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 464, 465, 247, 0, 0, 212,
	0, 0, 350, 357, 349, 0, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 270, 289, 374,
	318, 375, 290, 344, 343, 345, 320, 0, 426, 321,
	0, 207, 0, 425, 0, 0, 440, 227, 0, 0,
	455, 179, 382, 228, 280, 268, 373, 348, 219, 292,
	423, 309, 317, 0, 0, 361, 394, 234, 470, 422,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 0, 0, 195, 0,
	0, 0, 0, 0, 189, 190, 175, 180, 0, 0,
	0, 243, 165, 0, 0, 0, 166, 0, 0, 168,
	169, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 208, 220, 231, 232, 233, 257, 254,
	252, 261, 269, 0, 0, 295, 304, 0, 319, 338,
	331, 367, 334, 0, 0, 0, 369, 388, 410, 416,
	417, 444, 445, 446, 448, 452, 453, 454, 0, 0,
	0, 378, 249, 0, 200, 213, 313, 0, 385, 277,
	337, 414, 339, 299, 248, 484, 342, 384, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 253, 0, 0,
	0, 214, 224, 237, 251, 266, 0, 276, 288, 291,
	296, 297, 301, 306, 325, 326, 327, 328, 351, 352,
	355, 356, 359, 360, 364, 365, 366, 371, 372, 380,
	185, 389, 400, 402, 403, 404, 405, 415, 418, 419,
	462, 463, 480, 481, 449, 197, 0, 0, 203, 0,
	204, 206, 0, 202, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 259, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 479, 191, 0, 315,
	0, 499, 477, 424, 340, 502, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3525, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 0, 377,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 0, 0, 0, 302, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 312, 1167, 196, 0, 0, 2474,
	354, 0, 0, 178, 199, 314, 0, 0, 0, 246,
	0, 393, 0, 468, 498, 279, 0, 0, 392, 316,
	461, 0, 0, 467, 0, 443, 478, 483, 272, 0,
	235, 421, 262, 255, 0, 0, 0, 285, 376, 250,
	307, 0, 0, 0, 242, 0, 0, 0, 420, 458,
	201, 335, 459, 482, 167, 273, 412, 274, 442, 265,
	236, 379, 215, 305, 0, 0, 256, 300, 0, 0,
	485, 476, 226, 275, 387, 391, 368, 222, 450, 336,
	346, 239, 241, 240, 216, 413, 457, 229, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 294, 286,
	0, 0, 0, 362, 225, 0, 0, 0, 0, 472,
	0, 258, 0, 474, 181, 407, 406, 0, 293, 0,
	182, 171, 386, 183, 303, 205, 0, 487, 221, 310,
	451, 497, 278, 353, 0, 363, 198, 381, 330, 332,
	329, 333, 283, 176, 184, 0, 383, 409, 456, 223,
	427, 174, 177, 186, 399, 187, 188, 0, 323, 267,
	271, 287, 298, 0, 390, 428, 475, 0, 218, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	396, 430, 447, 401, 281, 322, 324, 432, 433, 438,
	434, 435, 431, 437, 436, 397, 398, 308, 439, 209,
	441, 466, 230, 408, 411, 486, 0, 217, 238, 429,
	211, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 0, 464, 465, 247, 0, 0, 212, 0, 0,
	350, 357, 349, 0, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 270, 289, 374, 318, 375,
	290, 344, 343, 345, 320, 0, 426, 321, 0, 207,
	0, 425, 0, 0, 440, 227, 0, 0, 455, 179,
	382, 228, 280, 268, 373, 348, 219, 292, 423, 309,
	317, 0, 0, 361, 394, 234, 470, 422, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 0, 0, 195, 0, 0, 0,
	0, 0, 189, 190, 175, 180, 0, 0, 0, 243,
	165, 0, 0, 0, 166, 0, 0, 168, 169, 0,
	0, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 208, 220, 231, 232, 233, 257, 254, 252, 261,
	269, 0, 0, 295, 304, 0, 319, 338, 331, 367,
	334, 0, 0, 0, 369, 388, 410, 416, 417, 444,
	445, 446, 448, 452, 453, 454, 0, 0, 0, 378,
	249, 0, 200, 213, 313, 0, 385, 277, 337, 414,
	339, 299, 248, 484, 342, 384, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 473, 253, 0, 0, 0, 214,
	224, 237, 251, 266, 0, 276, 288, 291, 296, 297,
	301, 306, 325, 326, 327, 328, 351, 352, 355, 356,
	359, 360, 364, 365, 366, 371, 372, 380, 185, 389,
	400, 402, 403, 404, 405, 415, 418, 419, 462, 463,
	480, 481, 449, 197, 0, 0, 203, 0, 204, 206,
	0, 202, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 259, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 479, 191, 0, 315, 0, 499,
	477, 424, 340, 502, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2926, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 377, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 302, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 312, 1167, 196, 0, 0, 2474, 354, 0,
	0, 178, 199, 314, 0, 0, 0, 246, 0, 393,
	0, 468, 498, 279, 0, 0, 392, 316, 461, 0,
	0, 467, 0, 443, 478, 483, 272, 0, 235, 421,
	262, 255, 0, 0, 0, 285, 376, 250, 307, 0,
	0, 0, 242, 0, 0, 0, 420, 458, 201, 335,
	459, 482, 167, 273, 412, 274, 442, 265, 236, 379,
	215, 305, 0, 0, 256, 300, 0, 0, 485, 476,
	226, 275, 387, 391, 368, 222, 450, 336, 346, 239,
	241, 240, 216, 413, 457, 229, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 286, 0, 0,
	0, 362, 225, 0, 0, 0, 0, 472, 0, 258,
	0, 474, 181, 407, 406, 0, 293, 0, 182, 171,
	386, 183, 303, 205, 0, 487, 221, 310, 451, 497,
	278, 353, 0, 363, 198, 381, 330, 332, 329, 333,
	283, 176, 184, 0, 383, 409, 456, 223, 427, 174,
	177, 186, 399, 187, 188, 0, 323, 267, 271, 287,
	298, 0, 390, 428, 475, 0, 218, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 396, 430,
	447, 401, 281, 322, 324, 432, 433, 438, 434, 435,
	431, 437, 436, 397, 398, 308, 439, 209, 441, 466,
	230, 408, 411, 486, 0, 217, 238, 429, 211, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 0,
	464, 465, 247, 0, 0, 212, 0, 0, 350, 357,
	349, 0, 0, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 270, 289, 374, 318, 375, 290, 344,
	343, 345, 320, 0, 426, 321, 0, 207, 0, 425,
	0, 0, 440, 227, 0, 0, 455, 179, 382, 228,
	280, 268, 373, 348, 219, 292, 423, 309, 317, 0,
	0, 361, 394, 234, 470, 422, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 0, 0, 195, 0, 0, 0, 0, 0,
	189, 190, 175, 180, 0, 0, 0, 243, 165, 0,
	0, 0, 166, 0, 0, 168, 169, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 208,
	220, 231, 232, 233, 257, 254, 252, 261, 269, 0,
	0, 295, 304, 0, 319, 338, 331, 367, 334, 0,
	0, 0, 369, 388, 410, 416, 417, 444, 445, 446,
	448, 452, 453, 454, 0, 0, 0, 378, 249, 0,
	200, 213, 313, 0, 385, 277, 337, 414, 339, 299,
	248, 484, 342, 384, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 253, 0, 0, 0, 214, 224, 237,
	251, 266, 0, 276, 288, 291, 296, 297, 301, 306,
	325, 326, 327, 328, 351, 352, 355, 356, 359, 360,
	364, 365, 366, 371, 372, 380, 185, 389, 400, 402,
	403, 404, 405, 415, 418, 419, 462, 463, 480, 481,
	449, 197, 0, 0, 203, 0, 204, 206, 0, 202,
	0, 358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 259,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 479, 191, 0, 315, 0, 499, 477, 424,
	340, 502, 501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1481, 1480, 0, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 0, 0, 500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 377, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	302, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	312, 0, 196, 0, 0, 0, 354, 0, 0, 178,
	199, 314, 0, 0, 0, 246, 2276, 393, 0, 468,
	498, 279, 0, 0, 392, 316, 461, 0, 0, 467,
	0, 443, 478, 483, 272, 0, 235, 421, 262, 255,
	0, 0, 0, 285, 376, 250, 307, 0, 0, 0,
	242, 0, 0, 0, 420, 458, 201, 335, 459, 482,
	167, 273, 412, 274, 442, 265, 236, 379, 215, 305,
	0, 0, 256, 300, 0, 0, 485, 476, 226, 275,
	387, 391, 368, 222, 450, 336, 346, 239, 241, 240,
	216, 413, 457, 229, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 294, 286, 0, 0, 0, 362,
	225, 0, 0, 0, 0, 472, 0, 258, 0, 474,
	181, 407, 406, 0, 293, 0, 182, 171, 386, 183,
	303, 205, 0, 487, 221, 310, 451, 497, 278, 353,
	0, 363, 198, 381, 330, 332, 329, 333, 283, 176,
	184, 0, 383, 409, 456, 223, 427, 174, 177, 186,
	399, 187, 188, 0, 323, 267, 271, 287, 298, 0,
	390, 428, 475, 0, 218, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 396, 430, 447, 401,
	281, 322, 324, 432, 433, 438, 434, 435, 431, 437,
	436, 397, 398, 308, 439, 209, 441, 466, 230, 408,
	411, 486, 0, 217, 238, 429, 211, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 0, 464, 465,
	247, 0, 0, 212, 0, 0, 350, 357, 349, 0,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 270, 289, 374, 318, 375, 290, 344, 343, 345,
	320, 0, 426, 321, 0, 207, 0, 425, 0, 0,
	440, 227, 0, 0, 455, 179, 382, 228, 280, 268,
	373, 348, 219, 292, 423, 309, 317, 0, 0, 361,
	394, 234, 470, 422, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	0, 0, 195, 0, 0, 0, 0, 0, 189, 190,
	175, 180, 0, 0, 0, 243, 165, 0, 0, 0,
	166, 0, 0, 168, 169, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 208, 220, 231,
	232, 233, 257, 254, 252, 261, 269, 0, 0, 295,
	304, 0, 319, 338, 331, 367, 334, 0, 0, 0,
	369, 388, 410, 416, 417, 444, 445, 446, 448, 452,
	453, 454, 0, 0, 0, 378, 249, 0, 200, 213,
	313, 0, 385, 277, 337, 414, 339, 299, 248, 484,
	342, 384, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 253, 0, 0, 0, 214, 224, 237, 251, 266,
	0, 276, 288, 291, 296, 297, 301, 306, 325, 326,
	327, 328, 351, 352, 355, 356, 359, 360, 364, 365,
	366, 371, 372, 380, 185, 389, 400, 402, 403, 404,
	405, 415, 418, 419, 462, 463, 480, 481, 0, 197,
	42, 449, 203, 0, 204, 206, 0, 202, 0, 0,
	0, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 88, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 96,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 162, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 681, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 110, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 674, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3516, 0, 0, 0, 0, 0,
	3518, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 2047, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2045, 2047, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 1167, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3369, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 499, 477, 424, 340, 502, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3518, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 498, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 497, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 499, 477, 424, 340, 502, 501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2047, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 498, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 497, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	499, 477, 424, 340, 502, 501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 498, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	497, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 499, 477,
	424, 340, 502, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1203, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 498, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 497, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 499, 477, 424, 340,
	502, 501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 498,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 497, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 162, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3225, 681, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 674,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 479, 191, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 178, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 181, 407, 406, 0, 293,
	0, 182, 171, 386, 183, 303, 205, 0, 487, 221,
	310, 451, 162, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 176, 184, 0, 383, 409, 456,
	223, 427, 174, 177, 186, 399, 187, 188, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	179, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 189, 190, 175, 180, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	681, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 674, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 185,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 547, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 549, 546, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	162, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 2546, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 162, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 2432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 162, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 479,
	191, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 178, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 181, 407, 406,
	0, 293, 0, 182, 171, 386, 183, 303, 205, 0,
	487, 221, 310, 451, 162, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 176, 184, 0, 383,
	409, 456, 223, 427, 174, 177, 186, 399, 187, 188,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 179, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 189, 190, 175, 180, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 2172, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 185, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 0, 197, 0, 0, 203,
	0, 204, 206, 449, 202, 0, 0, 1610, 0, 0,
	0, 0, 0, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 479, 191, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 178, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 167, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 181, 407, 406, 0, 293, 0, 182,
	171, 386, 183, 303, 205, 0, 487, 221, 310, 451,
	162, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 176, 184, 0, 383, 409, 456, 223, 427,
	174, 177, 186, 399, 187, 188, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 179, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 195, 0, 0, 0, 0,
	0, 189, 190, 175, 180, 0, 0, 0, 243, 165,
	0, 0, 0, 166, 0, 0, 168, 169, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 185, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 479, 191, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 156,
	0, 302, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	178, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 167, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 181, 407, 406, 0, 293, 0, 182, 171, 386,
	183, 303, 205, 0, 487, 221, 310, 451, 162, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	176, 184, 0, 383, 409, 456, 223, 427, 174, 177,
	186, 399, 187, 188, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 179, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 0, 0, 195, 0, 0, 0, 0, 0, 189,
	190, 175, 180, 0, 0, 0, 243, 165, 0, 0,
	0, 166, 0, 0, 168, 169, 0, 0, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 185, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 479, 191, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 178, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 167,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 181,
	407, 406, 0, 293, 0, 182, 171, 386, 183, 303,
	205, 0, 487, 221, 310, 451, 162, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 176, 184,
	0, 383, 409, 456, 223, 427, 174, 177, 186, 399,
	187, 188, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 179, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 0,
	0, 195, 0, 0, 0, 0, 0, 189, 190, 175,
	180, 0, 0, 0, 243, 165, 0, 0, 0, 166,
	0, 0, 168, 169, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 185, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 167, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 0, 0, 195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 165, 0, 0, 0, 166, 0, 0,
	168, 169, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 654, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 167, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 165, 0, 0, 0, 166, 0, 0, 168, 169,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 1165, 734, 736, 737, 738, 739,
	0, 0, 0, 735, 2322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 730, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 731, 732, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 4482, 0, 0, 0,
	0, 0, 260, 4480, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 4481, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2998, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 2999, 3000, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 1627,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1626, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 2476, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 2475, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 2080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3572, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 3570, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	3568, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 3566, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 3561, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 3548, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 3546, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 3475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3466, 0,
	0, 0, 0, 0, 1165, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 2596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 2754, 2753, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 449, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 259, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	315, 0, 0, 477, 424, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 0,
	377, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	341, 0, 0, 0, 0, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 312, 0, 196, 0, 0,
	0, 354, 0, 0, 0, 199, 314, 0, 0, 0,
	246, 0, 393, 0, 468, 0, 279, 0, 0, 392,
	316, 461, 0, 0, 467, 0, 443, 478, 483, 272,
	0, 235, 421, 262, 255, 0, 0, 0, 285, 376,
	250, 307, 0, 0, 0, 242, 0, 0, 0, 420,
	458, 201, 335, 459, 482, 0, 273, 412, 274, 442,
	265, 236, 379, 215, 305, 0, 0, 256, 300, 0,
	0, 485, 476, 226, 275, 387, 391, 368, 222, 450,
	336, 346, 239, 241, 240, 216, 413, 457, 229, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 294,
	286, 0, 0, 0, 362, 225, 0, 0, 0, 0,
	472, 0, 258, 0, 474, 0, 407, 406, 0, 293,
	0, 0, 0, 386, 0, 303, 205, 0, 487, 221,
	310, 451, 0, 278, 353, 0, 363, 198, 381, 330,
	332, 329, 333, 283, 0, 0, 0, 383, 409, 456,
	223, 427, 0, 0, 0, 399, 0, 0, 0, 323,
	267, 271, 287, 298, 0, 390, 428, 475, 0, 218,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 396, 430, 447, 401, 281, 322, 324, 432, 433,
	438, 434, 435, 431, 437, 436, 397, 398, 308, 439,
	209, 441, 466, 230, 408, 411, 486, 0, 217, 238,
	429, 211, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 0, 464, 465, 247, 0, 0, 212, 0,
	0, 350, 357, 349, 0, 0, 460, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 270, 289, 374, 318,
	375, 290, 344, 343, 345, 320, 0, 426, 321, 0,
	207, 0, 425, 0, 0, 440, 227, 0, 0, 455,
	0, 382, 228, 280, 268, 373, 348, 219, 292, 423,
	309, 317, 0, 0, 361, 394, 234, 470, 422, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 208, 220, 231, 232, 233, 257, 254, 252,
	261, 269, 0, 0, 295, 304, 0, 319, 338, 331,
	367, 334, 0, 0, 0, 369, 388, 410, 416, 417,
	444, 445, 446, 448, 452, 453, 454, 0, 0, 0,
	378, 249, 0, 200, 213, 313, 0, 385, 277, 337,
	414, 339, 299, 248, 484, 342, 384, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 253, 0, 0, 0,
	214, 224, 237, 251, 266, 0, 276, 288, 291, 296,
	297, 301, 306, 325, 326, 327, 328, 351, 352, 355,
	356, 359, 360, 364, 365, 366, 371, 372, 380, 0,
	389, 400, 402, 403, 404, 405, 415, 418, 419, 462,
	463, 480, 481, 449, 197, 0, 0, 203, 0, 204,
	206, 0, 202, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 259, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 315, 0,
	0, 477, 424, 340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2935, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 377, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 341, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 312, 0, 196, 0, 0, 0, 354,
	0, 0, 0, 199, 314, 0, 0, 0, 246, 0,
	393, 0, 468, 0, 279, 0, 0, 392, 316, 461,
	0, 0, 467, 0, 443, 478, 483, 272, 0, 235,
	421, 262, 255, 0, 0, 0, 285, 376, 250, 307,
	0, 0, 0, 242, 0, 0, 0, 420, 458, 201,
	335, 459, 482, 0, 273, 412, 274, 442, 265, 236,
	379, 215, 305, 0, 0, 256, 300, 0, 0, 485,
	476, 226, 275, 387, 391, 368, 222, 450, 336, 346,
	239, 241, 240, 216, 413, 457, 229, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 286, 0,
	0, 0, 362, 225, 0, 0, 0, 0, 472, 0,
	258, 0, 474, 0, 407, 406, 0, 293, 0, 0,
	0, 386, 0, 303, 205, 0, 487, 221, 310, 451,
	0, 278, 353, 0, 363, 198, 381, 330, 332, 329,
	333, 283, 0, 0, 0, 383, 409, 456, 223, 427,
	0, 0, 0, 399, 0, 0, 0, 323, 267, 271,
	287, 298, 0, 390, 428, 475, 0, 218, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 396,
	430, 447, 401, 281, 322, 324, 432, 433, 438, 434,
	435, 431, 437, 436, 397, 398, 308, 439, 209, 441,
	466, 230, 408, 411, 486, 0, 217, 238, 429, 211,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	0, 464, 465, 247, 0, 0, 212, 0, 0, 350,
	357, 349, 0, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 270, 289, 374, 318, 375, 290,
	344, 343, 345, 320, 0, 426, 321, 0, 207, 0,
	425, 0, 0, 440, 227, 0, 0, 455, 0, 382,
	228, 280, 268, 373, 348, 219, 292, 423, 309, 317,
	0, 0, 361, 394, 234, 470, 422, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	208, 220, 231, 232, 233, 257, 254, 252, 261, 269,
	0, 0, 295, 304, 0, 319, 338, 331, 367, 334,
	0, 0, 0, 369, 388, 410, 416, 417, 444, 445,
	446, 448, 452, 453, 454, 0, 0, 0, 378, 249,
	0, 200, 213, 313, 0, 385, 277, 337, 414, 339,
	299, 248, 484, 342, 384, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 253, 0, 0, 0, 214, 224,
	237, 251, 266, 0, 276, 288, 291, 296, 297, 301,
	306, 325, 326, 327, 328, 351, 352, 355, 356, 359,
	360, 364, 365, 366, 371, 372, 380, 0, 389, 400,
	402, 403, 404, 405, 415, 418, 419, 462, 463, 480,
	481, 449, 197, 0, 0, 203, 0, 204, 206, 0,
	202, 0, 358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	259, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 0, 0, 315, 0, 0, 477,
	424, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 0, 377, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 312, 0, 196, 0, 0, 0, 354, 0, 0,
	0, 199, 314, 0, 0, 0, 246, 0, 393, 0,
	468, 0, 279, 0, 0, 392, 316, 461, 0, 0,
	467, 0, 443, 478, 483, 272, 0, 235, 421, 262,
	255, 0, 0, 0, 285, 376, 250, 307, 0, 0,
	0, 242, 0, 0, 0, 420, 458, 201, 335, 459,
	482, 0, 273, 412, 274, 442, 265, 236, 379, 215,
	305, 0, 0, 256, 300, 0, 0, 485, 476, 226,
	275, 387, 391, 368, 222, 450, 336, 346, 239, 241,
	240, 216, 413, 457, 229, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 294, 286, 0, 0, 0,
	362, 225, 0, 0, 0, 0, 472, 0, 258, 0,
	474, 0, 407, 406, 0, 293, 0, 0, 0, 386,
	0, 303, 205, 0, 487, 221, 310, 451, 0, 278,
	353, 0, 363, 198, 381, 330, 332, 329, 333, 283,
	0, 0, 0, 383, 409, 456, 223, 427, 0, 0,
	0, 399, 0, 0, 0, 323, 267, 271, 287, 298,
	0, 390, 428, 475, 0, 218, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 396, 430, 447,
	401, 281, 322, 324, 432, 433, 438, 434, 435, 431,
	437, 436, 397, 398, 308, 439, 209, 441, 466, 230,
	408, 411, 486, 0, 217, 238, 429, 211, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 464,
	465, 247, 0, 0, 212, 0, 0, 350, 357, 349,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 270, 289, 374, 318, 375, 290, 344, 343,
	345, 320, 0, 426, 321, 0, 207, 0, 425, 0,
	0, 440, 227, 0, 0, 455, 0, 382, 228, 280,
	268, 373, 348, 219, 292, 423, 309, 317, 0, 0,
	361, 394, 234, 470, 422, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 208, 220,
	231, 232, 233, 257, 254, 252, 261, 269, 0, 0,
	295, 304, 0, 319, 338, 331, 367, 334, 0, 0,
	0, 369, 388, 410, 416, 417, 444, 445, 446, 448,
	452, 453, 454, 0, 0, 0, 378, 249, 0, 200,
	213, 313, 0, 385, 277, 337, 414, 339, 299, 248,
	484, 342, 384, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 473, 253, 0, 0, 0, 214, 224, 237, 251,
	266, 0, 276, 288, 291, 296, 297, 301, 306, 325,
	326, 327, 328, 351, 352, 355, 356, 359, 360, 364,
	365, 366, 371, 372, 380, 0, 389, 400, 402, 403,
	404, 405, 415, 418, 419, 462, 463, 480, 481, 449,
	197, 0, 0, 203, 0, 204, 206, 0, 202, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 259, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 315, 0, 0, 477, 424, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	0, 0, 0, 0, 377, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 341, 0, 0, 0, 0, 302,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 312,
	0, 196, 0, 0, 0, 354, 0, 0, 0, 199,
	314, 0, 0, 0, 246, 0, 393, 0, 468, 0,
	279, 0, 0, 392, 316, 461, 0, 0, 467, 0,
	443, 478, 483, 272, 0, 235, 421, 262, 255, 0,
	0, 0, 285, 376, 250, 307, 0, 0, 0, 242,
	0, 0, 0, 420, 458, 201, 335, 459, 482, 0,
	273, 412, 274, 442, 265, 236, 379, 215, 305, 0,
	0, 256, 300, 0, 0, 485, 476, 226, 275, 387,
	391, 368, 222, 450, 336, 346, 239, 241, 240, 216,
	413, 457, 229, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 294, 286, 0, 0, 0, 362, 225,
	0, 0, 0, 0, 472, 0, 258, 0, 474, 0,
	407, 406, 0, 293, 0, 0, 0, 386, 0, 303,
	205, 0, 487, 221, 310, 451, 0, 278, 353, 0,
	363, 198, 381, 330, 332, 329, 333, 283, 0, 0,
	0, 383, 409, 456, 223, 427, 0, 0, 0, 399,
	0, 0, 0, 323, 267, 271, 287, 298, 0, 390,
	428, 475, 0, 218, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 396, 430, 447, 401, 281,
	322, 324, 432, 433, 438, 434, 435, 431, 437, 436,
	397, 398, 308, 439, 209, 441, 466, 230, 408, 411,
	486, 0, 217, 238, 429, 211, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 0, 464, 465, 247,
	0, 0, 212, 0, 0, 350, 357, 349, 0, 0,
	460, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	270, 289, 374, 318, 375, 290, 344, 343, 345, 320,
	0, 426, 321, 0, 207, 0, 425, 0, 0, 440,
	227, 0, 0, 455, 0, 382, 228, 280, 268, 373,
	348, 219, 292, 423, 309, 317, 0, 0, 361, 394,
	234, 470, 422, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 208, 220, 231, 232,
	233, 257, 254, 252, 261, 269, 0, 0, 295, 304,
	0, 319, 338, 331, 367, 334, 0, 0, 0, 369,
	388, 410, 416, 417, 444, 445, 446, 448, 452, 453,
	454, 0, 0, 0, 378, 249, 0, 200, 213, 313,
	0, 385, 277, 337, 414, 339, 299, 248, 484, 342,
	384, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	253, 0, 0, 0, 214, 224, 237, 251, 266, 0,
	276, 288, 291, 296, 297, 301, 306, 325, 326, 327,
	328, 351, 352, 355, 356, 359, 360, 364, 365, 366,
	371, 372, 380, 0, 389, 400, 402, 403, 404, 405,
	415, 418, 419, 462, 463, 480, 481, 449, 197, 0,
	0, 203, 0, 204, 206, 0, 202, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 259, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 315, 0, 0, 477, 424, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 377, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 341, 0, 0, 0, 0, 302, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 312, 0, 196,
	0, 0, 0, 354, 0, 0, 0, 199, 314, 0,
	0, 0, 246, 0, 393, 0, 468, 0, 279, 0,
	0, 392, 316, 461, 0, 0, 467, 0, 443, 478,
	483, 272, 0, 235, 421, 262, 255, 0, 0, 0,
	285, 376, 250, 307, 0, 0, 0, 242, 0, 0,
	0, 420, 458, 201, 335, 459, 482, 0, 273, 412,
	274, 442, 265, 236, 379, 215, 305, 0, 0, 256,
	300, 0, 0, 485, 476, 226, 275, 387, 391, 368,
	222, 450, 336, 346, 239, 241, 240, 216, 413, 457,
	229, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 286, 0, 0, 0, 362, 225, 0, 0,
	0, 0, 472, 0, 258, 0, 474, 0, 407, 406,
	0, 293, 0, 0, 0, 386, 0, 303, 205, 0,
	487, 221, 310, 451, 0, 278, 353, 0, 363, 198,
	381, 330, 332, 329, 333, 283, 0, 0, 0, 383,
	409, 456, 223, 427, 0, 0, 0, 399, 0, 0,
	0, 323, 267, 271, 287, 298, 0, 390, 428, 475,
	0, 218, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 396, 430, 447, 401, 281, 322, 324,
	432, 433, 438, 434, 435, 431, 437, 436, 397, 398,
	308, 439, 209, 441, 466, 230, 408, 411, 486, 0,
	217, 238, 429, 211, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 0, 464, 465, 247, 0, 0,
	212, 0, 0, 350, 357, 349, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 270, 289,
	374, 318, 375, 290, 344, 343, 345, 320, 0, 426,
	321, 0, 207, 0, 425, 0, 0, 440, 227, 0,
	0, 455, 0, 382, 228, 280, 268, 373, 348, 219,
	292, 423, 309, 317, 0, 0, 361, 394, 234, 470,
	422, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 208, 220, 231, 232, 233, 257,
	254, 252, 261, 269, 0, 0, 295, 304, 0, 319,
	338, 331, 367, 334, 0, 0, 0, 369, 388, 410,
	416, 417, 444, 445, 446, 448, 452, 453, 454, 0,
	0, 0, 378, 249, 0, 200, 213, 313, 0, 385,
	277, 337, 414, 339, 299, 248, 484, 342, 384, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 253, 0,
	0, 0, 214, 224, 237, 251, 266, 0, 276, 288,
	291, 296, 297, 301, 306, 325, 326, 327, 328, 351,
	352, 355, 356, 359, 360, 364, 365, 366, 371, 372,
	380, 0, 389, 400, 402, 403, 404, 405, 415, 418,
	419, 462, 463, 480, 481, 42, 197, 0, 0, 203,
	0, 204, 206, 0, 202, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 71, 0, 0, 0, 4294, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4287, 0,
	0, 0, 0, 4635, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 4632, 0, 0, 0,
	0, 4294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 71, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 62, 92, 91, 0, 0, 0, 89, 57,
	0, 0, 0, 71, 4294, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4290, 4287, 0, 0, 0, 0,
	4624, 0, 0, 0, 4299, 4291, 4292, 4293, 4297, 4298,
	4295, 0, 4296, 0, 4300, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 69, 70, 0, 4290, 0,
	0, 0, 4287, 60, 0, 0, 0, 4621, 4299, 4291,
	4292, 4293, 4297, 4298, 4295, 0, 4296, 0, 4300, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4288, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 4301, 4289, 0, 66, 67, 73, 0, 74, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 4301, 4289, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 69, 70,
	0, 4290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4299, 4291, 4292, 4293, 4297, 4298, 4295, 0, 4296,
	0, 4300, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 69, 70, 0, 4290, 0,
	60, 0, 0, 42, 0, 0, 0, 0, 4299, 4291,
	4292, 4293, 4297, 4298, 4295, 0, 4296, 71, 4300, 0,
	0, 0, 0, 78, 93, 79, 0, 47, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 89,
	0, 59, 61, 0, 0, 4294, 0, 87, 4301, 4289,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4287, 0, 0, 0,
	0, 4535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 4301, 4289, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 71, 0, 49, 90, 56, 55, 58, 93, 0,
	0, 47, 96, 0, 0, 0, 0, 0, 4288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 42, 0, 0, 0, 4294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	4287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 89, 4290, 0, 0, 0, 0, 4294, 0, 0,
	0, 0, 4299, 4291, 4292, 4293, 4297, 4298, 4295, 0,
	4296, 0, 4300, 0, 0, 0, 85, 78, 4287, 79,
	0, 0, 0, 4527, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 84, 0, 0, 0, 96, 0, 0, 0,
	0, 60, 4288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 85, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 49, 90, 56, 55, 58,
	93, 0, 0, 47, 96, 0, 0, 0, 0, 0,
	4288, 0, 0, 0, 0, 0, 0, 0, 0, 4301,
	4289, 0, 66, 67, 73, 0, 74, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 89, 4290, 0, 0, 0,
	0, 4294, 0, 0, 0, 0, 4299, 4291, 4292, 4293,
	4297, 4298, 4295, 4532, 4296, 0, 4300, 0, 0, 0,
	0, 78, 4287, 79, 0, 0, 0, 4525, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	0, 69, 70, 0, 4290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4299, 4291, 4292, 4293, 4297, 4298,
	4295, 0, 4296, 0, 4300, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 84, 71, 0, 0, 96, 0,
	0, 0, 93, 60, 4288, 47, 0, 0, 0, 0,
	0, 0, 0, 4301, 4289, 0, 66, 67, 73, 0,
	74, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 89, 0, 59,
	61, 0, 0, 4294, 0, 87, 0, 0, 71, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 47, 0,
	0, 0, 0, 0, 4287, 0, 0, 0, 0, 4403,
	0, 4301, 4289, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4290, 0,
	89, 0, 0, 0, 0, 0, 4294, 0, 4299, 4291,
	4292, 4293, 4297, 4298, 4295, 0, 4296, 0, 4300, 0,
	0, 0, 0, 78, 0, 79, 0, 4287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 49, 90, 56, 55, 58, 0, 60, 0, 0,
	96, 0, 0, 0, 0, 0, 4288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4288,
	0, 0, 0, 0, 0, 4301, 4289, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 62, 92, 91,
	0, 85, 0, 0, 57, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4290, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	4299, 4291, 4292, 4293, 4297, 4298, 4295, 0, 4296, 0,
	4300, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	69, 70, 0, 4290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4299, 4291, 4292, 4293, 4297, 4298, 4295,
	0, 4296, 0, 4300, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4301, 4289, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4301, 4289, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 61, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	6195, -1000, -501, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2969, -1000, 2969, 298, -1000, 455, -1000, 1425, 826,
	-1000, -1000, -1000, -1000, -1000, 711, 234, 60649, 1146, 54737,
	80575, -274, 5099, 79837, 145, -1000, 145, 440, 56951, 882,
	994, 79099, 2791, 2123, 147, 9, 8, 232, 40712, 1052,
	306, 174, 213, 183, 160, 1361, -1000, 62125, 914, -1000,
	316, -1000, -1000, -1000, -1000, -1000, 56213, 3038, 3052, 3038,
	-1000, 2919, 2965, -1000, -1000, 2919, 2286, 2286, 298, -1000,
	62125, 15018, -1000, -1000, -1000, -1000, -1000, 32406, -1000, 1351,
	-1000, 61387, 42926, 2969, -1000, 1131, 1119, -100, 1051, 1051,
	842, 1051, 1051, -467, 1144, -1000, 892, 1653, -1000, -1000,
	-1000, -1000, 1648, 61387, 68029, 1140, 1052, 1052, 1052, 1052,
	1052, 1052, 1052, 1052, 1052, 53999, 61387, -1000, 1315, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 61387,
	3021, 3018, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2601, 2599, 53261, 533, 2850, 1700, 309,
	1700, -1000, -1000, 1686, -1000, 961, 960, 959, 957, 932,
	955, -6, 1668, 1721, 2937, -1000, 2208, 2919, 2919, 1668,
	-1000, 950, -1000, -1000, -1000, -1000, -1000, -1000, 1405, -1000,
	-1000, 1740, 1740, 520, 1108, 963, 976, 963, 2898, 1646,
	2849, 2846, 2129, 2845, 883, 2842, 2595, -1000, 1313, -1000,
	-1000, 35, -1000, 2117, 61387, -1000, -1000, 2045, 2044, 672,
	2472, 1217, 2643, -1000, -1000, 684, 695, 2580, 808, 2580,
	2580, 2580, 430, 2580, 2580, 7, 2580, 2580, 2580, 336,
	2580, 340, 2580, 2580, 2580, 2580, 2580, -1000, 2270, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 39963, 2880, 238, -1000, -211, 193, 2911, 386, -1000,
	-1000, -1000, 326, 1351, 62863, 2540, -1000, 2208, -1000, -1000,
	-1000, 2557, 2208, -1000, 2098, 1136, 1052, 816, -1000, 565,
	-1000, -1000, -1000, 2879, 2208, 46619, -1000, -1000, 1284, -1000,
	2208, 2208, 1351, 2920, 1351, 1351, 2917, 2909, 1351, 2826,
	29382, 19554, 2694, 1781, -1000, -1000, -1000, -1000, 2286, 1351,
	3016, -1000, 42188, 1312, -1000, 19554, 2384, 2208, 2208, -1000,
	1206, 1283, -1000, 1162, 1270, -1000, -1000, 20310, 20310, 20310,
	20310, 20310, 20310, 20310, -1000, -1000, -1000, -1000, -1000, -1000,
	2240, 2239, 2236, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2208, 1304, 1286, 1281, 2208, 2208, 2208,
	2208, 2208, -1000, 18042, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2208, 2208, 2208, 2208,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208,
	2208, 19554, 2208, 2208, 2208, 2208, 2208, -1000, 2208, 2208,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208,
	2208, 2208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2208,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2208, 2208, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2208, 1055,
	1055, 59911, 2548, -37, 31650, -1000, -1000, -1000, -1000, 30138,
	65815, 1552, -1000, -1000, -1000, -1000, 2833, -1000, -1000, 1275,
	1270, 1206, 1202, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2969, 297, -1000, 2428, -1000, -1000, 11070, 11070, 11070,
	11070, 11070, 11070, 49571, -1000, -1000, -1000, 2594, 2919, -1000,
	1051, 1051, 886, 2116, 1708, 2115, 79099, 79099, 1051, -1000,
	840, 68029, 68029, -374, 1051, 880, 68029, 832, 2544, 1106,
	2543, 1105, 2267, 1052, 77623, 61387, 2114, 2113, 79099, 79099,
	68029, 68029, 79099, -1000, -1000, -1000, 28626, -1000, 1342, 2542,
	48833, 48095, 52523, 52523, -1000, -1000, -1000, 949, -1000, 1700,
	-1000, 6653, 19554, 1051, 1051, 61387, 61387, 61387, 61387, 61387,
	-1000, 61387, -1000, -1000, 1700, -1000, -1000, 1700, 1700, 1700,
	1668, 3012, 1668, -1000, -1000, -1000, 1700, 79837, 79837, 19554,
	-1000, 20310, 67291, 1412, -1000, -1000, 1700, -1000, 79837, 1012,
	1012, 1012, -1000, 2112, 509, 299, -1000, 963, 297, -1000,
	-1000, 2799, 2904, 2903, 2111, 883, 883, -1000, 2245, 883,
	2531, -1000, 1645, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 883, 2898, 18798, 77623, -482,
	-1000, -1000, 2541, -1000, 507, -1000, -1000, 971, 2642, 971,
	4809, 68029, 68029, 68029, -1000, 2580, 77623, -1000, 2580, 2580,
	2580, 6, 2580, 2580, -1000, -1000, 2580, -1000, -1000, -1000,
	2580, -1000, -1000, 2580, -1000, -1000, -1000, 2580, 2580, -1000,
	2580, 2580, -1000, -1000, -1000, -1000, -1000, 68029, 696, 2433,
	2524, 2641, -1000, 1102, 221, -26, 123, -1000, -1000, -1000,
	-1000, -1000, -1000, 325, 322, 312, 303, -1000, -1000, -1000,
	-1000, 301, 295, -1000, -1000, 59165, 59165, 947, -1000, 2540,
	62863, 2899, 24090, 914, -1000, 19554, 2858, -1000, 2858, -1000,
	-1000, -1000, 373, -1000, 61387, 68029, 79099, 56213, 56213, 56213,
	56213, -1000, 2689, 2686, -1000, 2679, 2658, 2655, 517, 62863,
	-1000, 2879, 298, 2396, 2286, 2286, 565, 46619, -1000, 2208,
	-1000, 62863, 1424, 1129, 1128, 1070, 2799, -1000, -1000, -1000,
	-1000, -1000, 2106, 2081, 1913, 14262, 20310, -1000, -1000, -1000,
	-1000, -1000, 3038, 3038, -1000, -1000, -1000, -1000, -1000, -1000,
	1751, 3033, 1568, 2467, -1000, -1000, -1000, 2539, -1000, 1733,
	1269, 1889, 1836, -1000, -1000, -1000, -1000, -1000, -1000, 15018,
	-1000, -1000, 61387, -1000, 19554, 19554, 19554, 1833, -1000, 45878,
	-1000, -1000, -1000, 24846, 1555, 20310, 1854, 1589, 20310, 20310,
	20310, 20310, 20310, 20310, 20310, 20310, 20310, 20310, 20310, 20310,
	20310, 20310, 20310, 1455, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2110, -1000, 297, 37698, 14262, 37698, 629, 629,
	77623, 1378, 1378, 1378, 1378, 1378, 1378, 11839, -1000, -1000,
	-1000, 2897, 36186, 77623, 37698, 2897, 2897, 2897, 2897, 2897,
	2394, 18042, 1599, 62125, 56213, 14262, 14262, 14262, 2286, 19554,
	19554, 14262, 20310, 14262, 17286, 16530, 21822, 14262, 14262, 2897,
	1676, 1599, 27870, 14262, -1000, 2286, -1000, -1000, -1000, -1000,
	2027, -1000, -1000, -249, -249, -249, 408, 14262, 14262, 14262,
	14262, 2286, 2286, 14262, 14262, 14262, 14262, 14262, 14262, 2286,
	2286, 2286, 14262, 14262, 14262, 14262, 14262, 14262, 14262, 14262,
	14262, 14262, 14262, 14262, -1000, -1000, -1000, 2024, 58427, 56213,
	61387, 2465, 2413, -1000, -1000, 1268, 30894, 2519, -1000, -27,
	-76, -37, -1000, -1000, 1250, -1000, -1000, -1000, -1000, 15774,
	-1000, -1000, -1000, 25602, 2919, 297, -1000, 41450, -1000, 21,
	-1000, -1000, -1000, 2569, -1000, 2572, 88, 550, 2572, 69,
	66, 2572, 2572, 2572, -1000, -1000, -1000, -1000, 78, -1000,
	-1000, -1000, -1000, -1000, 2593, 2592, -1000, 2569, 2569, 2569,
	-1000, -1000, -1000, -1000, -1000, -1000, 2572, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2578, 551, 2570, 2570, 2570,
	2570, 2570, -1000, -1000, -1000, -1000, -1000, 1026, -1000, -1000,
	-1000, 19554, 2826, 2825, 77623, 61387, 1117, -468, 880, 2858,
	2876, 2858, 940, -1000, 1258, 2588, 79099, 903, 2476, -1000,
	569, 2107, 1177, 57689, -1000, -1000, -1000, -1000, -1000, 61387,
	61387, 68029, 68029, 68029, 61387, 2640, 2537, -1000, -1000, -1000,
	-1000, -1000, 2535, -1000, 2107, -1000, -1000, 1257, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -440, -441, 61387, -1000, -1000, -1000, -1000, -1000,
	-1000, 2534, -1000, 2534, -1000, -1000, -1000, 2244, 1599, 2109,
	2108, 2898, -1000, -1000, -1000, -1000, 1674, -1000, -1000, -1000,
	-1000, 1700, 61387, 2898, -1000, -1000, -1000, 1599, 1348, 2598,
	2208, 2286, -1000, -1000, -1000, 137, -1000, 135, -1000, -1000,
	-1000, 2105, -1000, -1000, -1000, -1000, -1000, 299, -1000, 20310,
	2798, 2796, -1000, 2531, 2531, -1000, 2531, 883, 63601, 2531,
	-1000, -1000, 2391, -1000, 254, 2242, 61387, -1000, 62863, 34,
	-1000, -53, 76147, -1000, -1000, -1000, 971, 76147, -1000, 336,
	273, -1000, 1100, -1000, 2389, -1000, -1000, -1000, -1000, 2580,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	971, 543, 2528, 971, 68029, 68029, 255, 2527, -1000, 1641,
	1639, -1000, -1000, 121, -1000, -1000, -1000, -1000, 2935, -1000,
	-1000, 252, -34, -1000, 252, 2241, 20310, -1000, 2208, 2358,
	-1000, 1249, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2208,
	-1000, -1000, -1000, -1000, 2832, 1552, 1552, 1552, 358, 569,
	2639, 2585, 2638, 546, -1000, -1000, -1000, -1000, 2685, -1000,
	2662, 2659, -1000, -1000, -1000, 2561, 62863, 56213, -1000, -1000,
	-1000, 2286, 77623, 1205, -1000, 62863, 2208, 2208, 2208, 20310,
	20310, 1563, -1000, 20310, 20310, 1560, -1000, 20310, 20310, 1559,
	-1000, 2286, 2525, -1000, -1000, 1599, 1235, 4884, -1000, 76885,
	-240, 2700, 29382, 29382, 19554, -1000, -1000, -1000, 25602, 2936,
	-1000, 2714, 2712, 3010, -1000, -1000, -1000, 1555, 1642, 1601,
	-1000, -1000, 1761, -1000, -1000, -1000, -1000, -1000, 1228, 2208,
	-1000, -1000, -1000, -1000, -1000, -1000, 2442, -1000, -1000, -1000,
	-1000, 1854, 20310, 20310, 20310, 1348, 2442, 5148, 1939, 1755,
	1378, 1587, 1587, 1376, 1376, 1376, 1376, 1376, 1919, 1919,
	-1000, -1000, -1000, -1000, 2286, -1000, 2385, -1000, -1000, 2240,
	2239, 2236, -1000, -1000, -1000, -1000, 14262, -1000, -1000, -1000,
	-1000, -1000, -1000, 14262, 14262, 14262, 14262, 14262, 19554, -1000,
	2385, 2385, 2385, -1000, 1637, 1947, 2275, 5031, 2385, 1459,
	3009, 2385, 1338, 3008, 2385, 2203, 20310, 20310, 20310, 2385,
	2385, 14262, 1661, -1000, 19554, 2286, 1274, 2286, 1206, 1202,
	2385, -1000, 2286, 2523, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2522, 3007, 2521, -1000, -1000,
	-1000, -1000, 2385, 2286, 2385, 2385, -119, -119, 2286, 2385,
	2286, 2385, 2385, 2286, -119, -119, -119, 2385, 2385, 2385,
	2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385, -1000,
	2286, 1517, 61387, -1000, 2466, 1517, 2400, 56213, -1000, -1000,
	56213, 79837, 27114, -1000, 30138, -37, -32, -1000, -1000, 2519,
	-1000, -1000, 1585, -1000, -1000, 2235, 1599, -1000, 1183, 2826,
	7726, -1000, -1000, -1000, -1000, 2579, 45140, -1000, 2745, 1294,
	1294, 1294, 66553, 78361, 2743, -1000, -1000, 1949, 17, -1000,
	-1000, -1000, 2042, -1000, 368, 519, 2572, -1000, -1000, -1000,
	2572, 2572, -1000, 2572, 2572, -1000, -1000, -1000, -1000, 2234,
	2234, -1000, -1000, -1000, -1000, -1000, 2041, -1000, 2578, -1000,
	2036, -1000, -1000, -1000, -1000, 1949, 1949, 1949, 1949, 1949,
	-1000, 1903, -1000, 2586, 2208, 61387, -375, -1000, -1000, -1000,
	2982, -1000, -1000, 77623, 65077, 2637, -1000, -1000, 342, 68029,
	566, 766, 304, -1000, 1703, -1000, -1000, 1095, -1000, 1093,
	-1000, -1000, 1169, 61387, 61387, 68029, 77623, 2636, 2635, -1000,
	52523, -1000, -1000, -1000, -1000, 2975, 2104, 2103, -1000, 1668,
	1700, -1000, 20310, 68029, -1000, 928, -1000, -1000, -1000, -1000,
	2442, 20310, 20310, -1000, -1000, -1000, -1000, 1749, -1000, -1000,
	-1000, -1000, -51, -1000, -1000, 1090, 1179, 1175, 76147, 1085,
	-1000, 371, 68029, -1000, 77623, -1000, 76147, 429, 542, 76147,
	1203, 3006, 2518, -1000, 1636, 1633, 1624, 1609, 1602, 1600,
	1593, 1581, 221, 2577, 2576, -1000, -1000, 266, -1000, 2805,
	-1000, -1000, 2442, -1000, -1000, 24090, 37698, -1000, 1552, 1556,
	-1000, 1538, 2233, 1112, 1776, -1000, -1000, -1000, 2964, 1251,
	1165, 1030, 1552, 1032, 420, 1082, 2810, 2804, 603, 557,
	-1000, 1552, 1032, 1443, 743, -1000, 1548, 1546, 1543, 1541,
	1540, 1537, 1530, 1529, 660, -376, -1000, 1552, 1552, 1552,
	1552, 1552, 1552, 1552, 1552, -171, -174, 1552, 1552, 1552,
	1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
	1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
	33162, 1552, 1552, -287, -1000, 1153, 822, -1000, -1000, 19554,
	2573, -1000, 19554, -1000, -1000, -1000, -1000, -1000, 77623, 2561,
	565, -1000, 2355, -1000, -1000, 1205, 77623, 77623, 77623, 4982,
	2102, 2208, 4926, 2010, 2208, 4905, 1896, 2208, 2879, 14262,
	23334, 2231, 2515, 2230, 2229, -1000, 29, -1000, 2697, -1000,
	-1000, -1000, 61387, -1000, -1000, -1000, -1000, 2975, 55475, 15018,
	-1000, -1000, -1000, -1000, 35430, 14262, -1000, 1348, 2442, 4820,
	-1000, 20310, -1000, -1000, 2286, 2385, 2385, 2385, 2385, 2385,
	1599, -1000, -1000, -1000, 257, 1455, 257, -1000, 1455, 20310,
	-1000, 20310, 20310, -1000, 20310, 20310, -1000, -1000, 20310, 4799,
	4767, 2600, -279, -1000, 2434, 1638, -1000, 19554, 1988, -1000,
	-1000, -1000, -1000, -1000, 20310, 20310, 20310, 20310, -1000, -1000,
	-1000, -1000, -1000, 75409, -1000, -119, -119, -119, -119, -119,
	-119, -1000, -1000, -1000, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -1000, 419, 2208, -1000,
	26358, 2975, 56213, 2408, 2408, -1000, 1171, -1000, -1000, -1000,
	-49, -83, -1000, -1000, -1000, -1000, -1000, 37698, -1000, -1000,
	-1000, 5835, -1000, 1552, 1552, 1552, 374, 1552, 1552, 1552,
	1552, 1552, -187, -210, 1552, 1552, 1552, 1552, 1552, 1552,
	1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552, 1552,
	1552, 153, 1552, 1552, 1552, 1552, 1552, 1552, 33162, 1552,
	1552, -377, 50309, 1199, 1016, -1000, -1000, -1000, 78361, 78361,
	78361, -1000, 78361, 78361, -1000, -1000, -1000, -1000, 51047, -1000,
	-1000, 1767, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2208, -493, 2033, 61387, -1000, 2829, 1499, 39966, 3030, -1000,
	2742, -1000, 2741, 2738, 2227, -1000, -1000, 2365, 2342, 2327,
	-1000, 2572, -1000, -1000, -1000, -1000, -1000, 2383, -1000, 2381,
	2513, -1000, 2378, -429, 2634, 77623, 2894, 2208, 2032, 2631,
	-1000, -1000, -1000, -1000, 2318, 2512, -1000, 11070, 77623, 77623,
	77623, 794, -287, 718, -1000, 68029, 391, 569, 802, 2054,
	-405, 2863, 61387, 68029, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 74671, 74671, -1000, -1000, 19554, -1000, -1000, 2898, -1000,
	2442, 2107, -1000, -1000, 2442, 2442, 1517, 1135, -1000, 68029,
	1411, 73933, 1078, 68029, 423, 244, -1000, 3005, 3004, 421,
	2998, -1000, 258, 68029, 255, 2220, 2219, 2216, 2028, 2026,
	2019, 2014, 2011, -1000, 61387, 61387, 2213, -1000, -1000, -1000,
	1497, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1507, 8476,
	1776, 1484, 1475, 1472, 1466, -1000, 170, 47357, 1051, 1220,
	1034, -1000, -1000, 2208, -1000, 44402, 51047, 51047, 51047, 1052,
	2736, 2733, 77623, 51047, 51047, 77623, 51047, 1042, 2097, 2822,
	1552, 75, -1000, -1000, -1000, 73195, -1000, 72457, 861, 51785,
	51047, 77623, 61387, 43664, -1000, -1000, -1000, -1000, 71719, 2006,
	77623, 77623, 70981, 70243, 69505, 68767, -1000, -248, 993, 19554,
	993, 1932, 1932, 2212, 2210, 2207, 1552, 1552, 209, 1932,
	2206, 209, 1932, 39210, 2205, 991, 993, 993, 993, 1932,
	1932, 1932, 1932, 2204, 405, 1955, 2202, 1932, 2130, 2118,
	993, -1000, -237, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1932, 2208, -1000, 571, 919, 1076,
	956, -3, 1599, 77623, 1599, 2374, -1000, -1000, 1245, 77623,
	-1000, 2289, 2289, 2289, 20310, 20310, 20310, 20310, 20310, 20310,
	20310, 20310, 20310, 62863, -1000, -1000, 1167, 0, 77623, -1000,
	32, -1000, -1000, -1000, 2973, -1000, 2511, -1000, -1000, -1000,
	2286, -1000, 20310, 2442, -1000, -119, -119, -119, -119, -119,
	2286, 2569, 2569, 2569, -1000, 2569, 2570, 96, -1000, -1000,
	-1000, 2569, 114, 2569, 113, -1000, 2286, 2286, 2286, 2249,
	4742, 4181, 3890, 3413, 2249, 20310, 20310, 20310, 2208, -113,
	-1000, 1599, 19554, 3114, 2837, 2249, 2249, -1000, -1000, 2095,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2630,
	2630, 26358, 2879, -1000, 22578, -1000, 914, -1000, -1000, 77623,
	2448, -1000, 1552, 1330, 1552, 1552, 2969, 2408, -1000, -1000,
	1409, -1000, -1000, -1000, -1000, 993, 993, 993, 1552, 2821,
	1552, 1932, 1932, 2201, 2199, 2197, 1552, 1552, 209, 1932,
	2196, 209, 1932, 39210, 2193, 991, 993, 993, 993, 1932,
	1932, 1932, 1932, 2192, 405, -1000, 1817, 2191, 1932, 2086,
	2029, 993, -1000, -238, 1932, 2208, -250, 2372, -1000, 2569,
	2569, 2732, 1294, -1000, -1000, -1000, -1000, -1000, -1000, 2568,
	-1000, -1000, 20310, 2892, -1000, 2567, 1457, -1000, -1000, -1000,
	-1000, 629, 2188, -1000, -1000, 20310, -1000, -1000, 2208, 2208,
	2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208, 2208,
	2208, -71, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2187, -1000, 2004, -1000, 1966, -1000, -1000, -1000, 61387,
	-1000, -1000, 2891, -1000, 61387, 230, 65077, -1000, 11070, 11070,
	11070, -3, 553, -1000, 1734, -1000, -1000, -1000, 2185, 2184,
	2183, 2107, 578, 1729, 527, -1000, 2888, 2878, 2182, 2181,
	2180, 2179, 1964, -1000, -1000, 2597, 77623, 2510, -1000, 1599,
	1700, 32, 61387, 244, -1000, -1000, -1000, 68029, 244, -1000,
	-1000, 538, 68029, 68029, 2994, 68029, 582, 1203, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2370, 2364, -1000,
	-1000, -1000, -1000, -1000, -1000, 1415, 1225, 357, 353, -228,
	-1000, 462, 387, -1000, -1000, -1000, 51785, 996, 11070, 11070,
	78361, 1294, -1000, 2727, 1433, -1000, -1000, -1000, -1000, 77623,
	-1000, 51047, 2508, -431, -433, 1314, -452, -1000, -1000, -1000,
	-1000, 51785, 1552, 1455, 2820, 682, 344, 679, 308, -1000,
	-1000, -1000, -1000, 996, 1239, 1073, -1000, 2723, 51047, 1071,
	677, 307, -1000, 1800, -288, 2508, -1000, 2508, -1000, 2508,
	-1000, 2508, -1000, -1000, -1000, 1599, -1000, -1000, -1000, -1000,
	-1000, -1000, 2178, 2176, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -183, -1000, 39210, 571, -1000, 1956, 1938, 1929,
	1895, 1777, -1000, 2629, 79099, -1000, 771, 2628, 1438, 629,
	2361, -1000, 77623, -1000, -1000, -1000, -1000, -1000, 2442, 2442,
	2427, 2442, 2442, 2399, 2442, 2442, 2279, -1000, 34674, 2208,
	-1000, -4, -1000, 2971, 2963, -1000, -1000, 2442, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 537, 448, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20310, 20310,
	20310, 20310, -1000, 2249, 2249, 2249, 20310, 2286, 2175, 1599,
	20310, 20310, -1000, -1000, 1460, -1000, 2900, 2827, 2900, 2315,
	62863, 2432, 2358, 2286, 380, -1000, -1000, -1000, 62125, 56213,
	2506, -1000, 2208, 2355, 2969, 26358, 19554, 19554, 19554, 19554,
	2919, -1000, -1000, -1000, -1000, 1455, 1552, 33918, -1000, -1000,
	-1000, -1000, -1000, 2174, 2173, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -185, -1000, 39210, -1000, 251, 50309, 2870, 2870,
	78361, 78361, 77623, 2249, 2208, 77623, -1000, -1000, -1000, -1000,
	-1000, 2249, -1000, -1000, 2298, 2295, 2564, -1000, -1000, -405,
	2931, -1000, 230, -1000, 2171, 879, 885, -1000, 869, 853,
	848, 846, 839, -1000, -1000, -1000, -1000, 2628, 801, 553,
	-1000, -57, 1894, 1539, 2803, 591, -1000, -1000, -1000, -1000,
	302, 569, -1000, 792, 2170, 788, 2169, -1000, -1000, 547,
	-1000, -1000, 2790, 2353, -1000, -4, -1000, 2890, 244, 2890,
	406, 1203, 1203, 68029, 1203, -1000, -1000, -1000, -1000, -242,
	1890, 20310, 2208, 2208, 821, 2291, -1000, -1000, 2094, -1000,
	-1000, 2586, 1051, 78361, 2317, -1000, 77623, -1000, -1000, -1000,
	-1000, -1000, -1000, 2856, 2853, -1000, -1000, 996, 1455, -1000,
	1455, -1000, -1000, -1000, -1000, -1000, 51047, 77623, 51047, 1069,
	51047, -1000, -1000, 2208, 1133, -1000, -1000, -1000, -1000, 2345,
	-1000, -1000, -1000, -1000, -1000, -1000, 593, 2168, 339, -1000,
	-1000, 1153, 780, -1000, -1000, -1000, -314, -1000, -1000, 20310,
	20310, 20310, -1000, 36942, 2781, 2778, -123, 19554, 19554, -1000,
	-1000, -1000, -1000, 2249, 2249, 2249, 2249, -1000, -1000, -1000,
	250, -1000, -1000, 2249, 2249, 2969, 2962, -1000, -1000, 2720,
	-1000, 2900, 2561, -1000, 2432, 380, -1000, 914, -1000, 13506,
	-1000, 2919, -1000, 1599, 1599, 1599, 1599, -1000, -1000, 1455,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2345, 251, -1000,
	39210, 1552, 2167, 1552, 1552, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2325, -496, 20310, 2323, -1000, -1000, -1000, 50309,
	297, -1000, 920, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2785, 2784, 898, 919, -1000, 2166, 2165, -1000, 704, 2046,
	1317, -126, -1000, -1000, -1000, -1000, -1000, -1000, 785, 2093,
	-1000, 454, -1000, -1000, 445, -1000, -1000, 2961, -405, 20310,
	-1000, 2781, -1000, 68029, 2890, -1000, -1000, -1000, -1000, 1203,
	-1000, 2208, 2960, -1000, 2249, 77623, 20310, 2208, 1566, -1000,
	-1000, 1949, 1949, 2563, 78361, 2562, -1000, 1433, 2706, 20310,
	-1000, -1000, 1374, 1369, -1000, -1000, 1068, 51047, -1000, 1433,
	61387, 39210, -1000, -1000, -1000, -1000, 919, 1417, 798, 2249,
	2249, 2249, 2252, -1000, 9194, 365, -1000, -1000, 2755, 2958,
	-1000, 77623, -1000, 1599, 2491, -1000, 1599, -1000, -1000, -1000,
	-1000, 2286, 305, -338, -1000, -1000, 1428, 19554, 2490, 3028,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1885, -1000, 2162, 2161, 992, -1000, -1000, -1000, 2249,
	-1000, 2321, -1000, 297, 913, 82513, -1000, -1000, -1000, -1000,
	1777, -1000, -1000, -1000, -1000, 1883, -1000, -1000, 1902, 699,
	444, -1000, 2889, -1000, -1000, 1882, 2442, 1043, -289, -1000,
	-1000, -1000, 1433, -406, -1000, 2289, 2249, 77623, 1880, 50309,
	2586, 50309, -1000, 969, 2442, 1552, 1455, 51047, -1000, 2317,
	31, -1000, 82513, 1777, 1252, 790, 1438, -1000, -1000, -1000,
	2286, 36942, 416, -457, -1, 2144, 2771, 2765, 2759, -1000,
	2142, 2477, -1000, 2882, 19554, -1000, 2693, -284, -343, 2286,
	382, 382, 2473, 26358, -1000, -1000, -1000, 61387, -496, 251,
	-290, -1000, 909, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12750, 19554, 151,
	38454, 2092, 2091, 82513, 2131, 82513, 19554, 2084, 2083, 2750,
	20310, 82450, 589, -353, -1000, -356, -1000, -1000, -1000, 2141,
	-1000, 2561, 1797, 539, 2317, 383, -1000, -1000, 2289, -1000,
	2282, 2560, 2280, 967, 1455, -1000, -1000, -1000, 671, -1000,
	-1000, 587, 629, -1000, 1438, -1000, 2879, -1000, -1000, 2140,
	-158, -1000, 2208, -10, 2957, 2943, -1000, 2942, 2941, -1000,
	77623, 2208, -1000, -1000, 2614, -1000, -1000, -1000, 381, -1000,
	1476, 905, 1446, -1000, 629, -1000, 2468, 2559, -1000, -1000,
	251, -1000, 345, -290, -1000, 2080, 2078, -1000, 1985, 1815,
	-1000, 19554, 1898, 742, 630, 7028, -1000, -1000, -1000, -1000,
	-1000, -1000, -502, -1000, 333, -503, 999, -1000, -1000, 2075,
	-1000, 2983, 2442, -1000, -504, -1000, -1000, -1000, -1000, 2819,
	1533, 64339, -1000, 2208, 821, -1000, 251, 50309, 251, 2208,
	-1000, -1000, -1000, -1000, -314, -1000, 1417, 62863, 653, 2139,
	36942, 2208, 2138, 2128, 2126, 2119, -1000, -1000, -301, 1715,
	-1000, -1000, -1000, -1000, -1000, -249, 77623, 404, 1024, 1021,
	-1000, -1000, -1000, -1000, 1770, 1704, 82513, -1000, 1753, 82513,
	2930, 2929, 2926, 32, 37698, 82278, 82114, 82513, 82513, 19554,
	82046, 82513, 1746, -1000, 81882, 82513, -1000, 26358, -1000, -1000,
	-1000, -1000, 3043, 2107, 20310, 2208, -1000, 2277, -1000, 21066,
	82513, -1000, 1417, -1000, 2031, 1950, 2625, 2624, 629, -1000,
	2252, 36942, -1000, -1000, -1000, -1000, -339, 381, -1000, 2266,
	-1000, 390, 384, 337, 1692, 82513, -1000, -505, 82513, -506,
	954, 297, 1067, 1250, -1000, 622, -1000, 2074, -507, -508,
	-509, 987, 19554, -510, 2072, -1000, -1000, 2468, 68029, 2249,
	20310, 251, 2249, 2286, -1000, -1000, 2622, 629, -1000, 2621,
	629, -86, -88, 2615, -1000, 2252, -344, -1000, 2613, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 81578, 62125,
	-1000, -511, 81521, -512, 7103, -1000, -1000, -1000, 81368, -1000,
	-1000, -1000, -1000, 632, -1000, -1000, 2852, -1000, -1000, 81314,
	11040, 10986, 82513, 1864, 10554, 2402, -1000, -1000, 2107, -246,
	2249, -1000, -1000, -1000, -1000, 291, 2612, -384, 2611, 290,
	284, -1000, -1000, -90, -1000, -1000, 2610, 2608, 2987, -1000,
	-513, -1000, -1000, 10500, 1678, 82513, 1049, 82513, 1663, -1000,
	19554, -1000, 1067, -1000, 20310, 2071, 621, 19554, -514, 607,
	597, 2068, -1000, 1782, -246, 279, -387, 2606, 2605, -1000,
	-1000, -1000, 3026, -1000, 3023, 1207, 1207, 10164, 1675, -1000,
	-1000, -515, 1048, 82513, -1000, 1713, -1000, 2442, -1000, 2012,
	1808, 9979, -1000, -1000, -1000, -1000, -1000, 275, -388, -1000,
	-1000, -1000, 1018, 1830, -1000, -1000, -1000, 9139, -1000, -516,
	82513, -1000, 605, 592, -1000, -1000, -1000, -1000, -1000, 1047,
	8674, -524, 1856, 1819, -1000, 1038, 82513, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3506, 3498, 3494, 178, 3493, 286, 329, 320, 42,
	3140, 3490, 313, 3489, 289, 3488, 30, 27, 21, 35,
	3485, 3136, 3130, 3128, 3126, 25, 3484, 54, 3482, 3481,
	3123, 3479, 3475, 3121, 3474, 3473, 3472, 3471, 3464, 3463,
	3457, 3456, 3455, 3119, 3117, 3113, 3111, 3453, 3451, 3447,
	3109, 3107, 3105, 3446, 71, 3445, 39, 44, 33, 3444,
	5, 3443, 202, 233, 3442, 4, 3441, 3440, 10, 200,
	3438, 3436, 67, 3102, 3435, 3434, 3433, 3431, 3429, 3427,
	150, 3426, 3425, 3100, 3424, 3098, 3423, 3095, 3091, 3074,
	3072, 3070, 199, 3422, 3068, 3066, 3063, 3420, 2747, 232,
	478, 228, 3419, 132, 138, 1685, 3418, 247, 3416, 214,
	3414, 3413, 3412, 472, 231, 3398, 162, 82, 357, 166,
	165, 164, 471, 3397, 59, 170, 324, 3396, 6, 3395,
	111, 3394, 213, 3393, 227, 224, 196, 187, 194, 3392,
	3391, 156, 3390, 3389, 3388, 218, 3386, 3384, 236, 4826,
	3382, 3381, 185, 3380, 141, 3378, 139, 3374, 3373, 3372,
	3371, 234, 117, 88, 167, 181, 3370, 158, 3369, 3368,
	3367, 3365, 3364, 3363, 85, 29, 69, 3355, 151, 193,
	3354, 58, 43, 34, 3353, 3352, 49, 3350, 3349, 127,
	3344, 3331, 129, 3329, 192, 66, 3327, 3326, 3325, 3324,
	115, 79, 3323, 37, 3322, 189, 3321, 3320, 3319, 3318,
	3316, 98, 3313, 89, 3312, 190, 216, 230, 3311, 3310,
	52, 48, 3309, 57, 15, 16, 106, 32, 104, 76,
	183, 169, 134, 154, 38, 152, 55, 147, 212, 90,
	3308, 235, 180, 207, 116, 40, 3307, 3306, 205, 3304,
	107, 211, 184, 188, 206, 3303, 3301, 3300, 244, 3299,
	176, 537, 3298, 130, 186, 113, 2765, 239, 144, 3297,
	3296, 3295, 3294, 118, 53, 128, 3293, 41, 241, 238,
	242, 50, 110, 3292, 1617, 5842, 6512, 8522, 12, 564,
	72, 7008, 171, 215, 3291, 64, 3288, 3287, 3285, 4179,
	161, 51, 83, 157, 3284, 160, 61, 86, 3283, 3273,
	3272, 3271, 3270, 3268, 172, 133, 3267, 3266, 62, 3263,
	3262, 23, 19, 9, 8, 3261, 149, 226, 220, 217,
	3260, 210, 56, 3259, 3258, 175, 136, 3256, 3242, 3237,
	3235, 177, 119, 204, 3231, 203, 114, 122, 3223, 123,
	3220, 3219, 75, 4083, 145, 3218, 3217, 291, 131, 146,
	195, 3216, 3215, 3214, 65, 3213, 3212, 2, 3211, 108,
	60, 46, 105, 20, 159, 3209, 3208, 201, 3207, 3206,
	148, 174, 3205, 140, 137, 78, 3204, 70, 143, 3201,
	173, 3, 7, 18, 3200, 3199, 3198, 3197, 3195, 3190,
	3189, 3188, 125, 3187, 3185, 102, 93, 73, 3183, 3182,
	3181, 3178, 3174, 197, 163, 74, 221, 99, 24, 3173,
	3172, 13, 3168, 168, 3167, 96, 3166, 3165, 124, 3164,
	3163, 68, 101, 47, 103, 3160, 3159, 121, 153, 3158,
	100, 3157, 3155, 225, 398, 3154, 542, 3149, 198, 191,
	77, 91, 3148, 84, 112, 3147, 95, 3146, 11, 63,
	3134, 14, 17, 1634, 3132, 0, 3898, 209, 3093, 126,
	3089, 3087, 229, 3058,
}

var yyR1 = [...]int{
	0, 464, 464, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 246, 246, 97, 4, 4, 10, 10, 9,
	9, 15, 6, 6, 11, 11, 11, 12, 12, 7,
	7, 13, 13, 14, 14, 5, 5, 128, 128, 8,
	8, 127, 127, 127, 243, 243, 243, 243, 240, 240,
	129, 129, 126, 126, 134, 16, 16, 16, 111, 111,
	17, 18, 18, 18, 18, 467, 467, 143, 143, 141,
	141, 142, 142, 237, 237, 239, 239, 19, 19, 19,
	248, 248, 253, 253, 253, 256, 256, 256, 256, 225,
	226, 227, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 455, 455, 455,
	456, 456, 456, 456, 456, 281, 281, 281, 281, 419,
	419, 435, 435, 435, 436, 436, 434, 434, 434, 434,
	434, 438, 438, 439, 439, 437, 437, 437, 437, 441,
	441, 442, 442, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 422, 422, 422,
	50, 50, 50, 50, 50, 54, 54, 51, 51, 51,
	51, 51, 51, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 444, 444, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 446, 446, 447,
	447, 448, 448, 448, 448, 449, 449, 449, 449, 449,
	450, 450, 450, 450, 450, 450, 450, 451, 451, 452,
	452, 3, 2, 400, 400, 401, 401, 402, 402, 402,
	402, 403, 403, 404, 404, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 31, 31, 31, 31, 31,
	31, 280, 280, 276, 276, 276, 278, 278, 279, 279,
	279, 421, 421, 421, 415, 415, 415, 417, 417, 416,
	416, 416, 418, 418, 423, 423, 423, 423, 423, 426,
	426, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 427, 427, 427, 424, 424, 162, 162, 428, 428,
	433, 433, 429, 429, 430, 430, 432, 432, 432, 431,
	431, 431, 431, 318, 318, 181, 181, 70, 70, 71,
	71, 71, 214, 214, 214, 20, 20, 20, 20, 20,
	20, 26, 26, 28, 28, 28, 28, 57, 57, 58,
	29, 29, 29, 29, 59, 59, 60, 32, 32, 32,
	32, 32, 32, 67, 67, 67, 66, 66, 65, 65,
	65, 65, 65, 65, 34, 35, 36, 468, 468, 468,
	61, 61, 37, 37, 37, 40, 40, 40, 41, 41,
	41, 38, 39, 42, 30, 30, 30, 30, 68, 68,
	63, 63, 62, 62, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 33, 33, 33, 33,
	33, 33, 25, 399, 399, 399, 56, 56, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 78, 78, 355, 356, 356, 356, 356, 356, 356,
	342, 342, 343, 343, 343, 343, 343, 343, 332, 332,
	332, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 306, 306,
	306, 306, 310, 310, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 308, 309,
	309, 309, 309, 309, 309, 309, 309, 311, 311, 311,
	311, 311, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 341, 341, 315,
	315, 314, 314, 314, 335, 335, 336, 336, 336, 333,
	333, 333, 334, 334, 319, 319, 319, 319, 319, 319,
	320, 337, 321, 321, 322, 322, 322, 322, 322, 322,
	323, 323, 324, 324, 324, 326, 326, 331, 331, 330,
	330, 330, 330, 330, 330, 327, 327, 327, 327, 327,
	327, 328, 328, 328, 329, 340, 340, 340, 340, 340,
	316, 46, 46, 52, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	377, 377, 382, 382, 270, 270, 271, 271, 53, 53,
	53, 53, 53, 168, 168, 55, 55, 55, 378, 378,
	380, 380, 380, 380, 380, 380, 380, 380, 379, 379,
	381, 381, 344, 344, 373, 373, 372, 372, 371, 371,
	371, 371, 371, 371, 371, 353, 353, 354, 354, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 348, 348,
	348, 347, 347, 349, 349, 352, 352, 352, 370, 370,
	369, 369, 345, 345, 345, 383, 383, 383, 383, 383,
	102, 102, 346, 346, 346, 384, 350, 350, 351, 351,
	351, 392, 393, 391, 391, 391, 391, 391, 169, 169,
	169, 375, 375, 375, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 103, 103, 103, 104, 104, 325, 325, 357,
	357, 357, 357, 357, 463, 463, 463, 358, 358, 358,
	358, 358, 358, 454, 454, 453, 453, 453, 359, 359,
	360, 361, 361, 361, 362, 362, 364, 364, 277, 277,
	365, 365, 366, 366, 363, 363, 363, 367, 367, 396,
	396, 396, 395, 395, 73, 73, 73, 73, 75, 75,
	74, 74, 74, 82, 82, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 72, 72,
	290, 290, 77, 213, 213, 213, 275, 275, 389, 389,
	390, 390, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 386, 386, 385, 385, 387, 387, 76,
	76, 76, 76, 163, 163, 22, 22, 79, 79, 420,
	420, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 394, 394, 394, 24, 24, 83, 84, 84, 84,
	289, 289, 289, 289, 289, 87, 87, 87, 87, 241,
	241, 242, 242, 88, 88, 88, 88, 89, 89, 89,
	89, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 123, 262, 262, 261, 261, 260,
	260, 260, 263, 263, 263, 263, 304, 304, 304, 86,
	86, 86, 98, 98, 93, 93, 96, 96, 96, 96,
	99, 99, 100, 100, 101, 101, 94, 95, 43, 44,
	44, 44, 44, 45, 91, 91, 91, 92, 92, 92,
	92, 113, 113, 114, 114, 470, 470, 470, 90, 471,
	105, 106, 106, 108, 108, 108, 109, 109, 109, 110,
	110, 110, 267, 267, 267, 267, 267, 267, 267, 107,
	107, 107, 117, 117, 121, 121, 121, 121, 120, 120,
	120, 120, 216, 216, 221, 296, 296, 197, 197, 217,
	217, 222, 222, 222, 223, 223, 224, 224, 224, 224,
	224, 219, 219, 218, 218, 220, 184, 184, 184, 184,
	182, 182, 182, 182, 182, 182, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 180, 180, 294, 294, 294, 294, 293, 293, 293,
	125, 125, 130, 130, 132, 132, 132, 132, 132, 132,
	132, 132, 135, 199, 199, 472, 472, 153, 153, 154,
	154, 154, 154, 155, 155, 155, 155, 155, 157, 157,
	157, 158, 158, 158, 158, 158, 158, 159, 160, 160,
	156, 156, 156, 178, 178, 235, 235, 236, 236, 234,
	234, 238, 238, 131, 131, 133, 133, 133, 133, 138,
	138, 139, 139, 140, 140, 301, 301, 301, 144, 144,
	144, 146, 145, 145, 145, 145, 145, 145, 147, 147,
	457, 458, 458, 459, 459, 459, 459, 460, 460, 460,
	460, 460, 460, 460, 460, 460, 460, 461, 461, 462,
	462, 148, 148, 150, 151, 151, 149, 149, 149, 149,
	149, 149, 161, 161, 152, 164, 164, 164, 164, 165,
	165, 122, 122, 122, 122, 122, 122, 122, 122, 259,
	259, 167, 167, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 193, 193, 193, 193, 193, 193, 170,
	170, 170, 170, 170, 170, 170, 116, 116, 194, 194,
	194, 137, 136, 136, 119, 119, 118, 118, 195, 195,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 187, 187, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 185, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 192, 192, 192, 192,
	192, 469, 469, 189, 189, 188, 188, 188, 188, 188,
	188, 112, 112, 112, 112, 112, 302, 302, 302, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 69, 69, 206, 206, 115, 115, 204, 204, 205,
	207, 207, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	177, 177, 177, 208, 208, 196, 196, 124, 209, 209,
	210, 211, 211, 212, 212, 215, 228, 228, 228, 229,
	229, 229, 229, 179, 179, 179, 230, 230, 230, 230,
	230, 172, 172, 171, 171, 171, 173, 173, 174, 174,
	473, 473, 233, 233, 232, 232, 231, 231, 231, 231,
	231, 231, 231, 244, 244, 198, 198, 201, 201, 200,
	202, 245, 245, 250, 250, 250, 250, 247, 247, 251,
	251, 251, 251, 254, 254, 255, 255, 255, 252, 252,
	252, 252, 249, 249, 249, 298, 298, 298, 298, 257,
	257, 266, 266, 264, 264, 265, 265, 258, 258, 317,
	317, 317, 272, 272, 273, 273, 274, 274, 268, 268,
	268, 268, 269, 269, 295, 295, 291, 291, 297, 297,
	292, 292, 299, 299, 300, 300, 300, 300, 397, 397,
	398, 398, 398, 338, 338, 409, 409, 339, 339, 410,
	410, 411, 411, 406, 406, 407, 407, 408, 408, 408,
	47, 412, 412, 413, 413, 414, 414, 414, 414, 48,
	49, 49, 49, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 288, 288, 288,
	288, 288, 288, 285, 285, 285, 285, 285, 285, 286,
	286, 286, 465, 466,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	3, 5, 1, 1, 1, 3, 3, 3, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 2, 1, 10,
	2, 0, 2, 2, 0, 2, 3, 6, 1, 3,
	0, 2, 1, 3, 4, 9, 9, 10, 1, 1,
	10, 9, 8, 7, 7, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 0, 2, 3, 4, 5,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 0,
	0, 0, 2, 3, 2, 3, 12, 12, 13, 5,
	5, 16, 12, 9, 4, 15, 1, 6, 9, 8,
	0, 3, 3, 6, 3, 0, 3, 4, 4, 0,
	3, 0, 2, 2, 1, 3, 1, 1, 2, 2,
	2, 0, 2, 1, 2, 2, 2, 2, 2, 0,
	1, 1, 2, 3, 3, 5, 3, 3, 4, 5,
	4, 4, 2, 2, 2, 2, 2, 0, 2, 2,
	9, 10, 9, 5, 7, 0, 3, 9, 9, 9,
	10, 6, 8, 2, 3, 2, 3, 3, 3, 4,
	3, 3, 2, 2, 3, 2, 2, 2, 3, 2,
	2, 3, 2, 2, 2, 3, 3, 2, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 1,
	3, 0, 1, 1, 1, 1, 3, 1, 3, 3,
	0, 2, 5, 5, 5, 7, 5, 0, 3, 0,
	3, 4, 4, 0, 1, 1, 3, 2, 3, 3,
	3, 0, 1, 1, 2, 2, 2, 2, 1, 2,
	2, 3, 3, 3, 3, 2, 4, 5, 4, 6,
	7, 2, 3, 3, 3, 3, 0, 3, 0, 3,
	3, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	2, 1, 1, 3, 1, 2, 5, 4, 6, 0,
	1, 4, 3, 3, 3, 6, 6, 5, 5, 5,
	5, 4, 3, 5, 1, 3, 1, 3, 3, 5,
	0, 5, 0, 3, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 4, 2, 5, 8, 4, 7, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 5, 7, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 2, 5, 0, 1, 2,
	1, 3, 5, 7, 8, 7, 9, 10, 7, 9,
	10, 2, 2, 2, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 4, 3,
	2, 4, 4, 0, 2, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 5, 5, 5, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 2, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 6, 8, 3, 6, 2, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 3, 3,
	2, 3, 4, 2, 2, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 4, 4, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 3, 0,
	3, 0, 3, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 2, 3, 3, 2, 2, 4,
	3, 1, 0, 1, 3, 3, 3, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 1, 0, 1, 1,
	1, 1, 2, 2, 2, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 2, 1, 2, 1, 2,
	2, 5, 5, 3, 2, 2, 2, 2, 1, 1,
	1, 1, 3, 2, 1, 1, 2, 2, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 3, 3, 0, 1, 0, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 3,
	5, 5, 5, 4, 0, 1, 1, 2, 2, 3,
	2, 3, 3, 1, 1, 0, 1, 1, 1, 3,
	5, 3, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 1, 3,
	3, 3, 3, 2, 1, 11, 12, 12, 13, 13,
	0, 1, 3, 2, 1, 5, 1, 1, 0, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	1, 0, 2, 3, 3, 3, 3, 4, 5, 3,
	3, 4, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 4, 4, 3,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 0, 1,
	6, 1, 4, 5, 5, 6, 0, 1, 0, 3,
	1, 1, 0, 2, 0, 8, 9, 0, 2, 0,
	1, 2, 0, 2, 1, 1, 1, 1, 4, 3,
	7, 5, 5, 1, 3, 5, 4, 9, 11, 9,
	2, 2, 3, 3, 4, 4, 4, 4, 3, 3,
	3, 3, 6, 5, 4, 4, 5, 5, 8, 4,
	5, 7, 2, 2, 2, 2, 3, 4, 3, 4,
	1, 3, 3, 3, 3, 4, 5, 5, 3, 7,
	6, 5, 2, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 4, 4, 3, 5, 3, 1, 1,
	1, 1, 6, 0, 1, 2, 0, 1, 0, 1,
	1, 2, 5, 3, 4, 4, 4, 4, 4, 4,
	3, 7, 6, 8, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 3, 1, 3, 8, 8, 8,
	11, 12, 15, 0, 3, 3, 3, 3, 5, 3,
	5, 6, 6, 4, 4, 4, 4, 4, 4, 4,
	4, 0, 1, 1, 3, 2, 3, 8, 5, 1,
	1, 1, 1, 1, 1, 4, 4, 4, 4, 1,
	3, 1, 1, 2, 2, 4, 4, 3, 3, 3,
	3, 3, 4, 3, 5, 5, 5, 4, 4, 4,
	4, 3, 2, 2, 6, 2, 4, 3, 3, 4,
	4, 5, 8, 6, 3, 4, 4, 2, 4, 3,
	2, 4, 5, 6, 2, 6, 6, 3, 3, 4,
	2, 4, 3, 3, 3, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 3, 2, 0, 1, 1, 2,
	4, 1, 0, 1, 2, 1, 2, 4, 4, 5,
	0, 1, 0, 3, 0, 2, 4, 4, 2, 3,
	4, 4, 5, 3, 4, 5, 4, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 3, 0,
	2, 0, 2, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 0, 2, 2, 2, 2, 2, 2, 0,
	1, 1, 3, 5, 1, 1, 3, 5, 1, 2,
	3, 5, 2, 2, 6, 0, 1, 0, 3, 0,
	1, 0, 2, 2, 4, 1, 2, 2, 2, 2,
	2, 0, 2, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 2, 2, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 5, 1, 2, 3,
	1, 1, 2, 2, 4, 0, 1, 2, 6, 1,
	3, 2, 4, 1, 1, 1, 1, 1, 5, 5,
	8, 5, 5, 8, 5, 5, 8, 2, 2, 2,
	3, 4, 4, 0, 1, 3, 1, 0, 3, 1,
	3, 1, 3, 4, 6, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 1, 3, 3, 3, 6, 7, 2, 3, 3,
	4, 4, 5, 5, 8, 8, 3, 3, 4, 3,
	4, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 6, 4, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 4, 4, 4, 2, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 6, 3, 4, 2, 2,
	2, 0, 2, 1, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 5, 1,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 1, 0, 2, 4, 3,
	4, 1, 4, 1, 3, 4, 1, 4, 2, 3,
	1, 1, 0, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 0, 5, 1, 3, 2, 3, 3,
	1, 1, 3, 3, 3, 3, 3, 1, 3, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 3,
	4, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 1, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 2, 0, 4, 4,
	3, 1, 3, 2, 4, 1, 2, 1, 2, 2,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -464, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -73, -22, -23, -24, -83, -87, -88, -89, -85,
	-86, -93, -94, -95, -91, -90, -30, -33, -25, -97,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -135, -465, 12, -129, 35, -78, 191,
	-455, -75, -74, -76, -77, 194, 193, 231, 195, 647,
	369, 648, 224, 73, 447, -96, 450, 451, -470, 307,
	308, 25, 43, 452, 454, 36, 37, 247, 335, 337,
	198, 448, 430, 431, 360, 695, -6, 653, 56, 77,
	192, 226, 225, 32, -8, -11, 200, -12, -13, -7,
	764, -211, 20, -105, -471, -211, -10, -9, -465, -4,
	653, -105, -111, 14, 15, 13, 558, -105, -355, 29,
	-3, 118, 77, -8, 11, -269, -280, 98, 549, 199,
	-278, 331, 333, 209, -266, -268, -276, 257, 267, 50,
	211, 210, 268, 200, 331, -266, 201, 203, 549, 199,
	240, 239, 331, 333, 272, 647, 200, -149, -299, -285,
	-287, -286, 349, 83, -284, 578, 582, 272, 585, 586,
	591, 339, 91, 53, 369, 572, 361, 370, 221, 527,
	573, 332, 338, 341, 362, 736, 371, 373, 374, 570,
	571, 55, 203, 560, 561, 564, 214, 751, 354, 222,
	650, 268, 759, 754, 756, 343, 757, 517, 609, 447,
	466, 458, 485, 651, 707, 280, 302, 455, 386, 534,
	610, 346, 295, 367, 708, 322, 290, 523, 529, 305,
	450, 611, 612, 613, 543, 248, 278, 709, 456, 299,
	301, 300, 262, 577, 306, 42, 227, 482, 660, 648,
	257, 710, 616, 703, 615, 251, 284, 614, 329, 41,
	33, 617, 250, 546, 109, 277, 711, 377, 531, 618,
	503, 378, 246, 273, 275, 291, 713, 655, 350, 233,
	530, 432, 478, 360, 128, 255, 317, 379, 714, 504,
	508, 715, 535, 336, 316, 621, 716, 717, 380, 659,
	285, 718, 202, 342, 622, 281, 719, 258, 445, 537,
	347, 502, 212, 652, 223, 57, 237, 538, 506, 624,
	512, 515, 433, 376, 434, 720, 721, 722, 723, 358,
	356, 626, 357, 359, 628, 269, 297, 656, 625, 658,
	62, 197, 662, 510, 509, 511, 298, 676, 533, 490,
	488, 724, 725, 351, 218, 726, 727, 489, 23, 728,
	729, 541, 321, 353, 730, 731, 732, 627, 294, 632,
	608, 733, 734, 532, 505, 507, 256, 127, 647, 279,
	735, 355, 528, 364, 663, 654, 340, 292, 633, 737,
	382, 293, 236, 229, 542, 427, 428, 443, 444, 372,
	738, 431, 739, 740, 741, 742, 334, 333, 451, 365,
	634, 452, 274, 303, 657, 743, 635, 636, 744, 745,
	266, 249, 545, 536, 61, 519, 514, 368, 383, 457,
	429, 440, 435, 436, 438, 439, 442, 441, 437, 446,
	522, 448, 276, 243, 637, 638, 639, 430, 640, 12,
	296, 348, 641, 642, 643, 526, 366, 304, 267, 270,
	493, 238, 746, 747, 480, 481, 449, 241, 231, 122,
	544, 387, 327, 702, 331, 384, 289, 60, 244, 54,
	748, 749, 271, 245, 661, 288, 453, 345, 664, 200,
	83, -289, -284, -287, -288, -285, -286, 349, 232, 59,
	96, 64, 63, 83, -284, 647, 144, 486, 534, 191,
	524, 525, 531, -348, 532, 239, 427, 368, 242, -304,
	200, -262, 241, 523, 336, 355, 582, 245, 246, 273,
	428, 434, 201, 202, 38, 536, 535, 527, -299, -98,
	453, -98, -98, 204, 453, -113, 233, 195, -149, 232,
	-68, 83, 309, -68, 35, 83, -161, -291, -299, 83,
	-284, 42, 83, 452, 526, 526, 85, 654, 248, 27,
	-444, -418, 364, -443, -416, 192, 191, 15, 193, 272,
	369, 370, 335, 201, 13, 36, 736, 219, 371, 372,
	11, 224, 373, 374, 240, 14, 375, -445, -421, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 82, 83,
	-284, -264, 206, 372, 427, 449, 427, 427, -271, -270,
	385, 512, 144, -128, 706, -126, -134, -301, -299, -285,
	-286, -199, -472, 253, 549, -258, 331, -278, 205, -130,
	-132, -133, -153, -136, 704, -465, -131, -457, -149, -137,
	83, 607, -109, 10, -108, -110, 9, 8, -109, -229,
	22, 21, -267, -106, -229, -466, 79, -466, -9, -128,
	-120, 135, -122, -299, -166, 101, -176, 34, 30, -175,
	349, 232, -167, -203, -285, -202, -137, 144, -303, 133,
	134, 141, 102, 187, -187, -185, -186, -188, -190, -191,
	227, 480, 481, 82, 84, 92, 85, 86, 87, 88,
	93, 94, 95, -291, -287, -286, -283, 578, 582, 585,
	586, 591, -200, -465, 145, 146, 147, 148, 149, 150,
	151, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 67, 68, 576, 199,
	559, 560, 483, 561, 13, 562, 563, 564, 649, 221,
	568, 104, 56, 326, 550, 551, 555, -192, 552, 556,
	557, 570, 571, 572, 573, 206, 549, 139, 558, 595,
	596, 597, 598, 599, 600, 601, 602, 604, 605, 603,
	579, 580, 581, 583, 584, 587, 588, 589, 590, 592,
	593, 594, 678, 196, 192, 195, 100, 29, 31, 679,
	254, 103, 464, 498, 567, 21, 25, 215, 198, 486,
	213, 143, 208, 216, 311, 313, 191, 71, 680, 547,
	312, 524, 674, 671, 673, 672, 477, 475, 310, 681,
	15, 32, 225, 261, 682, 473, 193, 252, 107, 108,
	683, 47, 46, 8, 314, 226, 320, 474, 684, 685,
	24, 74, 217, 16, 211, 242, 758, 686, 335, 18,
	126, 19, 687, 668, 670, 669, 205, 120, 201, 750,
	69, 259, 688, 462, 467, 468, 469, 470, 471, 463,
	97, 689, 690, 117, 325, 65, 607, 38, 247, 704,
	565, 324, 691, 44, 43, 497, 501, 496, 323, 513,
	118, 22, 553, 554, 36, 692, 693, 235, 500, 461,
	495, 705, 694, 666, 264, 72, 385, 476, 762, 39,
	75, 230, 381, 352, 48, 98, 20, 260, 70, 40,
	574, 123, 763, 479, 207, 239, 695, 539, 263, 696,
	124, 472, 706, 219, 119, 454, 194, 363, 308, 220,
	330, 26, 337, 697, 253, 125, 525, 665, 698, 569,
	35, 224, 307, 460, 209, 699, 265, 319, 309, 318,
	700, 701, 344, 49, 760, 677, 200, 45, 106, 499,
	459, 494, 204, 566, 240, 315, 9, 50, 37, 520,
	14, 375, 73, 76, 487, 484, 492, 491, 210, 761,
	17, 328, 575, 653, 540, 99, 675, 521, 548, -105,
	-105, -105, -247, 449, -254, -251, 535, 536, -252, -255,
	-249, -203, 512, 733, 734, 534, 486, 533, -291, -299,
	-285, 349, 232, 144, 579, 580, 581, 104, 483, 559,
	595, 550, 552, 547, 551, 549, 34, 596, 30, 95,
	597, 576, 206, 13, 187, 583, 584, 598, 599, 600,
	67, 553, 554, 649, 139, 101, 601, 602, 93, 604,
	605, 326, 558, 68, 603, 199, 589, 588, 587, 590,
	562, 563, 94, 555, 556, 557, 56, 593, 592, 594,
	-2, -6, -465, -149, -356, -343, -346, -291, -285, -287,
	-288, 228, -286, 216, -384, 83, -284, 213, -211, -105,
	201, 203, 558, -265, 206, -265, 240, 239, 272, -279,
	265, -265, -265, 737, 200, -278, 110, 110, -79, -149,
	-420, -415, -421, 200, -264, -264, -264, -264, -264, -264,
	-264, -264, -264, 83, -289, -149, 188, -84, -149, -141,
	16, 16, 76, 76, 83, -289, 83, 433, 376, 35,
	-263, 118, 17, 549, 199, 200, 239, 240, 203, 272,
	-263, -350, 16, 120, 243, 243, 243, 243, 243, 244,
	243, -261, 526, 528, 529, 530, -260, 16, 120, 17,
	-123, 118, 24, -465, -229, -229, -260, 243, 136, -100,
	100, -100, 83, 452, 204, -114, 234, -113, -114, -178,
	-156, 29, 6, 7, 110, 35, 35, 82, 60, 35,
	-63, -62, -64, 295, 296, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 35, -399, 77, 188, -338,
	512, 83, -412, -413, -149, 85, 85, 75, 355, 75,
	78, 204, 78, 75, -446, 365, 77, -446, 333, 365,
	366, 267, 331, 203, -446, -446, 333, -446, -446, -446,
	352, -446, -446, 526, -446, -446, -446, 367, 368, -446,
	524, 203, -446, -446, -446, -446, -446, 80, 27, -444,
	-418, 364, 30, 429, 432, 539, 653, -55, 445, 446,
	-168, 27, -376, 144, 377, 378, 379, 380, 376, 355,
	381, 382, 383, 243, 384, 200, 526, 376, -6, -126,
	78, -233, -465, 78, -200, -465, 83, -331, -330, -327,
	-328, -329, -326, 34, 200, -264, 272, -144, -146, -145,
	-147, 65, 69, 71, 66, 67, 68, 527, 72, -274,
	29, -136, -465, -125, -9, -135, -130, -465, -154, 123,
	-164, -274, -155, 73, 205, 74, 29, -156, -157, -158,
	-159, -160, 6, 7, 55, -465, -465, -7, -8, 27,
	28, -14, -7, -12, -14, 27, 28, 27, 28, -7,
	-230, 24, 36, -179, 85, 88, -203, -212, -215, -122,
	-299, 59, -117, 27, 28, 66, 58, 64, 63, -226,
	90, -466, 16, -294, 100, 98, 99, 117, -293, 29,
	83, 82, -289, 188, -122, -170, 120, 101, 118, 119,
	103, 130, 129, 140, 133, 134, 135, 136, 137, 138,
	139, 131, 132, 143, 110, 111, 112, 113, 114, 115,
	116, -259, -465, -137, -465, 188, -465, 188, 189, 190,
	188, -176, -176, -176, -176, -176, -176, -176, 82, 82,
	82, -465, 188, 188, 188, -465, -465, -465, -465, -465,
	-195, -465, -122, 653, 200, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-206, -122, -465, -465, -469, -465, -469, -469, -189, -469,
	-465, -189, -189, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -465, -465, -465, -465, -465, -465,
	-465, -465, -465, -465, -189, -189, -189, -465, -258, -258,
	16, -141, -142, -149, -152, -299, 78, -248, -253, 537,
	539, 449, -252, -252, -298, -291, 82, 34, 144, -354,
	110, 121, 35, 188, -211, -465, 79, 78, -306, -310,
	-312, -311, -313, -308, -309, -69, 490, 488, 484, 483,
	486, 489, 144, 487, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 35, 227, 480, 481, 482,
	664, 504, 505, 506, 507, 508, 210, 509, 510, 511,
	458, 485, 651, 459, 460, 461, 462, 463, 464, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, -306, -306, -306, -306, -306, -290, -384, 83,
	-289, 77, -229, -267, -265, -265, -280, 209, -278, 83,
	101, 83, -148, -291, -299, -161, -265, 266, -424, -423,
	-415, -418, 677, -265, -279, -415, 271, 269, 270, 78,
	204, 78, 204, 80, -264, -291, -143, -149, 83, 83,
	-148, -161, -417, -415, -418, -162, -291, -299, -300, -299,
	-282, -287, -288, 678, 196, 27, 192, 195, 100, 29,
	31, 679, 254, 103, 464, 144, 579, 580, 581, 498,
	567, 21, 25, 215, 104, 198, 483, 486, 213, 143,
	208, 216, 311, 313, 559, 595, 191, 71, 680, 550,
	552, 547, 551, 312, 549, 524, 674, 671, 673, 672,
	477, 475, 310, 34, 681, 15, 596, 32, 225, 261,
	28, 682, 137, 473, 193, 606, 252, 107, 108, 683,
	47, 46, 8, 30, 314, 226, 95, 320, 597, 474,
	684, 685, 24, 74, 217, 16, 211, 242, 758, 686,
	335, 18, 576, 126, 19, 687, 668, 670, 669, 206,
	205, 120, 201, 750, 69, 259, 13, 688, 462, 467,
	468, 469, 470, 471, 463, 187, 97, 689, 690, 117,
	325, 65, 583, 584, 607, 51, 38, 247, 598, 599,
	704, 600, 565, 324, 691, 44, 43, 497, 501, 496,
	323, 513, 67, 118, 22, 553, 554, 36, 692, 693,
	649, 235, 500, 461, 495, 705, 694, 666, 139, 264,
	72, 101, 385, 601, 602, 93, 476, 762, 39, 75,
	230, 381, 352, 48, 98, 20, 260, 70, 40, 574,
	123, 763, 604, 479, 207, 239, 695, 539, 263, 696,
	124, 605, 472, 706, 219, 119, 454, 194, 326, 558,
	363, 308, 220, 330, 26, 337, 68, 697, 253, 125,
	603, 199, 525, 665, 11, 698, 569, 35, 224, 307,
	460, 209, 699, 265, 319, 309, 318, 700, 58, 701,
	344, 49, 589, 588, 587, 590, 760, 66, 562, 563,
	677, 200, 45, 106, 499, 459, 494, 204, 566, 240,
	94, 315, 9, 50, 37, 520, 14, 375, 73, 76,
	555, 556, 557, 56, 487, 484, 492, 593, 491, 592,
	594, 210, 761, 105, 17, 328, 575, 653, 540, 99,
	675, 521, 14, 193, 78, 82, -242, 83, -289, 82,
	-242, -241, -242, -241, 243, -263, 82, -303, -122, -265,
	-265, -149, -149, -149, -149, -149, -149, -263, -263, -263,
	-263, -260, 16, -260, -263, -299, -299, -122, -176, -415,
	551, 135, -263, -299, -101, -99, 218, -99, -101, 83,
	83, 452, -92, -4, -18, -16, -17, -114, -9, 39,
	29, 29, 83, -63, -63, 82, -63, 78, 110, -63,
	-178, 79, -195, -291, -397, 750, 78, -414, 29, 539,
	540, 513, -448, 200, 242, 239, 75, -448, -443, 372,
	-417, -416, -415, -446, -447, -291, -446, -446, -446, 526,
	-446, -446, -446, -446, -446, -446, -446, -446, -446, -421,
	75, 78, 355, 75, 16, 75, 204, -379, -381, 443,
	444, 540, 541, 456, 376, 376, 376, 376, 376, 376,
	-377, -141, 653, -377, -141, 204, 254, -134, 29, -232,
	-231, -292, -285, -286, -287, -288, 228, -291, -282, -472,
	-331, -328, -327, -329, 486, 534, 143, 546, -149, -415,
	-162, -132, -132, -130, -132, 65, 65, 65, 70, 65,
	70, 70, 65, 65, -145, -301, -274, 78, -466, -466,
	-466, -9, -465, -301, -164, -274, 201, 201, 201, 103,
	16, 53, 27, 103, 16, 53, 27, 103, 16, 53,
	27, -119, -118, -121, 135, -122, -299, -176, -243, 97,
	14, 120, 78, 23, 78, -228, 31, 32, 188, -177,
	60, 85, 88, -243, 78, -120, -149, -122, -122, -122,
	-193, 93, 101, 94, 95, -293, 228, 135, -300, -292,
	-287, -285, -286, 349, 232, -282, -176, -194, -200, -137,
	89, 120, 118, 119, 103, -176, -176, -176, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -176, -176, -176,
	-302, 83, 82, 144, 83, -292, -118, -292, -175, 227,
	480, 481, 93, -175, -291, -291, -107, 27, 28, -292,
	527, -291, -292, -107, -107, -107, -107, -107, 78, -466,
	-118, -118, -118, -466, -122, -122, -118, -176, -118, -203,
	82, -118, -203, 82, -118, -176, 565, 566, 567, -118,
	-118, -107, -204, -205, 105, -203, -285, -288, 349, 232,
	-118, -466, 85, -182, -183, 656, 665, 666, 668, 671,
	664, 663, 662, 660, 659, 658, 661, 657, 675, 674,
	673, 672, 670, 669, 667, -182, -182, -184, 227, 482,
	480, 481, -118, -119, -118, -118, -466, -466, -121, -118,
	-121, -118, -118, -121, -466, -466, -466, -118, -118, -118,
	-118, -118, -118, -118, -118, -118, -118, -118, -118, -466,
	85, -151, 97, -149, -125, -149, -141, -467, 16, 76,
	-467, 78, 188, -251, -254, 78, 538, 540, 541, -248,
	-323, -324, 143, 75, 96, 82, -122, -292, -300, -229,
	-375, -343, -344, -345, -346, -368, 216, -383, 207, 209,
	211, 210, 50, -347, 217, 201, 51, -307, -333, 519,
	520, -315, 77, -314, 77, -69, 484, 483, 486, -314,
	484, 491, -314, 491, 491, -314, -314, -314, 484, 77,
	77, -315, -315, -315, -314, -335, 77, -335, 479, -336,
	77, -336, -336, -336, -336, -307, -307, -307, -307, -307,
	-384, -122, -230, -291, -149, 203, 737, -331, 30, -331,
	-70, 254, 222, 188, 77, -162, 257, 258, -419, 78,
	34, -425, 332, 85, 206, -149, 232, -149, -149, -415,
	-415, -421, -141, 75, 78, 78, 188, 716, 716, -149,
	78, 82, 83, 83, -178, -351, 16, 120, -263, -149,
	-178, -116, 228, 76, -469, -466, 454, 455, 83, -92,
	-176, 39, 39, -62, -175, -291, 79, -398, 205, 558,
	82, -413, -301, 512, 540, -449, 135, -291, -448, -449,
	-452, 653, 204, 79, 78, -446, -448, 335, 78, -448,
	-417, -415, -378, -380, 435, 437, 438, 436, 439, 440,
	441, 442, 78, 110, 110, 457, -382, 24, -377, 539,
	-377, 82, -176, -136, -466, 78, 188, -200, 35, -353,
	-354, -353, -353, -82, -390, -360, -80, -388, 123, 196,
	193, 192, 268, 198, -326, 559, 251, 250, 284, 285,
	74, 36, 197, 194, -72, -81, 231, 290, 236, 291,
	195, 230, 292, 229, 293, 653, 288, 757, 517, 609,
	610, 643, 91, 613, 248, 42, 201, 623, 616, 546,
	619, 620, 377, 618, 622, 212, 626, 625, 627, 629,
	630, 631, 341, 634, 635, 636, 249, 637, 638, 639,
	366, 644, 9, -426, -425, -432, 75, -139, -138, 75,
	76, -140, 75, -138, 65, 65, 65, -236, 77, -301,
	-130, -466, -238, -291, -164, -301, -465, -465, -465, -176,
	-176, 120, -176, -176, 120, -176, -176, 120, -466, 78,
	188, 78, -240, 41, 40, -291, 514, 726, 61, -179,
	-179, -215, -257, 24, 16, 56, 56, -127, 16, -226,
	-226, 93, 94, 95, 188, -465, -194, -176, -176, -176,
	-116, 100, -466, -466, -119, -118, -118, -118, -118, -118,
	-122, -466, -466, -466, 78, 76, 29, -466, 76, 120,
	-466, 16, 16, -466, 16, 16, -466, -466, 16, -176,
	-176, -176, -466, -466, -118, -207, -205, 107, -122, -466,
	-466, -466, -466, -466, 78, 78, 16, 78, -466, -466,
	-466, -466, -216, 574, -216, -466, -466, -466, -466, -466,
	-466, -216, -216, -216, -466, -466, -466, -466, -466, -466,
	-466, -466, -466, -466, -466, -466, -466, -237, 123, -149,
	35, -237, 76, -125, -125, -152, -299, 135, -253, -256,
	542, 539, 545, 83, 82, 144, 82, 188, -230, -359,
	-374, 78, -360, 757, 517, 609, -326, 610, 643, 91,
	613, 248, 42, 201, 623, 616, 546, 619, 620, 377,
	618, 622, 212, 626, 625, 627, 629, 630, 631, 341,
	634, 448, 635, 636, 249, 637, 638, 639, 366, 644,
	9, 653, 77, -352, -290, -383, 83, -284, 51, -347,
	-349, -347, -347, -347, -352, 83, -284, -352, 51, 719,
	93, 101, -322, -324, 144, -319, -320, -337, -340, -316,
	29, 758, 522, 219, -346, 486, 534, 34, 75, 517,
	207, 51, 50, 211, 91, -334, 521, 85, 85, 585,
	-314, 491, -314, -314, -314, -314, -314, -341, 82, -341,
	85, -335, 85, 79, -295, 76, -233, -149, 677, -71,
	13, 14, 15, -291, -400, -401, -402, -291, 120, 259,
	260, 75, -435, 363, -423, 333, 342, 100, 21, 653,
	-456, 101, 204, 204, -394, 220, 215, -149, -149, -415,
	-291, 75, 75, -242, -165, 17, 83, 83, -260, -263,
	-176, -418, 245, 246, -176, -176, -150, 97, -414, 204,
	188, 188, -449, 204, 354, -417, -291, -449, 352, 335,
	-449, -54, 205, 16, 78, 110, 110, 110, 110, 110,
	110, 110, 110, -381, 77, 77, 386, 36, -231, -292,
	-353, 83, 82, 144, 83, 82, 144, 82, -389, 78,
	-390, 196, 193, 284, 285, -388, 21, -275, -347, -396,
	-395, -345, -346, 123, 208, 216, 216, 213, -275, -347,
	207, 217, 123, 216, 213, -275, 201, -353, -275, 486,
	143, 204, 38, 38, 366, 123, 366, 123, -353, -275,
	208, -347, -272, 216, -273, 204, 29, 289, 123, 123,
	123, 123, 123, 123, 123, 123, 294, 677, -353, -353,
	-353, -353, -353, -353, -353, -353, 615, 615, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -357, -453, 82, -463, 91, 272, 341, 83, -284,
	-282, 85, 87, 86, -353, -353, -438, 653, -163, 194,
	278, 274, -122, 77, -122, -234, -291, -236, -466, 78,
	-164, -234, -234, -234, 100, 204, -465, 100, 204, -465,
	100, 204, -465, -274, -121, 135, -300, 82, 78, 82,
	82, 515, 62, -149, -165, 606, -125, -120, 135, -292,
	-119, -116, 100, -176, -466, -466, -466, -466, -466, -466,
	-305, 144, 483, 486, 227, 482, 475, 473, 472, 474,
	502, 488, 519, 480, 520, 664, -302, -305, -302, -176,
	-176, -176, -176, -176, -176, 16, 16, 16, 650, -211,
	109, -122, 106, -176, -176, -176, -176, -291, -221, -465,
	-216, -216, -216, -216, -216, -216, -217, -216, -217, -217,
	-217, -217, -217, -217, -217, -217, -217, -217, -217, -172,
	-173, 35, -171, -9, -465, -174, -473, 56, 60, -465,
	-245, -250, -203, -285, -288, 228, -165, -125, -165, -165,
	188, 539, 543, 544, -374, -353, -353, -353, 534, 486,
	143, -353, -353, -353, -353, -353, 615, 615, -353, -353,
	-353, -353, -353, -353, -353, -353, -353, -353, -353, -353,
	-353, -353, -353, -353, -353, 449, -353, -353, -353, -353,
	-353, -353, -357, -453, -353, -353, 677, -370, -369, 83,
	-289, 207, 50, -383, -352, -352, -352, -352, -352, -102,
	-290, 93, -465, 759, 85, -149, 35, 83, 144, 82,
	-175, 134, -303, -167, -186, -465, 94, 95, 550, 551,
	555, 552, 556, 557, 570, 571, 572, 573, 547, 553,
	554, 14, 51, 51, 51, 82, 79, 79, 79, -314,
	79, 78, 79, 78, 79, 78, -169, 711, 712, 75,
	-291, 29, -233, 85, 75, 79, 78, -306, -291, -291,
	-291, 274, -438, 338, -436, -434, 344, 345, 346, 347,
	348, -418, 343, -425, 340, 82, 83, 82, 676, 710,
	731, 703, 30, -149, -415, -235, 77, -234, -235, -122,
	-178, -237, 200, -417, 135, 135, -291, 204, -417, 352,
	-451, 653, 16, 16, 352, 16, 387, -417, -380, 82,
	82, 82, 85, 85, 85, 85, 85, -141, -141, 82,
	83, 82, 144, -359, -80, 196, 193, 284, 285, -361,
	-362, -365, -364, 124, 624, 691, 77, -342, 83, -289,
	-265, -268, 209, 207, -465, 83, -290, -290, -290, -264,
	51, 51, -238, -290, -290, -291, -290, 34, 281, 282,
	283, 83, 35, -353, 486, -238, 27, -238, 27, 34,
	338, 286, 287, -342, -290, -291, -149, 217, 213, -290,
	-238, 27, 85, -238, -291, -238, 27, -238, 27, -238,
	27, -238, 27, 645, -357, -122, -357, -463, -463, 82,
	82, 82, -353, -353, -104, 646, 218, -463, 82, -104,
	-463, -453, 82, -103, 218, 221, 223, -357, -357, -357,
	-463, -463, -463, -463, 82, -358, 34, 617, 478, 612,
	633, 611, 83, 93, 82, 82, -463, 34, -463, 34,
	-463, -357, 640, -463, -465, -439, -437, 356, 357, 358,
	359, -431, 250, 251, 204, 279, 101, -428, 756, 275,
	-234, 79, 78, -154, -291, -466, -466, -466, -176, -176,
	-176, -176, -176, -176, -176, -176, -176, -301, 188, 529,
	-291, -321, -322, -208, 18, -226, -466, -176, -217, -217,
	-217, -217, -217, -466, -315, -315, -315, -315, -336, 479,
	-315, 463, -315, 463, -466, -466, -466, -466, 24, 24,
	24, 24, -466, -176, -176, -176, -465, -115, 569, -122,
	78, 78, -466, -466, -296, 83, -244, 75, -244, -245,
	-274, -466, -232, -174, -465, 11, 56, 60, 653, 200,
	-198, -201, -472, -238, -165, 78, -354, -354, -354, -354,
	-211, -165, -357, -357, -357, -353, 35, -353, -463, -463,
	82, 82, 82, -353, -353, -104, -463, 82, -104, -463,
	-453, 82, -103, -357, -357, -357, -463, -463, -463, -463,
	82, -358, 83, 93, 82, 82, -463, 34, -463, 34,
	-463, -357, 640, -463, -465, 645, 79, 78, -315, -315,
	51, -349, 77, -176, 29, 77, 83, 144, 82, -175,
	82, -176, -192, 82, 85, 85, -149, -225, 29, -456,
	-149, -403, -404, -405, 91, 652, 101, 261, 262, 218,
	263, 264, 265, -402, -306, -306, -306, -428, -441, -442,
	-440, 341, 361, 362, 349, 100, 82, 82, 82, -427,
	332, 100, 341, 21, 29, 21, 29, 82, 82, 82,
	82, 85, 76, -234, -263, -321, -149, -451, -417, -451,
	335, -417, -417, 16, -417, 331, -54, 79, 79, -366,
	632, -465, 529, 621, 51, -342, -213, 221, 222, -306,
	-306, -352, -349, 51, -385, -387, 123, -291, -290, 711,
	712, 711, 712, 35, 193, 749, 719, -342, -353, -302,
	35, 366, 366, 366, 366, -213, -273, 204, 51, -290,
	204, 366, 366, 97, 653, 82, 82, 614, 628, -454,
	-453, -437, 85, 85, 85, 85, -318, 91, 75, -162,
	279, -432, 75, -181, -175, -186, -175, 79, -291, 78,
	78, 78, 135, -465, -406, -261, -209, 19, 21, -321,
	83, -321, 83, -176, -176, -176, -176, -466, -466, -466,
	-176, -466, 82, -176, -176, -197, 123, -239, 26, 33,
	-239, -244, -301, -174, -465, -466, -466, 78, -200, -465,
	-466, -211, -250, -122, -122, -122, -122, -229, -302, -353,
	-325, -453, 82, 82, 82, 614, 628, -454, -372, -371,
	76, 212, 91, 618, 636, 749, 719, -369, -228, -228,
	-352, -352, -234, -466, -465, -234, -466, 79, 79, 77,
	-227, -225, 24, -226, -405, 82, 265, 261, 265, 265,
	265, 265, 266, -432, -422, 91, 339, -440, 350, 717,
	334, 363, 85, 85, 122, 36, 37, -434, 21, 653,
	-425, 340, 82, 82, 340, 82, 82, 332, -456, 42,
	79, -406, -450, 29, -451, -450, 352, -54, -54, -417,
	-54, -363, 641, 85, -176, -465, -465, -277, 268, 79,
	83, -307, -307, -295, -265, -352, -466, 78, -291, 34,
	34, -213, -302, -302, -290, -291, -290, 204, -290, -465,
	200, 78, -466, 329, 82, 368, -163, -433, -183, -176,
	-176, -176, -458, -459, -292, 724, -407, 44, -410, 45,
	-219, 575, -210, -122, -196, -124, -122, -466, -466, -466,
	-466, -112, 120, 653, -466, -466, -211, 21, -117, 51,
	-239, -236, -174, -9, -201, -466, -229, -302, -466, -371,
	-453, -353, 82, -353, -353, 79, -332, 761, 760, -176,
	79, -370, -9, -227, 252, -227, 42, 42, 257, 258,
	-431, 82, 82, 34, 351, 187, 34, 85, 187, 577,
	340, 82, 83, 341, 341, 21, -176, -407, -415, -450,
	-54, -386, -465, 21, -466, -234, -176, -465, 110, 77,
	-352, 77, -387, 56, -176, 143, 143, 204, -290, -385,
	-149, -453, -225, -431, 133, -429, 276, -466, -466, -466,
	-466, 78, -306, 24, 82, 608, -408, -409, -339, 48,
	21, -218, -220, -291, 78, -466, 651, 72, 654, -222,
	125, 124, -195, 14, 85, 82, 82, 219, -466, 79,
	-225, -9, 253, -27, -4, -16, -17, -18, -19, -21,
	-73, -22, -23, -28, -29, -24, -83, -87, -88, -89,
	-85, -96, -94, -95, -91, -90, -32, -34, -35, -37,
	-40, -41, -38, -39, -36, -30, -33, -42, -25, -43,
	-44, -45, -50, -51, -31, -52, -46, 104, 206, 448,
	310, 321, 322, 323, 83, 326, 328, 324, 325, 320,
	330, 447, -318, 85, 34, 85, 34, 353, 341, 29,
	85, -317, 205, 653, -385, -364, -466, -466, -234, 85,
	-370, -295, -370, 237, -353, -302, -290, -466, -72, 653,
	-27, -318, 187, -430, 277, -181, -466, -459, -460, 608,
	30, 730, 529, 82, 49, 45, -411, 46, 47, 82,
	78, 29, -124, 62, 652, 655, -466, -223, 103, -224,
	122, 577, -180, 85, 187, -223, -245, -149, -332, -373,
	-372, -281, 653, -225, -214, 255, 256, -225, -122, -57,
	-58, 105, -122, 83, -67, -297, 313, 314, 315, -292,
	83, 83, -56, -27, 81, -56, -122, 83, 83, -468,
	16, 59, -176, 109, -56, 329, 660, 660, 82, -236,
	85, 333, -466, 621, 51, -466, 79, 77, 79, 238,
	-302, 289, -225, 329, -175, -181, -433, -274, 82, 608,
	-465, 529, 21, 21, 21, 21, -220, -221, 62, -224,
	127, 128, 253, 127, 128, -175, 77, 213, 280, 512,
	-281, -225, 83, 83, -57, 109, 107, -58, -122, 106,
	311, 312, 316, -306, 78, 764, 447, 323, 326, 328,
	764, 329, 83, 16, 764, -225, -246, 35, 44, 125,
	34, 338, 27, -418, -465, -277, -373, -370, -373, -465,
	-225, -183, -433, -301, -461, -462, 378, 93, 34, 82,
	-458, -465, 82, 82, 82, 82, 653, 100, -182, -234,
	352, 213, 213, -227, 109, 107, 104, -56, 106, -56,
	24, 24, 24, -321, -292, 109, -27, 109, -56, -56,
	-56, -122, 327, -56, 97, 109, -27, -245, 8, -176,
	-465, 79, -176, 235, -27, -462, 93, 34, -461, 93,
	34, 75, 75, -175, -466, -458, 654, -224, 79, 352,
	352, -20, -26, -19, -25, -16, -17, -18, 447, 653,
	104, -56, 764, -56, 764, -68, 85, -9, -66, -65,
	85, -68, 318, 101, 319, 83, -323, 323, 83, 764,
	764, 764, 329, -122, 764, -61, 83, -225, -418, -466,
	-176, -373, -466, -466, -225, 75, -175, 75, -175, 683,
	378, 683, 378, 75, -466, 655, -392, -393, 75, -225,
	-56, 109, -128, 764, 109, 764, 109, 107, -59, -60,
	108, -27, 78, 317, 34, 109, 109, 327, -56, 109,
	109, 78, -367, 642, -466, 75, 75, 378, 378, 683,
	378, -393, 75, -392, 75, 15, 14, 764, 109, 104,
	206, -56, 109, 107, -60, -122, -65, -176, 83, 323,
	-122, 764, 326, 328, 83, 85, -367, 75, 75, -391,
	220, 215, 218, 35, -391, 109, 104, 764, 206, -56,
	106, 83, 109, 109, 378, 683, 214, 34, 93, 109,
	764, -56, 326, 328, 206, 109, 764, 83, 83, 206,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1731, 1229, 1731, 0, 1229, 0, 1229, 0, -2,
	136, 934, 935, 936, 937, 0, 1811, 0, 0, 0,
	0, 0, -2, 1191, 1192, 1195, 1192, 1192, 1221, 0,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 736, 0, 65, 0, 1335, 2762,
	-2, 1225, 1226, 1227, -2, -2, 0, 54, 0, 61,
	2, 1739, 0, 1242, 1231, 1739, 0, 0, 0, 49,
	0, 0, 1229, 1229, 1229, 88, 89, 0, 122, 0,
	124, 0, 0, 1731, 1229, 0, 0, 0, 1815, 1815,
	338, 1815, 1815, 1830, 0, 1833, 336, 0, 1812, 1828,
	1829, 1831, 0, 0, 0, 0, 1813, 1813, 1813, 1813,
	1813, 1813, 1813, 1813, 1813, 0, 0, 1105, 1426, 1428,
	1429, 1430, 1431, 1842, 1843, 2753, 2754, 2755, 2756, 2757,
	2758, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2759, 2760, 2761, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 0,
	0, 0, 1110, 1111, 1112, 1113, 1114, 2747, 2748, 2749,
	2750, 2751, 2752, 1123, 1124, 0, 0, 0, 1182, 0,
	1182, 1142, 1143, 0, 1145, 0, 0, 0, 0, 0,
	0, 0, 1179, 1157, 1160, 1164, 0, 1739, 1739, 1179,
	1170, 0, 788, 789, 790, 1187, 1188, 1176, 1189, 1194,
	1193, 1202, 1202, 0, 1193, 1223, -2, 1223, 1363, 0,
	464, 466, 0, 487, 0, 490, 493, 1432, 0, -2,
	-2, 1853, 1208, 0, 0, 1879, 1880, 0, 0, 0,
	0, 0, 2619, 236, 352, 277, 277, 277, 277, 277,
	277, 277, 0, 277, 277, 0, 277, 277, 277, 2635,
	277, 0, 277, 277, 277, 277, 277, 235, 351, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 341, 342,
	343, 0, 0, 0, 740, 1196, 745, 743, 0, 737,
	734, 735, 0, 81, 0, 68, 82, 1762, 1385, 1386,
	1387, 1332, 0, 1336, -2, 0, 1813, 0, 1818, 70,
	1322, 1323, 1324, -2, 0, 0, 1330, 1331, -2, 1482,
	1842, 0, 0, 1236, 0, 0, 1233, 1239, 0, 1746,
	0, 0, 120, 1230, 47, 48, 2763, 60, 0, 0,
	0, 1258, 1313, 0, 1441, 2315, 1447, -2, 2228, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 2173, 0, 0,
	0, 0, 0, 2270, 1520, 1521, 1522, 1523, 1524, 1525,
	2482, 2700, 2701, 1709, 1713, 1714, 1715, 1716, 1717, 1718,
	-2, -2, -2, 1692, 1693, 1707, 0, 2753, 2754, 2756,
	2757, 2758, 1780, 0, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 2296, 2360, 2247, 2365,
	2192, 2759, 2184, 2760, 2261, 2389, 2390, 2761, 2304, 2732,
	0, -2, 2414, 2352, -2, -2, -2, 1588, -2, -2,
	-2, 2743, 2744, 2729, 2734, 2254, 2202, 2312, 2353, 2193,
	2214, 2233, 2282, 2283, 2285, 2317, 2318, 2336, 2345, 2364,
	2174, 2175, 2176, 2277, 2278, 2386, 2385, 2384, 2387, 2420,
	2418, 2421, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2177, 2178, 2179, 2180, 2181, 2183, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2194, 2195, 2196, -2,
	2201, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2212,
	2213, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223,
	2224, 2225, 2226, 2227, 2229, 2230, 2232, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2248, 2249, 2250, 2251, 2252, 2253, 2255, 2256, 2257, 2258,
	2259, 2260, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2271, 2272, 2273, 2274, 2275, 2276, 2279, 2280, 2281, 2284,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2297, 2298, -2, -2, 2301, 2302, 2303, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2313, 2314, 2316, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2337, 2338, 2339, 2340, 2341, 2342, 2343,
	2344, 2346, 2347, 2348, 2349, 2350, 2351, 2354, 2355, 2356,
	2357, 2358, 2359, 2361, 2362, 2363, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2388, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2415, 2416, 2417, 2419, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 0, 1817,
	1817, 0, 107, 2702, 0, 1787, -2, -2, 1789, 0,
	0, 0, -2, -2, -2, -2, 2185, -2, 1692, 0,
	0, 0, 0, 2173, 2174, 2175, 2176, 2182, 2184, 2192,
	2193, 2197, 2198, 2199, 2200, 2202, 2211, 2214, 2228, 2231,
	2233, 2247, 2254, 2261, 2270, 2277, 2278, 2282, 2283, 2285,
	2296, 2299, 2300, 2304, 2312, 2315, 2317, 2318, 2319, 2336,
	2345, 2352, 2353, 2360, 2364, 2365, 2384, 2385, 2386, 2387,
	2389, 2390, 2401, 2411, 2412, 2413, 2414, 2418, 2420, 2421,
	123, 1731, 0, 125, 0, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 814, 1836, 1837, 0, 1739, 1242,
	1815, 1815, 336, 0, 0, 0, 0, 0, 1815, 331,
	0, 0, 0, 0, 1815, 338, 0, 0, 1085, 0,
	1086, 0, 346, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1129, 1130, 1104, 0, 1106, 99, 1109,
	0, 0, 0, 0, 1127, 1128, 1131, 0, 1173, 1182,
	1133, 0, 0, 1815, 1815, 0, 0, 0, 0, 0,
	1141, 0, 816, 817, 1182, 1147, 1148, 1182, 1182, 1182,
	1179, 0, 1179, 1154, 1177, 1178, 1182, 0, 0, 0,
	1159, 0, 0, 0, 1167, 1168, 1182, 1172, 0, -2,
	1200, -2, 1209, 0, 0, 80, 1224, 1223, 0, 1228,
	1364, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	489, 470, 0, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 0, 1363, 0, 0, 1848,
	1854, 1213, 1870, 1871, 0, 1881, 1882, 281, 0, 281,
	0, 0, 0, 0, 203, 277, 0, 205, 277, 277,
	277, 0, 277, 277, 212, 213, 277, 215, 216, 217,
	277, 219, 220, 277, 222, 223, 224, 277, 277, 227,
	277, 277, 230, 231, 232, 233, 234, 350, 0, 0,
	0, 2619, 1814, 0, 0, 0, 0, 741, 746, 747,
	742, 744, 713, 0, 0, 0, 0, 718, 719, 720,
	721, 0, 0, 724, 725, 730, 730, 0, 66, 67,
	0, 0, 0, 1335, 1333, 0, -2, 939, -2, 689,
	690, 691, 0, 686, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 0, 1391, 0, 0, 0, 0, 0,
	1827, -2, 0, 0, 0, 0, 1320, 0, 1337, 0,
	1339, 0, -2, 0, 0, 0, 1827, 1343, 1344, 1345,
	1346, 1347, 0, 0, 0, 1484, 0, 58, 59, 1237,
	1238, 55, 63, 64, 56, 1234, 1235, 1240, 1241, 57,
	74, 0, 0, 1740, 1743, 1744, 1745, 1732, 1733, 1736,
	0, 0, 74, 1243, 1244, 1245, 1246, 1247, 1248, 0,
	1232, -2, 0, 1259, 0, 0, 0, 0, 1314, 0,
	1317, 1318, 1319, 0, 1445, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1448, 0, 1462, 0, 0, 0, 0, 0, 0,
	0, 1513, 1514, 1515, 1516, 1517, 1518, 0, 1710, 1711,
	1712, 1249, 0, 0, 0, 1249, 1249, 1249, 1249, 1249,
	0, 0, 1488, 2427, 2392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 1684, 0, 0, 1585, 0, 1586, 1587, 1589, 1603,
	0, 1590, 1591, 0, 0, 0, 0, 0, 1484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1598, 1599, 1600, 0, 0, 0,
	0, 0, 0, 99, 101, 1426, 0, 108, 110, 0,
	0, 2702, 1790, 1791, 680, 1805, 1806, 1807, 1808, 0,
	777, 778, 1803, 0, 1739, 0, 831, 0, 561, 659,
	579, 580, 581, 649, 583, 651, 0, 651, 651, 1681,
	1682, 651, 651, 651, 625, 626, 627, 628, 629, 631,
	632, 633, 634, 635, 0, 0, 607, 649, 649, 649,
	611, 638, 639, 640, 641, 642, 651, 644, 645, 646,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 654, 654, 656, 656, 656,
	656, 656, 561, 561, 561, 561, 561, 0, 813, 1040,
	1041, 0, 1746, 120, 0, 0, 0, 0, 338, -2,
	0, -2, 0, 1421, 0, 0, 0, 0, 149, 374,
	354, 134, 0, 0, 332, 337, 333, 334, 335, 0,
	0, 0, 0, 345, 0, 0, 1093, 97, 1094, 1095,
	1096, 1097, 1098, 347, 1099, 1100, 376, 0, 1427, 1844,
	1845, 1846, 1847, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 0, 0, 0, 1115, 1117, 1121, 1122, 1116,
	1118, 1125, 1119, 1126, 1171, 1132, 1183, 0, 1185, 0,
	0, 1363, 1137, 1138, 1139, 1140, 818, 1146, 1149, 1150,
	1156, 1182, 0, 1363, 1155, 1180, 1181, 1158, 1476, 1161,
	1601, 0, 1169, 1190, 1206, 0, 1201, 0, 1207, 1211,
	1210, 0, 1214, 1217, 1218, 1219, 1220, 80, 1216, 0,
	0, 0, 1222, 465, 467, 469, 488, 0, 0, 491,
	492, 494, 0, 1433, 1850, 0, 0, 1873, 0, 1875,
	1877, 0, 0, 282, 283, 284, 281, 0, 237, 0,
	299, 353, 0, 204, 0, 279, 206, 207, 208, 277,
	210, 211, 214, 218, 221, 225, 226, 228, 229, 349,
	281, 0, 0, 281, 0, 0, 0, 739, 758, 0,
	0, 1197, 1198, 0, 714, 715, 716, 717, 732, 723,
	726, 730, 0, 727, 730, 0, 0, 83, 0, 0,
	1764, 1767, 1768, 1769, 1770, 1771, 1772, 1840, 1841, 0,
	938, 692, 693, 694, 0, 775, 775, 775, 685, 359,
	386, 1381, 1383, 0, 1378, 1389, 1390, 1392, 0, 1394,
	0, 0, 1397, 1398, 1399, 1367, 0, 0, 1329, 1481,
	1483, 0, 0, 1435, 1341, 0, 0, 0, 0, 0,
	0, 0, 1357, 0, 0, 0, 1358, 0, 0, 0,
	1359, 0, 1485, 1486, 1254, 1255, 0, 0, 45, 0,
	1747, 0, 0, 0, 0, 1735, 1737, 1738, 0, 0,
	1720, 0, 0, 71, 120, 120, 51, 1442, 1443, 1444,
	1446, 1463, 0, 1465, 1467, 1315, 1316, 1260, 0, 1694,
	-2, 1696, 1697, -2, -2, -2, 1453, 1454, 1478, 1479,
	1480, 0, 0, 0, 0, 1476, 1458, 0, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1512, 1616, 1617, 1618, 0, 1705, 0, 1706, 1510, 0,
	0, 0, 1719, 1511, 1700, 1519, 1484, 1250, 1251, 1703,
	1704, 1701, 1702, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 1560, 0, 0, 0, 0, 0, 1494,
	1709, 0, 1494, 1709, 0, 0, 2286, 2399, 2178, 0,
	0, 0, 1690, 1687, 0, 0, 0, 0, 2747, 2748,
	0, 1602, 0, 0, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 0, 0, 0, 1286, 1287,
	1288, 1289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	0, 103, 0, 1425, 0, -2, 0, 0, 95, 96,
	0, 0, 0, 1788, 0, 0, 0, 113, 114, 109,
	1792, 681, 0, -2, 1799, 1709, 1801, 1694, 0, 1746,
	-2, 546, 547, 548, 549, 0, 795, 804, 0, 0,
	793, 0, 795, 795, 0, 791, 792, 552, 662, 660,
	661, 582, 0, 612, 0, 651, 651, 1681, 1682, 614,
	651, 651, 617, 651, 651, 620, 623, 624, 630, 0,
	0, 608, 609, 610, 643, 599, 0, 600, 654, 602,
	0, 603, 604, 605, 606, 553, 554, 555, 556, 557,
	812, 0, 301, 1834, 1762, 0, 0, 129, 1816, 130,
	0, 397, 398, 0, 303, 0, 339, 340, 151, 0,
	0, 355, 0, 140, 0, 541, 542, 0, 1087, 0,
	1089, 344, 1101, 0, 0, 0, 0, 0, 0, 100,
	0, 1184, 1134, 1135, 1136, 1439, 0, 0, 1151, 1179,
	1182, 1174, 0, 0, 1162, 0, 1205, 1203, 1212, 1215,
	1360, 0, 0, 471, 472, 473, 495, 0, 1851, 1852,
	1849, 1872, 0, 1876, 1878, 0, 285, 287, 0, 0,
	193, 0, 0, 278, 0, 209, 0, 0, 0, 0,
	195, 0, 738, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 722, 0, 728, 0,
	729, 711, 712, 84, 1763, 0, 0, 1334, 775, 0,
	776, 0, 0, 1048, 941, 942, 943, 1050, 0, -2,
	1046, 1046, 775, 1046, 0, 0, 0, 0, 0, 0,
	980, 775, 1046, 1822, 0, 993, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1038, 1039, 775, 775, 775,
	775, 775, 775, 775, 775, 0, 0, 775, 775, 775,
	775, 775, 775, 775, 775, 775, 775, 775, 775, 775,
	775, 775, 775, 775, 775, 775, 775, 775, 775, 775,
	0, 775, 775, 161, 360, 1083, 0, 1375, 1382, 0,
	0, 1376, 0, 1377, 1393, 1395, 1396, 1325, 0, 1367,
	1321, -2, 0, 1371, 1340, 1435, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 0, 75, 2495, 0, 78, 0, 1749, 0, 1741,
	1742, 1734, 0, 1809, 1810, 1721, 1722, 1439, 0, 0,
	1252, 1464, 1466, 1468, 0, 1484, 1455, 1476, 1459, 0,
	1456, 0, 1450, 1558, 0, 0, 0, 0, 0, 0,
	1489, 1556, 1557, 1559, 0, 0, 0, 1563, 0, 0,
	1567, 0, 0, 1609, 0, 0, 1610, 1572, 0, 0,
	0, 0, 0, 1578, 1731, 0, 1688, 0, 0, 1581,
	1582, 1583, 1584, 1604, 0, 0, 0, 0, 1605, 1606,
	1607, 1608, 1545, 0, 1546, 0, 0, 0, 0, 0,
	0, 1553, 1554, 1555, 1269, 1269, 1269, 1269, 1269, 1269,
	1269, 1269, 1269, 1269, 1269, 1269, 1597, 0, 0, 1424,
	0, 1439, 0, 1439, 1439, 102, 0, 1434, 111, 112,
	0, 0, 118, 682, 683, 684, 1800, 0, 302, 543,
	832, 685, 909, 775, 775, 775, 0, 775, 775, 775,
	775, 775, 0, 0, 775, 775, 775, 775, 775, 775,
	775, 775, 775, 775, 775, 775, 775, 775, 775, 775,
	775, 0, 775, 775, 775, 775, 775, 775, 0, 775,
	775, 0, 0, 0, 0, 803, -2, -2, 795, 795,
	795, 794, 795, 795, 786, 796, 797, 787, 810, 562,
	563, 0, 565, 566, 567, 568, 569, 570, 571, 572,
	0, 0, 0, 0, 577, 0, 0, 0, 0, 671,
	0, 706, 708, 0, 0, 578, 663, 0, 0, 0,
	613, 651, 621, 615, 616, 618, 619, 0, 647, 0,
	0, 601, 0, 828, 0, 0, 0, 1762, 0, 0,
	399, 400, 401, 1422, 0, 304, 305, 0, 0, 0,
	0, 0, 161, 0, 375, 0, 0, 0, 0, 0,
	137, 0, 0, 0, 1091, 1102, 1103, 1092, 98, 348,
	377, 0, 0, 1120, 1144, 0, 819, 820, 1363, 1153,
	1477, 1163, 1165, 1166, 1361, 1362, 103, 0, 1874, 0,
	0, 0, 0, 0, 0, 297, 280, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 0, 0, 0, 731, 1765, 1766,
	0, 698, 699, 700, 701, 702, 703, 704, 908, 685,
	1049, 0, 0, 0, 0, 1051, 916, 0, 1815, 0,
	0, 950, 951, 0, 1047, 930, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	775, 0, 972, 973, 974, 0, 975, 0, 0, 0,
	0, 0, 0, 0, 1823, 1824, 1825, 992, 0, 0,
	0, 0, 0, 0, 0, 0, 1072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1031, 1032, 889, 890, 891, 892, 893, 905, 906,
	907, 894, 895, 896, 0, 0, 1042, 0, 389, 0,
	0, 0, 1379, 0, 1384, 0, 1369, 1326, -2, 0,
	1342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1487, 1256, 0, 0, 0, 76,
	672, 1748, 1750, 46, 1723, 72, 73, 120, 1261, 1708,
	0, 1457, 0, 1460, 1526, 1269, 1269, 1269, 1269, 1269,
	0, 649, 649, 649, 1666, 649, 656, 1669, 1671, 1672,
	1673, 649, 1675, 649, 1678, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	1580, 1691, 0, 0, 0, 0, 0, 1262, 1263, 1265,
	1547, 1548, 1549, 1550, 1551, 1552, 1530, 1270, 1531, 1532,
	1534, 1535, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1773,
	1773, 0, -2, 1756, 0, 1753, 1335, 1760, 1761, 0,
	1439, 1781, 0, 0, 0, 0, 1731, 1439, 93, 94,
	0, 115, 116, 117, 833, 0, 0, 0, 775, 0,
	775, 0, 0, 0, 0, 0, 775, 775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 864, 0, 0, 0, 0,
	0, 0, 875, 876, 0, 0, 0, 0, 798, 649,
	649, 0, 793, 802, 779, 781, 782, 783, 785, 0,
	811, 564, 0, 0, 575, 0, 0, 677, 678, 679,
	664, 0, 0, 667, 668, 0, 1451, 1452, 1601, 1601,
	1601, 1601, 1601, 1601, 0, 0, 0, 0, 1601, 1601,
	1601, 0, 705, 707, 709, 710, 650, 652, 653, 622,
	636, 0, 637, 0, 657, 0, 815, 829, 830, 0,
	1835, 119, 0, 140, 0, 311, 0, 307, 0, 0,
	0, 0, 169, 152, 153, 154, 156, 157, 0, 0,
	0, 150, 0, 357, 0, 362, 363, 364, 0, 0,
	0, 0, 0, 1088, 1090, 0, 0, 1366, 1108, 1440,
	1182, 672, 0, 297, 286, 288, 289, 0, 297, 300,
	194, 0, 0, 0, 0, 0, 0, 195, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 0, 0, 733,
	695, 696, 697, 940, 944, -2, 1046, 0, 0, 922,
	911, 0, 0, 920, 921, 917, 0, 1043, 0, 0,
	795, 793, 1830, 0, 0, -2, 952, 953, 976, 0,
	978, 0, 1053, 0, 0, 0, 0, 958, 959, 960,
	961, 0, 775, 0, 0, 0, 0, 0, 0, 981,
	982, 983, 984, 1043, 0, 0, 988, 0, 0, 0,
	0, 0, 1060, 0, 0, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1037, 994, 995, 996, 997, 998, 999,
	1000, 1001, 0, 0, 1004, 885, 886, 1005, 1006, 1007,
	1008, 1009, 1010, 1011, 882, 883, 884, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 897, 898, 899, 900,
	901, 902, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 0, 1035, 0, 162, 163, 0, 0, 0,
	0, 393, 390, 391, 0, 387, 0, 386, 0, 0,
	0, 1368, 0, 1338, 1372, 1436, 1437, 1438, 1348, 1349,
	0, 1351, 1352, 0, 1354, 1355, 0, 1374, 0, 0,
	79, 1863, 673, 1728, 0, 1253, 1527, 1461, 1529, 1533,
	1528, 1536, 1541, 1561, 1661, 672, 672, 1667, 1668, 1670,
	1674, 1676, 1677, 1679, 1565, 1562, 1564, 1566, 0, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 0, 1689,
	0, 0, 1594, 1595, 1267, 1266, 105, 0, 105, 1773,
	0, 0, 0, 0, 0, -2, -2, -2, 2157, 2121,
	1758, 1775, 0, 0, 1731, 0, 0, 0, 0, 0,
	1739, 92, 834, 835, 836, 0, 775, 0, 839, 840,
	842, 843, 844, 0, 0, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 0, 879, 0, 881, 763, 0, 1736, 1736,
	795, 795, 0, 0, 0, 0, 674, 675, 676, 665,
	666, 0, 670, 648, 0, 0, 0, 121, 119, 139,
	0, 120, 312, 313, 0, 0, 0, 318, 0, 0,
	0, 0, 0, 306, 308, 309, 310, 386, 187, 170,
	171, 0, 0, 0, 0, 0, 158, 159, 160, 356,
	0, 0, 361, 0, 0, 0, 0, 141, 142, 0,
	144, 140, 0, 0, 1152, 1863, 1423, 290, 297, 290,
	0, 195, 195, 0, 195, 196, 202, 760, 761, 924,
	0, 0, 0, 0, 918, 0, 946, 1044, 0, 561,
	561, 1834, 1815, 795, 0, 1075, 0, 977, 979, 954,
	956, 955, 957, 0, 0, 964, 965, 1043, 0, 969,
	0, 1054, 1055, 1056, 1057, 985, 0, 0, 0, 0,
	0, 1058, 1059, 0, 0, 1002, 1003, 1033, 1034, 0,
	903, 164, 165, 166, 167, 168, 1079, 0, 0, 1084,
	388, 1083, 0, 380, 395, 396, 0, 1380, 1370, 0,
	0, 0, 1257, 0, 1865, 1859, 1281, 0, 0, 1662,
	1663, 1664, 1665, 0, 0, 0, 0, 1574, 1575, 1576,
	1611, 1579, 1686, 0, 0, 1731, 0, 85, 120, 0,
	86, 105, 1367, 1754, 0, 0, 1759, 1335, 1777, 0,
	104, 1739, 1782, 1783, 1784, 1785, 1786, 91, 837, 0,
	841, 887, 888, 845, 846, 877, 878, 0, 762, 766,
	0, 775, 0, 775, 775, 773, 774, 799, 800, 801,
	780, 784, 0, 558, 0, 0, 669, 655, 658, 0,
	0, 121, 0, 121, 314, 315, 316, 317, 319, 320,
	0, 0, 0, 389, 133, 0, 0, 172, 0, 0,
	0, 0, 182, 183, 184, 185, 186, 155, 0, 0,
	358, 0, 367, 369, 0, 368, 370, 0, 138, 0,
	1365, 1865, 190, 0, 290, 192, 298, 197, 199, 195,
	198, 1073, 0, 923, 0, 0, 0, 0, 0, 945,
	1045, 550, 551, 0, 795, 0, 1052, 0, 0, 0,
	963, 966, 967, 970, 986, 987, 0, 0, 991, 0,
	0, 0, 1036, 119, 394, 392, 389, 378, 382, 0,
	0, 0, 0, 1401, 0, 2587, 77, 1867, -2, 0,
	69, 0, 1729, 1730, 1724, 1725, 1727, 1568, 1570, 1569,
	1571, 0, 0, 0, 1592, 1593, 1271, 0, 106, 0,
	87, 1752, 1755, 1757, 1776, 1778, 90, 838, 880, 767,
	768, 0, 770, 0, 0, 0, 573, 559, 560, 0,
	576, 0, 119, 0, 0, 80, 321, 322, 323, 324,
	393, 188, 189, 173, 174, 0, 176, 177, 0, 0,
	0, 372, 0, 365, 366, 0, 1107, 1819, 291, 191,
	200, 910, 0, 916, 912, 0, 0, 0, 0, 0,
	1834, 0, 1076, 0, 962, 775, 0, 0, 990, 0,
	1062, 904, 80, 393, 0, 384, 0, 1350, 1353, 1356,
	0, 0, 0, 0, 0, 0, 1866, 1861, 0, 1858,
	0, 1282, 1283, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 1268, 0, 769, 771, 772, 0, 558, 764,
	145, 119, 402, 119, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 512, 513,
	514, 515, 516, 517, 518, 519, 520, 521, 522, 523,
	524, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 0, 0, 0,
	0, 0, 0, 80, 0, 80, 0, 0, 0, 447,
	0, 80, 0, 0, 178, 0, 180, 181, 371, 0,
	143, 1367, 0, 0, 0, 0, 913, 914, 0, 919,
	0, 0, 0, 0, 0, 971, 989, 1061, 0, 1038,
	119, 1080, 0, 379, 0, 380, 1826, 1402, 1403, 0,
	0, 1404, 0, 0, 0, 0, 1864, 0, 0, 1860,
	0, 0, 1726, 1612, 0, 1615, 1264, 1272, 0, 1275,
	0, 0, 0, 1311, 0, 1273, 1774, 0, 574, 126,
	765, 127, 0, 145, 119, 0, 0, 132, 0, 0,
	417, 0, 0, 1836, 0, 0, -2, -2, -2, 1838,
	444, 445, 0, 496, 0, 0, 0, 461, 462, 0,
	448, 0, 463, 325, 0, 119, 175, 179, 373, 42,
	0, 0, 1074, 0, 918, 915, 764, 0, 764, 0,
	968, 1063, 1081, 119, 0, 380, 383, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 1284, 1285, 1613, 0,
	1276, 1277, 1278, 1279, 1280, 0, 0, 0, 0, 0,
	128, 121, 403, 404, 0, 0, 80, 418, 0, 80,
	0, 0, 0, 672, 0, 80, 80, 80, 80, 0,
	80, 80, 0, 449, 80, 80, 44, 0, 1820, 1821,
	292, 293, 294, 296, 0, 0, 947, 0, 949, 0,
	80, 381, 385, 1400, 1408, 1409, 0, 0, 0, 1416,
	0, 0, 1868, 1869, 1862, 1856, 0, 0, 1312, 0,
	146, 0, 0, 80, 0, 80, 415, 0, 80, 0,
	0, 0, 0, 680, 1839, 0, 497, 326, 0, 0,
	0, 0, 0, 0, 0, 328, 119, 43, 0, 0,
	0, 764, 0, 2305, 119, 1410, 0, 0, 1411, 0,
	0, 0, 0, 0, 1405, 0, 0, 1274, 805, 147,
	148, 119, 405, 406, 407, 408, 409, 410, 80, 0,
	413, 0, 80, 0, 80, 427, 428, 429, 80, 436,
	438, 439, 440, 0, 442, 443, 431, 452, 327, 80,
	80, 80, 80, 0, 80, 446, 450, 135, 295, 927,
	0, 948, 1077, 1078, 1082, 0, 0, 0, 0, 1412,
	1413, 1417, 1419, 0, 1406, 1614, 806, 807, 0, 131,
	0, 412, 81, 80, 0, -2, 0, 80, 0, 424,
	0, 430, 0, 441, 0, 329, 0, 0, 0, 0,
	0, 0, 925, 0, 927, 0, 0, 0, 0, 1418,
	1420, 808, 0, 809, 0, 0, 0, 80, 0, 416,
	420, 0, 0, 80, 425, 0, 437, 432, 330, 453,
	0, 80, 455, 458, 451, 928, 926, 0, 0, 821,
	823, 824, 0, 0, 822, 411, 414, 80, 422, 0,
	80, 454, 0, 0, 1414, 1415, 825, 826, 827, 0,
	80, 0, 456, 459, 421, 0, -2, 457, 460, 423,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 102, 3, 3, 3, 138, 130, 3,
	77, 79, 135, 133, 78, 134, 188, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 81, 764,
	111, 110, 112, 3, 80, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 101, 103, 104, 105, 106, 107,
	108, 109, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 128, 131, 132,
	137, 139, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	58085, 762, 58086, 763, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:615
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:619
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:625
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:659
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			// Allow parenthesized SELECT statements in contexts that disallow INTO
			// Enables INSERT INTO t (SELECT ...) for MySQL compatibility
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:714
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:741
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:750
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:754
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:761
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:769
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:777
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:781
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:793
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:816
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 69:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:822
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:844
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:848
		{
			yyVAL.val = TableExprs(nil)
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 74:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = (*Into)(nil)
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:865
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:869
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 77:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:873
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:883
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:888
		{
			yyVAL.val = (*With)(nil)
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:892
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:898
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:908
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:920
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:946
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			ins.Returning = yyDollar[9].val.(SelectExprs)
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:972
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Returning:  yyDollar[10].val.(SelectExprs),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.val = InsertStr
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.val = ReplaceStr
		}
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1018
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 91:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1036
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1059
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1072
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1085
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1139
		{
			yyVAL.val = Partitions(nil)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1143
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1148
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.val = yyDollar[2].val.(SelectExprs)
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1162
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1169
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1219
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1224
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1229
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1253
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1258
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 126:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1263
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[8].val.(TableName)
			ddl := &DDL{
				Action:      AlterStr,
				Table:       tableName,
				IfNotExists: yyDollar[4].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      yyDollar[5].val.(ColIdent),
					Using:       yyDollar[6].val.(ColIdent),
					Type:        yyDollar[2].val.(string),
					Columns:     yyDollar[10].val.([]*IndexColumn),
					Options:     yyDollar[12].val.([]*IndexOption),
					ifNotExists: yyDollar[4].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[8].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 127:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1292
		{
			viewName := yyDollar[5].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[10].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[6].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[12].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				IfNotExists:               yyDollar[4].val.(int) != 0,
				SpecialCommentMode:        yyDollar[9].val.(bool),
				SubStatementPositionStart: yyDollar[8].val.(int),
				SubStatementPositionEnd:   yyDollar[11].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1313
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1334
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1352
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1370
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1394
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1416
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1463
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 137:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1497
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 138:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1509
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1522
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1536
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1558
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1591
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1596
		{
			yyVAL.val = []AccountName(nil)
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1600
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1609
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1641
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1650
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1678
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1682
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1687
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1711
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1715
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1723
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1727
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1731
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1735
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1739
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1764
		{
			yyVAL.val = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1779
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1795
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1811
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1826
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1838
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1851
		{
			yyVAL.val = false
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.val = true
		}
	case 197:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1861
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 198:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1877
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 199:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1892
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[9].val.(bool),
			}
		}
	case 200:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1908
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[10].val.(bool),
			}
		}
	case 201:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1924
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[6].val.(bool),
			}
		}
	case 202:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
				IgnoreUnknownUser: yyDollar[8].val.(bool),
			}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1956
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1968
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1972
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1976
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1984
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1996
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2012
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2024
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2032
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2040
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2044
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2052
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2090
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2136
		{
			yyVAL.val = []string(nil)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2140
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2185
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2194
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2198
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2202
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2206
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2210
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 295:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2214
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2218
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2223
		{
			yyVAL.val = false
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.val = true
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.val = false
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.val = true
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2243
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2256
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2268
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2300
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2305
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2333
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2341
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2345
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2353
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2361
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2367
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2371
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2375
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2384
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 329:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2388
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2392
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2426
		{
			yyVAL.val = ""
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2435
		{
			yyVAL.val = ""
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2439
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2443
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2457
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2463
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2471
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2491
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2499
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2531
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2535
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2539
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2543
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2548
		{
			yyVAL.val = &Authentication{}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.val = yyDollar[1].val
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2566
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2574
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2578
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2582
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2586
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2590
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2594
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2600
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2604
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2608
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2618
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2638
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2647
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2652
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2670
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2674
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2678
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2683
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.val = EventStatus_Enable
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.val = EventStatus_Disable
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2695
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2700
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2704
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2714
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.val = BeforeStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.val = AfterStr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.val = InsertStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.val = UpdateStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.val = DeleteStr
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2768
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2778
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2782
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2786
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 416:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2790
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2806
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2812
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 421:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2817
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 422:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2822
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 423:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2828
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2840
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2846
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 427:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2852
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2856
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2860
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 430:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2864
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2868
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2875
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2925
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2947
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2955
		{
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2969
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2973
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2977
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 455:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2988
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 456:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2992
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 457:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2996
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3007
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 459:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3011
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 460:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3015
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3026
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3032
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3056
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3076
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.val = &Resignal{}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3150
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3154
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3158
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3162
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3168
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3184
		{
			yyVAL.val = Exprs(nil)
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3188
		{
			yyVAL.val = Exprs(nil)
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3192
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3202
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3256
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3283
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3313
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3341
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3351
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3362
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3397
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3408
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3442
		{
			yyVAL.val = BoolVal(false)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.val = BoolVal(false)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.val = BoolVal(true)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3455
		{
			yyVAL.val = ColumnType{}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3463
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3474
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3485
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3539
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3550
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3572
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3583
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3606
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3617
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3642
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3658
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3662
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3723
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3744
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3751
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3778
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3782
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3824
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3828
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3832
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3836
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3844
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3860
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3868
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3897
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3903
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3923
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3951
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3955
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3964
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3973
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3977
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3985
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3989
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3995
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = BoolVal(false)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.val = BoolVal(false)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.val = BoolVal(true)
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4016
		{
			yyVAL.val = BoolVal(false)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4026
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4030
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4052
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4056
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4062
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.val = BoolVal(true)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4077
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4091
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4095
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4099
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4103
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = ""
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4113
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4123
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4127
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4132
		{
			yyVAL.val = false
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.val = true
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4141
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4163
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4181
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4185
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4189
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4193
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4197
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4207
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4211
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4217
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = colKeyPrimary
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = colKey
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4231
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.val = colKeyUnique
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4239
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4251
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4255
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4261
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4275
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4279
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4283
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4287
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4303
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4307
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4311
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4323
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4331
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4335
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4340
		{
			yyVAL.val = false
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yyVAL.val = true
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4345
		{
			yyVAL.val = ""
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.val = ""
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4362
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4372
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4411
		{
			yyVAL.val = false
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.val = true
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4416
		{
			yyVAL.bytes = nil
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4420
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4434
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4440
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4444
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4464
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 760:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4484
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4488
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4494
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4498
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4503
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4517
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4523
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4527
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4532
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4536
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4540
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4554
		{
			yyVAL.val = ""
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.val = ":="
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4576
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4580
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4584
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4588
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4596
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4609
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4613
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			yyVAL.val = ""
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4651
		{
			yyVAL.val = ""
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4665
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4675
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4679
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4689
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 805:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4699
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 806:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4703
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 807:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4707
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 808:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4711
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 809:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4715
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4720
		{
			yyVAL.bytes = []byte(nil)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4724
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4734
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4744
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4750
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4754
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4759
		{
			yyVAL.val = ""
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4763
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4767
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = Restrict
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = Cascade
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = NoAction
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = SetDefault
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = SetNull
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = true
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4810
		{
			yyVAL.val = true
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.val = false
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4819
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4823
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4881
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4885
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4889
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4893
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4917
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4921
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4925
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4929
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4933
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4937
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4941
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4945
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4949
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4953
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4969
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4977
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4981
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4985
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4989
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4997
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5001
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5005
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5009
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5017
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5021
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5051
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5061
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5065
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5070
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5074
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5078
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5088
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5092
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5102
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5106
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5118
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5128
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5139
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5143
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5149
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5158
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5162
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5169
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 914:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5178
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 915:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5186
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5196
		{
			yyVAL.val = false
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.val = true
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5205
		{
			yyVAL.val = ""
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5209
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5215
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5219
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5224
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5228
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5233
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 925:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5237
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 926:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5246
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5257
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5261
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5266
		{
			yyVAL.val = ""
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5270
		{
			yyVAL.val = ""
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5274
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5279
		{
			yyVAL.val = string("")
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5283
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5295
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5309
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 940:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5324
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5344
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5357
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5371
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5375
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5381
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5399
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 947:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5418
		{
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(yyDollar[4].val.(string)),
					Using:       yyDollar[5].val.(ColIdent),
					Columns:     yyDollar[7].val.([]*IndexColumn),
					Options:     yyDollar[9].val.([]*IndexOption),
					ifNotExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5437
		{
			idxName := yyDollar[6].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action:      AlterStr,
				IfNotExists: yyDollar[5].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:      CreateStr,
					ToName:      NewColIdent(idxName),
					Type:        yyDollar[3].val.(string),
					Using:       yyDollar[7].val.(ColIdent),
					Columns:     yyDollar[9].val.([]*IndexColumn),
					Options:     yyDollar[11].val.([]*IndexOption),
					ifNotExists: yyDollar[5].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5463
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5485
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5499
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5513
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5550
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5560
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5570
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5580
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5590
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5600
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5610
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5620
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5630
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5645
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5661
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5671
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5681
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5697
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5711
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5725
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5739
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5753
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5767
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5780
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5793
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5803
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5813
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5825
		{
			yyVAL.val = &DDL{
				Action:   AlterStr,
				IfExists: yyDollar[3].val.(int) != 0,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5841
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5855
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5872
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5882
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5892
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5902
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5912
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5922
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			if len(ddl.TableSpec.Constraints) > 0 {
				ddl.ConstraintAction = AddStr
			}
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5942
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5955
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 989:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5984
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 990:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6005
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 991:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6026
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6045
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6055
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr, AlterCommentSpec: &AlterCommentSpec{Comment: string(yyDollar[3].bytes)}}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6191
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6195
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6199
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6203
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6207
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6211
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6215
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6219
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6223
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6227
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6231
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6235
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6239
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6245
		{
			yyVAL.val = true
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6249
		{
			yyVAL.val = false
		}
	case 1042:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6259
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6285
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6289
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6293
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6298
		{
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6300
		{
		}
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6303
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6307
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6313
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6317
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6327
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6331
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6335
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6339
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6343
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6347
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6351
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6355
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1061:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6359
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6363
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1063:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6367
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6371
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6375
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6388
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6392
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6396
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6400
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6404
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6408
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6412
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6417
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6421
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6427
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6431
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1077:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6437
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6441
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1079:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6447
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1080:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6477
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6503
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6531
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6561
		{
			yyVAL.val = EventName{}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6565
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6571
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6575
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6587
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6611
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6627
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6631
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6637
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6662
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[6].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:   DropStr,
					ToName:   yyDollar[4].val.(ColIdent),
					ifExists: yyDollar[3].val.(int) != 0,
				},
				IfExists: yyDollar[3].val.(int) != 0,
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6687
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6705
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6722
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6739
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6759
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6779
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6794
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6809
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6828
		{

		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6832
		{
			yyVAL.val = Restrict
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6836
		{
			yyVAL.val = Cascade
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6842
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6855
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6870
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6876
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6880
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6884
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6897
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6901
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6905
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6909
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6915
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6919
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6926
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6930
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6936
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6940
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6944
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6948
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6958
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6962
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6966
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6972
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6983
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6994
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7005
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7017
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7029
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7042
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7055
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7066
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7077
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7088
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7099
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7109
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7119
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7132
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7142
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7153
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7163
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7173
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7184
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7196
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7208
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7222
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7235
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7246
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7260
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7272
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7282
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7293
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7306
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7316
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7328
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7339
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7352
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7361
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7372
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7383
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7394
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7405
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7419
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7429
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7439
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7449
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7461
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7467
		{
			yyVAL.val = false
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7471
		{
			yyVAL.val = true
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7477
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7481
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7487
		{
			yyVAL.val = ""
		}
	case 1180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7491
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7495
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7501
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7505
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7509
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7513
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = ""
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7523
		{
			yyVAL.val = SessionStr
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7527
		{
			yyVAL.val = GlobalStr
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7533
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7545
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7558
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7570
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7574
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7580
		{
			yyVAL.val = &Begin{}
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7584
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7590
		{
			yyVAL.val = &Begin{}
		}
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7594
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7598
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7602
		{
			yyVAL.val = &Begin{}
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7607
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7611
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7616
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7620
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7625
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7629
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7635
		{
			yyVAL.val = &Commit{}
		}
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7641
		{
			yyVAL.val = &Rollback{}
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7647
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7653
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7657
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7661
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7665
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7671
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7677
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7681
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7685
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7691
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7699
		{
			yyVAL.val = ""
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7703
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7708
		{
			yyVAL.val = false
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7712
		{
			yyVAL.val = true
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7724
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7744
		{
			setAllowComments(yylex, true)
		}
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7748
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7756
		{
			yyVAL.val = Comments(nil)
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7760
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7766
		{
			yyVAL.val = UnionStr
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7770
		{
			yyVAL.val = UnionAllStr
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7774
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7780
		{
			yyVAL.val = IntersectStr
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7784
		{
			yyVAL.val = IntersectAllStr
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7788
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7794
		{
			yyVAL.val = ExceptStr
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7798
		{
			yyVAL.val = ExceptAllStr
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7802
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7807
		{
			yyVAL.val = QueryOpts{}
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7811
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7822
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7833
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7844
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7855
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7866
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7878
		{
			yyVAL.val = ""
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7882
		{
			yyVAL.val = AllStr
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7886
		{
			yyVAL.val = DistinctStr
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7892
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7900
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7911
		{
			yyVAL.val = &StarExpr{}
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7915
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7919
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7923
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7929
		{
			yyVAL.val = &StarExpr{}
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7933
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7937
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7941
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7947
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7951
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7957
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7962
		{
			yyVAL.val = ColIdent{}
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7965
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7970
		{
			yyVAL.val = Exprs(nil)
		}
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7974
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7979
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7983
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7988
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7992
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7996
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8003
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8026
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8041
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8045
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8049
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8053
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8060
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8068
		{
			yyVAL.val = Window(nil)
		}
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8071
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8077
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8080
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8086
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8126
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8130
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8135
		{
			yyVAL.val = ColIdent{}
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8139
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8143
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8147
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8153
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8157
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8161
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8167
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8171
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8181
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8185
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8200
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8215
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8221
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8227
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8235
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8241
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8245
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8250
		{
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8252
		{
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8256
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8266
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8281
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8285
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8289
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8293
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8299
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8303
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8307
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8311
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8315
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8321
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8325
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8329
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8335
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8339
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1353:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8343
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1355:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8351
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1356:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8355
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8361
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8367
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8371
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8377
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8381
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8385
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8390
		{
			yyVAL.val = Expr(nil)
		}
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8394
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8400
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8404
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8409
		{
			yyVAL.val = Columns(nil)
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8413
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8419
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8423
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8429
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8433
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8439
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1374:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8443
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8457
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8461
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8465
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8469
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8477
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8481
		{
			yyVAL.val = JoinCondition{}
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8483
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8487
		{
			yyVAL.val = JoinCondition{}
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8489
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8494
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8498
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8504
		{
			yyVAL.val = JoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8508
		{
			yyVAL.val = JoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8512
		{
			yyVAL.val = JoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8518
		{
			yyVAL.val = StraightJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8524
		{
			yyVAL.val = LeftJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8528
		{
			yyVAL.val = LeftJoinStr
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8532
		{
			yyVAL.val = RightJoinStr
		}
	case 1395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8536
		{
			yyVAL.val = RightJoinStr
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8540
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8544
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8550
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8554
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1400:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8564
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8571
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8576
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8582
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8586
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8590
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1406:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8595
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8602
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8606
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8610
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8614
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8618
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8622
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8626
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1414:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8630
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8634
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8638
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8644
		{
			yyVAL.val = &NullVal{}
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8648
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8654
		{
			yyVAL.val = &NullVal{}
		}
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8658
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8664
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8668
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8674
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8680
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8684
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8690
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8694
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8698
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8702
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8706
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8710
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8716
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8720
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8726
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8731
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8735
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8739
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8743
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8748
		{
			yyVAL.val = Expr(nil)
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8752
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8758
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8762
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8766
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8770
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8774
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8778
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8782
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8786
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8792
		{
			yyVAL.val = ""
		}
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8802
		{
			yyVAL.val = BoolVal(true)
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8806
		{
			yyVAL.val = BoolVal(false)
		}
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8812
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8820
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8824
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8828
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8832
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8836
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8840
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1461:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8844
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8848
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8854
		{
			yyVAL.val = IsNullStr
		}
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8858
		{
			yyVAL.val = IsNotNullStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8862
		{
			yyVAL.val = IsTrueStr
		}
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8866
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8870
		{
			yyVAL.val = IsFalseStr
		}
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8874
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8880
		{
			yyVAL.val = EqualStr
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = LessThanStr
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = GreaterThanStr
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = LessEqualStr
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8896
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8900
		{
			yyVAL.val = NotEqualStr
		}
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8904
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8909
		{
			yyVAL.val = Expr(nil)
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8913
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8919
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8923
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8927
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8933
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8939
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8943
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8948
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8955
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8959
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8965
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8969
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8975
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8979
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8983
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8987
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8991
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8995
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8999
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9003
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9007
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9011
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9015
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9019
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9023
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9027
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9031
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9035
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9039
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9043
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9047
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9051
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9055
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9059
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9063
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9067
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9071
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9075
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9083
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9097
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9101
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9105
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9125
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9129
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1528:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9139
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9143
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9147
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9151
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9155
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9159
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9163
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9167
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9195
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9199
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9203
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9212
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9216
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9220
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9224
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9240
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9244
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9248
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9252
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9263
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9267
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9271
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1559:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9275
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9279
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1561:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9283
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9287
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9291
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1564:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9295
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1565:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9299
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9303
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9307
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1568:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9311
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9315
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1570:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9319
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1571:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9323
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9327
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9331
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9335
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1575:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9339
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1576:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9343
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1577:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9347
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9351
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1579:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9355
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9359
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9363
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9367
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9372
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1584:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9376
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9387
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9391
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9395
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9400
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9404
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9408
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9412
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9416
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1593:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9420
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1594:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9424
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1595:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9428
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9436
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9440
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9444
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9448
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9452
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9465
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9469
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9479
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9483
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9487
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9491
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9495
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9499
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9505
		{
			yyVAL.val = ""
		}
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9509
		{
			yyVAL.val = BooleanModeStr
		}
	case 1613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9513
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1614:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9517
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9521
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9527
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9531
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9535
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.val = Armscii8Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.val = AsciiStr
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9549
		{
			yyVAL.val = Big5Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9553
		{
			yyVAL.val = UBinaryStr
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9557
		{
			yyVAL.val = Cp1250Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9561
		{
			yyVAL.val = Cp1251Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9565
		{
			yyVAL.val = Cp1256Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = Cp1257Str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9573
		{
			yyVAL.val = Cp850Str
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9577
		{
			yyVAL.val = Cp852Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9581
		{
			yyVAL.val = Cp866Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9585
		{
			yyVAL.val = Cp932Str
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9589
		{
			yyVAL.val = Dec8Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9593
		{
			yyVAL.val = EucjpmsStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9597
		{
			yyVAL.val = EuckrStr
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9601
		{
			yyVAL.val = Gb18030Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9605
		{
			yyVAL.val = Gb2312Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9609
		{
			yyVAL.val = GbkStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9613
		{
			yyVAL.val = Geostd8Str
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9617
		{
			yyVAL.val = GreekStr
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9621
		{
			yyVAL.val = HebrewStr
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9625
		{
			yyVAL.val = Hp8Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9629
		{
			yyVAL.val = Keybcs2Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9633
		{
			yyVAL.val = Koi8rStr
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9637
		{
			yyVAL.val = Koi8uStr
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9641
		{
			yyVAL.val = Latin1Str
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9645
		{
			yyVAL.val = Latin2Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9649
		{
			yyVAL.val = Latin5Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9653
		{
			yyVAL.val = Latin7Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9657
		{
			yyVAL.val = MacceStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9661
		{
			yyVAL.val = MacromanStr
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9665
		{
			yyVAL.val = SjisStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9669
		{
			yyVAL.val = Swe7Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9673
		{
			yyVAL.val = Tis620Str
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9677
		{
			yyVAL.val = Ucs2Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9681
		{
			yyVAL.val = UjisStr
		}
	case 1655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9685
		{
			yyVAL.val = Utf16Str
		}
	case 1656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = Utf16leStr
		}
	case 1657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9693
		{
			yyVAL.val = Utf32Str
		}
	case 1658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9697
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9701
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9705
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9711
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9715
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9719
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9723
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9727
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9731
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9735
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9739
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9746
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9750
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9754
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9758
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9762
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9766
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9770
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9774
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9778
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9782
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9786
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9790
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9796
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9800
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9805
		{
			yyVAL.val = Expr(nil)
		}
	case 1684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9809
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9814
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9818
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9824
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9828
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9834
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9839
		{
			yyVAL.val = Expr(nil)
		}
	case 1691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9843
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9849
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9853
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9857
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9861
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9865
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9869
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9873
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9877
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9881
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9885
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9889
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9893
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9897
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9901
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9905
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9909
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9913
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9923
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9927
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9939
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9943
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9947
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9951
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9955
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9959
		{
			yyVAL.val = &NullVal{}
		}
	case 1720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9965
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9969
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9973
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9978
		{
			yyVAL.val = Exprs(nil)
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9982
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9988
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9992
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9998
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10003
		{
			yyVAL.val = Expr(nil)
		}
	case 1729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10007
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10013
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10018
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10022
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10028
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10032
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10038
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10043
		{
			yyVAL.val = AscScr
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10047
		{
			yyVAL.val = AscScr
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10051
		{
			yyVAL.val = DescScr
		}
	case 1739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10056
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10060
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10064
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10068
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10074
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10078
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10082
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10087
		{
			yyVAL.val = ""
		}
	case 1747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10091
		{
			yyVAL.val = ForUpdateStr
		}
	case 1748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10095
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10099
		{
			yyVAL.val = ForUpdateNowaitStr
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10103
		{
			yyVAL.val = ShareModeStr
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10109
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10113
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10133
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10137
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10142
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10149
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10153
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10160
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10164
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10173
		{
			yyVAL.val = Columns(nil)
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10177
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10183
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10187
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10193
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10197
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10201
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10205
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10209
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10213
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10217
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10222
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10226
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10232
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10236
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10242
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10246
		{
			yyVAL.val = ValTuple{}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10252
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10258
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10268
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10272
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10278
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10281
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10285
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10289
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10295
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10299
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10305
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10316
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10329
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10342
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10348
		{
			yyVAL.val = SetScope_Global
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = SetScope_Session
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10358
		{
			yyVAL.val = SetScope_Session
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10362
		{
			yyVAL.val = SetScope_Persist
		}
	case 1797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10366
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10376
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10380
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10390
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10397
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10404
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10408
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10412
		{
			yyVAL.val = &Default{}
		}
	case 1808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10416
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10425
		{
			yyVAL.val = 0
		}
	case 1812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10427
		{
			yyVAL.val = 1
		}
	case 1813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10430
		{
			yyVAL.val = 0
		}
	case 1814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10432
		{
			yyVAL.val = 1
		}
	case 1815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10435
		{
			yyVAL.val = 0
		}
	case 1816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10437
		{
			yyVAL.val = 1
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10440
		{
			yyVAL.val = ""
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10442
		{
			yyVAL.val = IgnoreStr
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10445
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10449
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10452
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10454
		{
			yyVAL.val = struct{}{}
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = struct{}{}
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10460
		{
			yyVAL.val = struct{}{}
		}
	case 1826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10463
		{
			yyVAL.val = struct{}{}
		}
	case 1827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10465
		{
			yyVAL.val = struct{}{}
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10469
		{
			yyVAL.val = UniqueStr
		}
	case 1829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10471
		{
			yyVAL.val = FulltextStr
		}
	case 1830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10473
		{
			yyVAL.val = SpatialStr
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10475
		{
			yyVAL.val = VectorStr
		}
	case 1832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10478
		{
			yyVAL.val = ""
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10480
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10483
		{
			yyVAL.val = ColIdent{}
		}
	case 1835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10485
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10489
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10493
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10499
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10503
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10510
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10516
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10520
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10527
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10531
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10535
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10540
		{
			yyVAL.val = string("")
		}
	case 1849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10542
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10545
		{
			yyVAL.val = string("")
		}
	case 1851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10547
		{
			yyVAL.val = IgnoreStr
		}
	case 1852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10549
		{
			yyVAL.val = ReplaceStr
		}
	case 1853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10552
		{
			yyVAL.val = BoolVal(false)
		}
	case 1854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10554
		{
			yyVAL.val = BoolVal(true)
		}
	case 1855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10557
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10561
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10566
		{
			yyVAL.val = BoolVal(false)
		}
	case 1858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10570
		{
			yyVAL.val = BoolVal(true)
		}
	case 1859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10575
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10579
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1861:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10584
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10588
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10596
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1864:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10600
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10605
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10609
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10614
		{
			yyVAL.val = &Lines{}
		}
	case 1868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10618
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10627
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10638
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10644
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10648
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10654
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10669
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10687
		{
			yyVAL.val = LockRead
		}
	case 1876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10691
		{
			yyVAL.val = LockReadLocal
		}
	case 1877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10695
		{
			yyVAL.val = LockWrite
		}
	case 1878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10699
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10705
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10711
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10722
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10732
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11663
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11672
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
