// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const PLAN = 57556
const MAXVALUE = 57557
const REORGANIZE = 57558
const LESS = 57559
const THAN = 57560
const PROCEDURE = 57561
const TRIGGER = 57562
const TRIGGERS = 57563
const FUNCTION = 57564
const STATUS = 57565
const VARIABLES = 57566
const WARNINGS = 57567
const ERRORS = 57568
const KILL = 57569
const CONNECTION = 57570
const SEQUENCE = 57571
const ENABLE = 57572
const DISABLE = 57573
const EACH = 57574
const ROW = 57575
const BEFORE = 57576
const FOLLOWS = 57577
const PRECEDES = 57578
const DEFINER = 57579
const INVOKER = 57580
const INOUT = 57581
const OUT = 57582
const DETERMINISTIC = 57583
const CONTAINS = 57584
const READS = 57585
const MODIFIES = 57586
const SQL = 57587
const SECURITY = 57588
const TEMPORARY = 57589
const ALGORITHM = 57590
const MERGE = 57591
const TEMPTABLE = 57592
const UNDEFINED = 57593
const EVENT = 57594
const EVENTS = 57595
const SCHEDULE = 57596
const EVERY = 57597
const STARTS = 57598
const ENDS = 57599
const COMPLETION = 57600
const PRESERVE = 57601
const CASCADED = 57602
const INSTANT = 57603
const INPLACE = 57604
const COPY = 57605
const DISCARD = 57606
const IMPORT = 57607
const SHARED = 57608
const EXCLUSIVE = 57609
const WITHOUT = 57610
const VALIDATION = 57611
const COALESCE = 57612
const EXCHANGE = 57613
const REBUILD = 57614
const REMOVE = 57615
const PARTITIONING = 57616
const CLASS_ORIGIN = 57617
const SUBCLASS_ORIGIN = 57618
const MESSAGE_TEXT = 57619
const MYSQL_ERRNO = 57620
const CONSTRAINT_CATALOG = 57621
const CONSTRAINT_SCHEMA = 57622
const CONSTRAINT_NAME = 57623
const CATALOG_NAME = 57624
const SCHEMA_NAME = 57625
const TABLE_NAME = 57626
const COLUMN_NAME = 57627
const CURSOR_NAME = 57628
const SIGNAL = 57629
const RESIGNAL = 57630
const SQLSTATE = 57631
const DECLARE = 57632
const CONDITION = 57633
const CURSOR = 57634
const CONTINUE = 57635
const EXIT = 57636
const UNDO = 57637
const HANDLER = 57638
const FOUND = 57639
const SQLWARNING = 57640
const SQLEXCEPTION = 57641
const FETCH = 57642
const OPEN = 57643
const CLOSE = 57644
const LOOP = 57645
const LEAVE = 57646
const ITERATE = 57647
const REPEAT = 57648
const UNTIL = 57649
const WHILE = 57650
const DO = 57651
const RETURN = 57652
const USER = 57653
const IDENTIFIED = 57654
const ROLE = 57655
const REUSE = 57656
const GRANT = 57657
const GRANTS = 57658
const REVOKE = 57659
const NONE = 57660
const ATTRIBUTE = 57661
const RANDOM = 57662
const PASSWORD = 57663
const INITIAL = 57664
const AUTHENTICATION = 57665
const SSL = 57666
const X509 = 57667
const CIPHER = 57668
const ISSUER = 57669
const SUBJECT = 57670
const ACCOUNT = 57671
const EXPIRE = 57672
const NEVER = 57673
const OPTION = 57674
const OPTIONAL = 57675
const ADMIN = 57676
const PRIVILEGES = 57677
const MAX_QUERIES_PER_HOUR = 57678
const MAX_UPDATES_PER_HOUR = 57679
const MAX_CONNECTIONS_PER_HOUR = 57680
const MAX_USER_CONNECTIONS = 57681
const FLUSH = 57682
const FAILED_LOGIN_ATTEMPTS = 57683
const PASSWORD_LOCK_TIME = 57684
const REQUIRE = 57685
const PROXY = 57686
const ROUTINE = 57687
const TABLESPACE = 57688
const CLIENT = 57689
const SLAVE = 57690
const EXECUTE = 57691
const FILE = 57692
const RELOAD = 57693
const REPLICATION = 57694
const SHUTDOWN = 57695
const SUPER = 57696
const USAGE = 57697
const LOGS = 57698
const ENGINE = 57699
const ERROR = 57700
const GENERAL = 57701
const HOSTS = 57702
const OPTIMIZER_COSTS = 57703
const RELAY = 57704
const SLOW = 57705
const USER_RESOURCES = 57706
const NO_WRITE_TO_BINLOG = 57707
const CHANNEL = 57708
const APPLICATION_PASSWORD_ADMIN = 57709
const AUDIT_ABORT_EXEMPT = 57710
const AUDIT_ADMIN = 57711
const AUTHENTICATION_POLICY_ADMIN = 57712
const BACKUP_ADMIN = 57713
const BINLOG_ADMIN = 57714
const BINLOG_ENCRYPTION_ADMIN = 57715
const CLONE_ADMIN = 57716
const CONNECTION_ADMIN = 57717
const ENCRYPTION_KEY_ADMIN = 57718
const FIREWALL_ADMIN = 57719
const FIREWALL_EXEMPT = 57720
const FIREWALL_USER = 57721
const FLUSH_OPTIMIZER_COSTS = 57722
const FLUSH_STATUS = 57723
const FLUSH_TABLES = 57724
const FLUSH_USER_RESOURCES = 57725
const GROUP_REPLICATION_ADMIN = 57726
const GROUP_REPLICATION_STREAM = 57727
const INNODB_REDO_LOG_ARCHIVE = 57728
const INNODB_REDO_LOG_ENABLE = 57729
const NDB_STORED_USER = 57730
const PASSWORDLESS_USER_ADMIN = 57731
const PERSIST_RO_VARIABLES_ADMIN = 57732
const REPLICATION_APPLIER = 57733
const REPLICATION_SLAVE_ADMIN = 57734
const RESOURCE_GROUP_ADMIN = 57735
const RESOURCE_GROUP_USER = 57736
const ROLE_ADMIN = 57737
const SENSITIVE_VARIABLES_OBSERVER = 57738
const SESSION_VARIABLES_ADMIN = 57739
const SET_USER_ID = 57740
const SHOW_ROUTINE = 57741
const SKIP_QUERY_REWRITE = 57742
const SYSTEM_VARIABLES_ADMIN = 57743
const TABLE_ENCRYPTION_ADMIN = 57744
const TP_CONNECTION_ADMIN = 57745
const VERSION_TOKEN_ADMIN = 57746
const XA_RECOVER_ADMIN = 57747
const REPLICA = 57748
const REPLICAS = 57749
const SOURCE = 57750
const STOP = 57751
const RESET = 57752
const FILTER = 57753
const LOG = 57754
const MASTER = 57755
const SOURCE_HOST = 57756
const SOURCE_SSL = 57757
const SOURCE_USER = 57758
const SOURCE_PASSWORD = 57759
const SOURCE_PORT = 57760
const SOURCE_CONNECT_RETRY = 57761
const SOURCE_RETRY_COUNT = 57762
const SOURCE_AUTO_POSITION = 57763
const REPLICATE_DO_TABLE = 57764
const REPLICATE_IGNORE_TABLE = 57765
const IO_THREAD = 57766
const SQL_THREAD = 57767
const BEGIN = 57768
const START = 57769
const TRANSACTION = 57770
const COMMIT = 57771
const ROLLBACK = 57772
const SAVEPOINT = 57773
const WORK = 57774
const RELEASE = 57775
const CHAIN = 57776
const CONSISTENT = 57777
const SNAPSHOT = 57778
const BIT = 57779
const TINYINT = 57780
const SMALLINT = 57781
const MEDIUMINT = 57782
const INT = 57783
const INTEGER = 57784
const BIGINT = 57785
const INTNUM = 57786
const SERIAL = 57787
const INT1 = 57788
const INT2 = 57789
const INT3 = 57790
const INT4 = 57791
const INT8 = 57792
const REAL = 57793
const DOUBLE = 57794
const FLOAT_TYPE = 57795
const DECIMAL = 57796
const NUMERIC = 57797
const DEC = 57798
const FIXED = 57799
const PRECISION = 57800
const TIME = 57801
const TIMESTAMP = 57802
const DATETIME = 57803
const CHAR = 57804
const VARCHAR = 57805
const BOOL = 57806
const CHARACTER = 57807
const VARBINARY = 57808
const NCHAR = 57809
const NVARCHAR = 57810
const NATIONAL = 57811
const VARYING = 57812
const VARCHARACTER = 57813
const TEXT = 57814
const TINYTEXT = 57815
const MEDIUMTEXT = 57816
const LONGTEXT = 57817
const LONG = 57818
const BLOB = 57819
const TINYBLOB = 57820
const MEDIUMBLOB = 57821
const LONGBLOB = 57822
const JSON = 57823
const ENUM = 57824
const GEOMETRY = 57825
const POINT = 57826
const LINESTRING = 57827
const POLYGON = 57828
const GEOMETRYCOLLECTION = 57829
const MULTIPOINT = 57830
const MULTILINESTRING = 57831
const MULTIPOLYGON = 57832
const LOCAL = 57833
const LOW_PRIORITY = 57834
const SKIP = 57835
const LOCKED = 57836
const NULLX = 57837
const AUTO_INCREMENT = 57838
const APPROXNUM = 57839
const SIGNED = 57840
const UNSIGNED = 57841
const ZEROFILL = 57842
const SRID = 57843
const COLLATION = 57844
const DATABASES = 57845
const SCHEMAS = 57846
const TABLES = 57847
const FULL = 57848
const PROCESSLIST = 57849
const COLUMNS = 57850
const FIELDS = 57851
const ENGINES = 57852
const PLUGINS = 57853
const NAMES = 57854
const CHARSET = 57855
const GLOBAL = 57856
const SESSION = 57857
const ISOLATION = 57858
const LEVEL = 57859
const READ = 57860
const WRITE = 57861
const ONLY = 57862
const REPEATABLE = 57863
const COMMITTED = 57864
const UNCOMMITTED = 57865
const SERIALIZABLE = 57866
const ENCRYPTION = 57867
const CURRENT_TIMESTAMP = 57868
const NOW = 57869
const DATABASE = 57870
const CURRENT_DATE = 57871
const CURRENT_USER = 57872
const CURRENT_TIME = 57873
const LOCALTIME = 57874
const LOCALTIMESTAMP = 57875
const UTC_DATE = 57876
const UTC_TIME = 57877
const UTC_TIMESTAMP = 57878
const REPLACE = 57879
const CONVERT = 57880
const CAST = 57881
const POSITION = 57882
const SUBSTR = 57883
const SUBSTRING = 57884
const TRIM = 57885
const LEADING = 57886
const TRAILING = 57887
const BOTH = 57888
const GROUP_CONCAT = 57889
const SEPARATOR = 57890
const TIMESTAMPADD = 57891
const TIMESTAMPDIFF = 57892
const EXTRACT = 57893
const GET_FORMAT = 57894
const OVER = 57895
const WINDOW = 57896
const GROUPING = 57897
const CURRENT = 57898
const AVG = 57899
const BIT_AND = 57900
const BIT_OR = 57901
const BIT_XOR = 57902
const COUNT = 57903
const JSON_ARRAYAGG = 57904
const JSON_OBJECTAGG = 57905
const MAX = 57906
const MIN = 57907
const STDDEV_POP = 57908
const STDDEV = 57909
const STD = 57910
const STDDEV_SAMP = 57911
const SUM = 57912
const VAR_POP = 57913
const VARIANCE = 57914
const VAR_SAMP = 57915
const CUME_DIST = 57916
const DENSE_RANK = 57917
const FIRST_VALUE = 57918
const LAG = 57919
const LAST_VALUE = 57920
const LEAD = 57921
const NTH_VALUE = 57922
const NTILE = 57923
const ROW_NUMBER = 57924
const PERCENT_RANK = 57925
const RANK = 57926
const DUAL = 57927
const JSON_TABLE = 57928
const PATH = 57929
const AVG_ROW_LENGTH = 57930
const CHECKSUM = 57931
const COMPACT = 57932
const COMPRESSED = 57933
const COMPRESSION = 57934
const DISK = 57935
const DIRECTORY = 57936
const DELAY_KEY_WRITE = 57937
const DYNAMIC = 57938
const ENGINE_ATTRIBUTE = 57939
const ENCRYPTED = 57940
const ENCRYPTION_KEY_ID = 57941
const HASH = 57942
const INSERT_METHOD = 57943
const ITEF_QUOTES = 57944
const LIST = 57945
const MIN_ROWS = 57946
const MAX_ROWS = 57947
const PACK_KEYS = 57948
const MEMORY = 57949
const PAGE_CHECKSUM = 57950
const PAGE_COMPRESSED = 57951
const PAGE_COMPRESSION_LEVEL = 57952
const PARTITIONS = 57953
const REDUNDANT = 57954
const ROW_FORMAT = 57955
const SECONDARY_ENGINE = 57956
const SECONDARY_ENGINE_ATTRIBUTE = 57957
const STATS_AUTO_RECALC = 57958
const STATS_PERSISTENT = 57959
const STATS_SAMPLE_PAGES = 57960
const STORAGE = 57961
const SUBPARTITION = 57962
const SUBPARTITIONS = 57963
const TABLE_CHECKSUM = 57964
const TRANSACTIONAL = 57965
const VERSIONING = 57966
const YES = 57967
const PREPARE = 57968
const DEALLOCATE = 57969
const MATCH = 57970
const AGAINST = 57971
const BOOLEAN = 57972
const LANGUAGE = 57973
const WITH = 57974
const QUERY = 57975
const EXPANSION = 57976
const MICROSECOND = 57977
const SECOND = 57978
const MINUTE = 57979
const HOUR = 57980
const DAY = 57981
const WEEK = 57982
const MONTH = 57983
const QUARTER = 57984
const YEAR = 57985
const SECOND_MICROSECOND = 57986
const MINUTE_MICROSECOND = 57987
const MINUTE_SECOND = 57988
const HOUR_MICROSECOND = 57989
const HOUR_SECOND = 57990
const HOUR_MINUTE = 57991
const DAY_MICROSECOND = 57992
const DAY_SECOND = 57993
const DAY_MINUTE = 57994
const DAY_HOUR = 57995
const YEAR_MONTH = 57996
const NAME = 57997
const SYSTEM = 57998
const ACCESSIBLE = 57999
const ASENSITIVE = 58000
const CUBE = 58001
const DELAYED = 58002
const DISTINCTROW = 58003
const EMPTY = 58004
const FLOAT4 = 58005
const FLOAT8 = 58006
const GET = 58007
const HIGH_PRIORITY = 58008
const INSENSITIVE = 58009
const IO_AFTER_GTIDS = 58010
const IO_BEFORE_GTIDS = 58011
const LINEAR = 58012
const MASTER_BIND = 58013
const MASTER_SSL_VERIFY_SERVER_CERT = 58014
const MIDDLEINT = 58015
const PURGE = 58016
const READ_WRITE = 58017
const RLIKE = 58018
const SENSITIVE = 58019
const SPECIFIC = 58020
const SQL_BIG_RESULT = 58021
const SQL_SMALL_RESULT = 58022
const UNUSED = 58023
const DESCRIPTION = 58024
const LATERAL = 58025
const MEMBER = 58026
const RECURSIVE = 58027
const BUCKETS = 58028
const CLONE = 58029
const COMPONENT = 58030
const DEFINITION = 58031
const ENFORCED = 58032
const NOT_ENFORCED = 58033
const EXCLUDE = 58034
const GEOMCOLLECTION = 58035
const GET_MASTER_PUBLIC_KEY = 58036
const HISTOGRAM = 58037
const HISTORY = 58038
const INACTIVE = 58039
const INVISIBLE = 58040
const MASTER_COMPRESSION_ALGORITHMS = 58041
const MASTER_PUBLIC_KEY_PATH = 58042
const MASTER_TLS_CIPHERSUITES = 58043
const MASTER_ZSTD_COMPRESSION_LEVEL = 58044
const NESTED = 58045
const NETWORK_NAMESPACE = 58046
const NOWAIT = 58047
const NULLS = 58048
const OJ = 58049
const OLD = 58050
const ORDINALITY = 58051
const ORGANIZATION = 58052
const OTHERS = 58053
const PERSIST = 58054
const PERSIST_ONLY = 58055
const PRIVILEGE_CHECKS_USER = 58056
const PROCESS = 58057
const REFERENCE = 58058
const REQUIRE_ROW_FORMAT = 58059
const RESOURCE = 58060
const RESPECT = 58061
const RESTART = 58062
const RETAIN = 58063
const SECONDARY = 58064
const SECONDARY_LOAD = 58065
const SECONDARY_UNLOAD = 58066
const THREAD_PRIORITY = 58067
const TIES = 58068
const VCPU = 58069
const VISIBLE = 58070
const INFILE = 58071
const ACTIVE = 58072
const AGGREGATE = 58073
const ANY = 58074
const ARRAY = 58075
const ASCII = 58076
const AT = 58077
const AUTOEXTEND_SIZE = 58078
const GENERATED = 58079
const ALWAYS = 58080
const STORED = 58081
const VIRTUAL = 58082
const NVAR = 58083
const PASSWORD_LOCK = 58084

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"PLAN",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_SSL",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"IO_THREAD",
	"SQL_THREAD",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPACT",
	"COMPRESSED",
	"COMPRESSION",
	"DISK",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"DYNAMIC",
	"ENGINE_ATTRIBUTE",
	"ENCRYPTED",
	"ENCRYPTION_KEY_ID",
	"HASH",
	"INSERT_METHOD",
	"ITEF_QUOTES",
	"LIST",
	"MIN_ROWS",
	"MAX_ROWS",
	"PACK_KEYS",
	"MEMORY",
	"PAGE_CHECKSUM",
	"PAGE_COMPRESSED",
	"PAGE_COMPRESSION_LEVEL",
	"PARTITIONS",
	"REDUNDANT",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE_CHECKSUM",
	"TRANSACTIONAL",
	"VERSIONING",
	"YES",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	762, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1806,
	200, 1827,
	-2, 331,
	-1, 62,
	242, 1180,
	243, 1180,
	-2, 1169,
	-1, 90,
	271, 331,
	-2, 1812,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 544,
	1, 2508,
	6, 2508,
	7, 2508,
	28, 2508,
	187, 2508,
	762, 2508,
	-2, 1215,
	-1, 557,
	187, 1837,
	-2, 1831,
	-1, 558,
	187, 1838,
	-2, 1832,
	-1, 662,
	1, 681,
	762, 681,
	-2, 679,
	-1, 671,
	1, 1321,
	8, 1321,
	9, 1321,
	10, 1321,
	17, 1321,
	18, 1321,
	19, 1321,
	20, 1321,
	22, 1321,
	24, 1321,
	34, 1321,
	35, 1321,
	64, 1321,
	65, 1321,
	66, 1321,
	67, 1321,
	68, 1321,
	70, 1321,
	71, 1321,
	74, 1321,
	75, 1321,
	77, 1321,
	78, 1321,
	96, 1321,
	525, 1321,
	573, 1321,
	651, 1321,
	762, 1321,
	-2, 1821,
	-1, 676,
	1, 1429,
	8, 1429,
	9, 1429,
	10, 1429,
	17, 1429,
	18, 1429,
	19, 1429,
	20, 1429,
	22, 1429,
	24, 1429,
	34, 1429,
	35, 1429,
	64, 1429,
	65, 1429,
	66, 1429,
	67, 1429,
	68, 1429,
	70, 1429,
	71, 1429,
	74, 1429,
	75, 1429,
	77, 1429,
	78, 1429,
	96, 1429,
	525, 1429,
	573, 1429,
	651, 1429,
	762, 1429,
	-2, 1821,
	-1, 704,
	187, 2205,
	-2, 1443,
	-1, 737,
	187, 2313,
	-2, 1713,
	-1, 738,
	187, 2394,
	-2, 1445,
	-1, 739,
	187, 2225,
	-2, 1446,
	-1, 808,
	187, 2176,
	-2, 1677,
	-1, 811,
	187, 2191,
	-2, 1595,
	-1, 812,
	187, 2194,
	-2, 1595,
	-1, 813,
	187, 2404,
	-2, 1595,
	-1, 815,
	187, 2192,
	-2, 1595,
	-1, 816,
	187, 2405,
	-2, 1595,
	-1, 817,
	187, 2406,
	-2, 1595,
	-1, 876,
	187, 2193,
	-2, 1595,
	-1, 959,
	187, 2293,
	-2, 1595,
	-1, 960,
	187, 2294,
	-2, 1595,
	-1, 1072,
	109, 2521,
	120, 2521,
	187, 2521,
	-2, 1788,
	-1, 1073,
	109, 2652,
	120, 2652,
	187, 2652,
	-2, 1789,
	-1, 1078,
	109, 2549,
	120, 2549,
	187, 2549,
	-2, 1790,
	-1, 1079,
	109, 2600,
	120, 2600,
	187, 2600,
	-2, 1791,
	-1, 1080,
	109, 2601,
	120, 2601,
	187, 2601,
	-2, 1792,
	-1, 1081,
	109, 2448,
	120, 2448,
	187, 2448,
	-2, 1797,
	-1, 1083,
	109, 2577,
	120, 2577,
	187, 2577,
	-2, 1799,
	-1, 1255,
	452, 1194,
	-2, 1198,
	-1, 1257,
	452, 1194,
	-2, 1198,
	-1, 1382,
	1, 681,
	762, 681,
	-2, 679,
	-1, 1384,
	1, 682,
	762, 682,
	-2, 679,
	-1, 1407,
	1, 1322,
	8, 1322,
	9, 1322,
	10, 1322,
	17, 1322,
	18, 1322,
	19, 1322,
	20, 1322,
	22, 1322,
	24, 1322,
	34, 1322,
	35, 1322,
	64, 1322,
	65, 1322,
	66, 1322,
	67, 1322,
	68, 1322,
	70, 1322,
	71, 1322,
	74, 1322,
	75, 1322,
	77, 1322,
	78, 1322,
	96, 1322,
	525, 1322,
	573, 1322,
	651, 1322,
	762, 1322,
	-2, 1821,
	-1, 1418,
	1, 1429,
	8, 1429,
	9, 1429,
	10, 1429,
	17, 1429,
	18, 1429,
	19, 1429,
	20, 1429,
	22, 1429,
	24, 1429,
	34, 1429,
	35, 1429,
	64, 1429,
	65, 1429,
	66, 1429,
	67, 1429,
	68, 1429,
	70, 1429,
	71, 1429,
	74, 1429,
	75, 1429,
	77, 1429,
	78, 1429,
	96, 1429,
	525, 1429,
	573, 1429,
	651, 1429,
	762, 1429,
	-2, 1821,
	-1, 1712,
	1, 681,
	762, 681,
	-2, 679,
	-1, 1714,
	1, 681,
	762, 681,
	-2, 679,
	-1, 2272,
	187, 1841,
	-2, 1689,
	-1, 2275,
	187, 2739,
	-2, 1692,
	-1, 2276,
	187, 2740,
	-2, 1693,
	-1, 2277,
	187, 1840,
	-2, 1836,
	-1, 2427,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2445,
	187, 2317,
	-2, 1793,
	-1, 2452,
	1, 902,
	762, 902,
	-2, 679,
	-1, 2641,
	49, 923,
	206, 926,
	208, 923,
	209, 923,
	210, 923,
	-2, 1040,
	-1, 2723,
	8, 59,
	9, 59,
	10, 59,
	-2, 1475,
	-1, 2740,
	1, 1367,
	8, 1367,
	9, 1367,
	10, 1367,
	17, 1367,
	18, 1367,
	19, 1367,
	20, 1367,
	22, 1367,
	24, 1367,
	34, 1367,
	35, 1367,
	64, 1367,
	65, 1367,
	66, 1367,
	67, 1367,
	68, 1367,
	70, 1367,
	71, 1367,
	74, 1367,
	75, 1367,
	77, 1367,
	78, 1367,
	96, 1367,
	525, 1367,
	573, 1367,
	651, 1367,
	762, 1367,
	-2, 1821,
	-1, 2917,
	212, 1034,
	216, 1034,
	-2, 790,
	-1, 2918,
	212, 1104,
	216, 1104,
	-2, 791,
	-1, 3186,
	1, 1429,
	8, 1429,
	9, 1429,
	10, 1429,
	17, 1429,
	18, 1429,
	19, 1429,
	20, 1429,
	22, 1429,
	24, 1429,
	34, 1429,
	35, 1429,
	64, 1429,
	65, 1429,
	66, 1429,
	67, 1429,
	68, 1429,
	70, 1429,
	71, 1429,
	74, 1429,
	75, 1429,
	77, 1429,
	78, 1429,
	96, 1429,
	525, 1429,
	573, 1429,
	651, 1429,
	762, 1429,
	-2, 1821,
	-1, 3290,
	1, 1744,
	74, 1744,
	762, 1744,
	-2, 1821,
	-1, 3491,
	49, 923,
	206, 926,
	208, 923,
	209, 923,
	210, 923,
	-2, 1040,
	-1, 3511,
	206, 927,
	212, 1034,
	216, 1034,
	-2, 925,
	-1, 3702,
	77, 2088,
	78, 2088,
	187, 2088,
	-2, 1223,
	-1, 3703,
	76, 1755,
	252, 1755,
	-2, 2137,
	-1, 3704,
	76, 1756,
	252, 1756,
	-2, 2705,
	-1, 3944,
	8, 59,
	9, 59,
	10, 59,
	-2, 1751,
	-1, 4087,
	46, 1852,
	-2, 1850,
	-1, 4347,
	8, 59,
	9, 59,
	10, 59,
	-2, 1752,
	-1, 4366,
	315, 428,
	-2, 1908,
	-1, 4367,
	315, 429,
	-2, 1949,
	-1, 4368,
	315, 430,
	-2, 2125,
	-1, 4600,
	104, 414,
	106, 414,
	108, 414,
	-2, 79,
	-1, 4681,
	106, 421,
	107, 421,
	108, 421,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 82567

var yyAct = [...]int{
	750, 44, 4654, 4617, 4555, 4604, 4592, 4373, 696, 4591,
	4081, 1188, 4224, 3, 2934, 3418, 4227, 8, 4473, 2442,
	4339, 4474, 4360, 4557, 569, 492, 1632, 3298, 3647, 3784,
	2366, 1410, 4217, 4226, 7, 706, 4076, 4225, 6, 4046,
	703, 4258, 28, 2933, 710, 44, 655, 2365, 4228, 9,
	4219, 4359, 3266, 4124, 4199, 1417, 723, 108, 3971, 3907,
	3355, 3454, 2719, 4094, 4337, 1535, 3900, 4082, 3859, 3498,
	2656, 3617, 3860, 4085, 4034, 3894, 107, 1703, 1746, 2514,
	3708, 3851, 3176, 3918, 2302, 3700, 687, 4372, 2469, 3467,
	596, 3001, 1745, 548, 551, 3432, 651, 673, 101, 2533,
	3807, 2707, 3790, 2914, 2915, 3356, 3893, 1465, 3612, 4218,
	2247, 749, 3299, 1412, 1216, 3692, 3503, 2921, 1748, 1148,
	4083, 3112, 2987, 3591, 3623, 2171, 2632, 1563, 2945, 814,
	3579, 2473, 2500, 3075, 1414, 3570, 2459, 489, 1266, 3014,
	134, 2724, 105, 1160, 3159, 2870, 2848, 1156, 1265, 2605,
	2180, 2638, 3452, 3174, 1377, 715, 2639, 2475, 1388, 709,
	1564, 1077, 2871, 1409, 3228, 2636, 2563, 1416, 1751, 2233,
	697, 3275, 2172, 2109, 2044, 1722, 1242, 2968, 2496, 2150,
	2235, 2587, 1446, 1074, 1613, 2922, 2355, 1609, 2279, 1454,
	2710, 2873, 692, 1449, 2162, 671, 2114, 1299, 1277, 1639,
	3079, 1151, 1205, 1612, 2084, 1473, 1070, 1071, 1383, 2240,
	667, 1395, 680, 2429, 668, 1387, 1386, 3709, 1385, 654,
	1276, 1164, 1187, 1261, 2076, 2043, 2077, 1169, 639, 554,
	1175, 663, 1200, 572, 571, 1715, 129, 125, 2941, 4681,
	4675, 690, 4662, 2948, 4646, 4632, 4600, 4598, 4570, 4567,
	1152, 4566, 4565, 4550, 4548, 4454, 4450, 4445, 100, 2953,
	2952, 4126, 4125, 3371, 3625, 3870, 2107, 2518, 1179, 713,
	3445, 4321, 4012, 2550, 2549, 3501, 42, 3865, 3866, 3863,
	3864, 3415, 3416, 86, 2949, 3499, 97, 1437, 4010, 4625,
	71, 4587, 4585, 4670, 4624, 3869, 93, 3448, 4586, 47,
	2955, 4013, 2931, 3354, 3446, 94, 660, 3125, 2979, 1725,
	2932, 3972, 686, 99, 2318, 4387, 4386, 564, 4590, 4335,
	71, 4534, 4205, 653, 2668, 3447, 3974, 665, 2547, 47,
	2036, 2547, 4020, 2379, 2377, 2376, 2375, 2378, 2374, 2373,
	2372, 89, 4485, 2386, 4220, 2385, 2384, 4274, 2383, 2382,
	2381, 2380, 2444, 2935, 122, 2999, 1171, 3791, 1177, 1178,
	1351, 42, 42, 4293, 3888, 42, 677, 3793, 4267, 42,
	3175, 4334, 1181, 4680, 4101, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 3256, 503, 1498, 3762, 4204,
	3559, 4618, 1147, 568, 4041, 3295, 88, 3759, 3608, 3296,
	3845, 3325, 3324, 4394, 3135, 3967, 2951, 3891, 42, 3134,
	2954, 3849, 1163, 3572, 4191, 1159, 89, 89, 2944, 3968,
	89, 3892, 4409, 4320, 89, 3592, 4147, 2959, 4090, 4343,
	2824, 3289, 3684, 1168, 114, 112, 113, 3973, 2862, 4343,
	543, 2861, 1255, 3309, 2863, 49, 90, 56, 55, 58,
	3310, 3311, 3295, 2586, 96, 2113, 3296, 4338, 2621, 2110,
	4268, 3396, 1064, 1614, 1352, 1615, 4340, 3397, 3398, 3926,
	566, 2439, 2440, 89, 3796, 2438, 4340, 3924, 62, 92,
	91, 2111, 2112, 2153, 2154, 57, 2367, 2379, 2377, 2376,
	2375, 2378, 2374, 2373, 2372, 2368, 2369, 2386, 2370, 2385,
	2384, 2371, 2383, 2382, 2381, 2380, 666, 3919, 2188, 2580,
	1240, 1241, 4411, 4322, 3318, 1249, 3229, 3794, 3795, 3797,
	3798, 3799, 2946, 1238, 3645, 1239, 1240, 1241, 2131, 1329,
	563, 4344, 1220, 1221, 562, 2957, 1224, 558, 89, 96,
	96, 4344, 2205, 96, 1401, 1402, 3209, 96, 2748, 1397,
	1400, 1401, 1402, 1398, 1337, 1399, 1404, 2585, 136, 2711,
	2712, 69, 70, 1296, 4270, 2471, 2472, 1310, 4350, 2486,
	2947, 1211, 1222, 1223, 4279, 4271, 4272, 4273, 4277, 4278,
	4275, 2485, 4276, 4624, 4280, 4586, 4584, 648, 3530, 78,
	2490, 79, 2476, 2476, 3665, 163, 96, 490, 502, 3232,
	3669, 163, 1250, 1251, 3667, 1225, 163, 2479, 2478, 2617,
	2480, 3098, 2497, 1226, 84, 2155, 638, 2569, 2568, 538,
	2082, 541, 561, 60, 2390, 163, 643, 642, 1258, 3343,
	1354, 1355, 664, 645, 163, 4351, 2151, 2152, 3054, 644,
	1349, 596, 1148, 1350, 4011, 4669, 1378, 163, 148, 643,
	145, 1381, 146, 4625, 1346, 4623, 4622, 4587, 163, 1162,
	641, 2161, 1212, 1408, 1413, 2160, 2159, 2158, 2157, 1431,
	1432, 1148, 2156, 1148, 1148, 1373, 108, 1148, 4309, 4074,
	163, 638, 3886, 1162, 2946, 4477, 3187, 1148, 150, 149,
	3878, 3876, 490, 163, 1252, 1507, 1509, 1333, 1334, 1511,
	4281, 4269, 3104, 66, 67, 73, 3105, 74, 2994, 4141,
	3034, 3103, 3102, 649, 4490, 2950, 137, 1405, 4489, 4427,
	2943, 153, 4038, 1452, 4447, 4286, 3471, 4448, 1303, 4449,
	4544, 1526, 2947, 3187, 3624, 1530, 1531, 1532, 1533, 1534,
	3187, 1538, 1312, 4288, 4476, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 3466, 108, 1397, 1400, 1401, 1402, 1398, 1264,
	1399, 1404, 1380, 3038, 1326, 3439, 730, 1477, 731, 733,
	734, 735, 736, 4152, 3500, 4151, 732, 2314, 2142, 4149,
	151, 2143, 152, 3819, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 4027,
	1557, 1558, 1560, 1560, 1560, 1423, 1565, 1565, 1565, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	3571, 3501, 3975, 3236, 3235, 3237, 3234, 4446, 2998, 662,
	2186, 3241, 3837, 3233, 3230, 138, 3317, 3231, 1407, 3239,
	3976, 2581, 4143, 4007, 3808, 4391, 4352, 1565, 3594, 542,
	4024, 2946, 3811, 3238, 1336, 565, 2392, 2393, 2391, 2946,
	3535, 1219, 1359, 1391, 3809, 3810, 3613, 3614, 3615, 3616,
	3240, 3242, 3468, 3039, 2164, 2593, 4102, 3442, 2187, 2599,
	59, 61, 2996, 126, 3316, 4029, 87, 3792, 2534, 1312,
	2189, 2311, 1312, 3817, 142, 4403, 4385, 2930, 4072, 2947,
	4341, 4678, 4648, 4677, 4647, 1374, 2960, 2947, 4644, 4563,
	4341, 4608, 677, 677, 1566, 1567, 4545, 4442, 1371, 4192,
	3124, 549, 2113, 3978, 4440, 4441, 4401, 3115, 85, 3104,
	1565, 1565, 4021, 3097, 3102, 1214, 2942, 4552, 3523, 1439,
	1439, 1440, 1559, 1561, 1562, 1508, 1375, 4203, 2111, 2112,
	1374, 2237, 4393, 3977, 3885, 3000, 1434, 115, 1434, 1434,
	3848, 1369, 1434, 1257, 1433, 1263, 1438, 1438, 2083, 3847,
	1445, 109, 109, 3178, 1599, 109, 1259, 147, 2482, 87,
	4319, 3597, 3595, 1403, 128, 2483, 2962, 3593, 1304, 3622,
	1403, 1213, 3904, 2499, 132, 140, 139, 1470, 1471, 1469,
	3179, 3877, 4314, 3596, 3178, 163, 4142, 1237, 3875, 4475,
	1311, 4183, 3428, 1345, 1392, 3243, 1472, 4148, 1319, 4047,
	552, 490, 4004, 3430, 4287, 143, 1720, 4003, 109, 3433,
	3434, 3435, 3436, 3437, 4002, 1602, 4001, 4026, 2144, 1730,
	1731, 1729, 136, 2606, 2609, 2607, 2608, 2610, 2611, 2612,
	2613, 3161, 137, 141, 3169, 3171, 3170, 1600, 1601, 4000,
	3163, 730, 699, 731, 733, 734, 735, 736, 553, 3998,
	2997, 732, 2314, 1365, 1176, 154, 136, 3999, 4136, 4137,
	163, 4399, 1317, 4355, 4356, 1077, 2528, 2529, 1173, 1172,
	1077, 4008, 4422, 4222, 1364, 1360, 1361, 1362, 1363, 1366,
	1367, 1368, 1370, 3433, 3434, 3435, 3436, 3437, 4023, 1470,
	1471, 1469, 3537, 3538, 1176, 661, 130, 1710, 131, 1148,
	4132, 1174, 1313, 1320, 1321, 1323, 1324, 1325, 1472, 1327,
	1328, 108, 1330, 1331, 1332, 3441, 1335, 2524, 1338, 1339,
	1340, 1341, 1342, 2312, 2313, 1322, 1318, 550, 1314, 2167,
	107, 1695, 1696, 1697, 1698, 1699, 4303, 638, 3022, 3023,
	596, 550, 3618, 3619, 3536, 136, 4561, 3621, 4556, 2523,
	163, 1234, 1235, 1724, 1624, 2046, 141, 1253, 1236, 596,
	1315, 1316, 1233, 2115, 4559, 3524, 3525, 3526, 1262, 1232,
	1231, 163, 1747, 1230, 547, 1403, 3852, 3853, 1755, 2168,
	3580, 4671, 2078, 3581, 2036, 3582, 2311, 4215, 3094, 1163,
	4429, 4428, 1163, 2466, 4658, 3082, 1629, 490, 3082, 3509,
	3092, 1705, 2117, 3091, 1617, 2116, 1723, 2535, 4568, 1618,
	3360, 1728, 1148, 4684, 1700, 1148, 4679, 3114, 4663, 4635,
	1606, 3164, 1170, 1372, 2085, 640, 4292, 108, 2086, 666,
	1428, 1429, 3114, 4174, 2040, 2040, 2040, 2040, 2070, 2468,
	1406, 1419, 1421, 2468, 1308, 2088, 2090, 1603, 1604, 2087,
	4066, 138, 1422, 1701, 3884, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 2468, 3881, 2468,
	596, 3620, 3464, 3099, 550, 3033, 3029, 2071, 1430, 2468,
	2047, 3004, 3003, 2594, 1419, 1421, 2148, 1735, 1733, 1260,
	3165, 2517, 1167, 2220, 2219, 2059, 1419, 1421, 2060, 2061,
	2062, 2468, 2218, 1753, 1166, 2141, 3867, 2066, 4069, 2104,
	3459, 1390, 1189, 127, 1180, 3090, 487, 2074, 3177, 3274,
	4451, 3007, 2795, 2049, 2792, 2034, 3006, 3644, 2536, 1513,
	1514, 2038, 2042, 3308, 3031, 3030, 89, 1625, 2124, 2868,
	1512, 694, 1510, 2765, 673, 673, 673, 673, 1626, 2742,
	2122, 3081, 1719, 1718, 2177, 1711, 1709, 1706, 1726, 1148,
	2628, 2548, 1727, 2063, 1413, 2065, 2214, 3359, 1737, 2525,
	1307, 108, 550, 1420, 4656, 1744, 108, 4657, 2434, 4655,
	1743, 4558, 4560, 123, 2250, 2045, 1515, 1628, 1529, 2467,
	1528, 2102, 3113, 2467, 1527, 2213, 3108, 2051, 2052, 3088,
	3082, 1478, 2207, 1294, 3111, 3085, 4312, 3113, 3084, 3089,
	3508, 140, 139, 2208, 2215, 1515, 1420, 2467, 1202, 2467,
	2191, 4146, 650, 2239, 2217, 3088, 3082, 1488, 1420, 2467,
	1498, 3085, 2080, 2079, 3084, 3089, 3082, 2089, 2312, 2313,
	2444, 1163, 2095, 2096, 3083, 2466, 2098, 1512, 89, 2173,
	1515, 2467, 2119, 1254, 1755, 4173, 2304, 2303, 3082, 2195,
	1148, 2192, 2101, 1163, 3868, 4172, 3083, 2466, 1498, 2858,
	3461, 2278, 108, 2073, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 1538,
	673, 2120, 2123, 4181, 1513, 1514, 1513, 1514, 3861, 2310,
	2315, 108, 1477, 2035, 123, 3396, 1064, 3940, 3386, 3387,
	3389, 3397, 3398, 3388, 3390, 3391, 3105, 2165, 2305, 4015,
	2213, 118, 4423, 4424, 2163, 2166, 4420, 4421, 3392, 3393,
	3394, 3395, 3103, 2359, 4208, 4207, 2216, 3090, 2339, 3081,
	2640, 2182, 2347, 2280, 2341, 2344, 2169, 2181, 2849, 2271,
	2185, 2183, 2357, 2184, 3123, 673, 4016, 4458, 2193, 2194,
	3122, 2196, 3121, 3120, 3119, 163, 2206, 2387, 2388, 121,
	3118, 96, 3117, 3116, 1162, 3775, 3773, 2739, 3162, 2277,
	2736, 2307, 2733, 2309, 2443, 1243, 2257, 1496, 1497, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1488, 2270, 2321, 1498,
	2324, 686, 2243, 667, 1755, 2558, 1077, 1156, 1472, 1228,
	120, 4165, 3050, 677, 677, 677, 677, 3049, 2255, 3487,
	3486, 1455, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488,
	2267, 1218, 1498, 677, 1479, 3377, 3375, 3774, 4459, 3048,
	1487, 1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1488, 3047, 3046, 1498, 3063, 3062, 490, 3045, 1378,
	1245, 3044, 3060, 3059, 1162, 163, 2451, 1625, 2286, 1491,
	1492, 1493, 1494, 1495, 1488, 638, 638, 1498, 1626, 1469,
	638, 3488, 1536, 2284, 2285, 2283, 2865, 2864, 1244, 163,
	2356, 3043, 96, 2395, 638, 638, 1472, 3376, 2543, 2449,
	163, 2281, 4661, 2616, 490, 490, 490, 490, 2559, 2400,
	2456, 2402, 1229, 2615, 2405, 1471, 1469, 3064, 2426, 163,
	163, 163, 163, 163, 3061, 163, 4638, 4605, 4637, 2277,
	2100, 1217, 1270, 1472, 2506, 2507, 2508, 2509, 2510, 2564,
	1556, 163, 163, 2493, 2494, 2495, 638, 2450, 2866, 2481,
	2484, 1183, 163, 2487, 2488, 2489, 1428, 1429, 2428, 677,
	1247, 1182, 3258, 2541, 2542, 4634, 4546, 2465, 2436, 2435,
	2441, 2432, 4494, 3002, 2502, 2503, 2504, 2505, 1422, 2786,
	3067, 2785, 2455, 2453, 2356, 4361, 2808, 4493, 2527, 4492,
	2477, 1713, 1162, 4486, 2511, 2325, 2326, 2327, 2328, 2329,
	3818, 1470, 1471, 1469, 1430, 638, 638, 638, 3812, 1256,
	1162, 4512, 4361, 2516, 4436, 3027, 4435, 2241, 2498, 2353,
	1472, 3369, 1419, 1421, 677, 3901, 1487, 1486, 1496, 1497,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488, 2513, 2125,
	1498, 638, 2128, 2129, 2130, 4672, 2132, 2133, 3187, 2256,
	2134, 2762, 2763, 2764, 2135, 4528, 1466, 2136, 1470, 1471,
	1469, 2137, 2138, 4525, 2139, 2140, 4665, 3887, 2241, 163,
	163, 2519, 1415, 2521, 163, 89, 1162, 1472, 2263, 2265,
	2266, 4650, 3070, 4284, 2662, 3069, 2264, 2282, 163, 638,
	2544, 163, 163, 163, 163, 3070, 4683, 2662, 3069, 2248,
	2249, 3199, 2252, 163, 4673, 1470, 1471, 1469, 3169, 3171,
	3170, 163, 3751, 3749, 4527, 163, 4667, 4390, 2665, 2663,
	2658, 4299, 4524, 3750, 1472, 2660, 2230, 2253, 4290, 103,
	2254, 2665, 2663, 2658, 4285, 4283, 2232, 4212, 2660, 1487,
	1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1488, 694, 694, 1498, 1420, 4042, 4014, 2422, 2364, 1470,
	1471, 1469, 2231, 3899, 3898, 163, 1470, 1471, 1469, 2974,
	4614, 3897, 490, 3071, 3072, 110, 3896, 116, 1472, 2659,
	2661, 2664, 2666, 3828, 3782, 1472, 3071, 3072, 1470, 1471,
	1469, 3781, 2659, 2661, 2664, 2666, 1486, 1496, 1497, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1488, 1472, 1162, 1498,
	1162, 3548, 2229, 1162, 3196, 1470, 1471, 1469, 4682, 4144,
	1162, 3482, 2799, 1560, 3481, 1162, 1162, 1162, 1470, 1471,
	1469, 1470, 1471, 1469, 1472, 163, 4496, 163, 3480, 4439,
	1148, 1065, 1066, 1067, 3600, 3598, 3479, 1472, 3478, 3420,
	1472, 3372, 2085, 1165, 2973, 3599, 2086, 2971, 1487, 1486,
	1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488,
	4145, 2958, 1498, 2088, 3756, 1302, 1301, 2087, 3444, 3443,
	4666, 1482, 2572, 1485, 694, 4649, 2576, 4643, 3677, 4572,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 4564, 1483, 1484,
	1481, 163, 163, 163, 1389, 4452, 4433, 2584, 4432, 1487,
	1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1488, 1408, 4378, 1498, 4377, 3169, 3171, 3170, 2560, 1162,
	4371, 4370, 1381, 3193, 1487, 1486, 1496, 1497, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1488, 4374, 4150, 1498, 4049,
	2050, 4484, 2556, 1382, 1470, 1471, 1469, 3691, 2787, 2624,
	673, 4361, 3527, 3017, 2562, 3016, 1470, 1471, 1469, 2728,
	2729, 2730, 2226, 1472, 3260, 2570, 2603, 2069, 2555, 2554,
	2306, 2094, 2228, 2566, 2093, 1472, 2081, 1742, 1741, 2602,
	1714, 1712, 1487, 1486, 1496, 1497, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1488, 1297, 2721, 1498, 560, 2227, 3754,
	4483, 1736, 2731, 2732, 2727, 3605, 2734, 2735, 3603, 4482,
	2737, 2738, 2766, 1274, 163, 1536, 1755, 1470, 1471, 1469,
	163, 163, 638, 638, 638, 163, 163, 1343, 4481, 1452,
	1452, 2706, 2222, 2629, 2571, 1273, 1472, 4478, 2575, 4408,
	4388, 2591, 2224, 4329, 2092, 4323, 2583, 694, 2225, 4214,
	3169, 3171, 3170, 2532, 4213, 2590, 3169, 3171, 3170, 3169,
	3171, 3170, 4140, 2722, 4139, 2768, 2769, 2770, 2223, 4120,
	4073, 4028, 4025, 3997, 3966, 3965, 3936, 3890, 3889, 2598,
	3827, 3826, 2601, 3825, 3824, 3815, 3814, 3813, 3780, 2646,
	3777, 3752, 694, 3747, 3738, 4048, 3734, 2531, 2620, 3729,
	3728, 2622, 3727, 1536, 2760, 2761, 2625, 3601, 3590, 3578,
	3574, 2271, 3567, 3566, 3565, 3485, 3477, 3476, 2221, 3475,
	3403, 3208, 2637, 2726, 3207, 3205, 2715, 3065, 2969, 2800,
	2801, 2802, 2867, 1525, 1524, 2280, 1523, 2623, 2582, 2553,
	2097, 2277, 1487, 1486, 1496, 1497, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1488, 3990, 2789, 1498, 2741, 694, 2450,
	4188, 694, 3628, 4536, 3764, 4466, 3764, 4398, 3628, 694,
	673, 4056, 694, 673, 3764, 4300, 2752, 3989, 2750, 2751,
	677, 3915, 3764, 4129, 3628, 4128, 3422, 699, 3628, 4123,
	3406, 2259, 2260, 2261, 2771, 3405, 3914, 4070, 694, 3015,
	1755, 3628, 4032, 3187, 694, 2627, 694, 3628, 3911, 2036,
	3843, 3404, 2767, 2036, 3842, 3764, 3763, 3913, 2853, 677,
	2036, 1077, 3628, 3627, 3413, 3412, 3409, 3410, 2775, 3409,
	3408, 2430, 1487, 1486, 1496, 1497, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1488, 2741, 694, 1498, 1487, 1486, 1496,
	1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488, 2209,
	1536, 1498, 2596, 2595, 2330, 2578, 2336, 2337, 1487, 1486,
	1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488,
	2430, 2807, 1498, 2330, 694, 2209, 694, 1631, 1630, 3015,
	2431, 3295, 2433, 2281, 3693, 3296, 102, 3712, 2146, 1308,
	2851, 2145, 2245, 1305, 1306, 4616, 1306, 3712, 2925, 2928,
	2823, 2825, 89, 89, 2852, 2330, 4330, 596, 2832, 2833,
	2834, 4201, 2547, 3949, 163, 1753, 3187, 3628, 2209, 3423,
	3021, 3411, 3206, 2854, 3042, 2916, 2855, 2437, 2818, 2431,
	2816, 2036, 1701, 2209, 2815, 3020, 2448, 2741, 2614, 3712,
	1723, 2877, 163, 2741, 3024, 3025, 2244, 2600, 2099, 1308,
	1617, 2856, 2859, 2552, 2546, 2246, 3009, 1376, 2108, 2036,
	2040, 1734, 1732, 1611, 2869, 2961, 2963, 1379, 4426, 2720,
	2964, 2965, 4301, 2966, 2967, 4168, 4052, 2920, 1162, 2923,
	2924, 3783, 3772, 2177, 3769, 2474, 163, 2501, 163, 3687,
	2476, 3181, 1162, 3053, 3052, 2497, 2913, 1162, 2711, 2712,
	2970, 1312, 2526, 2492, 2491, 1704, 1293, 3019, 2972, 2515,
	3829, 2565, 1209, 1208, 4653, 4652, 2512, 3035, 4629, 4627,
	4621, 4620, 4593, 4588, 638, 638, 4582, 4580, 4530, 677,
	4529, 3906, 677, 3902, 3693, 3421, 3012, 2995, 3011, 2597,
	1487, 1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1488, 2992, 2975, 1498, 2714, 2708, 3013, 2147, 2118,
	1738, 1309, 2718, 2717, 3194, 2716, 2204, 3197, 3018, 2201,
	3200, 2203, 2199, 2198, 2202, 2197, 4418, 2200, 2173, 3057,
	537, 4333, 3210, 2749, 133, 4170, 163, 163, 3028, 2757,
	673, 2756, 1162, 4107, 4380, 163, 1459, 1460, 1755, 3882,
	3080, 3858, 3032, 1459, 1460, 3767, 3086, 3093, 3160, 3096,
	3037, 3517, 3183, 3040, 3185, 3516, 3402, 3401, 3107, 1162,
	3189, 3190, 3191, 3073, 3051, 3400, 3201, 1462, 1457, 2929,
	3056, 3068, 1464, 1463, 1462, 1461, 4381, 2919, 4196, 1464,
	1463, 144, 1461, 3221, 4328, 4325, 4088, 539, 540, 4324,
	1411, 43, 4327, 4, 4086, 3267, 4135, 3076, 3087, 4134,
	4031, 3247, 559, 3248, 3249, 2574, 3250, 3251, 2573, 2091,
	3252, 3109, 4017, 4018, 1447, 3101, 3100, 3055, 4457, 3292,
	3297, 3874, 3723, 3168, 673, 1448, 3261, 3262, 3263, 3264,
	3528, 108, 3374, 2271, 2630, 43, 1627, 1291, 106, 1275,
	1272, 3244, 1271, 1215, 3246, 4609, 4059, 3302, 4058, 1389,
	3291, 2248, 2249, 3822, 3941, 3820, 3217, 1268, 1269, 3449,
	3823, 1406, 3821, 2277, 2520, 3188, 3300, 1348, 3212, 4331,
	4289, 4035, 3686, 3785, 3257, 3771, 2977, 2170, 2093, 1267,
	2092, 3204, 2319, 2320, 1443, 1444, 1441, 1442, 1435, 1436,
	1357, 2755, 3202, 3214, 4500, 4499, 4498, 3994, 2619, 2754,
	1248, 3215, 3676, 688, 3293, 3219, 3218, 4415, 4414, 4413,
	4412, 4197, 3370, 4160, 4153, 4106, 3922, 2631, 3074, 3383,
	689, 102, 3245, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 3921, 3650, 1498, 3015, 2981,
	2982, 2983, 163, 4631, 4630, 4631, 4453, 163, 3840, 1378,
	163, 163, 163, 3472, 3378, 3351, 3470, 3469, 3041, 3217,
	2817, 3358, 3304, 2796, 3306, 3307, 2793, 2759, 3268, 3269,
	3270, 3271, 3272, 3273, 2064, 3382, 2918, 1467, 596, 1207,
	1206, 4630, 2927, 2927, 4210, 3424, 3399, 3305, 2242, 681,
	4516, 3438, 3294, 3362, 3363, 3364, 104, 3365, 3366, 677,
	68, 2877, 685, 684, 3368, 3312, 1487, 1486, 1496, 1497,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488, 4241, 65,
	1498, 4379, 3361, 1, 3350, 4243, 23, 4242, 22, 2511,
	3168, 4244, 24, 1162, 4318, 163, 4245, 25, 4239, 18,
	4238, 17, 675, 1162, 1162, 4237, 16, 4240, 19, 638,
	4236, 15, 3510, 3451, 4230, 11, 4265, 39, 4263, 37,
	4262, 36, 4266, 40, 163, 638, 1162, 50, 3440, 2592,
	490, 4261, 32, 2126, 3380, 4260, 31, 2363, 3381, 4259,
	30, 4256, 27, 638, 4255, 26, 4235, 14, 4232, 13,
	3407, 595, 3460, 677, 4231, 12, 3465, 4229, 10, 3806,
	3805, 3611, 3431, 3419, 3473, 2993, 4313, 4182, 1162, 3816,
	2705, 1721, 638, 4006, 1162, 1186, 1162, 3429, 2530, 1162,
	1298, 4326, 4087, 3505, 4194, 4193, 3789, 3788, 2986, 2985,
	1292, 2579, 2106, 3077, 3078, 3455, 3005, 3457, 3066, 4158,
	2618, 2149, 2604, 3458, 3610, 1162, 1162, 1358, 2452, 2457,
	3506, 3844, 3497, 4040, 3496, 3505, 3495, 1150, 117, 3512,
	3513, 3514, 3474, 2557, 1227, 511, 3519, 3520, 2454, 3522,
	2939, 4195, 1295, 2938, 2956, 2470, 1384, 3962, 2937, 2936,
	4291, 2940, 3489, 3540, 693, 695, 3545, 3577, 3507, 3490,
	2916, 1636, 1634, 1635, 3539, 3073, 2646, 1701, 1455, 1633,
	1638, 1637, 3518, 3634, 3635, 3636, 3637, 3638, 3639, 3640,
	3641, 3642, 517, 3626, 1619, 3531, 4365, 3533, 3643, 3690,
	3167, 1468, 3648, 743, 135, 3483, 3484, 3682, 3546, 3110,
	3549, 3653, 3551, 3553, 3555, 3557, 646, 647, 1162, 124,
	519, 3560, 1506, 3562, 2753, 3575, 1162, 1162, 1162, 2860,
	1075, 1076, 1068, 4456, 2744, 4206, 4089, 4198, 4354, 3583,
	3584, 3585, 3168, 3701, 3679, 3680, 3681, 1453, 4091, 3920,
	3649, 163, 2806, 3607, 1555, 108, 2354, 163, 712, 659,
	3707, 3939, 2781, 1162, 4093, 3302, 2262, 3695, 2177, 726,
	725, 3629, 724, 3651, 3697, 1423, 721, 722, 2389, 4342,
	2251, 3288, 3287, 3290, 3300, 1480, 3414, 1356, 2809, 701,
	1427, 1426, 1425, 1424, 1418, 670, 3696, 2423, 3026, 1396,
	1394, 1393, 1739, 1607, 3761, 2713, 2709, 669, 674, 46,
	2758, 3660, 3661, 3662, 1246, 3663, 1458, 3664, 3683, 4100,
	111, 3666, 1162, 3668, 683, 682, 691, 3367, 29, 21,
	20, 1203, 2635, 2657, 1184, 48, 54, 1560, 1560, 1560,
	1565, 1565, 1565, 1568, 1569, 1570, 1571, 1565, 1565, 1565,
	53, 163, 51, 3717, 3694, 52, 2980, 3737, 2522, 4364,
	4554, 3770, 1278, 2173, 4571, 3776, 1162, 4603, 3699, 1353,
	38, 35, 34, 33, 3778, 4257, 4251, 3713, 3714, 3715,
	3716, 4250, 4253, 4252, 4249, 4254, 4248, 4247, 3711, 3710,
	4246, 4264, 4234, 4233, 4538, 3718, 4537, 5, 98, 95,
	41, 119, 3801, 3802, 3803, 1146, 2, 3167, 3719, 3720,
	3721, 490, 3732, 0, 3739, 3735, 3748, 2927, 2927, 2927,
	0, 2927, 2927, 0, 0, 0, 0, 490, 3768, 3740,
	3741, 3742, 3168, 0, 0, 0, 0, 3832, 0, 3765,
	3766, 0, 163, 0, 3758, 0, 0, 0, 3846, 0,
	0, 0, 3648, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3786, 0, 0, 3830, 0, 0, 1566, 1567,
	0, 0, 0, 163, 1599, 1600, 1601, 0, 0, 3779,
	0, 3854, 3855, 0, 0, 0, 0, 1162, 1162, 1162,
	0, 0, 0, 0, 638, 0, 3800, 1559, 1561, 1562,
	3834, 163, 638, 3804, 0, 3836, 0, 3835, 0, 1162,
	1162, 0, 3838, 3839, 0, 3841, 0, 0, 0, 0,
	0, 0, 3831, 0, 0, 0, 0, 638, 0, 1162,
	3505, 638, 0, 0, 0, 0, 3856, 0, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 163, 0, 0, 0, 3505, 0, 0, 0, 0,
	0, 0, 0, 0, 3873, 0, 0, 0, 0, 3850,
	3080, 3879, 3862, 490, 2927, 3857, 3086, 0, 0, 0,
	0, 490, 490, 490, 490, 1162, 0, 0, 1162, 490,
	490, 1162, 490, 0, 3871, 0, 3917, 0, 0, 3883,
	0, 1162, 0, 1162, 0, 490, 490, 1162, 163, 490,
	3908, 3910, 3880, 0, 1162, 0, 1162, 1162, 1162, 1162,
	1162, 1162, 1456, 0, 0, 0, 0, 3076, 3087, 0,
	0, 3909, 0, 0, 0, 0, 0, 0, 0, 3167,
	3923, 3925, 0, 3180, 0, 0, 3182, 0, 0, 3946,
	0, 0, 3701, 0, 0, 3648, 3648, 673, 0, 0,
	3951, 0, 0, 0, 108, 3927, 3928, 3929, 3930, 0,
	3895, 0, 0, 3934, 0, 3905, 0, 3937, 3938, 1162,
	157, 0, 0, 107, 0, 1162, 536, 0, 3302, 3903,
	0, 157, 699, 3943, 556, 0, 0, 0, 0, 163,
	0, 0, 0, 0, 1162, 0, 0, 3300, 0, 0,
	656, 3168, 0, 0, 0, 3217, 0, 0, 0, 157,
	0, 0, 3986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 700, 3945, 1148, 0, 0, 0, 1085,
	3259, 0, 0, 157, 0, 0, 0, 108, 0, 0,
	3963, 3993, 0, 0, 3959, 0, 0, 3960, 0, 0,
	3953, 3942, 0, 0, 0, 157, 3992, 0, 0, 0,
	667, 3950, 0, 0, 0, 3954, 0, 0, 157, 0,
	0, 3984, 0, 0, 3987, 0, 0, 0, 0, 0,
	1162, 0, 3358, 0, 3991, 1162, 0, 0, 4044, 4045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3358, 0, 0, 0, 0, 0, 0, 3969, 0,
	3979, 3982, 3983, 3970, 0, 3168, 3980, 3981, 0, 3167,
	0, 0, 0, 0, 0, 0, 0, 4043, 4068, 0,
	0, 0, 3996, 0, 0, 0, 3995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4005, 4009, 4019, 0,
	0, 4037, 3168, 0, 0, 0, 4033, 0, 4022, 0,
	4030, 0, 0, 0, 0, 4036, 0, 0, 0, 0,
	0, 0, 0, 4039, 0, 0, 0, 0, 0, 0,
	0, 4077, 0, 4050, 4051, 0, 0, 3946, 4111, 3675,
	0, 0, 0, 4060, 4078, 4079, 4080, 4061, 0, 4062,
	108, 4053, 4054, 0, 0, 0, 0, 0, 0, 163,
	0, 1162, 0, 0, 0, 0, 677, 0, 0, 4110,
	0, 0, 0, 0, 0, 4063, 0, 4065, 4075, 4067,
	0, 0, 0, 0, 0, 0, 0, 3456, 0, 0,
	0, 1162, 0, 0, 0, 0, 4108, 163, 4130, 0,
	0, 0, 638, 0, 0, 0, 0, 638, 638, 0,
	638, 0, 0, 4131, 0, 4133, 0, 4127, 0, 4117,
	4112, 0, 0, 4109, 0, 0, 0, 0, 4105, 0,
	4114, 4159, 0, 0, 0, 0, 4115, 4164, 4118, 0,
	490, 0, 0, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 490, 0, 1498, 0, 0,
	0, 0, 4154, 0, 0, 490, 0, 4138, 0, 0,
	0, 0, 0, 0, 0, 0, 4163, 0, 4179, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 4171,
	0, 0, 0, 0, 0, 0, 4162, 4155, 0, 3561,
	4189, 4157, 3701, 4166, 4156, 0, 0, 0, 0, 0,
	0, 0, 0, 3168, 108, 0, 0, 0, 0, 4169,
	3358, 0, 1148, 4167, 1148, 0, 0, 4176, 0, 0,
	0, 4223, 0, 4211, 108, 0, 4178, 4180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3167, 0,
	157, 0, 0, 4221, 0, 2234, 0, 0, 0, 0,
	0, 4175, 4209, 0, 0, 0, 1162, 0, 0, 3674,
	1148, 0, 0, 0, 0, 0, 0, 4310, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4282, 3276, 3277, 3278, 3279,
	3280, 3281, 3282, 3283, 3284, 3285, 3286, 0, 0, 3908,
	0, 3168, 0, 0, 0, 0, 4298, 0, 4294, 4302,
	4295, 0, 0, 0, 0, 157, 3302, 4353, 4346, 4357,
	3909, 0, 3685, 4315, 163, 0, 3358, 4311, 4308, 0,
	0, 0, 0, 163, 163, 3300, 4317, 0, 4305, 0,
	0, 0, 0, 0, 0, 4332, 0, 0, 0, 0,
	4349, 0, 3167, 4345, 1148, 0, 1148, 4117, 0, 4306,
	0, 0, 1148, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3167,
	0, 0, 490, 0, 0, 2927, 2927, 1162, 0, 0,
	1162, 4382, 0, 4410, 0, 656, 4402, 0, 0, 0,
	0, 490, 3267, 4396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 4404, 0,
	3908, 0, 4406, 0, 4389, 0, 0, 0, 0, 4419,
	0, 1085, 4397, 4375, 0, 0, 0, 0, 0, 4384,
	4431, 3909, 4407, 0, 4405, 0, 0, 0, 0, 3358,
	4425, 0, 4437, 0, 4417, 4416, 0, 0, 638, 4400,
	0, 4369, 4443, 0, 4464, 0, 0, 0, 0, 0,
	4468, 4455, 0, 596, 4430, 2927, 2927, 0, 0, 1162,
	4434, 0, 4480, 0, 0, 0, 4463, 0, 0, 4469,
	0, 4479, 0, 0, 0, 0, 0, 0, 490, 1162,
	490, 4467, 490, 0, 4465, 4470, 0, 1148, 0, 0,
	1148, 0, 4471, 0, 0, 0, 1148, 1148, 1148, 1148,
	0, 1148, 1148, 4504, 4472, 1148, 1148, 4437, 4504, 0,
	0, 4491, 4504, 4514, 0, 1162, 4518, 0, 0, 0,
	1148, 0, 4501, 4487, 0, 0, 0, 4522, 0, 0,
	0, 0, 0, 3302, 0, 4515, 0, 3648, 4488, 0,
	0, 4533, 0, 4526, 1148, 4523, 0, 1148, 0, 4519,
	1148, 0, 3300, 0, 0, 4517, 0, 4535, 4543, 4520,
	0, 0, 108, 4531, 0, 0, 2443, 2210, 2211, 2212,
	3167, 4562, 4551, 0, 4495, 4542, 0, 4497, 596, 4541,
	4573, 4553, 0, 4540, 4506, 4507, 4508, 0, 4579, 4511,
	4539, 4574, 0, 0, 0, 1148, 0, 0, 0, 1148,
	0, 1148, 0, 4594, 4597, 1148, 4504, 0, 4504, 4576,
	0, 4581, 4606, 0, 4583, 4502, 1148, 1148, 1148, 1148,
	0, 1148, 0, 4504, 4504, 4504, 0, 0, 4504, 0,
	0, 4547, 0, 638, 4549, 0, 0, 0, 0, 0,
	0, 0, 1162, 3654, 3655, 3656, 3657, 3658, 4626, 1148,
	490, 1148, 4628, 1148, 0, 0, 4504, 0, 4504, 4639,
	0, 0, 4641, 0, 490, 0, 0, 163, 3167, 0,
	0, 0, 0, 4651, 0, 0, 0, 532, 0, 0,
	0, 0, 4595, 1148, 4659, 0, 0, 0, 1162, 1148,
	4504, 0, 0, 2331, 0, 0, 0, 1148, 0, 0,
	4642, 2335, 0, 0, 4504, 0, 4613, 0, 0, 0,
	0, 0, 0, 1148, 0, 0, 1148, 0, 0, 0,
	4504, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 0, 1148, 4504, 2398, 2399, 0, 0, 0, 4504,
	4636, 3255, 2406, 2407, 2408, 3955, 3956, 3957, 3958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2421, 0, 1162, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 4664, 0, 0, 0,
	0, 0, 0, 504, 0, 0, 1162, 0, 0, 0,
	1610, 0, 0, 1085, 0, 0, 0, 0, 1085, 0,
	0, 0, 0, 4676, 0, 0, 0, 0, 3563, 3564,
	0, 0, 0, 163, 0, 0, 3573, 3254, 0, 3576,
	0, 0, 0, 0, 0, 0, 3586, 3587, 3588, 3589,
	507, 0, 0, 0, 3602, 3604, 3606, 0, 0, 518,
	530, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3609, 0, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 0, 0, 1498, 1162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 513, 0,
	520, 516, 0, 0, 525, 526, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 1717, 556, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 157, 0, 0, 1717, 556, 0,
	0, 1750, 0, 0, 0, 1752, 0, 0, 1162, 1487,
	1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1488, 3253, 0, 1498, 157, 157, 157, 157, 157, 0,
	157, 0, 0, 4092, 4095, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2067, 2068, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 2075, 0, 0,
	0, 0, 0, 1536, 0, 0, 0, 0, 0, 638,
	0, 0, 0, 0, 523, 0, 0, 0, 3725, 3726,
	0, 0, 0, 0, 0, 163, 3733, 515, 1162, 3736,
	0, 0, 0, 0, 0, 0, 3743, 3744, 3745, 3746,
	0, 0, 0, 0, 1162, 3753, 3755, 3757, 0, 0,
	0, 3760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1162, 0, 0, 0, 0, 0, 0, 0,
	3220, 0, 0, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 514, 528, 1498, 676, 0,
	0, 0, 529, 0, 0, 0, 0, 0, 1162, 1487,
	1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1488, 0, 0, 1498, 157, 157, 0, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 638, 1750, 157, 157, 157, 157,
	0, 0, 0, 0, 505, 0, 156, 0, 656, 0,
	0, 0, 0, 0, 0, 0, 157, 546, 1536, 0,
	656, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2238, 0, 0, 0, 0, 0,
	0, 521, 508, 509, 0, 535, 0, 0, 0, 510,
	512, 0, 506, 534, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2633, 2634, 700, 1149,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1752, 0, 0, 0, 0, 3198, 0, 0, 0,
	0, 1185, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 0, 0, 0, 1201, 0, 0, 0, 0, 0,
	0, 2567, 0, 4095, 2238, 1487, 1486, 1496, 1497, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1488, 0, 0, 1498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	656, 0, 157, 2238, 2238, 2238, 0, 0, 0, 2238,
	0, 2238, 2238, 2238, 0, 2238, 2238, 0, 0, 0,
	1085, 2238, 0, 0, 0, 0, 0, 0, 0, 711,
	0, 0, 0, 0, 0, 2238, 2238, 2238, 2238, 4358,
	4362, 2238, 2238, 2238, 2238, 2238, 2238, 0, 4376, 0,
	2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238, 2238,
	2238, 2238, 0, 0, 0, 0, 157, 157, 157, 2626,
	3195, 0, 0, 0, 1085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 493,
	0, 1752, 0, 0, 0, 0, 0, 0, 158, 1487,
	1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1488, 2723, 0, 1498, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 3192, 0, 0, 158, 0, 0, 0,
	0, 2740, 0, 4438, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	158, 1154, 1487, 1486, 1496, 1497, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1488, 0, 0, 1498, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 493, 158, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 157, 157, 0, 0, 2790,
	157, 157, 0, 0, 2773, 0, 2774, 0, 1487, 1486,
	1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488,
	0, 4509, 1498, 0, 0, 0, 0, 0, 0, 0,
	2782, 2783, 2784, 0, 2772, 0, 2788, 0, 2791, 0,
	0, 2794, 0, 0, 2797, 2798, 0, 0, 0, 2803,
	2804, 0, 0, 0, 0, 2810, 2811, 2812, 2048, 0,
	2813, 0, 2814, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 0, 0, 1498, 0, 0,
	0, 0, 4569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2819, 2820, 2821, 2822, 1204, 0, 2826, 2827,
	2828, 2829, 2830, 2831, 0, 0, 0, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 0,
	2847, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 0, 0, 0, 0, 0, 3058, 0,
	0, 1300, 0, 0, 0, 0, 0, 4640, 0, 0,
	0, 0, 3095, 0, 4645, 0, 0, 0, 0, 0,
	0, 3106, 2743, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3126, 3127, 3128,
	3129, 3130, 3131, 3132, 3133, 0, 0, 3136, 3137, 3138,
	3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148,
	3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158,
	0, 3172, 3173, 1487, 1486, 1496, 1497, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1488, 0, 0, 1498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2308, 1487, 1486,
	1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1488,
	0, 0, 1498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2332, 2333, 2334, 157,
	0, 0, 2338, 0, 2340, 2343, 2346, 0, 2351, 2352,
	0, 0, 0, 0, 2362, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 2394, 0,
	2396, 2397, 0, 493, 0, 2401, 0, 2403, 2404, 0,
	0, 0, 0, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3313, 3314, 3315, 0, 3319, 3320, 3321, 3322,
	3323, 0, 3186, 3326, 3327, 3328, 3329, 3330, 3331, 3332,
	3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342,
	0, 3344, 3345, 3346, 3347, 3348, 3349, 0, 3352, 3353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 656, 157, 3222, 3223, 3224, 3225, 3226, 3227, 0,
	656, 0, 657, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 1085, 1085, 0,
	0, 0, 0, 1752, 0, 0, 0, 0, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 2911, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1389, 0, 0, 0, 0, 0, 0, 0, 2883,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2238, 0, 0, 0, 0, 0, 0, 2238, 2238,
	2238, 2238, 2238, 0, 0, 2872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2880, 0,
	0, 0, 0, 0, 0, 0, 2238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3529, 0, 0, 0,
	2640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3568, 3569, 0, 0, 1608, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 157, 0, 0, 157, 2857, 1752, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2882, 2905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2053, 2054, 2055, 2056, 2057, 0, 2058, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3722, 0, 3724, 0, 2900, 0,
	0, 0, 3730, 3731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2909, 0, 0, 0, 3631, 3632, 3633,
	0, 0, 0, 0, 2890, 0, 0, 158, 0, 0,
	1086, 0, 0, 0, 0, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3652, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3670, 3671, 3672, 3673, 0, 0, 0, 0,
	3678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3688, 3689, 0, 2902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1608, 1608, 0, 0, 0, 0, 0, 0, 0, 493,
	3698, 0, 0, 0, 0, 0, 0, 158, 0, 2190,
	0, 742, 0, 0, 2238, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 158, 157, 700, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 2875, 0, 0, 493, 493, 493, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 158, 158, 158, 0, 158, 0, 160,
	0, 494, 2887, 0, 0, 0, 3872, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 2258, 0, 0, 0,
	0, 2776, 2777, 2778, 2779, 2780, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2805,
	0, 658, 0, 0, 1085, 0, 157, 0, 0, 0,
	0, 0, 160, 1158, 0, 2876, 2878, 0, 0, 2881,
	0, 0, 2886, 0, 2891, 2888, 2889, 0, 2892, 2885,
	0, 2895, 2894, 2896, 160, 2897, 2898, 2899, 0, 0,
	2901, 2903, 2904, 2906, 2907, 2908, 494, 160, 0, 2879,
	2910, 0, 0, 0, 0, 0, 0, 0, 0, 2912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 158, 0, 0, 0, 657, 157, 2174, 0,
	0, 0, 2425, 0, 2427, 0, 0, 0, 0, 0,
	158, 0, 0, 158, 158, 158, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 157, 0,
	0, 0, 0, 158, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3961, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 740, 2874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 493, 0, 0, 0, 2273, 0,
	0, 0, 0, 0, 0, 157, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2537, 0, 0, 0, 0,
	0, 2539, 2540, 0, 555, 0, 1608, 2545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 158,
	0, 0, 0, 157, 0, 0, 0, 3931, 3932, 3933,
	0, 3935, 0, 0, 0, 0, 0, 2358, 0, 1084,
	0, 0, 0, 0, 1153, 3944, 0, 3947, 3948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 158, 158, 0, 0, 0, 0,
	0, 1086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2273, 0,
	0, 1154, 0, 0, 656, 0, 0, 0, 3985, 0,
	0, 0, 0, 0, 2704, 0, 3988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 0,
	2653, 0, 0, 0, 0, 494, 2677, 0, 0, 0,
	0, 4119, 0, 4121, 4122, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 2674, 158, 4055, 0, 0,
	0, 0, 158, 158, 160, 0, 0, 158, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2640, 0, 0,
	0, 4071, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4096, 4097, 4098, 4099, 0,
	0, 0, 0, 0, 0, 4103, 4104, 0, 0, 0,
	0, 0, 0, 0, 0, 2551, 0, 0, 0, 4113,
	0, 0, 0, 0, 658, 0, 2643, 2642, 2655, 2662,
	2641, 2654, 2645, 0, 0, 2678, 0, 4116, 0, 0,
	0, 0, 0, 2561, 0, 160, 2687, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 2665, 2663, 2658, 0, 0, 0, 0,
	2660, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	4304, 0, 2676, 2698, 2649, 2648, 0, 1300, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2644, 0, 0, 0, 0, 0, 0, 0,
	0, 4161, 0, 0, 0, 0, 0, 0, 2650, 2651,
	0, 0, 2668, 0, 2659, 2661, 2664, 2666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4184, 4185, 4186, 4187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4202, 0,
	0, 0, 0, 0, 0, 2694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4216, 0, 0, 0, 0,
	2702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2684, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4296, 4297, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 4307, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 4316, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4336, 0, 0, 0, 0, 4347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	657, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 1084, 0, 0, 0, 0, 0, 0, 656, 157,
	0, 0, 0, 0, 0, 1085, 0, 0, 0, 0,
	2670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4392, 0, 0, 0, 4395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2850, 0, 0, 0, 0, 657, 158,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 2671, 2672, 1086, 1086, 2675, 0, 0, 2680,
	2273, 2685, 2682, 2683, 0, 2686, 2679, 0, 2689, 2688,
	2690, 0, 2691, 2692, 2693, 0, 0, 2695, 2696, 2697,
	2699, 2700, 2701, 0, 0, 0, 2673, 2703, 0, 0,
	0, 0, 0, 0, 0, 0, 2667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3008, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 4532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 494,
	494, 494, 0, 0, 0, 4575, 0, 0, 4577, 4578,
	2669, 0, 0, 160, 160, 160, 160, 160, 0, 160,
	0, 4589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 158,
	0, 0, 158, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 4619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1084, 0, 0, 0, 158, 1084, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 160, 0, 158, 0, 658, 0,
	2175, 0, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 160, 160, 160, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 0, 0, 0, 0, 1716, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2174, 0, 0,
	0, 42, 45, 0, 0, 0, 0, 1716, 555, 160,
	0, 1749, 0, 1085, 0, 71, 494, 0, 157, 0,
	2274, 93, 0, 0, 47, 75, 76, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 63, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 0,
	0, 159, 2273, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 158, 3417, 2127, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 160, 160, 0, 0,
	159, 0, 3450, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2274, 0, 0, 1158, 159, 1155, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 80, 0, 96,
	0, 2179, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 1608, 1608, 0, 0, 1749, 0, 0, 491, 159,
	656, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 3301, 0, 158, 0, 0, 0, 0, 0, 2704,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1389, 0, 2653, 0, 0, 0, 3542,
	1085, 2677, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 160, 160, 0, 0, 0, 160,
	160, 0, 0, 493, 0, 0, 0, 0, 0, 0,
	0, 2179, 0, 2652, 0, 0, 69, 70, 0, 493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	2674, 582, 593, 575, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 2179, 78, 2179, 79, 0, 2316, 0,
	0, 0, 0, 583, 0, 2317, 0, 0, 0, 0,
	2179, 2323, 2179, 0, 0, 158, 0, 0, 656, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2643, 3492, 2655, 0, 3491, 2654, 2645, 82, 83,
	2678, 0, 158, 158, 1084, 0, 0, 0, 0, 0,
	0, 2687, 0, 0, 0, 64, 81, 0, 66, 67,
	73, 2179, 74, 0, 1153, 493, 0, 0, 0, 0,
	0, 0, 0, 493, 493, 493, 493, 0, 0, 0,
	0, 493, 493, 0, 493, 0, 0, 2676, 2698, 2649,
	2648, 0, 0, 0, 0, 0, 0, 493, 493, 0,
	158, 493, 0, 0, 0, 0, 0, 2644, 574, 573,
	576, 0, 0, 0, 0, 0, 0, 0, 581, 0,
	0, 0, 0, 3493, 3494, 0, 0, 2668, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 0, 0, 0,
	0, 589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 0, 592, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	2694, 0, 0, 0, 0, 0, 0, 0, 0, 577,
	3787, 657, 0, 0, 0, 0, 0, 2911, 160, 0,
	0, 0, 0, 0, 0, 2702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2684, 0, 0, 0,
	0, 1389, 0, 0, 0, 0, 160, 0, 3833, 2883,
	0, 0, 0, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 658, 0, 0, 0, 0, 0, 2880, 3301,
	0, 0, 2174, 0, 0, 0, 578, 579, 586, 2121,
	590, 591, 594, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 597, 598, 599, 600, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 2670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 160, 0, 491, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 2681, 0, 0, 0, 2884, 0,
	0, 0, 0, 0, 0, 0, 0, 2647, 0, 2893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 2274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2882, 2905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2671, 2672, 158,
	0, 2675, 0, 0, 2680, 0, 2685, 2682, 2683, 0,
	2686, 2679, 0, 2689, 2688, 2690, 0, 2691, 2692, 2693,
	0, 0, 2695, 2696, 2697, 2699, 2700, 2701, 0, 0,
	0, 2673, 2703, 0, 0, 0, 0, 0, 0, 0,
	0, 2667, 493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2900, 0,
	0, 0, 0, 2577, 493, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2589, 0, 0,
	71, 0, 2589, 2909, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 2890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 160, 0, 0, 160, 2669, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 4267, 0,
	0, 4602, 4605, 4601, 2902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2725, 0, 0,
	0, 0, 584, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2747, 0, 0, 1084, 1084, 160,
	0, 0, 0, 2179, 0, 0, 657, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 158, 0, 0, 0,
	0, 0, 3301, 2875, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 494, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4268, 0, 2887, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 493, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2175,
	0, 0, 0, 0, 0, 2876, 2878, 0, 0, 2881,
	0, 0, 2886, 0, 2891, 2888, 2889, 0, 2892, 2885,
	0, 2895, 2894, 2896, 0, 2897, 2898, 2899, 0, 0,
	2901, 2903, 2904, 2906, 2907, 2908, 0, 0, 0, 2879,
	2910, 69, 70, 491, 4270, 0, 0, 0, 4177, 2912,
	0, 159, 0, 0, 4279, 4271, 4272, 4273, 4277, 4278,
	4275, 0, 4276, 0, 4280, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 159, 0, 0, 0, 1084,
	493, 0, 493, 0, 493, 0, 1754, 0, 0, 0,
	491, 491, 491, 491, 84, 1659, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 159, 159, 159, 159, 159,
	0, 159, 0, 0, 2274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 4444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2874, 0, 0, 0, 0, 2976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2984, 2988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4281, 4269, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 3010, 0, 0, 4348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 2589, 0, 0, 0, 0, 0, 3036,
	0, 2589, 0, 0, 2589, 0, 0, 0, 0, 0,
	0, 0, 493, 0, 0, 159, 159, 0, 0, 0,
	0, 0, 2176, 0, 0, 0, 493, 0, 0, 158,
	2179, 2179, 0, 0, 159, 0, 0, 159, 159, 159,
	159, 0, 0, 0, 0, 494, 0, 1660, 0, 0,
	42, 0, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 494, 0, 0, 71, 0, 0, 0, 0, 0,
	93, 0, 0, 47, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 159, 0, 0, 0, 89, 0, 0, 491, 0,
	0, 4274, 2272, 3184, 0, 0, 0, 0, 493, 0,
	0, 3184, 3184, 3184, 493, 160, 0, 0, 0, 0,
	59, 61, 4267, 0, 0, 2179, 87, 4674, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2179, 0,
	3301, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 159, 160, 160, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 494, 494, 494, 494, 0,
	0, 0, 0, 494, 494, 0, 494, 3265, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 494,
	494, 0, 160, 494, 4268, 0, 0, 159, 159, 159,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 493, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 2179, 2272, 0, 0, 1155, 0, 1673, 1676, 1677,
	1678, 1679, 1680, 1681, 0, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 0, 1661,
	1662, 1663, 1643, 1642, 1674, 1644, 1647, 1641, 1645, 1640,
	0, 0, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 0, 0, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 70, 0, 4270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4279, 4271,
	4272, 4273, 4277, 4278, 4275, 0, 4276, 657, 4280, 0,
	159, 0, 0, 78, 0, 79, 159, 159, 0, 0,
	0, 159, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3425, 3426, 3427, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 42, 60, 0, 0,
	0, 0, 0, 0, 3184, 3184, 0, 3301, 0, 0,
	71, 0, 0, 0, 2175, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 3463, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1675, 89, 0, 0, 0, 0, 0, 4274, 0, 0,
	0, 0, 0, 1664, 4281, 4269, 0, 66, 67, 73,
	3515, 74, 0, 2725, 0, 0, 3521, 0, 4267, 0,
	0, 0, 0, 4668, 0, 657, 2725, 0, 2725, 0,
	0, 0, 3541, 0, 0, 0, 0, 0, 0, 2725,
	0, 2725, 3550, 2725, 2725, 2725, 2725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 3184, 49, 90, 56, 55, 58,
	3630, 160, 0, 0, 96, 0, 0, 0, 0, 0,
	4268, 0, 0, 0, 0, 0, 0, 0, 0, 3646,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 89, 57, 0, 0, 0, 0,
	4274, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 4267, 0, 0, 0, 0, 4660, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	159, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 1084, 0, 0, 2179, 0, 0, 0, 0,
	2725, 69, 70, 0, 4270, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 4279, 4271, 4272, 4273, 4277, 4278,
	4275, 0, 4276, 0, 4280, 0, 0, 0, 0, 78,
	0, 79, 85, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 159, 4268, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2988, 0, 658, 0,
	0, 0, 0, 0, 0, 0, 0, 658, 160, 0,
	4281, 4269, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 159, 69, 70, 3184, 4270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4279, 4271, 4272,
	4273, 4277, 4278, 4275, 0, 4276, 0, 4280, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2272, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 42, 0, 0, 0, 494, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 4274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4281, 4269, 0, 66, 67, 73, 0,
	74, 0, 0, 4267, 0, 0, 0, 0, 4633, 0,
	0, 0, 494, 0, 494, 0, 494, 0, 0, 0,
	0, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	0, 3912, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 2179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 159, 0,
	0, 0, 0, 159, 0, 0, 159, 0, 1754, 0,
	71, 0, 0, 0, 0, 0, 93, 0, 85, 47,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 491, 0, 0, 4268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1084, 0, 0, 0, 0,
	0, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 89, 0, 0, 0, 0, 0, 4274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4267, 0,
	0, 159, 0, 4615, 0, 0, 0, 0, 0, 0,
	0, 0, 3184, 0, 0, 3184, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	159, 0, 0, 59, 61, 0, 491, 0, 494, 87,
	0, 160, 0, 0, 0, 0, 69, 70, 0, 4270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4279,
	4271, 4272, 4273, 4277, 4278, 4275, 0, 4276, 0, 4280,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 85, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 84,
	4268, 0, 0, 0, 4057, 0, 0, 0, 60, 0,
	0, 2176, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 4064, 57, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4281, 4269, 160, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4279, 4271, 4272, 4273, 4277, 4278,
	4275, 0, 4276, 0, 4280, 0, 2272, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 4200, 0, 0, 0, 159, 0, 0,
	4281, 4269, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 0, 0, 4274, 0, 0, 0, 0, 0, 658,
	0, 0, 0, 0, 0, 59, 61, 0, 0, 0,
	0, 87, 0, 0, 4267, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3184, 0, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 2179, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1084, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 159, 0, 0,
	96, 0, 0, 0, 0, 0, 4268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2179, 62, 92, 91, 658, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 159, 0, 0,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 491, 491, 491,
	491, 0, 0, 4200, 0, 491, 491, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 491, 491, 0, 159, 491, 0, 69, 70, 0,
	4270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4279, 4271, 4272, 4273, 4277, 4278, 4275, 4612, 4276, 0,
	4280, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 2179, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4281, 4269, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 1161,
	731, 733, 734, 735, 736, 0, 0, 0, 732, 2314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 61, 0, 0,
	0, 0, 87, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 85, 0, 491, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 491, 0, 727, 0, 392, 0, 467, 0, 278,
	0, 491, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 491, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 4190, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 1659, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 281, 0, 728, 729, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 491, 459, 0,
	1646, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 1660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 491, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 0, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 1676, 1677, 1678, 1679, 1680, 1681,
	0, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 0, 1661, 1662, 1663, 1643, 1642,
	1674, 1644, 1647, 1641, 1645, 1640, 0, 0, 1648, 1649,
	1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 900, 1042, 491, 0,
	448, 801, 1046, 887, 910, 1056, 916, 918, 983, 862,
	958, 357, 907, 863, 0, 0, 854, 705, 855, 888,
	259, 704, 1016, 961, 1044, 944, 976, 986, 258, 244,
	951, 950, 1033, 899, 898, 981, 1029, 1043, 0, 159,
	172, 477, 190, 809, 314, 0, 0, 475, 423, 339,
	0, 0, 942, 0, 793, 794, 927, 985, 874, 972,
	1048, 908, 977, 1049, 89, 0, 0, 0, 0, 730,
	557, 731, 733, 734, 735, 736, 0, 0, 171, 732,
	737, 738, 739, 0, 937, 982, 1061, 853, 702, 719,
	858, 808, 4361, 1034, 895, 896, 263, 0, 0, 0,
	0, 0, 0, 0, 940, 957, 1001, 924, 0, 468,
	988, 997, 1011, 917, 376, 283, 1675, 0, 0, 0,
	716, 717, 0, 0, 0, 491, 824, 0, 718, 1664,
	868, 714, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 720, 0, 0, 0, 873, 851,
	893, 1003, 852, 850, 340, 865, 796, 1032, 925, 301,
	191, 1038, 923, 822, 991, 869, 1020, 1054, 911, 311,
	867, 195, 864, 870, 909, 353, 1000, 1006, 806, 198,
	313, 1017, 889, 902, 727, 0, 392, 978, 467, 708,
	278, 0, 964, 391, 315, 460, 992, 1040, 466, 912,
	442, 476, 481, 271, 945, 234, 420, 261, 254, 894,
	1010, 857, 284, 375, 249, 306, 928, 984, 890, 241,
	995, 971, 1022, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1018, 1005, 1024, 885, 871, 877,
	872, 901, 1041, 293, 285, 1025, 1023, 903, 361, 224,
	955, 948, 941, 810, 470, 1057, 257, 1007, 472, 180,
	406, 405, 915, 292, 1008, 181, 170, 385, 182, 302,
	204, 1028, 485, 220, 309, 450, 707, 277, 352, 980,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1004, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1047, 322, 266, 270, 286, 297, 979, 389,
	427, 473, 973, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1002, 216, 237, 428, 210, 1036, 1019, 966, 930, 936,
	859, 0, 209, 931, 932, 933, 934, 935, 998, 892,
	904, 884, 974, 883, 281, 990, 728, 729, 246, 799,
	1051, 211, 866, 1050, 349, 356, 348, 1053, 1052, 459,
	1037, 967, 954, 952, 860, 1035, 965, 953, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 956,
	425, 320, 0, 206, 0, 424, 1045, 1063, 439, 226,
	878, 1012, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 994, 1060, 360, 393, 233,
	469, 421, 262, 876, 1064, 823, 811, 812, 815, 959,
	960, 813, 816, 817, 825, 797, 798, 800, 802, 803,
	804, 947, 1039, 861, 807, 1015, 818, 819, 820, 821,
	987, 1058, 795, 242, 744, 837, 838, 839, 745, 840,
	841, 746, 747, 842, 843, 844, 845, 748, 846, 847,
	848, 826, 827, 828, 829, 830, 831, 832, 833, 836,
	834, 835, 0, 943, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 805, 199, 212, 312, 1059,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1013, 970, 0, 920, 922, 921, 880, 882, 881,
	879, 1062, 346, 1031, 849, 856, 875, 886, 891, 897,
	905, 906, 914, 919, 929, 938, 939, 949, 962, 963,
	969, 993, 996, 1009, 1014, 1021, 1026, 1027, 471, 252,
	946, 968, 999, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 926, 196, 0, 0,
	202, 0, 203, 205, 913, 201, 1030, 1055, 975, 989,
	900, 1042, 0, 0, 448, 801, 1046, 887, 910, 1056,
	916, 918, 983, 862, 958, 357, 907, 863, 0, 0,
	854, 705, 855, 888, 259, 704, 1016, 961, 1044, 944,
	976, 986, 258, 244, 951, 950, 1033, 899, 898, 981,
	1029, 1043, 0, 0, 172, 477, 190, 809, 314, 0,
	0, 475, 423, 339, 0, 0, 942, 0, 793, 794,
	927, 985, 874, 972, 1048, 908, 977, 1049, 89, 0,
	694, 0, 0, 730, 557, 731, 733, 734, 735, 736,
	0, 0, 171, 732, 737, 738, 739, 0, 937, 982,
	1061, 853, 702, 719, 858, 808, 0, 1034, 895, 896,
	263, 0, 0, 0, 0, 0, 0, 0, 940, 957,
	1001, 924, 0, 468, 988, 997, 1011, 917, 376, 283,
	0, 0, 0, 0, 716, 717, 0, 0, 0, 0,
	824, 0, 718, 0, 868, 714, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 720, 0,
	0, 0, 873, 851, 893, 1003, 852, 850, 340, 865,
	796, 1032, 925, 301, 191, 1038, 923, 822, 991, 869,
	1020, 1054, 911, 311, 867, 195, 864, 870, 909, 353,
	1000, 1006, 806, 198, 313, 1017, 889, 902, 727, 0,
	392, 978, 467, 708, 278, 0, 964, 391, 315, 460,
	992, 1040, 466, 912, 442, 476, 481, 271, 945, 234,
	420, 261, 254, 894, 1010, 857, 284, 375, 249, 306,
	928, 984, 890, 241, 995, 971, 1022, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1018, 1005,
	1024, 885, 871, 877, 872, 901, 1041, 293, 285, 1025,
	1023, 903, 361, 224, 955, 948, 941, 810, 470, 1057,
	257, 1007, 472, 180, 406, 405, 915, 292, 1008, 181,
	170, 385, 182, 302, 204, 1028, 485, 220, 309, 450,
	707, 277, 352, 980, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1004, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1047, 322, 266, 270,
	286, 297, 979, 389, 427, 473, 973, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1002, 216, 237, 428, 210, 1036,
	1019, 966, 930, 936, 859, 0, 209, 931, 932, 933,
	934, 935, 998, 892, 904, 884, 974, 883, 281, 990,
	728, 729, 246, 799, 1051, 211, 866, 1050, 349, 356,
	348, 1053, 1052, 459, 1037, 967, 954, 952, 860, 1035,
	965, 953, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 956, 425, 320, 0, 206, 0, 424,
	1045, 1063, 439, 226, 878, 1012, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 994,
	1060, 360, 393, 233, 469, 421, 262, 876, 1064, 823,
	811, 812, 815, 959, 960, 813, 816, 817, 825, 797,
	798, 800, 802, 803, 804, 947, 1039, 861, 807, 1015,
	818, 819, 820, 821, 987, 1058, 795, 242, 744, 837,
	838, 839, 745, 840, 841, 746, 747, 842, 843, 844,
	845, 748, 846, 847, 848, 826, 827, 828, 829, 830,
	831, 832, 833, 836, 834, 835, 0, 943, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 805,
	199, 212, 312, 1059, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1013, 970, 0, 920, 922,
	921, 880, 882, 881, 879, 1062, 346, 1031, 849, 856,
	875, 886, 891, 897, 905, 906, 914, 919, 929, 938,
	939, 949, 962, 963, 969, 993, 996, 1009, 1014, 1021,
	1026, 1027, 471, 252, 946, 968, 999, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	926, 196, 0, 0, 202, 0, 203, 205, 913, 201,
	1030, 1055, 975, 989, 900, 1042, 0, 0, 448, 801,
	1046, 887, 910, 1056, 916, 918, 983, 862, 958, 357,
	907, 863, 0, 0, 854, 705, 855, 888, 259, 704,
	1016, 961, 1044, 944, 976, 986, 258, 244, 951, 950,
	1033, 899, 898, 981, 1029, 1043, 0, 0, 172, 477,
	190, 809, 314, 0, 0, 475, 423, 339, 0, 0,
	942, 0, 793, 794, 927, 985, 874, 972, 1048, 908,
	977, 1049, 89, 0, 0, 0, 0, 730, 557, 731,
	733, 734, 735, 736, 0, 0, 171, 732, 737, 738,
	739, 0, 937, 982, 1061, 853, 702, 719, 858, 808,
	0, 1034, 895, 896, 263, 0, 0, 0, 0, 0,
	0, 0, 940, 957, 1001, 924, 0, 468, 988, 997,
	1011, 917, 376, 283, 0, 0, 0, 0, 716, 717,
	2236, 0, 0, 0, 824, 0, 718, 0, 868, 714,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 720, 0, 0, 0, 873, 851, 893, 1003,
	852, 850, 340, 865, 796, 1032, 925, 301, 191, 1038,
	923, 822, 991, 869, 1020, 1054, 911, 311, 867, 195,
	864, 870, 909, 353, 1000, 1006, 806, 198, 313, 1017,
	889, 902, 727, 0, 392, 978, 467, 708, 278, 0,
	964, 391, 315, 460, 992, 1040, 466, 912, 442, 476,
	481, 271, 945, 234, 420, 261, 254, 894, 1010, 857,
	284, 375, 249, 306, 928, 984, 890, 241, 995, 971,
	1022, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1018, 1005, 1024, 885, 871, 877, 872, 901,
	1041, 293, 285, 1025, 1023, 903, 361, 224, 955, 948,
	941, 810, 470, 1057, 257, 1007, 472, 180, 406, 405,
	915, 292, 1008, 181, 170, 385, 182, 302, 204, 1028,
	485, 220, 309, 450, 707, 277, 352, 980, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1004, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1047, 322, 266, 270, 286, 297, 979, 389, 427, 473,
	973, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1002, 216,
	237, 428, 210, 1036, 1019, 966, 930, 936, 859, 0,
	209, 931, 932, 933, 934, 935, 998, 892, 904, 884,
	974, 883, 281, 990, 728, 729, 246, 799, 1051, 211,
	866, 1050, 349, 356, 348, 1053, 1052, 459, 1037, 967,
	954, 952, 860, 1035, 965, 953, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 956, 425, 320,
	0, 206, 0, 424, 1045, 1063, 439, 226, 878, 1012,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 994, 1060, 360, 393, 233, 469, 421,
	262, 876, 1064, 823, 811, 812, 815, 959, 960, 813,
	816, 817, 825, 797, 798, 800, 802, 803, 804, 947,
	1039, 861, 807, 1015, 818, 819, 820, 821, 987, 1058,
	795, 242, 744, 837, 838, 839, 745, 840, 841, 746,
	747, 842, 843, 844, 845, 748, 846, 847, 848, 826,
	827, 828, 829, 830, 831, 832, 833, 836, 834, 835,
	0, 943, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 805, 199, 212, 312, 1059, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1013,
	970, 0, 920, 922, 921, 880, 882, 881, 879, 1062,
	346, 1031, 849, 856, 875, 886, 891, 897, 905, 906,
	914, 919, 929, 938, 939, 949, 962, 963, 969, 993,
	996, 1009, 1014, 1021, 1026, 1027, 471, 252, 946, 968,
	999, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 926, 196, 0, 0, 202, 0,
	203, 205, 913, 201, 1030, 1055, 975, 989, 900, 1042,
	0, 0, 448, 801, 1046, 887, 910, 1056, 916, 918,
	983, 862, 958, 357, 907, 863, 0, 0, 854, 705,
	855, 888, 259, 704, 1016, 961, 1044, 944, 976, 986,
	258, 244, 951, 950, 1033, 899, 898, 981, 1029, 1043,
	0, 0, 172, 477, 190, 809, 314, 0, 0, 475,
	423, 339, 0, 0, 942, 0, 793, 794, 927, 985,
	874, 972, 1048, 908, 977, 1049, 89, 0, 0, 0,
	0, 730, 557, 731, 733, 734, 735, 736, 0, 0,
	171, 732, 737, 738, 739, 0, 937, 982, 1061, 853,
	702, 719, 858, 808, 0, 1034, 895, 896, 263, 0,
	0, 0, 0, 0, 0, 0, 940, 957, 1001, 924,
	0, 468, 988, 997, 1011, 917, 376, 283, 0, 0,
	0, 0, 716, 717, 698, 0, 0, 0, 824, 0,
	718, 0, 868, 714, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 720, 0, 0, 0,
	873, 851, 893, 1003, 852, 850, 340, 865, 796, 1032,
	925, 301, 191, 1038, 923, 822, 991, 869, 1020, 1054,
	911, 311, 867, 195, 864, 870, 909, 353, 1000, 1006,
	806, 198, 313, 1017, 889, 902, 727, 0, 392, 978,
	467, 708, 278, 0, 964, 391, 315, 460, 992, 1040,
	466, 912, 442, 476, 481, 271, 945, 234, 420, 261,
	254, 894, 1010, 857, 284, 375, 249, 306, 928, 984,
	890, 241, 995, 971, 1022, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1018, 1005, 1024, 885,
	871, 877, 872, 901, 1041, 293, 285, 1025, 1023, 903,
	361, 224, 955, 948, 941, 810, 470, 1057, 257, 1007,
	472, 180, 406, 405, 915, 292, 1008, 181, 170, 385,
	182, 302, 204, 1028, 485, 220, 309, 450, 707, 277,
	352, 980, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1004, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1047, 322, 266, 270, 286, 297,
	979, 389, 427, 473, 973, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1002, 216, 237, 428, 210, 1036, 1019, 966,
	930, 936, 859, 0, 209, 931, 932, 933, 934, 935,
	998, 892, 904, 884, 974, 883, 281, 990, 728, 729,
	246, 799, 1051, 211, 866, 1050, 349, 356, 348, 1053,
	1052, 459, 1037, 967, 954, 952, 860, 1035, 965, 953,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 956, 425, 320, 0, 206, 0, 424, 1045, 1063,
	439, 226, 878, 1012, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 994, 1060, 360,
	393, 233, 469, 421, 262, 876, 1064, 823, 811, 812,
	815, 959, 960, 813, 816, 817, 825, 797, 798, 800,
	802, 803, 804, 947, 1039, 861, 807, 1015, 818, 819,
	820, 821, 987, 1058, 795, 242, 744, 837, 838, 839,
	745, 840, 841, 746, 747, 842, 843, 844, 845, 748,
	846, 847, 848, 826, 827, 828, 829, 830, 831, 832,
	833, 836, 834, 835, 0, 943, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 805, 199, 212,
	312, 1059, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1013, 970, 0, 920, 922, 921, 880,
	882, 881, 879, 1062, 346, 1031, 849, 856, 875, 886,
	891, 897, 905, 906, 914, 919, 929, 938, 939, 949,
	962, 963, 969, 993, 996, 1009, 1014, 1021, 1026, 1027,
	471, 252, 946, 968, 999, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 926, 196,
	0, 0, 202, 0, 203, 205, 913, 201, 1030, 1055,
	975, 989, 900, 1042, 0, 0, 448, 801, 1046, 887,
	910, 1056, 916, 918, 983, 862, 958, 357, 907, 863,
	0, 0, 854, 705, 855, 888, 259, 704, 1016, 961,
	1044, 944, 976, 986, 258, 244, 951, 950, 1033, 899,
	898, 981, 1029, 1043, 0, 0, 172, 477, 190, 809,
	314, 0, 0, 475, 423, 339, 0, 0, 942, 0,
	793, 794, 927, 985, 874, 972, 1048, 908, 2445, 1049,
	89, 0, 0, 0, 0, 2447, 557, 731, 733, 734,
	735, 736, 0, 0, 171, 732, 737, 738, 739, 2446,
	937, 982, 1061, 853, 702, 719, 858, 808, 0, 1034,
	895, 896, 263, 0, 0, 0, 0, 0, 0, 0,
	940, 957, 1001, 924, 0, 468, 988, 997, 1011, 917,
	376, 283, 0, 0, 0, 0, 716, 717, 0, 0,
	0, 0, 824, 0, 718, 0, 868, 714, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	720, 0, 0, 0, 873, 851, 893, 1003, 852, 850,
	340, 865, 796, 1032, 925, 301, 191, 1038, 923, 822,
	991, 869, 1020, 1054, 911, 311, 867, 195, 864, 870,
	909, 353, 1000, 1006, 806, 198, 313, 1017, 889, 902,
	727, 0, 392, 978, 467, 708, 278, 0, 964, 391,
	315, 460, 992, 1040, 466, 912, 442, 476, 481, 271,
	945, 234, 420, 261, 254, 894, 1010, 857, 284, 375,
	249, 306, 928, 984, 890, 241, 995, 971, 1022, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1018, 1005, 1024, 885, 871, 877, 872, 901, 1041, 293,
	285, 1025, 1023, 903, 361, 224, 955, 948, 941, 810,
	470, 1057, 257, 1007, 472, 180, 406, 405, 915, 292,
	1008, 181, 170, 385, 182, 302, 204, 1028, 485, 220,
	309, 450, 707, 277, 352, 980, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1004, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1047, 322,
	266, 270, 286, 297, 979, 389, 427, 473, 973, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1002, 216, 237, 428,
	210, 1036, 1019, 966, 930, 936, 859, 0, 209, 931,
	932, 933, 934, 935, 998, 892, 904, 884, 974, 883,
	281, 990, 728, 729, 246, 799, 1051, 211, 866, 1050,
	349, 356, 348, 1053, 1052, 459, 1037, 967, 954, 952,
	860, 1035, 965, 953, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 956, 425, 320, 0, 206,
	0, 424, 1045, 1063, 439, 226, 878, 1012, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 994, 1060, 360, 393, 233, 469, 421, 262, 876,
	1064, 823, 811, 812, 815, 959, 960, 813, 816, 817,
	825, 797, 798, 800, 802, 803, 804, 947, 1039, 861,
	807, 1015, 818, 819, 820, 821, 987, 1058, 795, 242,
	744, 837, 838, 839, 745, 840, 841, 746, 747, 842,
	843, 844, 845, 748, 846, 847, 848, 826, 827, 828,
	829, 830, 831, 832, 833, 836, 834, 835, 0, 943,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 805, 199, 212, 312, 1059, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1013, 970, 0,
	920, 922, 921, 880, 882, 881, 879, 1062, 346, 1031,
	849, 856, 875, 886, 891, 897, 905, 906, 914, 919,
	929, 938, 939, 949, 962, 963, 969, 993, 996, 1009,
	1014, 1021, 1026, 1027, 471, 252, 946, 968, 999, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 926, 196, 0, 0, 202, 0, 203, 205,
	913, 201, 1030, 1055, 975, 989, 900, 1042, 0, 0,
	448, 801, 1046, 887, 910, 1056, 916, 918, 983, 862,
	958, 357, 907, 863, 0, 0, 854, 705, 855, 888,
	259, 704, 1016, 961, 1044, 944, 976, 986, 258, 244,
	951, 950, 1033, 899, 898, 981, 1029, 1043, 0, 0,
	172, 477, 190, 809, 314, 0, 0, 475, 423, 339,
	0, 0, 942, 0, 793, 794, 927, 985, 874, 972,
	1048, 908, 977, 1049, 89, 0, 0, 0, 0, 2345,
	557, 731, 733, 734, 735, 736, 0, 0, 171, 732,
	737, 738, 739, 0, 937, 982, 1061, 853, 702, 719,
	858, 808, 0, 1034, 895, 896, 263, 0, 0, 0,
	0, 0, 0, 0, 940, 957, 1001, 924, 0, 468,
	988, 997, 1011, 917, 376, 283, 0, 0, 0, 0,
	716, 717, 2236, 0, 0, 0, 824, 0, 718, 0,
	868, 714, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 720, 0, 0, 0, 873, 851,
	893, 1003, 852, 850, 340, 865, 796, 1032, 925, 301,
	191, 1038, 923, 822, 991, 869, 1020, 1054, 911, 311,
	867, 195, 864, 870, 909, 353, 1000, 1006, 806, 198,
	313, 1017, 889, 902, 727, 0, 392, 978, 467, 708,
	278, 0, 964, 391, 315, 460, 992, 1040, 466, 912,
	442, 476, 481, 271, 945, 234, 420, 261, 254, 894,
	1010, 857, 284, 375, 249, 306, 928, 984, 890, 241,
	995, 971, 1022, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1018, 1005, 1024, 885, 871, 877,
	872, 901, 1041, 293, 285, 1025, 1023, 903, 361, 224,
	955, 948, 941, 810, 470, 1057, 257, 1007, 472, 180,
	406, 405, 915, 292, 1008, 181, 170, 385, 182, 302,
	204, 1028, 485, 220, 309, 450, 707, 277, 352, 980,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1004, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1047, 322, 266, 270, 286, 297, 979, 389,
	427, 473, 973, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1002, 216, 237, 428, 210, 1036, 1019, 966, 930, 936,
	859, 0, 209, 931, 932, 933, 934, 935, 998, 892,
	904, 884, 974, 883, 281, 990, 728, 729, 246, 799,
	1051, 211, 866, 1050, 349, 356, 348, 1053, 1052, 459,
	1037, 967, 954, 952, 860, 1035, 965, 953, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 956,
	425, 320, 0, 206, 0, 424, 1045, 1063, 439, 226,
	878, 1012, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 994, 1060, 360, 393, 233,
	469, 421, 262, 876, 1064, 823, 811, 812, 815, 959,
	960, 813, 816, 817, 825, 797, 798, 800, 802, 803,
	804, 947, 1039, 861, 807, 1015, 818, 819, 820, 821,
	987, 1058, 795, 242, 744, 837, 838, 839, 745, 840,
	841, 746, 747, 842, 843, 844, 845, 748, 846, 847,
	848, 826, 827, 828, 829, 830, 831, 832, 833, 836,
	834, 835, 0, 943, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 805, 199, 212, 312, 1059,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1013, 970, 0, 920, 922, 921, 880, 882, 881,
	879, 1062, 346, 1031, 849, 856, 875, 886, 891, 897,
	905, 906, 914, 919, 929, 938, 939, 949, 962, 963,
	969, 993, 996, 1009, 1014, 1021, 1026, 1027, 471, 252,
	946, 968, 999, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 926, 196, 0, 0,
	202, 0, 203, 205, 913, 201, 1030, 1055, 975, 989,
	900, 1042, 0, 0, 448, 801, 1046, 887, 910, 1056,
	916, 918, 983, 862, 958, 357, 907, 863, 0, 0,
	854, 705, 855, 888, 259, 704, 1016, 961, 1044, 944,
	976, 986, 258, 244, 951, 950, 1033, 899, 898, 981,
	1029, 1043, 0, 0, 172, 477, 190, 809, 314, 0,
	0, 475, 423, 339, 0, 0, 942, 0, 793, 794,
	927, 985, 874, 972, 1048, 908, 977, 1049, 89, 0,
	0, 0, 0, 2342, 557, 731, 733, 734, 735, 736,
	0, 0, 171, 732, 737, 738, 739, 0, 937, 982,
	1061, 853, 702, 719, 858, 808, 0, 1034, 895, 896,
	263, 0, 0, 0, 0, 0, 0, 0, 940, 957,
	1001, 924, 0, 468, 988, 997, 1011, 917, 376, 283,
	0, 0, 0, 0, 716, 717, 2236, 0, 0, 0,
	824, 0, 718, 0, 868, 714, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 720, 0,
	0, 0, 873, 851, 893, 1003, 852, 850, 340, 865,
	796, 1032, 925, 301, 191, 1038, 923, 822, 991, 869,
	1020, 1054, 911, 311, 867, 195, 864, 870, 909, 353,
	1000, 1006, 806, 198, 313, 1017, 889, 902, 727, 0,
	392, 978, 467, 708, 278, 0, 964, 391, 315, 460,
	992, 1040, 466, 912, 442, 476, 481, 271, 945, 234,
	420, 261, 254, 894, 1010, 857, 284, 375, 249, 306,
	928, 984, 890, 241, 995, 971, 1022, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1018, 1005,
	1024, 885, 871, 877, 872, 901, 1041, 293, 285, 1025,
	1023, 903, 361, 224, 955, 948, 941, 810, 470, 1057,
	257, 1007, 472, 180, 406, 405, 915, 292, 1008, 181,
	170, 385, 182, 302, 204, 1028, 485, 220, 309, 450,
	707, 277, 352, 980, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1004, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1047, 322, 266, 270,
	286, 297, 979, 389, 427, 473, 973, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1002, 216, 237, 428, 210, 1036,
	1019, 966, 930, 936, 859, 0, 209, 931, 932, 933,
	934, 935, 998, 892, 904, 884, 974, 883, 281, 990,
	728, 729, 246, 799, 1051, 211, 866, 1050, 349, 356,
	348, 1053, 1052, 459, 1037, 967, 954, 952, 860, 1035,
	965, 953, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 956, 425, 320, 0, 206, 0, 424,
	1045, 1063, 439, 226, 878, 1012, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 994,
	1060, 360, 393, 233, 469, 421, 262, 876, 1064, 823,
	811, 812, 815, 959, 960, 813, 816, 817, 825, 797,
	798, 800, 802, 803, 804, 947, 1039, 861, 807, 1015,
	818, 819, 820, 821, 987, 1058, 795, 242, 744, 837,
	838, 839, 745, 840, 841, 746, 747, 842, 843, 844,
	845, 748, 846, 847, 848, 826, 827, 828, 829, 830,
	831, 832, 833, 836, 834, 835, 0, 943, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 805,
	199, 212, 312, 1059, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1013, 970, 0, 920, 922,
	921, 880, 882, 881, 879, 1062, 346, 1031, 849, 856,
	875, 886, 891, 897, 905, 906, 914, 919, 929, 938,
	939, 949, 962, 963, 969, 993, 996, 1009, 1014, 1021,
	1026, 1027, 471, 252, 946, 968, 999, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	926, 196, 0, 0, 202, 0, 203, 205, 913, 201,
	1030, 1055, 975, 989, 900, 1042, 0, 42, 448, 801,
	1046, 887, 910, 1056, 916, 918, 983, 862, 958, 357,
	907, 863, 0, 0, 854, 705, 855, 888, 259, 704,
	1016, 961, 1044, 944, 976, 986, 258, 244, 951, 950,
	1033, 899, 898, 981, 1029, 1043, 0, 0, 172, 477,
	190, 809, 314, 0, 0, 475, 423, 339, 0, 0,
	942, 0, 793, 794, 927, 985, 874, 972, 1048, 908,
	977, 1049, 89, 0, 0, 0, 0, 730, 557, 731,
	733, 734, 735, 736, 0, 0, 171, 732, 737, 738,
	739, 0, 937, 982, 1061, 853, 702, 719, 858, 808,
	0, 1034, 895, 896, 263, 0, 0, 0, 0, 0,
	0, 0, 940, 957, 1001, 924, 0, 468, 988, 997,
	1011, 917, 376, 283, 0, 0, 0, 0, 716, 717,
	0, 0, 0, 0, 824, 0, 718, 0, 868, 714,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 720, 0, 0, 0, 873, 851, 893, 1003,
	852, 850, 340, 865, 796, 1539, 925, 301, 191, 1038,
	923, 822, 991, 869, 1020, 1054, 911, 311, 867, 195,
	864, 870, 909, 353, 1000, 1006, 806, 198, 313, 1017,
	889, 902, 727, 0, 392, 978, 467, 708, 278, 0,
	964, 391, 315, 460, 992, 1040, 466, 912, 442, 476,
	481, 271, 945, 234, 420, 261, 254, 894, 1010, 857,
	284, 375, 249, 306, 928, 984, 890, 241, 995, 971,
	1022, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1018, 1005, 1024, 885, 871, 877, 872, 901,
	1041, 293, 285, 1025, 1023, 903, 361, 224, 955, 948,
	941, 810, 470, 1057, 257, 1007, 472, 180, 406, 405,
	915, 292, 1008, 181, 170, 385, 182, 302, 204, 1028,
	485, 220, 309, 450, 707, 277, 352, 980, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1004, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1047, 322, 266, 270, 286, 297, 979, 389, 427, 473,
	973, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1002, 216,
	237, 428, 210, 1036, 1019, 966, 930, 936, 859, 0,
	209, 931, 932, 933, 934, 935, 998, 892, 904, 884,
	974, 883, 281, 990, 728, 729, 246, 799, 1051, 211,
	866, 1050, 349, 356, 348, 1053, 1052, 459, 1037, 967,
	954, 952, 860, 1035, 965, 953, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 956, 425, 320,
	0, 206, 0, 424, 1045, 1063, 439, 226, 878, 1012,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 994, 1060, 360, 393, 233, 469, 421,
	262, 876, 1064, 823, 811, 812, 815, 959, 960, 813,
	816, 817, 825, 797, 798, 800, 802, 803, 804, 947,
	1039, 861, 807, 1015, 818, 819, 820, 821, 987, 1058,
	795, 242, 744, 837, 838, 839, 745, 840, 841, 746,
	747, 842, 843, 844, 845, 748, 846, 847, 848, 826,
	827, 828, 829, 830, 831, 832, 833, 836, 834, 835,
	0, 943, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 805, 199, 212, 312, 1537, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1013,
	970, 0, 920, 922, 921, 880, 882, 881, 879, 1062,
	346, 1031, 849, 856, 875, 886, 891, 897, 905, 906,
	914, 919, 929, 938, 939, 949, 962, 963, 969, 993,
	996, 1009, 1014, 1021, 1026, 1027, 471, 252, 946, 968,
	999, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 926, 196, 0, 0, 202, 0,
	203, 205, 913, 201, 1030, 1055, 975, 989, 900, 1042,
	0, 0, 448, 801, 1046, 887, 910, 1056, 916, 918,
	983, 862, 958, 357, 907, 863, 0, 0, 854, 705,
	855, 888, 259, 704, 1016, 961, 1044, 944, 976, 986,
	258, 244, 951, 950, 1033, 899, 898, 981, 1029, 1043,
	0, 0, 172, 477, 190, 809, 314, 0, 0, 475,
	423, 339, 0, 0, 942, 0, 793, 794, 927, 985,
	874, 972, 1048, 908, 977, 1049, 89, 0, 2103, 0,
	0, 730, 557, 731, 733, 734, 735, 736, 0, 0,
	171, 732, 737, 738, 739, 0, 937, 982, 1061, 853,
	702, 719, 858, 808, 0, 1034, 895, 896, 263, 0,
	0, 0, 0, 0, 0, 0, 940, 957, 1001, 924,
	0, 468, 988, 997, 1011, 917, 376, 283, 0, 0,
	0, 0, 716, 717, 0, 0, 0, 0, 824, 0,
	718, 0, 868, 714, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 720, 0, 0, 0,
	873, 851, 893, 1003, 852, 850, 340, 865, 796, 1032,
	925, 301, 191, 1038, 923, 822, 991, 869, 1020, 1054,
	911, 311, 867, 195, 864, 870, 909, 353, 1000, 1006,
	806, 198, 313, 1017, 889, 902, 727, 0, 392, 978,
	467, 708, 278, 0, 964, 391, 315, 460, 992, 1040,
	466, 912, 442, 476, 481, 271, 945, 234, 420, 261,
	254, 894, 1010, 857, 284, 375, 249, 306, 928, 984,
	890, 241, 995, 971, 1022, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1018, 1005, 1024, 885,
	871, 877, 872, 901, 1041, 293, 285, 1025, 1023, 903,
	361, 224, 955, 948, 941, 810, 470, 1057, 257, 1007,
	472, 180, 406, 405, 915, 292, 1008, 181, 170, 385,
	182, 302, 204, 1028, 485, 220, 309, 450, 707, 277,
	352, 980, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1004, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1047, 322, 266, 270, 286, 297,
	979, 389, 427, 473, 973, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1002, 216, 237, 428, 210, 1036, 1019, 966,
	930, 936, 859, 0, 209, 931, 932, 933, 934, 935,
	998, 892, 904, 884, 974, 883, 281, 990, 728, 729,
	246, 799, 1051, 211, 866, 1050, 349, 356, 348, 1053,
	1052, 459, 1037, 967, 954, 952, 860, 1035, 965, 953,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 956, 425, 320, 0, 206, 0, 424, 1045, 1063,
	439, 226, 878, 1012, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 994, 1060, 360,
	393, 233, 469, 421, 262, 876, 1064, 823, 811, 812,
	815, 959, 960, 813, 816, 817, 825, 797, 798, 800,
	802, 803, 804, 947, 1039, 861, 807, 1015, 818, 819,
	820, 821, 987, 1058, 795, 242, 744, 837, 838, 839,
	745, 840, 841, 746, 747, 842, 843, 844, 845, 748,
	846, 847, 848, 826, 827, 828, 829, 830, 831, 832,
	833, 836, 834, 835, 0, 943, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 805, 199, 212,
	312, 1059, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1013, 970, 0, 920, 922, 921, 880,
	882, 881, 879, 1062, 346, 1031, 849, 856, 875, 886,
	891, 897, 905, 906, 914, 919, 929, 938, 939, 949,
	962, 963, 969, 993, 996, 1009, 1014, 1021, 1026, 1027,
	471, 252, 946, 968, 999, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 926, 196,
	0, 0, 202, 0, 203, 205, 913, 201, 1030, 1055,
	975, 989, 900, 1042, 0, 0, 448, 801, 1046, 887,
	910, 1056, 916, 918, 983, 862, 958, 357, 907, 863,
	0, 0, 854, 705, 855, 888, 259, 704, 1016, 961,
	1044, 944, 976, 986, 258, 244, 951, 950, 1033, 899,
	898, 981, 1029, 1043, 0, 0, 172, 477, 190, 809,
	314, 0, 0, 475, 423, 339, 0, 0, 942, 0,
	793, 794, 927, 985, 874, 972, 1048, 908, 977, 1049,
	89, 0, 0, 0, 0, 730, 557, 731, 733, 734,
	735, 736, 0, 0, 171, 732, 737, 738, 739, 0,
	937, 982, 1061, 853, 702, 719, 858, 808, 0, 1034,
	895, 896, 263, 0, 0, 0, 0, 0, 0, 0,
	940, 957, 1001, 924, 0, 468, 988, 997, 1011, 917,
	376, 283, 0, 0, 0, 0, 716, 717, 0, 0,
	0, 0, 824, 0, 718, 0, 868, 714, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	720, 0, 0, 0, 873, 851, 893, 1003, 852, 850,
	340, 865, 796, 1032, 925, 301, 191, 1038, 923, 822,
	991, 869, 1020, 1054, 911, 311, 867, 195, 864, 870,
	909, 353, 1000, 1006, 806, 198, 313, 1017, 889, 902,
	727, 0, 392, 978, 467, 708, 278, 0, 964, 391,
	315, 460, 992, 1040, 466, 912, 442, 476, 481, 271,
	945, 234, 420, 261, 254, 894, 1010, 857, 284, 375,
	249, 306, 928, 984, 890, 241, 995, 971, 1022, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1018, 1005, 1024, 885, 871, 877, 872, 901, 1041, 293,
	285, 1025, 1023, 903, 361, 224, 955, 948, 941, 810,
	470, 1057, 257, 1007, 472, 180, 406, 405, 915, 292,
	1008, 181, 170, 385, 182, 302, 204, 1028, 485, 220,
	309, 450, 707, 277, 352, 980, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1004, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1047, 322,
	266, 270, 286, 297, 979, 389, 427, 473, 973, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1002, 216, 237, 428,
	210, 1036, 1019, 966, 930, 936, 859, 0, 209, 931,
	932, 933, 934, 935, 998, 892, 904, 884, 974, 883,
	281, 990, 728, 729, 246, 799, 1051, 211, 866, 1050,
	349, 356, 348, 1053, 1052, 459, 1037, 967, 954, 952,
	860, 1035, 965, 953, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 956, 425, 320, 0, 206,
	0, 424, 1045, 1063, 439, 226, 878, 1012, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 994, 1060, 360, 393, 233, 469, 421, 262, 876,
	1064, 823, 811, 812, 815, 959, 960, 813, 816, 817,
	825, 797, 798, 800, 802, 803, 804, 947, 1039, 861,
	807, 1015, 818, 819, 820, 821, 987, 1058, 795, 242,
	744, 837, 838, 839, 745, 840, 841, 746, 747, 842,
	843, 844, 845, 748, 846, 847, 848, 826, 827, 828,
	829, 830, 831, 832, 833, 836, 834, 835, 0, 943,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 805, 199, 212, 312, 1059, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1013, 970, 0,
	920, 922, 921, 880, 882, 881, 879, 1062, 346, 1031,
	849, 856, 875, 886, 891, 897, 905, 906, 914, 919,
	929, 938, 939, 949, 962, 963, 969, 993, 996, 1009,
	1014, 1021, 1026, 1027, 471, 252, 946, 968, 999, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 926, 196, 0, 0, 202, 0, 203, 205,
	913, 201, 1030, 1055, 975, 989, 900, 1042, 0, 0,
	448, 801, 1046, 887, 910, 1056, 916, 918, 983, 862,
	958, 357, 907, 863, 0, 0, 854, 1104, 855, 888,
	259, 1102, 1016, 961, 1044, 944, 976, 986, 258, 244,
	951, 950, 1033, 899, 898, 981, 1029, 1043, 0, 0,
	172, 477, 190, 809, 314, 0, 0, 475, 423, 339,
	0, 0, 942, 0, 793, 794, 927, 985, 874, 972,
	1048, 908, 977, 1049, 89, 0, 0, 0, 0, 730,
	557, 731, 733, 734, 735, 736, 0, 0, 171, 732,
	737, 738, 739, 0, 937, 982, 1061, 853, 1121, 719,
	858, 808, 0, 1034, 895, 896, 263, 0, 0, 0,
	0, 0, 0, 0, 940, 957, 1001, 924, 0, 468,
	988, 997, 1011, 917, 376, 283, 0, 0, 0, 0,
	716, 717, 0, 0, 0, 0, 824, 0, 718, 0,
	868, 714, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 720, 0, 0, 0, 873, 851,
	893, 1003, 852, 850, 340, 865, 796, 1032, 925, 301,
	191, 1038, 923, 822, 991, 869, 1020, 1054, 911, 311,
	867, 195, 864, 870, 909, 353, 1000, 1006, 806, 198,
	313, 1017, 889, 902, 727, 0, 392, 978, 467, 708,
	278, 0, 964, 391, 315, 460, 992, 1040, 466, 912,
	442, 476, 481, 271, 945, 234, 420, 261, 254, 894,
	1010, 857, 284, 375, 249, 306, 928, 984, 890, 241,
	995, 971, 1022, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1018, 1005, 1024, 885, 871, 877,
	872, 901, 1041, 293, 285, 1025, 1023, 903, 361, 224,
	955, 948, 941, 810, 470, 1057, 257, 1007, 472, 180,
	406, 405, 915, 292, 1008, 181, 170, 385, 182, 302,
	204, 1028, 485, 220, 309, 450, 707, 277, 352, 980,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1004, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1047, 322, 266, 270, 286, 297, 979, 389,
	427, 473, 973, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1002, 216, 237, 428, 210, 1036, 1019, 966, 930, 936,
	859, 0, 209, 931, 932, 933, 934, 935, 998, 892,
	904, 884, 974, 883, 281, 990, 728, 729, 246, 799,
	1051, 211, 866, 1050, 349, 356, 348, 1053, 1052, 459,
	1037, 967, 954, 952, 860, 1035, 965, 953, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 956,
	425, 320, 0, 206, 0, 424, 1045, 1063, 439, 226,
	878, 1012, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 994, 1060, 360, 393, 233,
	469, 421, 262, 876, 1064, 823, 811, 812, 815, 959,
	960, 813, 816, 817, 825, 797, 798, 800, 802, 803,
	804, 947, 1039, 861, 807, 1015, 818, 819, 820, 821,
	987, 1058, 795, 242, 744, 837, 838, 839, 745, 840,
	841, 746, 747, 842, 843, 844, 845, 748, 846, 847,
	848, 826, 827, 828, 829, 830, 831, 832, 833, 836,
	834, 835, 0, 943, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 805, 199, 212, 312, 1059,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1013, 970, 0, 920, 922, 921, 880, 882, 881,
	879, 1062, 346, 1031, 849, 856, 875, 886, 891, 897,
	905, 906, 914, 919, 929, 938, 939, 949, 962, 963,
	969, 993, 996, 1009, 1014, 1021, 1026, 1027, 471, 252,
	946, 968, 999, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 926, 196, 0, 0,
	202, 0, 203, 205, 913, 201, 1030, 1055, 975, 989,
	900, 1042, 0, 0, 448, 801, 1046, 887, 910, 1056,
	916, 918, 983, 862, 958, 357, 907, 863, 0, 0,
	854, 1104, 855, 888, 259, 1102, 1016, 961, 1044, 944,
	976, 986, 258, 244, 951, 950, 1033, 899, 898, 981,
	1029, 1043, 0, 0, 172, 477, 190, 809, 314, 0,
	0, 475, 423, 339, 0, 0, 942, 0, 793, 794,
	927, 985, 874, 972, 1048, 908, 977, 1049, 89, 0,
	0, 0, 0, 730, 557, 731, 733, 734, 735, 736,
	0, 0, 171, 732, 737, 738, 739, 0, 937, 982,
	1061, 853, 1121, 719, 858, 808, 0, 1034, 895, 896,
	263, 0, 0, 0, 0, 0, 0, 0, 940, 957,
	1001, 924, 0, 468, 988, 997, 1011, 917, 376, 283,
	0, 0, 0, 0, 716, 717, 0, 0, 0, 0,
	824, 0, 718, 0, 868, 714, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 720, 0,
	0, 0, 873, 851, 893, 1003, 852, 850, 340, 865,
	796, 1032, 925, 301, 191, 1038, 923, 822, 991, 869,
	1020, 1054, 911, 311, 867, 195, 864, 870, 909, 353,
	1000, 1006, 806, 198, 313, 1017, 889, 902, 727, 0,
	392, 978, 467, 708, 278, 0, 4521, 391, 315, 460,
	992, 1040, 466, 912, 442, 476, 481, 271, 945, 234,
	420, 261, 254, 894, 1010, 857, 284, 375, 249, 306,
	928, 984, 890, 241, 995, 971, 1022, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1018, 1005,
	1024, 885, 871, 877, 872, 901, 1041, 293, 285, 1025,
	1023, 903, 361, 224, 955, 948, 941, 810, 470, 1057,
	257, 1007, 472, 180, 406, 405, 915, 292, 1008, 181,
	170, 385, 182, 302, 204, 1028, 485, 220, 309, 450,
	707, 277, 352, 980, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1004, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1047, 322, 266, 270,
	286, 297, 979, 389, 427, 473, 973, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1002, 216, 237, 428, 210, 1036,
	1019, 966, 930, 936, 859, 0, 209, 931, 932, 933,
	934, 935, 998, 892, 904, 884, 974, 883, 281, 990,
	728, 729, 246, 799, 1051, 211, 866, 1050, 349, 356,
	348, 1053, 1052, 459, 1037, 967, 954, 952, 860, 1035,
	965, 953, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 956, 425, 320, 0, 206, 0, 424,
	1045, 1063, 439, 226, 878, 1012, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 994,
	1060, 360, 393, 233, 469, 421, 262, 876, 1064, 823,
	811, 812, 815, 959, 960, 813, 816, 817, 825, 797,
	798, 800, 802, 803, 804, 947, 1039, 861, 807, 1015,
	818, 819, 820, 821, 987, 1058, 795, 242, 744, 837,
	838, 839, 745, 840, 841, 746, 747, 842, 843, 844,
	845, 748, 846, 847, 848, 826, 827, 828, 829, 830,
	831, 832, 833, 836, 834, 835, 0, 943, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 805,
	199, 212, 312, 1059, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1013, 970, 0, 920, 922,
	921, 880, 882, 881, 879, 1062, 346, 1031, 849, 856,
	875, 886, 891, 897, 905, 906, 914, 919, 929, 938,
	939, 949, 962, 963, 969, 993, 996, 1009, 1014, 1021,
	1026, 1027, 471, 252, 946, 968, 999, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	926, 196, 0, 0, 202, 0, 203, 205, 913, 201,
	1030, 1055, 975, 989, 900, 1042, 0, 0, 448, 801,
	1046, 887, 910, 1056, 916, 918, 983, 862, 958, 357,
	907, 863, 0, 0, 854, 1104, 855, 888, 259, 1102,
	1016, 961, 1044, 944, 976, 986, 258, 244, 951, 950,
	1033, 899, 898, 981, 1029, 1043, 0, 0, 172, 477,
	190, 809, 314, 0, 0, 475, 423, 339, 0, 0,
	942, 0, 793, 794, 927, 985, 874, 972, 1048, 908,
	977, 1049, 89, 0, 0, 0, 0, 730, 557, 731,
	733, 734, 735, 736, 0, 0, 171, 732, 737, 738,
	739, 0, 937, 982, 1061, 853, 1121, 719, 858, 808,
	0, 1034, 895, 896, 263, 0, 0, 0, 0, 0,
	0, 0, 940, 957, 1001, 924, 0, 468, 988, 997,
	1011, 917, 376, 283, 0, 0, 0, 0, 716, 717,
	0, 0, 0, 0, 824, 0, 718, 0, 868, 714,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 720, 0, 0, 0, 873, 851, 893, 1003,
	852, 850, 340, 865, 796, 1032, 925, 301, 191, 1038,
	923, 822, 991, 869, 1020, 1054, 911, 311, 867, 195,
	864, 870, 909, 353, 1000, 1006, 806, 198, 313, 1017,
	889, 902, 727, 0, 392, 978, 467, 708, 278, 0,
	964, 391, 315, 460, 992, 1040, 466, 912, 442, 476,
	481, 271, 945, 234, 420, 261, 254, 894, 1010, 857,
	284, 375, 249, 306, 928, 984, 890, 241, 995, 971,
	1022, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1018, 1005, 1024, 885, 871, 877, 872, 901,
	1041, 293, 285, 1025, 1023, 903, 361, 224, 955, 948,
	941, 810, 470, 1057, 257, 1007, 472, 180, 406, 405,
	915, 292, 1008, 181, 170, 385, 182, 302, 204, 1028,
	485, 220, 309, 450, 707, 277, 352, 980, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1004, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1047, 322, 266, 270, 286, 297, 979, 389, 427, 473,
	973, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1002, 216,
	237, 428, 210, 1036, 1019, 966, 930, 936, 859, 0,
	209, 931, 932, 933, 934, 935, 998, 892, 904, 884,
	974, 883, 281, 990, 728, 729, 246, 799, 1051, 211,
	866, 1050, 349, 356, 348, 1053, 1052, 459, 1037, 967,
	954, 952, 860, 1035, 965, 953, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 956, 425, 320,
	0, 206, 0, 424, 1045, 1063, 439, 226, 878, 1012,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 994, 1060, 360, 393, 233, 469, 421,
	262, 876, 1064, 823, 811, 812, 815, 959, 960, 813,
	816, 817, 825, 797, 798, 800, 802, 803, 804, 2348,
	2349, 2350, 807, 1015, 818, 819, 820, 821, 987, 1058,
	795, 242, 744, 837, 838, 839, 745, 840, 841, 746,
	747, 842, 843, 844, 845, 748, 846, 847, 848, 826,
	827, 828, 829, 830, 831, 832, 833, 836, 834, 835,
	0, 943, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 805, 199, 212, 312, 1059, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1013,
	970, 0, 920, 922, 921, 880, 882, 881, 879, 1062,
	346, 1031, 849, 856, 875, 886, 891, 897, 905, 906,
	914, 919, 929, 938, 939, 949, 962, 963, 969, 993,
	996, 1009, 1014, 1021, 1026, 1027, 471, 252, 946, 968,
	999, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 926, 196, 0, 0, 202, 0,
	203, 205, 913, 201, 1030, 1055, 975, 989, 1825, 2004,
	0, 3702, 448, 1859, 2008, 1808, 1838, 2026, 1844, 1847,
	1928, 1774, 1897, 357, 1835, 1775, 1758, 1813, 1762, 1826,
	1763, 1810, 259, 1806, 1969, 1900, 2006, 1879, 1921, 1931,
	258, 244, 1889, 1888, 1994, 1824, 1823, 1926, 1983, 2005,
	1878, 0, 172, 477, 190, 3703, 314, 1980, 497, 3704,
	423, 339, 500, 499, 1874, 1989, 1895, 1958, 1857, 1930,
	1790, 1913, 2010, 1836, 1922, 2011, 89, 0, 694, 0,
	0, 0, 1161, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1918, 2002, 1829, 498, 1869, 1927, 2031, 1761,
	1914, 0, 1766, 1777, 2025, 1995, 1820, 1821, 263, 0,
	0, 0, 0, 0, 0, 0, 1872, 1896, 1948, 1854,
	0, 468, 1933, 1943, 1961, 1846, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 1911, 0,
	0, 0, 1782, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	1789, 1759, 1817, 1950, 1760, 1757, 340, 1778, 1963, 3706,
	1855, 301, 191, 1999, 1853, 1852, 1937, 1783, 1973, 2023,
	1839, 311, 1781, 195, 1776, 1784, 1837, 353, 1947, 1955,
	177, 198, 313, 1970, 1811, 1828, 245, 2178, 392, 1923,
	467, 496, 278, 0, 1904, 391, 315, 460, 1938, 2001,
	466, 1840, 442, 476, 481, 271, 1880, 234, 420, 261,
	254, 1819, 1960, 1765, 284, 375, 249, 306, 1858, 1929,
	1812, 241, 1941, 1912, 1975, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1971, 1954, 1977, 1805,
	1785, 1796, 1786, 1827, 2003, 293, 285, 1978, 1976, 1830,
	361, 224, 1893, 1886, 1873, 1951, 470, 2027, 257, 1956,
	472, 180, 406, 405, 1843, 292, 1957, 181, 170, 385,
	182, 302, 204, 1982, 485, 220, 309, 450, 495, 277,
	352, 1925, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1953, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 2009, 322, 266, 270, 286, 297,
	1924, 389, 427, 473, 1915, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1949, 216, 237, 428, 210, 1997, 1972, 1906,
	1861, 1867, 1767, 0, 209, 1862, 1863, 1864, 1865, 1866,
	1945, 1816, 1832, 1804, 1919, 1803, 281, 1936, 463, 464,
	246, 1779, 2017, 211, 1780, 2016, 349, 356, 348, 2020,
	2018, 459, 1998, 1907, 1892, 1890, 1772, 1996, 1905, 1891,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1894, 425, 320, 0, 206, 0, 424, 2007, 2033,
	439, 226, 1798, 1964, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1940, 2030, 360,
	393, 233, 469, 421, 262, 1794, 0, 1797, 1792, 1795,
	1793, 1898, 1899, 2012, 2013, 2014, 1952, 1787, 192, 193,
	1990, 1991, 194, 1885, 2000, 1773, 0, 1968, 188, 189,
	174, 179, 1932, 2028, 1845, 242, 164, 1769, 1770, 1771,
	165, 1875, 1876, 167, 168, 1986, 1985, 1984, 1987, 169,
	2021, 2019, 2022, 1788, 1809, 1831, 1881, 1882, 1884, 1916,
	1917, 1962, 1935, 1944, 1818, 1877, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1903, 199, 212,
	312, 3705, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1965, 1910, 0, 1849, 1851, 1850, 1800,
	1802, 1801, 1799, 2032, 346, 1992, 1756, 1764, 1791, 1807,
	1814, 1822, 1833, 1834, 1842, 1848, 1860, 1870, 1871, 1887,
	1901, 1902, 1909, 1939, 1942, 1959, 1967, 1974, 1979, 1981,
	471, 252, 1883, 1908, 1946, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 1856, 196,
	0, 0, 202, 0, 203, 205, 1841, 201, 1988, 2024,
	1920, 1934, 1825, 2004, 0, 1966, 448, 1859, 2008, 1808,
	1838, 2026, 1844, 1847, 1928, 1774, 1897, 357, 1835, 1775,
	1758, 1813, 1762, 1826, 1763, 1810, 259, 1806, 1969, 1900,
	2006, 1879, 1921, 1931, 258, 244, 1889, 1888, 1994, 1824,
	1823, 1926, 1983, 2005, 1878, 0, 172, 477, 190, 2015,
	314, 1980, 497, 475, 423, 339, 500, 499, 1874, 1989,
	1895, 1958, 1857, 1930, 1790, 1913, 2010, 1836, 1922, 2011,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1918, 2002, 1829, 498,
	1869, 1927, 2031, 1761, 1914, 0, 1766, 1777, 2025, 1995,
	1820, 1821, 263, 0, 0, 0, 0, 0, 0, 0,
	1872, 1896, 1948, 1854, 0, 468, 1933, 1943, 1961, 1846,
	376, 283, 0, 0, 0, 0, 0, 0, 3203, 0,
	1815, 0, 1911, 0, 0, 0, 1782, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 1789, 1759, 1817, 1950, 1760, 1757,
	340, 1778, 1963, 1993, 1855, 301, 191, 1999, 1853, 1852,
	1937, 1783, 1973, 2023, 1839, 311, 1781, 195, 1776, 1784,
	1837, 353, 1947, 1955, 177, 198, 313, 1970, 1811, 1828,
	245, 0, 392, 1923, 467, 2276, 278, 0, 1904, 391,
	315, 460, 1938, 2001, 466, 1840, 442, 476, 481, 271,
	1880, 234, 420, 261, 254, 1819, 1960, 1765, 284, 375,
	249, 306, 1858, 1929, 1812, 241, 1941, 1912, 1975, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1971, 1954, 1977, 1805, 1785, 1796, 1786, 1827, 2003, 293,
	285, 1978, 1976, 1830, 361, 224, 1893, 1886, 1873, 1951,
	470, 2027, 257, 1956, 472, 180, 406, 405, 1843, 292,
	1957, 181, 170, 385, 182, 302, 204, 1982, 485, 220,
	309, 450, 2275, 277, 352, 1925, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1953, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2009, 322,
	266, 270, 286, 297, 1924, 389, 427, 473, 1915, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1949, 216, 237, 428,
	210, 1997, 1972, 1906, 1861, 1867, 1767, 0, 209, 1862,
	1863, 1864, 1865, 1866, 1945, 1816, 1832, 1804, 1919, 1803,
	281, 1936, 463, 464, 246, 1779, 2017, 211, 1780, 2016,
	349, 356, 348, 2020, 2018, 459, 1998, 1907, 1892, 1890,
	1772, 1996, 1905, 1891, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1894, 425, 320, 0, 206,
	0, 424, 2007, 2033, 439, 226, 1798, 1964, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1940, 2030, 360, 393, 233, 469, 421, 262, 1794,
	0, 1797, 1792, 1795, 1793, 1898, 1899, 2012, 2013, 2014,
	1952, 1787, 192, 193, 1990, 1991, 194, 1885, 2000, 1773,
	0, 1968, 188, 189, 174, 179, 1932, 2028, 1845, 242,
	164, 1769, 1770, 1771, 165, 1875, 1876, 167, 168, 1986,
	1985, 1984, 1987, 169, 2021, 2019, 2022, 1788, 1809, 1831,
	1881, 1882, 1884, 1916, 1917, 1962, 1935, 1944, 1818, 1877,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1903, 199, 212, 312, 2029, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1965, 1910, 0,
	1849, 1851, 1850, 1800, 1802, 1801, 1799, 2032, 346, 1992,
	1756, 1764, 1791, 1807, 1814, 1822, 1833, 1834, 1842, 1848,
	1860, 1870, 1871, 1887, 1901, 1902, 1909, 1939, 1942, 1959,
	1967, 1974, 1979, 1981, 471, 252, 1883, 1908, 1946, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1856, 196, 0, 0, 202, 0, 203, 205,
	1841, 201, 1988, 2024, 1920, 1934, 1825, 2004, 0, 1966,
	448, 1859, 2008, 1808, 1838, 2026, 1844, 1847, 1928, 1774,
	1897, 357, 1835, 1775, 1758, 1813, 1762, 1826, 1763, 1810,
	259, 1806, 1969, 1900, 2006, 1879, 1921, 1931, 258, 244,
	1889, 1888, 1994, 1824, 1823, 1926, 1983, 2005, 1878, 0,
	172, 477, 190, 2015, 314, 1980, 497, 475, 423, 339,
	500, 499, 1874, 1989, 1895, 1958, 1857, 1930, 1790, 1913,
	2010, 1836, 1922, 2011, 0, 0, 0, 0, 0, 0,
	1161, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1918, 2002, 1829, 498, 1869, 1927, 2031, 1761, 1914, 0,
	1766, 1777, 2025, 1995, 1820, 1821, 263, 0, 0, 0,
	0, 0, 0, 0, 1872, 1896, 1948, 1854, 0, 468,
	1933, 1943, 1961, 1846, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 1911, 0, 0, 0,
	1782, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 1789, 1759,
	1817, 1950, 1760, 1757, 340, 1778, 1963, 1993, 1855, 301,
	191, 1999, 1853, 1852, 1937, 1783, 1973, 2023, 1839, 311,
	1781, 195, 1776, 1784, 1837, 353, 1947, 1955, 177, 198,
	313, 1970, 1811, 1828, 245, 2178, 392, 1923, 467, 496,
	278, 0, 1904, 391, 315, 460, 1938, 2001, 466, 1840,
	442, 476, 481, 271, 1880, 234, 420, 261, 254, 1819,
	1960, 1765, 284, 375, 249, 306, 1858, 1929, 1812, 241,
	1941, 1912, 1975, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1971, 1954, 1977, 1805, 1785, 1796,
	1786, 1827, 2003, 293, 285, 1978, 1976, 1830, 361, 224,
	1893, 1886, 1873, 1951, 470, 2027, 257, 1956, 472, 180,
	406, 405, 1843, 292, 1957, 181, 170, 385, 182, 302,
	204, 1982, 485, 220, 309, 450, 495, 277, 352, 1925,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1953, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 2009, 322, 266, 270, 286, 297, 1924, 389,
	427, 473, 1915, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1949, 216, 237, 428, 210, 1997, 1972, 1906, 1861, 1867,
	1767, 0, 209, 1862, 1863, 1864, 1865, 1866, 1945, 1816,
	1832, 1804, 1919, 1803, 281, 1936, 463, 464, 246, 1779,
	2017, 211, 1780, 2016, 349, 356, 348, 2020, 2018, 459,
	1998, 1907, 1892, 1890, 1772, 1996, 1905, 1891, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1894,
	425, 320, 0, 206, 0, 424, 2007, 2033, 439, 226,
	1798, 1964, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1940, 2030, 360, 393, 233,
	469, 421, 262, 1794, 0, 1797, 1792, 1795, 1793, 1898,
	1899, 2012, 2013, 2014, 1952, 1787, 192, 193, 1990, 1991,
	194, 1885, 2000, 1773, 0, 1968, 188, 189, 174, 179,
	1932, 2028, 1845, 242, 164, 1769, 1770, 1771, 165, 1875,
	1876, 167, 168, 1986, 1985, 1984, 1987, 169, 2021, 2019,
	2022, 1788, 1809, 1831, 1881, 1882, 1884, 1916, 1917, 1962,
	1935, 1944, 1818, 1877, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1903, 199, 212, 312, 2029,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1965, 1910, 0, 1849, 1851, 1850, 1800, 1802, 1801,
	1799, 2032, 346, 1992, 1756, 1764, 1791, 1807, 1814, 1822,
	1833, 1834, 1842, 1848, 1860, 1870, 1871, 1887, 1901, 1902,
	1909, 1939, 1942, 1959, 1967, 1974, 1979, 1981, 471, 252,
	1883, 1908, 1946, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 1856, 196, 0, 0,
	202, 0, 203, 205, 1841, 201, 1988, 2024, 1920, 1934,
	1825, 2004, 0, 1966, 448, 1859, 2008, 1808, 1838, 2026,
	1844, 1847, 1928, 1774, 1897, 357, 1835, 1775, 1758, 1813,
	1762, 1826, 1763, 1810, 259, 1806, 1969, 1900, 2006, 1879,
	1921, 1931, 258, 244, 1889, 1888, 1994, 1824, 1823, 1926,
	1983, 2005, 1878, 0, 172, 477, 190, 2015, 314, 1980,
	497, 475, 423, 339, 500, 499, 1874, 1989, 1895, 1958,
	1857, 1930, 1790, 1913, 2010, 1836, 1922, 2011, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1918, 2002, 1829, 498, 1869, 1927,
	2031, 1761, 1914, 0, 1766, 1777, 2025, 1995, 1820, 1821,
	263, 0, 0, 0, 0, 0, 0, 0, 1872, 1896,
	1948, 1854, 0, 468, 1933, 1943, 1961, 1846, 376, 283,
	0, 0, 0, 0, 0, 0, 2269, 0, 1815, 0,
	1911, 0, 0, 0, 1782, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 1789, 1759, 1817, 1950, 1760, 1757, 340, 1778,
	1963, 1993, 1855, 301, 191, 1999, 1853, 1852, 1937, 1783,
	1973, 2023, 1839, 311, 1781, 195, 1776, 1784, 1837, 353,
	1947, 1955, 177, 198, 313, 1970, 1811, 1828, 245, 0,
	392, 1923, 467, 2276, 278, 0, 1904, 391, 315, 460,
	1938, 2001, 466, 1840, 442, 476, 481, 271, 1880, 234,
	420, 261, 254, 1819, 1960, 1765, 284, 375, 249, 306,
	1858, 1929, 1812, 241, 1941, 1912, 1975, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1971, 1954,
	1977, 1805, 1785, 1796, 1786, 1827, 2003, 293, 285, 1978,
	1976, 1830, 361, 224, 1893, 1886, 1873, 1951, 470, 2027,
	257, 1956, 472, 180, 406, 405, 1843, 292, 1957, 181,
	170, 385, 182, 302, 204, 1982, 485, 220, 309, 450,
	2275, 277, 352, 1925, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1953, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 2009, 322, 266, 270,
	286, 297, 1924, 389, 427, 473, 1915, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1949, 216, 237, 428, 210, 1997,
	1972, 1906, 1861, 1867, 1767, 0, 209, 1862, 1863, 1864,
	1865, 1866, 1945, 1816, 1832, 1804, 1919, 1803, 281, 1936,
	463, 464, 246, 1779, 2017, 211, 1780, 2016, 349, 356,
	348, 2020, 2018, 459, 1998, 1907, 1892, 1890, 1772, 1996,
	1905, 1891, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1894, 425, 320, 0, 206, 0, 424,
	2007, 2033, 439, 226, 1798, 1964, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1940,
	2030, 360, 393, 233, 469, 421, 262, 1794, 0, 1797,
	1792, 1795, 1793, 1898, 1899, 2012, 2013, 2014, 1952, 1787,
	192, 193, 1990, 1991, 194, 1885, 2000, 1773, 0, 1968,
	188, 189, 174, 179, 1932, 2028, 1845, 242, 164, 1769,
	1770, 1771, 165, 1875, 1876, 167, 168, 1986, 1985, 1984,
	1987, 169, 2021, 2019, 2022, 1788, 1809, 1831, 1881, 1882,
	1884, 1916, 1917, 1962, 1935, 1944, 1818, 1877, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1903,
	199, 212, 312, 2029, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1965, 1910, 0, 1849, 1851,
	1850, 1800, 1802, 1801, 1799, 2032, 346, 1992, 1756, 1764,
	1791, 1807, 1814, 1822, 1833, 1834, 1842, 1848, 1860, 1870,
	1871, 1887, 1901, 1902, 1909, 1939, 1942, 1959, 1967, 1974,
	1979, 1981, 471, 252, 1883, 1908, 1946, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	1856, 196, 0, 0, 202, 0, 203, 205, 1841, 201,
	1988, 2024, 1920, 1934, 1825, 2004, 0, 1966, 448, 1859,
	2008, 1808, 1838, 2026, 1844, 1847, 1928, 1774, 1897, 357,
	1835, 1775, 1758, 1813, 1762, 1826, 1763, 1810, 259, 1806,
	1969, 1900, 2006, 1879, 1921, 1931, 258, 244, 1889, 1888,
	1994, 1824, 1823, 1926, 1983, 2005, 1878, 0, 172, 477,
	190, 2015, 314, 1980, 497, 475, 423, 339, 500, 499,
	1874, 1989, 1895, 1958, 1857, 1930, 1790, 1913, 2010, 1836,
	1922, 2011, 0, 0, 0, 0, 0, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1918, 2002,
	1829, 498, 1869, 1927, 2031, 1761, 1914, 0, 1766, 1777,
	2025, 1995, 1820, 1821, 263, 0, 0, 0, 0, 0,
	0, 0, 1872, 1896, 1948, 1854, 0, 468, 1933, 1943,
	1961, 1846, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 1911, 0, 0, 0, 1782, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 1789, 1759, 1817, 1950,
	1760, 1757, 340, 1778, 1963, 1993, 1855, 301, 191, 1999,
	1853, 1852, 1937, 1783, 1973, 2023, 1839, 311, 1781, 195,
	1776, 1784, 1837, 353, 1947, 1955, 177, 198, 313, 1970,
	1811, 1828, 245, 0, 392, 1923, 467, 2276, 278, 0,
	1904, 391, 315, 460, 1938, 2001, 466, 1840, 442, 476,
	481, 271, 1880, 234, 420, 261, 254, 1819, 1960, 1765,
	284, 375, 249, 306, 1858, 1929, 1812, 241, 1941, 1912,
	1975, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1971, 1954, 1977, 1805, 1785, 1796, 1786, 1827,
	2003, 293, 285, 1978, 1976, 1830, 361, 224, 1893, 1886,
	1873, 1951, 470, 2027, 257, 1956, 472, 180, 406, 405,
	1843, 292, 1957, 181, 170, 385, 182, 302, 204, 1982,
	485, 220, 309, 450, 2275, 277, 352, 1925, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1953, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	2009, 322, 266, 270, 286, 297, 1924, 389, 427, 473,
	1915, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1949, 216,
	237, 428, 210, 1997, 1972, 1906, 1861, 1867, 1767, 0,
	209, 1862, 1863, 1864, 1865, 1866, 1945, 1816, 1832, 1804,
	1919, 1803, 281, 1936, 463, 464, 246, 1779, 2017, 211,
	1780, 2016, 349, 356, 348, 2020, 2018, 459, 1998, 1907,
	1892, 1890, 1772, 1996, 1905, 1891, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1894, 425, 320,
	0, 206, 0, 424, 2007, 2033, 439, 226, 1798, 1964,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1940, 2030, 360, 393, 233, 469, 421,
	262, 1794, 0, 1797, 1792, 1795, 1793, 1898, 1899, 2012,
	2013, 2014, 1952, 1787, 192, 193, 1990, 1991, 194, 1885,
	2000, 1773, 0, 1968, 188, 189, 174, 179, 1932, 2028,
	1845, 242, 164, 1769, 1770, 1771, 165, 1875, 1876, 167,
	168, 1986, 1985, 1984, 1987, 169, 2021, 2019, 2022, 1788,
	1809, 1831, 1881, 1882, 1884, 1916, 1917, 1962, 1935, 1944,
	1818, 1877, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1903, 199, 212, 312, 2029, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1965,
	1910, 0, 1849, 1851, 1850, 1800, 1802, 1801, 1799, 2032,
	346, 1992, 1756, 1764, 1791, 1807, 1814, 1822, 1833, 1834,
	1842, 1848, 1860, 1870, 1871, 1887, 1901, 1902, 1909, 1939,
	1942, 1959, 1967, 1974, 1979, 1981, 471, 252, 1883, 1908,
	1946, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 1856, 196, 0, 0, 202, 0,
	203, 205, 1841, 201, 1988, 2024, 1920, 1934, 900, 1042,
	0, 0, 448, 1109, 1046, 887, 910, 1056, 916, 918,
	983, 862, 958, 357, 907, 863, 0, 0, 854, 1104,
	855, 888, 259, 1102, 1016, 961, 1044, 944, 976, 986,
	258, 244, 951, 950, 1033, 899, 898, 981, 1029, 1043,
	0, 0, 172, 477, 190, 1142, 314, 0, 497, 475,
	423, 339, 500, 499, 942, 0, 1116, 1129, 927, 985,
	874, 972, 1048, 908, 977, 1049, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1124, 1138, 1105, 498, 937, 982, 1061, 853,
	1121, 0, 858, 1093, 0, 1034, 895, 896, 263, 0,
	0, 0, 0, 0, 0, 0, 940, 957, 1001, 924,
	0, 468, 988, 997, 1011, 917, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 868, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	873, 851, 893, 1003, 852, 850, 340, 865, 1131, 1032,
	925, 301, 191, 1038, 923, 1108, 991, 869, 1020, 1054,
	911, 311, 867, 195, 864, 870, 909, 353, 1000, 1006,
	177, 198, 313, 1017, 889, 902, 245, 3303, 392, 978,
	467, 2361, 278, 0, 964, 391, 315, 460, 992, 1040,
	466, 912, 442, 476, 481, 271, 945, 234, 420, 261,
	254, 894, 1010, 857, 284, 375, 249, 306, 928, 984,
	890, 241, 995, 971, 1022, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1018, 1005, 1024, 885,
	871, 877, 872, 901, 1041, 293, 285, 1025, 1023, 903,
	361, 224, 955, 948, 941, 1127, 470, 1057, 257, 1007,
	472, 180, 406, 405, 915, 292, 1008, 181, 170, 385,
	182, 302, 204, 1028, 485, 220, 309, 450, 2360, 277,
	352, 980, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1004, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1047, 322, 266, 270, 286, 297,
	979, 389, 427, 473, 973, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1002, 216, 237, 428, 210, 1036, 1019, 966,
	930, 936, 859, 0, 209, 931, 932, 933, 934, 935,
	998, 892, 904, 884, 974, 883, 281, 990, 463, 464,
	246, 1094, 1051, 211, 866, 1050, 349, 356, 348, 1053,
	1052, 459, 1037, 967, 954, 952, 860, 1035, 965, 953,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 956, 425, 320, 0, 206, 0, 424, 1045, 1063,
	439, 226, 878, 1012, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 994, 1060, 360,
	393, 233, 469, 421, 262, 1099, 0, 1101, 1097, 1100,
	1098, 1117, 1118, 1139, 1140, 1141, 1128, 1095, 192, 193,
	1136, 1137, 194, 947, 1039, 861, 0, 1015, 188, 189,
	174, 179, 987, 1058, 1107, 242, 164, 1090, 1091, 1092,
	165, 1111, 1112, 167, 168, 1134, 1133, 1132, 1135, 169,
	1144, 1143, 1145, 1096, 1103, 1106, 1113, 1114, 1115, 1122,
	1123, 1130, 1125, 1126, 0, 943, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1119, 199, 212,
	312, 1059, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1013, 970, 0, 920, 922, 921, 880,
	882, 881, 879, 1062, 346, 1031, 849, 856, 875, 886,
	891, 897, 905, 906, 914, 919, 929, 938, 939, 949,
	962, 963, 969, 993, 996, 1009, 1014, 1021, 1026, 1027,
	471, 252, 946, 968, 999, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 926, 196,
	0, 0, 202, 0, 203, 205, 913, 201, 1030, 1055,
	975, 989, 1825, 2004, 0, 1966, 448, 1859, 2008, 1808,
	1838, 2026, 1844, 1847, 1928, 1774, 1897, 357, 1835, 1775,
	1758, 1813, 1762, 1826, 1763, 1810, 259, 1806, 1969, 1900,
	2006, 1879, 1921, 1931, 258, 244, 1889, 1888, 1994, 1824,
	1823, 1926, 1983, 2005, 1878, 0, 172, 477, 190, 2015,
	314, 1980, 497, 475, 423, 339, 500, 499, 1874, 1989,
	1895, 1958, 1857, 1930, 1790, 1913, 2010, 1836, 1922, 2011,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1918, 2002, 1829, 498,
	1869, 1927, 2031, 1761, 1914, 0, 1766, 1777, 2025, 1995,
	1820, 1821, 263, 0, 0, 0, 0, 0, 0, 0,
	1872, 1896, 1948, 1854, 0, 468, 1933, 1943, 1961, 1846,
	376, 283, 0, 0, 0, 0, 0, 0, 2858, 0,
	1815, 0, 1911, 0, 0, 0, 1782, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 1789, 1759, 1817, 1950, 1760, 1757,
	340, 1778, 1963, 1993, 1855, 301, 191, 1999, 1853, 1852,
	1937, 1783, 1973, 2023, 1839, 311, 1781, 195, 1776, 1784,
	1837, 353, 1947, 1955, 177, 198, 313, 1970, 1811, 1828,
	245, 0, 392, 1923, 467, 496, 278, 0, 1904, 391,
	315, 460, 1938, 2001, 466, 1840, 442, 476, 481, 271,
	1880, 234, 420, 261, 254, 1819, 1960, 1765, 284, 375,
	249, 306, 1858, 1929, 1812, 241, 1941, 1912, 1975, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1971, 1954, 1977, 1805, 1785, 1796, 1786, 1827, 2003, 293,
	285, 1978, 1976, 1830, 361, 224, 1893, 1886, 1873, 1951,
	470, 2027, 257, 1956, 472, 180, 406, 405, 1843, 292,
	1957, 181, 170, 385, 182, 302, 204, 1982, 485, 220,
	309, 450, 495, 277, 352, 1925, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1953, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 2009, 322,
	266, 270, 286, 297, 1924, 389, 427, 473, 1915, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1949, 216, 237, 428,
	210, 1997, 1972, 1906, 1861, 1867, 1767, 0, 209, 1862,
	1863, 1864, 1865, 1866, 1945, 1816, 1832, 1804, 1919, 1803,
	281, 1936, 463, 464, 246, 1779, 2017, 211, 1780, 2016,
	349, 356, 348, 2020, 2018, 459, 1998, 1907, 1892, 1890,
	1772, 1996, 1905, 1891, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1894, 425, 320, 0, 206,
	0, 424, 2007, 2033, 439, 226, 1798, 1964, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1940, 2030, 360, 393, 233, 469, 421, 262, 1794,
	0, 1797, 1792, 1795, 1793, 1898, 1899, 2012, 2013, 2014,
	1952, 1787, 0, 0, 1990, 1991, 0, 1885, 2000, 1773,
	0, 1968, 188, 189, 174, 179, 1932, 2028, 1845, 242,
	0, 1769, 1770, 1771, 0, 1875, 1876, 0, 0, 1986,
	1985, 1984, 1987, 0, 2021, 2019, 2022, 1788, 1809, 1831,
	1881, 1882, 1884, 1916, 1917, 1962, 1935, 1944, 1818, 1877,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1903, 199, 212, 312, 2029, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1965, 1910, 0,
	1849, 1851, 1850, 1800, 1802, 1801, 1799, 2032, 346, 1992,
	1756, 1764, 1791, 1807, 1814, 1822, 1833, 1834, 1842, 1848,
	1860, 1870, 1871, 1887, 1901, 1902, 1909, 1939, 1942, 1959,
	1967, 1974, 1979, 1981, 471, 252, 1883, 1908, 1946, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1856, 196, 0, 0, 202, 0, 203, 205,
	1841, 201, 1988, 2024, 1920, 1934, 900, 1042, 0, 0,
	448, 1109, 1046, 887, 910, 1056, 916, 918, 983, 862,
	958, 357, 907, 863, 0, 0, 854, 1104, 855, 888,
	259, 1102, 1016, 961, 1044, 944, 976, 986, 258, 244,
	951, 950, 1033, 899, 898, 981, 1029, 1043, 0, 0,
	172, 477, 190, 1142, 314, 0, 497, 475, 423, 339,
	500, 499, 942, 0, 1116, 1129, 927, 985, 874, 972,
	1048, 908, 977, 1049, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1124, 1138, 1105, 498, 937, 982, 1061, 853, 1121, 0,
	858, 1093, 0, 1034, 895, 896, 263, 0, 0, 0,
	0, 0, 0, 0, 940, 957, 1001, 924, 0, 468,
	988, 997, 1011, 917, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	868, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 873, 851,
	893, 1003, 852, 850, 340, 865, 1131, 1032, 925, 301,
	191, 1038, 923, 1108, 991, 869, 1020, 1054, 911, 311,
	867, 195, 864, 870, 909, 353, 1000, 1006, 177, 198,
	313, 1017, 889, 902, 245, 0, 392, 978, 467, 2361,
	278, 0, 964, 391, 315, 460, 992, 1040, 466, 912,
	442, 476, 481, 271, 945, 234, 420, 261, 254, 894,
	1010, 857, 284, 375, 249, 306, 928, 984, 890, 241,
	995, 971, 1022, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1018, 1005, 1024, 885, 871, 877,
	872, 901, 1041, 293, 285, 1025, 1023, 903, 361, 224,
	955, 948, 941, 1127, 470, 1057, 257, 1007, 472, 180,
	406, 405, 915, 292, 1008, 181, 170, 385, 182, 302,
	204, 1028, 485, 220, 309, 450, 2360, 277, 352, 980,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1004, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1047, 322, 266, 270, 286, 297, 979, 389,
	427, 473, 973, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1002, 216, 237, 428, 210, 1036, 1019, 966, 930, 936,
	859, 0, 209, 931, 932, 933, 934, 935, 998, 892,
	904, 884, 974, 883, 281, 990, 463, 464, 246, 1094,
	1051, 211, 866, 1050, 349, 356, 348, 1053, 1052, 459,
	1037, 967, 954, 952, 860, 1035, 965, 953, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 956,
	425, 320, 0, 206, 0, 424, 1045, 1063, 439, 226,
	878, 1012, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 994, 1060, 360, 393, 233,
	469, 421, 262, 1099, 0, 1101, 1097, 1100, 1098, 1117,
	1118, 1139, 1140, 1141, 1128, 1095, 192, 193, 1136, 1137,
	194, 947, 1039, 861, 0, 1015, 188, 189, 174, 179,
	987, 1058, 1107, 242, 164, 1090, 1091, 1092, 165, 1111,
	1112, 167, 168, 1134, 1133, 1132, 1135, 169, 1144, 1143,
	1145, 1096, 1103, 1106, 1113, 1114, 1115, 1122, 1123, 1130,
	1125, 1126, 0, 943, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1119, 199, 212, 312, 1059,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1013, 970, 0, 920, 922, 921, 880, 882, 881,
	879, 1062, 346, 1031, 849, 856, 875, 886, 891, 897,
	905, 906, 914, 919, 929, 938, 939, 949, 962, 963,
	969, 993, 996, 1009, 1014, 1021, 1026, 1027, 471, 252,
	946, 968, 999, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 926, 196, 0, 0,
	202, 0, 203, 205, 913, 201, 1030, 1055, 975, 989,
	1825, 2004, 0, 1966, 448, 1859, 2008, 1808, 1838, 2026,
	1844, 1847, 1928, 1774, 1897, 357, 1835, 1775, 1758, 1813,
	1762, 1826, 1763, 1810, 259, 1806, 1969, 1900, 2006, 1879,
	1921, 1931, 258, 244, 1889, 1888, 1994, 1824, 1823, 1926,
	1983, 2005, 1878, 0, 172, 477, 190, 2015, 314, 1980,
	497, 475, 423, 339, 500, 499, 1874, 1989, 1895, 1958,
	1857, 1930, 1790, 1913, 2010, 1836, 1922, 2011, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1918, 2002, 1829, 498, 1869, 1927,
	2031, 1761, 1914, 0, 1766, 1777, 2025, 1995, 1820, 1821,
	263, 0, 0, 0, 0, 0, 0, 0, 1872, 1896,
	1948, 1854, 0, 468, 1933, 1943, 1961, 1846, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	1911, 0, 0, 0, 1782, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 1789, 1759, 1817, 1950, 1760, 1757, 340, 1778,
	1963, 1993, 1855, 301, 191, 1999, 1853, 1852, 1937, 1783,
	1973, 2023, 1839, 311, 1781, 195, 1776, 1784, 1837, 353,
	1947, 1955, 177, 198, 313, 1970, 1811, 1828, 245, 0,
	392, 1923, 467, 496, 278, 0, 1904, 391, 315, 460,
	1938, 2001, 466, 1840, 442, 476, 481, 271, 1880, 234,
	420, 261, 254, 1819, 1960, 1765, 284, 375, 249, 306,
	1858, 1929, 1812, 241, 1941, 1912, 1975, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1971, 1954,
	1977, 1805, 1785, 1796, 1786, 1827, 2003, 293, 285, 1978,
	1976, 1830, 361, 224, 1893, 1886, 1873, 1951, 470, 2027,
	257, 1956, 472, 180, 406, 405, 1843, 292, 1957, 181,
	170, 385, 182, 302, 204, 1982, 485, 220, 309, 450,
	495, 277, 352, 1925, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1953, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 2009, 322, 266, 270,
	286, 297, 1924, 389, 427, 473, 1915, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1949, 216, 237, 428, 210, 1997,
	1972, 1906, 1861, 1867, 1767, 0, 209, 1862, 1863, 1864,
	1865, 1866, 1945, 1816, 1832, 1804, 1919, 1803, 281, 1936,
	463, 464, 246, 1779, 2017, 211, 1780, 2016, 349, 356,
	348, 2020, 2018, 459, 1998, 1907, 1892, 1890, 1772, 1996,
	1905, 1891, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1894, 425, 320, 0, 206, 0, 424,
	2007, 2033, 439, 226, 1798, 1964, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1940,
	2030, 360, 393, 233, 469, 421, 262, 1794, 0, 1797,
	1792, 1795, 1793, 1898, 1899, 2012, 2013, 2014, 1952, 1787,
	0, 0, 1990, 1991, 0, 1885, 2000, 1773, 0, 1968,
	188, 189, 174, 179, 1932, 2028, 1845, 242, 0, 1769,
	1770, 1771, 0, 1875, 1876, 0, 0, 1986, 1985, 1984,
	1987, 0, 2021, 2019, 2022, 1788, 1809, 1831, 1881, 1882,
	1884, 1916, 1917, 1962, 1935, 1944, 1818, 1877, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1903,
	199, 212, 312, 2029, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1965, 1910, 0, 1849, 1851,
	1850, 1800, 1802, 1801, 1799, 2032, 346, 1992, 1756, 1764,
	1791, 1807, 1814, 1822, 1833, 1834, 1842, 1848, 1860, 1870,
	1871, 1887, 1901, 1902, 1909, 1939, 1942, 1959, 1967, 1974,
	1979, 1981, 471, 252, 1883, 1908, 1946, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	1856, 196, 0, 0, 202, 0, 203, 205, 1841, 201,
	1988, 2024, 1920, 1934, 900, 1042, 0, 0, 448, 1109,
	1046, 887, 910, 1056, 916, 918, 983, 862, 958, 357,
	907, 863, 0, 0, 854, 1104, 855, 888, 259, 1102,
	1016, 961, 1044, 944, 976, 986, 258, 244, 951, 950,
	1033, 899, 898, 981, 1029, 1043, 0, 0, 172, 477,
	190, 1142, 314, 0, 0, 475, 423, 339, 0, 0,
	942, 0, 1116, 1129, 927, 985, 874, 972, 1048, 908,
	977, 1049, 0, 0, 0, 0, 0, 0, 557, 0,
	1450, 0, 0, 1451, 0, 0, 171, 0, 1124, 1138,
	1105, 0, 937, 982, 1061, 853, 1121, 0, 858, 1093,
	0, 1034, 895, 896, 263, 0, 0, 0, 0, 0,
	0, 0, 940, 957, 1001, 924, 0, 468, 988, 997,
	1011, 917, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1120, 0, 0, 0, 868, 1089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 873, 851, 893, 1003,
	852, 850, 340, 865, 1131, 1032, 925, 301, 191, 1038,
	923, 1108, 991, 869, 1020, 1054, 911, 311, 867, 195,
	864, 870, 909, 353, 1000, 1006, 177, 198, 313, 1017,
	889, 902, 245, 0, 392, 978, 467, 1088, 278, 0,
	964, 391, 315, 460, 992, 1040, 466, 912, 442, 476,
	481, 271, 945, 234, 420, 261, 254, 894, 1010, 857,
	284, 375, 249, 306, 928, 984, 890, 241, 995, 971,
	1022, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1018, 1005, 1024, 885, 871, 877, 872, 901,
	1041, 293, 285, 1025, 1023, 903, 361, 224, 955, 948,
	941, 1127, 470, 1057, 257, 1007, 472, 180, 406, 405,
	915, 292, 1008, 181, 170, 385, 182, 302, 204, 1028,
	485, 220, 309, 450, 1087, 277, 352, 980, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 1004, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	1047, 322, 266, 270, 286, 297, 979, 389, 427, 473,
	973, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1002, 216,
	237, 428, 210, 1036, 1019, 966, 930, 936, 859, 0,
	209, 931, 932, 933, 934, 935, 998, 892, 904, 884,
	974, 883, 281, 990, 463, 464, 246, 1094, 1051, 211,
	866, 1050, 349, 356, 348, 1053, 1052, 459, 1037, 967,
	954, 952, 860, 1035, 965, 953, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 956, 425, 320,
	0, 206, 0, 424, 1045, 1063, 439, 226, 878, 1012,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 994, 1060, 360, 393, 233, 469, 421,
	262, 1099, 0, 1101, 1097, 1100, 1098, 1117, 1118, 1139,
	1140, 1141, 1128, 1095, 192, 193, 1136, 1137, 194, 947,
	1039, 861, 0, 1015, 188, 189, 174, 179, 987, 1058,
	1107, 242, 164, 1090, 1091, 1092, 165, 1111, 1112, 167,
	168, 1134, 1133, 1132, 1135, 169, 1144, 1143, 1145, 1096,
	1103, 1106, 1113, 1114, 1115, 1122, 1123, 1130, 1125, 1126,
	0, 943, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1119, 199, 212, 312, 1059, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1013,
	970, 0, 920, 922, 921, 880, 882, 881, 879, 1062,
	346, 1031, 849, 856, 875, 886, 891, 897, 905, 906,
	914, 919, 929, 938, 939, 949, 962, 963, 969, 993,
	996, 1009, 1014, 1021, 1026, 1027, 471, 252, 946, 968,
	999, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 926, 196, 0, 0, 202, 0,
	203, 205, 913, 201, 1030, 1055, 975, 989, 900, 1042,
	0, 0, 448, 1109, 1046, 887, 910, 1056, 916, 918,
	983, 862, 958, 357, 907, 863, 0, 0, 854, 1104,
	855, 888, 259, 1102, 1016, 961, 1044, 944, 976, 986,
	258, 244, 951, 950, 1033, 899, 898, 981, 1029, 1043,
	0, 0, 172, 477, 190, 1142, 314, 0, 0, 475,
	423, 339, 0, 0, 942, 0, 1116, 1129, 927, 985,
	874, 972, 1048, 908, 977, 1049, 0, 0, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1124, 1138, 1105, 0, 937, 982, 1061, 853,
	1121, 0, 858, 1093, 0, 1034, 895, 896, 263, 0,
	0, 0, 0, 0, 0, 0, 940, 957, 1001, 924,
	0, 468, 988, 997, 1011, 917, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 868, 1089, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 0,
	873, 851, 893, 1003, 852, 850, 340, 865, 1131, 1032,
	925, 301, 191, 1038, 923, 1108, 991, 869, 1020, 1054,
	911, 311, 867, 195, 864, 870, 909, 353, 1000, 1006,
	177, 198, 313, 1017, 889, 902, 245, 0, 392, 978,
	467, 1088, 278, 0, 964, 391, 315, 460, 992, 1040,
	466, 912, 442, 476, 481, 271, 945, 234, 420, 261,
	254, 894, 1010, 857, 284, 375, 249, 306, 928, 984,
	890, 241, 995, 971, 1022, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1018, 1005, 1024, 885,
	871, 877, 872, 901, 1041, 293, 285, 1025, 1023, 903,
	361, 224, 955, 948, 941, 1127, 470, 1057, 257, 1007,
	472, 180, 406, 405, 915, 292, 1008, 181, 170, 385,
	182, 302, 204, 1028, 485, 220, 309, 450, 1087, 277,
	352, 980, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 1004, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 1047, 322, 266, 270, 286, 297,
	979, 389, 427, 473, 973, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1002, 216, 237, 428, 210, 1036, 1019, 966,
	930, 936, 859, 0, 209, 931, 932, 933, 934, 935,
	998, 892, 904, 884, 974, 883, 281, 990, 463, 464,
	246, 1094, 1051, 211, 866, 1050, 349, 356, 348, 1053,
	1052, 459, 1037, 967, 954, 952, 860, 1035, 965, 953,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 956, 425, 320, 0, 206, 0, 424, 1045, 1063,
	439, 226, 878, 1012, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 994, 1060, 360,
	393, 233, 469, 421, 262, 1099, 0, 1101, 1097, 1100,
	1098, 1117, 1118, 1139, 1140, 1141, 1128, 1095, 192, 193,
	1136, 1137, 194, 947, 1039, 861, 0, 1015, 188, 189,
	174, 179, 987, 1058, 1107, 242, 164, 1090, 1091, 1092,
	165, 1111, 1112, 167, 168, 1134, 1133, 1132, 1135, 169,
	1144, 1143, 1145, 1096, 1103, 1106, 1113, 1114, 1115, 1122,
	1123, 1130, 1125, 1126, 0, 943, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1119, 199, 212,
	312, 1059, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1013, 970, 0, 920, 922, 921, 880,
	882, 881, 879, 1062, 346, 1031, 849, 856, 875, 886,
	891, 897, 905, 906, 914, 919, 929, 938, 939, 949,
	962, 963, 969, 993, 996, 1009, 1014, 1021, 1026, 1027,
	471, 252, 946, 968, 999, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 926, 196,
	0, 0, 202, 0, 203, 205, 913, 201, 1030, 1055,
	975, 989, 900, 1042, 0, 0, 448, 1109, 1046, 887,
	910, 1056, 916, 918, 983, 862, 958, 357, 907, 863,
	0, 0, 854, 1104, 855, 888, 259, 1102, 1016, 961,
	1044, 944, 976, 986, 258, 244, 951, 950, 1033, 899,
	898, 981, 1029, 1043, 0, 0, 172, 477, 190, 1142,
	314, 0, 0, 475, 423, 339, 0, 0, 942, 0,
	1116, 1129, 927, 985, 874, 972, 1048, 908, 977, 1049,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1124, 1138, 1105, 0,
	937, 982, 1061, 853, 1121, 0, 858, 1093, 0, 1034,
	895, 896, 263, 0, 0, 0, 0, 0, 0, 0,
	940, 957, 1001, 924, 0, 468, 988, 997, 1011, 917,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 868, 1089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 873, 851, 893, 1003, 852, 850,
	340, 865, 1131, 1032, 925, 301, 191, 1038, 923, 1108,
	991, 869, 1020, 1054, 911, 311, 867, 195, 864, 870,
	909, 353, 1000, 1006, 177, 198, 313, 1017, 889, 902,
	245, 0, 392, 978, 467, 1088, 278, 0, 964, 391,
	315, 460, 992, 1040, 466, 912, 442, 476, 481, 271,
	945, 234, 420, 261, 254, 894, 1010, 857, 284, 375,
	249, 306, 928, 984, 890, 241, 995, 971, 1022, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1018, 1005, 1024, 885, 871, 877, 872, 901, 1041, 293,
	285, 1025, 1023, 903, 361, 224, 955, 948, 941, 1127,
	470, 1057, 257, 1007, 472, 180, 406, 405, 915, 292,
	1008, 181, 170, 385, 182, 302, 204, 1028, 485, 220,
	309, 450, 1087, 277, 352, 980, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 1004, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 1047, 322,
	266, 270, 286, 297, 979, 389, 427, 473, 973, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1002, 216, 237, 428,
	210, 1036, 1019, 966, 930, 936, 859, 0, 209, 931,
	932, 933, 934, 935, 998, 892, 904, 884, 974, 883,
	281, 990, 463, 464, 246, 1094, 1051, 211, 1082, 1050,
	349, 356, 348, 1053, 1052, 459, 1037, 967, 954, 952,
	860, 1035, 965, 953, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 1078, 956, 425, 320, 0, 206,
	0, 424, 1045, 1063, 439, 226, 878, 1012, 454, 178,
	381, 227, 279, 267, 372, 1083, 1081, 1072, 1073, 308,
	316, 994, 1060, 360, 393, 233, 469, 421, 262, 1099,
	0, 1101, 1097, 1100, 1098, 1117, 1118, 1139, 1140, 1141,
	1128, 1095, 192, 193, 1136, 1137, 194, 947, 1039, 861,
	0, 1015, 188, 189, 174, 179, 987, 1058, 1107, 242,
	164, 1090, 1091, 1092, 165, 1111, 1112, 167, 168, 1134,
	1133, 1132, 1135, 169, 1144, 1143, 1145, 1096, 1103, 1106,
	1113, 1114, 1115, 1122, 1123, 1130, 1125, 1126, 0, 943,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1119, 199, 212, 312, 1059, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1013, 970, 0,
	920, 922, 921, 880, 882, 881, 879, 1062, 346, 1031,
	849, 856, 875, 886, 891, 897, 905, 906, 914, 919,
	929, 938, 939, 949, 962, 963, 969, 993, 996, 1009,
	1014, 1021, 1026, 1027, 471, 252, 946, 968, 999, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 1079, 1080, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 926, 196, 0, 0, 202, 0, 203, 205,
	913, 201, 1030, 1055, 975, 989, 900, 1042, 0, 0,
	448, 1109, 1046, 887, 910, 1056, 916, 918, 983, 862,
	958, 357, 907, 863, 0, 0, 854, 1104, 855, 888,
	259, 1102, 1016, 961, 1044, 944, 976, 986, 258, 244,
	951, 950, 1033, 899, 898, 981, 1029, 1043, 0, 0,
	172, 477, 190, 1142, 314, 0, 0, 475, 423, 339,
	0, 0, 942, 0, 1116, 1129, 927, 985, 874, 972,
	1048, 908, 977, 1049, 0, 0, 0, 0, 0, 0,
	557, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1124, 1138, 1105, 0, 937, 982, 1061, 853, 1121, 0,
	858, 1093, 0, 1034, 895, 896, 263, 0, 0, 0,
	0, 0, 0, 0, 940, 957, 1001, 924, 0, 468,
	988, 997, 1011, 917, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1120, 0, 0, 0,
	868, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 873, 851,
	893, 1003, 852, 850, 340, 865, 1131, 1032, 925, 301,
	191, 1038, 923, 1108, 991, 869, 1020, 1054, 911, 311,
	867, 195, 864, 870, 909, 353, 1000, 1006, 177, 198,
	313, 1017, 889, 902, 245, 0, 392, 978, 467, 1088,
	278, 0, 964, 391, 315, 460, 992, 1040, 466, 912,
	442, 476, 481, 271, 945, 234, 420, 261, 254, 894,
	1010, 857, 284, 375, 249, 306, 928, 984, 890, 241,
	995, 971, 1022, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1018, 1005, 1024, 885, 871, 877,
	872, 901, 1041, 293, 285, 1025, 1023, 903, 361, 224,
	955, 948, 941, 1127, 470, 1057, 257, 1007, 472, 180,
	406, 405, 915, 292, 1008, 181, 170, 385, 182, 302,
	204, 1028, 485, 220, 309, 450, 1087, 277, 352, 980,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	1004, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 1047, 322, 266, 270, 286, 297, 979, 389,
	427, 473, 973, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 1616, 229, 407, 410, 484,
	1002, 216, 237, 428, 210, 1036, 1019, 966, 930, 936,
	859, 0, 209, 931, 932, 933, 934, 935, 998, 892,
	904, 884, 974, 883, 281, 990, 463, 464, 246, 1094,
	1051, 211, 866, 1050, 349, 356, 348, 1053, 1052, 459,
	1037, 967, 954, 952, 860, 1035, 965, 953, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 956,
	425, 320, 0, 206, 0, 424, 1045, 1063, 439, 226,
	878, 1012, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 994, 1060, 360, 393, 233,
	469, 421, 262, 1099, 0, 1101, 1097, 1100, 1098, 1117,
	1118, 1139, 1140, 1141, 1128, 1095, 192, 193, 1136, 1137,
	194, 947, 1039, 861, 0, 1015, 188, 189, 174, 179,
	987, 1058, 1107, 242, 164, 1090, 1091, 1092, 165, 1111,
	1112, 167, 168, 1134, 1133, 1132, 1135, 169, 1144, 1143,
	1145, 1096, 1103, 1106, 1113, 1114, 1115, 1122, 1123, 1130,
	1125, 1126, 0, 943, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1119, 199, 212, 312, 1059,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1013, 970, 0, 920, 922, 921, 880, 882, 881,
	879, 1062, 346, 1031, 849, 856, 875, 886, 891, 897,
	905, 906, 914, 919, 929, 938, 939, 949, 962, 963,
	969, 993, 996, 1009, 1014, 1021, 1026, 1027, 471, 252,
	946, 968, 999, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 926, 196, 0, 0,
	202, 0, 203, 205, 913, 201, 1030, 1055, 975, 989,
	900, 1042, 0, 0, 448, 1109, 1046, 887, 910, 1056,
	916, 918, 983, 862, 958, 357, 907, 863, 0, 0,
	854, 1104, 855, 888, 259, 1102, 1016, 961, 1044, 944,
	976, 986, 258, 244, 951, 950, 1033, 899, 898, 981,
	1029, 1043, 0, 0, 172, 477, 190, 1142, 314, 0,
	0, 475, 423, 339, 0, 0, 942, 0, 1116, 1129,
	927, 985, 874, 972, 1048, 908, 977, 1049, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1124, 1138, 1105, 0, 937, 982,
	1061, 853, 1121, 0, 858, 1093, 0, 1034, 895, 896,
	263, 0, 0, 0, 0, 0, 0, 0, 940, 957,
	1001, 924, 0, 468, 988, 997, 1011, 917, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1120, 0, 0, 0, 868, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 0,
	0, 0, 873, 851, 893, 1003, 852, 850, 340, 865,
	1131, 1032, 925, 301, 191, 1038, 923, 1108, 991, 869,
	1020, 1054, 911, 311, 867, 195, 864, 870, 909, 353,
	1000, 1006, 177, 198, 313, 1017, 889, 902, 245, 0,
	392, 978, 467, 1088, 278, 0, 964, 391, 315, 460,
	992, 1040, 466, 912, 442, 476, 481, 271, 945, 234,
	420, 261, 254, 894, 1010, 857, 284, 375, 249, 306,
	928, 984, 890, 241, 995, 971, 1022, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1018, 1005,
	1024, 885, 871, 877, 872, 901, 1041, 293, 285, 1025,
	1023, 903, 361, 224, 955, 948, 941, 1127, 470, 1057,
	257, 1007, 472, 180, 406, 405, 915, 292, 1008, 181,
	170, 385, 182, 302, 204, 1028, 485, 220, 309, 450,
	1087, 277, 352, 980, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 1004, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 1047, 322, 266, 270,
	286, 297, 979, 389, 427, 473, 973, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 1069,
	229, 407, 410, 484, 1002, 216, 237, 428, 210, 1036,
	1019, 966, 930, 936, 859, 0, 209, 931, 932, 933,
	934, 935, 998, 892, 904, 884, 974, 883, 281, 990,
	463, 464, 246, 1094, 1051, 211, 1082, 1050, 349, 356,
	348, 1053, 1052, 459, 1037, 967, 954, 952, 860, 1035,
	965, 953, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 1078, 956, 425, 320, 0, 206, 0, 424,
	1045, 1063, 439, 226, 878, 1012, 454, 178, 381, 227,
	279, 267, 372, 1083, 1081, 1072, 1073, 308, 316, 994,
	1060, 360, 393, 233, 469, 421, 262, 1099, 0, 1101,
	1097, 1100, 1098, 1117, 1118, 1139, 1140, 1141, 1128, 1095,
	192, 193, 1136, 1137, 194, 947, 1039, 861, 0, 1015,
	188, 189, 174, 179, 987, 1058, 1107, 242, 164, 1090,
	1091, 1092, 165, 1111, 1112, 167, 168, 1134, 1133, 1132,
	1135, 169, 1144, 1143, 1145, 1096, 1103, 1106, 1113, 1114,
	1115, 1122, 1123, 1130, 1125, 1126, 0, 943, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1119,
	199, 212, 312, 1059, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1013, 970, 0, 920, 922,
	921, 880, 882, 881, 879, 1062, 346, 1031, 849, 856,
	875, 886, 891, 897, 905, 906, 914, 919, 929, 938,
	939, 949, 962, 963, 969, 993, 996, 1009, 1014, 1021,
	1026, 1027, 471, 252, 946, 968, 999, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 1079, 1080, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	926, 196, 0, 0, 202, 0, 203, 205, 913, 201,
	1030, 1055, 975, 989, 1825, 2004, 0, 1966, 448, 1859,
	2008, 1808, 1838, 2026, 1844, 1847, 1928, 1774, 1897, 357,
	1835, 1775, 1758, 1813, 1762, 1826, 1763, 1810, 259, 1806,
	1969, 1900, 2006, 1879, 1921, 1931, 258, 244, 1889, 1888,
	1994, 1824, 1823, 1926, 1983, 2005, 1878, 0, 0, 477,
	0, 2015, 314, 1980, 0, 475, 423, 339, 0, 0,
	1874, 1989, 1895, 1958, 1857, 1930, 1790, 1913, 2010, 1836,
	1922, 2011, 0, 0, 0, 0, 0, 3161, 3166, 0,
	3169, 3171, 3170, 0, 0, 0, 3163, 0, 1918, 2002,
	1829, 0, 1869, 1927, 2031, 1761, 1914, 0, 1766, 1777,
	2025, 1995, 1820, 1821, 263, 0, 0, 0, 0, 0,
	0, 0, 1872, 1896, 1948, 1854, 0, 468, 1933, 1943,
	1961, 1846, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 1911, 0, 0, 0, 1782, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 1789, 1759, 1817, 1950,
	1760, 1757, 340, 1778, 1963, 1993, 1855, 301, 0, 1999,
	1853, 1852, 1937, 1783, 1973, 2023, 1839, 311, 1781, 195,
	1776, 1784, 1837, 353, 1947, 1955, 0, 198, 313, 1970,
	1811, 1828, 245, 0, 392, 1923, 467, 0, 278, 0,
	1904, 391, 315, 460, 1938, 2001, 466, 1840, 442, 476,
	481, 271, 1880, 234, 420, 261, 254, 1819, 1960, 1765,
	284, 375, 249, 306, 1858, 1929, 1812, 241, 1941, 1912,
	1975, 419, 457, 200, 334, 458, 480, 3164, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1971, 1954, 1977, 1805, 1785, 1796, 1786, 1827,
	2003, 293, 285, 1978, 1976, 1830, 361, 224, 1893, 1886,
	1873, 1951, 470, 2027, 257, 1956, 472, 0, 406, 405,
	1843, 292, 1957, 0, 0, 385, 3165, 302, 204, 1982,
	485, 220, 309, 450, 0, 277, 352, 1925, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1953, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	2009, 322, 266, 270, 286, 297, 1924, 389, 427, 473,
	1915, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1949, 216,
	237, 428, 210, 1997, 1972, 1906, 1861, 1867, 1767, 0,
	209, 1862, 1863, 1864, 1865, 1866, 1945, 1816, 1832, 1804,
	1919, 1803, 281, 1936, 463, 464, 246, 1779, 2017, 211,
	1780, 2016, 349, 356, 348, 2020, 2018, 459, 1998, 1907,
	1892, 1890, 1772, 1996, 1905, 1891, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1894, 425, 320,
	0, 206, 0, 424, 2007, 2033, 439, 226, 1798, 1964,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1940, 2030, 360, 393, 233, 469, 421,
	262, 1794, 0, 1797, 1792, 1795, 1793, 1898, 1899, 2012,
	2013, 2014, 1952, 1787, 0, 0, 1990, 1991, 0, 1885,
	2000, 1773, 0, 1968, 0, 0, 0, 0, 1932, 2028,
	1845, 242, 0, 1769, 1770, 1771, 0, 1875, 1876, 0,
	0, 1986, 1985, 1984, 1987, 0, 2021, 2019, 2022, 1788,
	1809, 1831, 1881, 1882, 1884, 1916, 1917, 1962, 1935, 1944,
	1818, 1877, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1903, 199, 212, 312, 2029, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1965,
	1910, 0, 1849, 1851, 1850, 1800, 1802, 1801, 1799, 2032,
	346, 1992, 1756, 1764, 1791, 1807, 1814, 1822, 1833, 1834,
	1842, 1848, 1860, 1870, 1871, 1887, 1901, 1902, 1909, 1939,
	1942, 1959, 1967, 1974, 1979, 1981, 471, 252, 1883, 1908,
	1946, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 1856, 196, 0, 0, 202, 0,
	203, 205, 1841, 201, 1988, 2024, 1920, 1934, 1825, 2004,
	0, 1966, 448, 1859, 2008, 1808, 1838, 2026, 1844, 1847,
	1928, 1774, 1897, 357, 1835, 1775, 1758, 1813, 1762, 1826,
	1763, 1810, 259, 1806, 1969, 1900, 2006, 1879, 1921, 1931,
	258, 244, 1889, 1888, 1994, 1824, 1823, 1926, 1983, 2005,
	1878, 0, 0, 477, 0, 2015, 314, 1980, 0, 475,
	423, 339, 0, 0, 1874, 1989, 1895, 1958, 1857, 1930,
	1790, 1913, 2010, 1836, 1922, 2011, 0, 0, 0, 0,
	0, 3964, 3166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1918, 2002, 1829, 0, 1869, 1927, 2031, 1761,
	1914, 0, 1766, 1777, 2025, 1995, 1820, 1821, 263, 0,
	0, 0, 0, 0, 0, 0, 1872, 1896, 1948, 1854,
	0, 468, 1933, 1943, 1961, 1846, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 1911, 0,
	0, 0, 1782, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	1789, 1759, 1817, 1950, 1760, 1757, 340, 1778, 1963, 1993,
	1855, 301, 0, 1999, 1853, 1852, 1937, 1783, 1973, 2023,
	1839, 311, 1781, 195, 1776, 1784, 1837, 353, 1947, 1955,
	0, 198, 313, 1970, 1811, 1828, 245, 0, 392, 1923,
	467, 0, 278, 0, 1904, 391, 315, 460, 1938, 2001,
	466, 1840, 442, 476, 481, 271, 1880, 234, 420, 261,
	254, 1819, 1960, 1765, 284, 375, 249, 306, 1858, 1929,
	1812, 241, 1941, 1912, 1975, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1971, 1954, 1977, 1805,
	1785, 1796, 1786, 1827, 2003, 293, 285, 1978, 1976, 1830,
	361, 224, 1893, 1886, 1873, 1951, 470, 2027, 257, 1956,
	472, 0, 406, 405, 1843, 292, 1957, 0, 0, 385,
	0, 302, 204, 1982, 485, 220, 309, 450, 0, 277,
	352, 1925, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1953, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 2009, 322, 266, 270, 286, 297,
	1924, 389, 427, 473, 1915, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1949, 216, 237, 428, 210, 1997, 1972, 1906,
	1861, 1867, 1767, 0, 209, 1862, 1863, 1864, 1865, 1866,
	1945, 1816, 1832, 1804, 1919, 1803, 281, 1936, 463, 464,
	246, 1779, 2017, 211, 1780, 2016, 349, 356, 348, 2020,
	2018, 459, 1998, 1907, 1892, 1890, 1772, 1996, 1905, 1891,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1894, 425, 320, 0, 206, 0, 424, 2007, 2033,
	439, 226, 1798, 1964, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1940, 2030, 360,
	393, 233, 469, 421, 262, 1794, 0, 1797, 1792, 1795,
	1793, 1898, 1899, 2012, 2013, 2014, 1952, 1787, 0, 0,
	1990, 1991, 0, 1885, 2000, 1773, 0, 1968, 0, 0,
	0, 0, 1932, 2028, 1845, 242, 0, 1769, 1770, 1771,
	0, 1875, 1876, 0, 0, 1986, 1985, 1984, 1987, 0,
	2021, 2019, 2022, 1788, 1809, 1831, 1881, 1882, 1884, 1916,
	1917, 1962, 1935, 1944, 1818, 1877, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1903, 199, 212,
	312, 2029, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1965, 1910, 0, 1849, 1851, 1850, 1800,
	1802, 1801, 1799, 2032, 346, 1992, 1756, 1764, 1791, 1807,
	1814, 1822, 1833, 1834, 1842, 1848, 1860, 1870, 1871, 1887,
	1901, 1902, 1909, 1939, 1942, 1959, 1967, 1974, 1979, 1981,
	471, 252, 1883, 1908, 1946, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 1856, 196,
	0, 0, 202, 0, 203, 205, 1841, 201, 1988, 2024,
	1920, 1934, 1825, 2004, 0, 1966, 448, 1859, 2008, 1808,
	1838, 2026, 1844, 1847, 1928, 1774, 1897, 357, 1835, 1775,
	1758, 1813, 1762, 1826, 1763, 1810, 259, 1806, 1969, 1900,
	2006, 1879, 1921, 1931, 258, 244, 1889, 1888, 1994, 1824,
	1823, 1926, 1983, 2005, 1878, 0, 0, 477, 0, 2015,
	314, 1980, 0, 475, 423, 339, 0, 0, 1874, 1989,
	1895, 1958, 1857, 1930, 1790, 1913, 2010, 1836, 1922, 2011,
	0, 0, 0, 0, 0, 0, 1161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1918, 2002, 1829, 0,
	1869, 1927, 2031, 1761, 1914, 0, 1766, 1777, 2025, 1995,
	1820, 1821, 263, 0, 0, 0, 0, 0, 0, 0,
	1872, 1896, 1948, 1854, 0, 468, 1933, 1943, 1961, 1846,
	376, 283, 0, 0, 0, 0, 0, 0, 3916, 0,
	1815, 0, 1911, 0, 0, 0, 1782, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 1789, 1759, 1817, 1950, 1760, 1757,
	340, 1778, 1963, 1993, 1855, 301, 0, 1999, 1853, 1852,
	1937, 1783, 1973, 2023, 1839, 311, 1781, 195, 1776, 1784,
	1837, 353, 1947, 1955, 0, 198, 313, 1970, 1811, 1828,
	245, 0, 392, 1923, 467, 0, 278, 0, 1904, 391,
	315, 460, 1938, 2001, 466, 1840, 442, 476, 481, 271,
	1880, 234, 420, 261, 254, 1819, 1960, 1765, 284, 375,
	249, 306, 1858, 1929, 1812, 241, 1941, 1912, 1975, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1971, 1954, 1977, 1805, 1785, 1796, 1786, 1827, 2003, 293,
	285, 1978, 1976, 1830, 361, 224, 1893, 1886, 1873, 1951,
	470, 2027, 257, 1956, 472, 0, 406, 405, 1843, 292,
	1957, 0, 0, 385, 0, 302, 204, 1982, 485, 220,
	309, 450, 0, 277, 352, 1925, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1953, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2009, 322,
	266, 270, 286, 297, 1924, 389, 427, 473, 1915, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1949, 216, 237, 428,
	210, 1997, 1972, 1906, 1861, 1867, 1767, 0, 209, 1862,
	1863, 1864, 1865, 1866, 1945, 1816, 1832, 1804, 1919, 1803,
	281, 1936, 463, 464, 246, 1779, 2017, 211, 1780, 2016,
	349, 356, 348, 2020, 2018, 459, 1998, 1907, 1892, 1890,
	1772, 1996, 1905, 1891, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1894, 425, 320, 0, 206,
	0, 424, 2007, 2033, 439, 226, 1798, 1964, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1940, 2030, 360, 393, 233, 469, 421, 262, 1794,
	0, 1797, 1792, 1795, 1793, 1898, 1899, 2012, 2013, 2014,
	1952, 1787, 0, 0, 1990, 1991, 0, 1885, 2000, 1773,
	0, 1968, 0, 0, 0, 0, 1932, 2028, 1845, 242,
	0, 1769, 1770, 1771, 0, 1875, 1876, 0, 0, 1986,
	1985, 1984, 1987, 0, 2021, 2019, 2022, 1788, 1809, 1831,
	1881, 1882, 1884, 1916, 1917, 1962, 1935, 1944, 1818, 1877,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1903, 199, 212, 312, 2029, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1965, 1910, 0,
	1849, 1851, 1850, 1800, 1802, 1801, 1799, 2032, 346, 1992,
	1756, 1764, 1791, 1807, 1814, 1822, 1833, 1834, 1842, 1848,
	1860, 1870, 1871, 1887, 1901, 1902, 1909, 1939, 1942, 1959,
	1967, 1974, 1979, 1981, 471, 252, 1883, 1908, 1946, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1856, 196, 0, 0, 202, 0, 203, 205,
	1841, 201, 1988, 2024, 1920, 1934, 1825, 2004, 0, 1966,
	448, 1859, 2008, 1808, 1838, 2026, 1844, 1847, 1928, 1774,
	1897, 357, 1835, 1775, 1758, 1813, 1762, 1826, 1763, 1810,
	259, 1806, 1969, 1900, 2006, 1879, 1921, 1931, 258, 244,
	1889, 1888, 1994, 1824, 1823, 1926, 1983, 2005, 1878, 0,
	0, 477, 0, 2015, 314, 1980, 0, 475, 423, 339,
	0, 0, 1874, 1989, 1895, 1958, 1857, 1930, 1790, 1913,
	2010, 1836, 1922, 2011, 0, 0, 0, 0, 0, 0,
	1161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1918, 2002, 1829, 0, 1869, 1927, 2031, 1761, 1914, 0,
	1766, 1777, 2025, 1995, 1820, 1821, 263, 0, 0, 0,
	0, 0, 0, 0, 1872, 1896, 1948, 1854, 0, 468,
	1933, 1943, 1961, 1846, 376, 283, 0, 0, 0, 0,
	0, 0, 3216, 0, 1815, 0, 1911, 0, 0, 0,
	1782, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 1789, 1759,
	1817, 1950, 1760, 1757, 340, 1778, 1963, 1993, 1855, 301,
	0, 1999, 1853, 1852, 1937, 1783, 1973, 2023, 1839, 311,
	1781, 195, 1776, 1784, 1837, 353, 1947, 1955, 0, 198,
	313, 1970, 1811, 1828, 245, 0, 392, 1923, 467, 0,
	278, 0, 1904, 391, 315, 460, 1938, 2001, 466, 1840,
	442, 476, 481, 271, 1880, 234, 420, 261, 254, 1819,
	1960, 1765, 284, 375, 249, 306, 1858, 1929, 1812, 241,
	1941, 1912, 1975, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1971, 1954, 1977, 1805, 1785, 1796,
	1786, 1827, 2003, 293, 285, 1978, 1976, 1830, 361, 224,
	1893, 1886, 1873, 1951, 470, 2027, 257, 1956, 472, 0,
	406, 405, 1843, 292, 1957, 0, 0, 385, 0, 302,
	204, 1982, 485, 220, 309, 450, 0, 277, 352, 1925,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1953, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 2009, 322, 266, 270, 286, 297, 1924, 389,
	427, 473, 1915, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1949, 216, 237, 428, 210, 1997, 1972, 1906, 1861, 1867,
	1767, 0, 209, 1862, 1863, 1864, 1865, 1866, 1945, 1816,
	1832, 1804, 1919, 1803, 281, 1936, 463, 464, 246, 1779,
	2017, 211, 1780, 2016, 349, 356, 348, 2020, 2018, 459,
	1998, 1907, 1892, 1890, 1772, 1996, 1905, 1891, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1894,
	425, 320, 0, 206, 0, 424, 2007, 2033, 439, 226,
	1798, 1964, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1940, 2030, 360, 393, 233,
	469, 421, 262, 1794, 0, 1797, 1792, 1795, 1793, 1898,
	1899, 2012, 2013, 2014, 1952, 1787, 0, 0, 1990, 1991,
	0, 1885, 2000, 1773, 0, 1968, 0, 0, 0, 0,
	1932, 2028, 1845, 242, 0, 1769, 1770, 1771, 0, 1875,
	1876, 0, 0, 1986, 1985, 1984, 1987, 0, 2021, 2019,
	2022, 1788, 1809, 1831, 1881, 1882, 1884, 1916, 1917, 1962,
	1935, 1944, 1818, 1877, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1903, 199, 212, 312, 2029,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1965, 1910, 0, 1849, 1851, 1850, 1800, 1802, 1801,
	1799, 2032, 346, 1992, 1756, 1764, 1791, 1807, 1814, 1822,
	1833, 1834, 1842, 1848, 1860, 1870, 1871, 1887, 1901, 1902,
	1909, 1939, 1942, 1959, 1967, 1974, 1979, 1981, 471, 252,
	1883, 1908, 1946, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 1856, 196, 0, 0,
	202, 0, 203, 205, 1841, 201, 1988, 2024, 1920, 1934,
	1825, 2004, 0, 1966, 448, 1859, 2008, 1808, 1838, 2026,
	1844, 1847, 1928, 1774, 1897, 357, 1835, 1775, 1758, 1813,
	1762, 1826, 1763, 1810, 259, 1806, 1969, 1900, 2006, 1879,
	1921, 1931, 258, 244, 1889, 1888, 1994, 1824, 1823, 1926,
	1983, 2005, 1878, 0, 0, 477, 0, 2015, 314, 1980,
	0, 475, 423, 339, 0, 0, 1874, 1989, 1895, 1958,
	1857, 1930, 1790, 1913, 2010, 1836, 1922, 2011, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1918, 2002, 1829, 0, 1869, 1927,
	2031, 1761, 1914, 0, 1766, 1777, 2025, 1995, 1820, 1821,
	263, 0, 0, 0, 0, 0, 0, 0, 1872, 1896,
	1948, 1854, 0, 468, 1933, 1943, 1961, 1846, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	1911, 0, 0, 0, 1782, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 1789, 1759, 1817, 1950, 1760, 1757, 340, 1778,
	1963, 1993, 1855, 301, 0, 1999, 1853, 1852, 1937, 1783,
	1973, 2023, 1839, 311, 1781, 195, 1776, 1784, 1837, 353,
	1947, 1955, 0, 198, 313, 1970, 1811, 1828, 245, 0,
	392, 1923, 467, 0, 278, 0, 1904, 391, 315, 460,
	1938, 2001, 466, 1840, 442, 476, 481, 271, 1880, 234,
	420, 261, 254, 1819, 1960, 1765, 284, 375, 249, 306,
	1858, 1929, 1812, 241, 1941, 1912, 1975, 419, 457, 200,
	334, 458, 480, 0, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 1971, 1954,
	1977, 1805, 1785, 1796, 1786, 1827, 2003, 293, 285, 1978,
	1976, 1830, 361, 224, 1893, 1886, 1873, 1951, 470, 2027,
	257, 1956, 472, 0, 406, 405, 1843, 292, 1957, 0,
	0, 385, 0, 302, 204, 1982, 485, 220, 309, 450,
	0, 277, 352, 1925, 362, 197, 380, 329, 331, 328,
	332, 282, 0, 0, 1953, 382, 408, 455, 222, 426,
	0, 0, 0, 398, 0, 0, 2009, 322, 266, 270,
	286, 297, 1924, 389, 427, 473, 1915, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 1949, 216, 237, 428, 210, 1997,
	1972, 1906, 1861, 1867, 1767, 0, 209, 1862, 1863, 1864,
	1865, 1866, 1945, 1816, 1832, 1804, 1919, 1803, 281, 1936,
	463, 464, 246, 1779, 2017, 211, 1780, 2016, 349, 356,
	348, 2020, 2018, 459, 1998, 1907, 1892, 1890, 1772, 1996,
	1905, 1891, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 1894, 425, 320, 0, 206, 0, 424,
	2007, 2033, 439, 226, 1798, 1964, 454, 2322, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 1940,
	2030, 360, 393, 233, 469, 421, 262, 1794, 0, 1797,
	1792, 1795, 1793, 1898, 1899, 2012, 2013, 2014, 1952, 1787,
	0, 0, 1990, 1991, 0, 1885, 2000, 1773, 0, 1968,
	0, 0, 0, 0, 1932, 2028, 1845, 242, 0, 1769,
	1770, 1771, 0, 1875, 1876, 0, 0, 1986, 1985, 1984,
	1987, 0, 2021, 2019, 2022, 1788, 1809, 1831, 1881, 1882,
	1884, 1916, 1917, 1962, 1935, 1944, 1818, 1877, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 1903,
	199, 212, 312, 2029, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 1965, 1910, 0, 1849, 1851,
	1850, 1800, 1802, 1801, 1799, 2032, 346, 1992, 1756, 1764,
	1791, 1807, 1814, 1822, 1833, 1834, 1842, 1848, 1860, 1870,
	1871, 1887, 1901, 1902, 1909, 1939, 1942, 1959, 1967, 1974,
	1979, 1981, 471, 252, 1883, 1908, 1946, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 0, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	1856, 196, 0, 0, 202, 0, 203, 205, 1841, 201,
	1988, 2024, 1920, 1934, 1825, 2004, 0, 1966, 448, 1859,
	2008, 1808, 1838, 2026, 1844, 1847, 1928, 1774, 1897, 357,
	1835, 1775, 1758, 1813, 1762, 1826, 1763, 1810, 259, 1806,
	1969, 1900, 2006, 1879, 1921, 1931, 258, 244, 1889, 1888,
	1994, 1824, 1823, 1926, 1983, 2005, 1878, 0, 0, 477,
	0, 2015, 314, 1980, 0, 475, 423, 339, 0, 0,
	1874, 1989, 1895, 1958, 1857, 1930, 1790, 1913, 2010, 1836,
	1922, 2011, 0, 0, 0, 0, 0, 0, 1161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1918, 2002,
	1829, 0, 1869, 1927, 2031, 1761, 1914, 0, 1766, 1777,
	2025, 1995, 1820, 1821, 263, 0, 0, 0, 0, 0,
	0, 0, 1872, 1896, 1948, 1854, 0, 468, 1933, 1943,
	1961, 1846, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 0, 1911, 0, 0, 0, 1782, 1768,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 1789, 1759, 1817, 1950,
	1760, 1757, 340, 1778, 1963, 1993, 1855, 301, 0, 1999,
	1853, 1852, 1937, 1783, 1973, 2023, 1839, 311, 1781, 195,
	1776, 1784, 1837, 353, 1947, 1955, 0, 198, 313, 1970,
	1811, 1828, 245, 0, 392, 1923, 467, 0, 278, 0,
	1904, 391, 315, 460, 1938, 2001, 466, 1840, 442, 476,
	481, 271, 1880, 234, 420, 261, 254, 1819, 1960, 1765,
	284, 375, 249, 306, 1858, 1929, 1812, 241, 1941, 1912,
	1975, 419, 457, 200, 334, 458, 480, 0, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 1971, 1954, 1977, 1805, 1785, 1796, 1786, 1827,
	2003, 293, 285, 1978, 1976, 1830, 361, 224, 1893, 1886,
	1873, 1951, 470, 2027, 257, 1956, 472, 0, 406, 405,
	1843, 292, 1957, 0, 0, 385, 0, 302, 204, 1982,
	485, 220, 309, 450, 0, 277, 352, 1925, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 1953, 382,
	408, 455, 222, 426, 0, 0, 0, 398, 0, 0,
	2009, 322, 266, 270, 286, 297, 1924, 389, 427, 473,
	1915, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 1949, 216,
	237, 428, 210, 1997, 1972, 1906, 1861, 1867, 1767, 0,
	209, 1862, 1863, 1864, 1865, 1866, 1945, 1816, 1832, 1804,
	1919, 1803, 281, 1936, 463, 464, 246, 1779, 2017, 211,
	1780, 2016, 349, 356, 348, 2020, 2018, 459, 1998, 1907,
	1892, 1890, 1772, 1996, 1905, 1891, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 1894, 425, 320,
	0, 206, 0, 424, 2007, 2033, 439, 226, 1798, 1964,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 1940, 2030, 360, 393, 233, 469, 421,
	262, 1794, 0, 1797, 1792, 1795, 1793, 1898, 1899, 2012,
	2013, 2014, 1952, 1787, 0, 0, 1990, 1991, 0, 1885,
	2000, 1773, 0, 1968, 0, 0, 0, 0, 1932, 2028,
	1845, 242, 0, 1769, 1770, 1771, 0, 1875, 1876, 0,
	0, 1986, 1985, 1984, 1987, 0, 2021, 2019, 2022, 1788,
	1809, 1831, 1881, 1882, 1884, 1916, 1917, 1962, 1935, 1944,
	1818, 1877, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 1903, 199, 212, 312, 2029, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 1965,
	1910, 0, 1849, 1851, 1850, 1800, 1802, 1801, 1799, 2032,
	346, 1992, 1756, 1764, 1791, 1807, 1814, 1822, 1833, 1834,
	1842, 1848, 1860, 1870, 1871, 1887, 1901, 1902, 1909, 1939,
	1942, 1959, 1967, 1974, 1979, 1981, 471, 252, 1883, 1908,
	1946, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 4084, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	0, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 1856, 196, 0, 0, 202, 0,
	203, 205, 1841, 201, 1988, 2024, 1920, 1934, 1825, 2004,
	0, 1966, 448, 1859, 2008, 1808, 1838, 2026, 1844, 1847,
	1928, 1774, 1897, 357, 1835, 1775, 1758, 1813, 1762, 1826,
	1763, 1810, 259, 1806, 1969, 1900, 2006, 1879, 1921, 1931,
	258, 244, 1889, 1888, 1994, 1824, 1823, 1926, 1983, 2005,
	1878, 0, 0, 477, 0, 2015, 314, 1980, 0, 475,
	423, 339, 0, 0, 1874, 1989, 1895, 1958, 1857, 1930,
	1790, 1913, 2010, 1836, 1922, 2011, 0, 0, 0, 0,
	0, 0, 1161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1918, 2002, 1829, 0, 1869, 1927, 2031, 1761,
	1914, 0, 1766, 1777, 2025, 1995, 1820, 1821, 263, 0,
	0, 0, 0, 0, 0, 0, 1872, 1896, 1948, 1854,
	0, 468, 1933, 1943, 1961, 1846, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 1911, 0,
	0, 0, 1782, 1768, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	1789, 1759, 1817, 1950, 1760, 1757, 340, 1778, 1963, 1993,
	1855, 301, 0, 1999, 1853, 1852, 1937, 1783, 1973, 2023,
	1839, 311, 1781, 195, 1776, 1784, 1837, 353, 1947, 1955,
	0, 198, 313, 1970, 1811, 1828, 245, 0, 392, 1923,
	467, 0, 278, 0, 1904, 391, 315, 460, 1938, 2001,
	466, 1840, 442, 476, 481, 271, 1880, 234, 420, 261,
	254, 1819, 1960, 1765, 284, 375, 249, 306, 1858, 1929,
	1812, 241, 1941, 1912, 1975, 419, 457, 200, 334, 458,
	480, 0, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 1971, 1954, 1977, 1805,
	1785, 1796, 1786, 1827, 2003, 293, 285, 1978, 1976, 1830,
	361, 224, 1893, 1886, 1873, 1951, 470, 2027, 257, 1956,
	472, 0, 406, 405, 1843, 292, 1957, 0, 0, 385,
	0, 302, 204, 1982, 485, 220, 309, 450, 0, 277,
	352, 1925, 362, 197, 380, 329, 331, 328, 332, 282,
	0, 0, 1953, 382, 408, 455, 222, 426, 0, 0,
	0, 398, 0, 0, 2009, 322, 266, 270, 286, 297,
	1924, 389, 427, 473, 1915, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 1949, 216, 237, 428, 210, 1997, 1972, 1906,
	1861, 1867, 1767, 0, 209, 1862, 1863, 1864, 1865, 1866,
	1945, 1816, 1832, 1804, 1919, 1803, 281, 1936, 463, 464,
	246, 1779, 2017, 211, 1780, 2016, 349, 356, 348, 2020,
	2018, 459, 1998, 1907, 1892, 1890, 1772, 1996, 1905, 1891,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 1894, 425, 320, 0, 206, 0, 424, 2007, 2033,
	439, 226, 1798, 1964, 454, 0, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 1940, 2030, 360,
	393, 233, 469, 421, 262, 1794, 0, 1797, 1792, 1795,
	1793, 1898, 1899, 2012, 2013, 2014, 1952, 1787, 0, 0,
	1990, 1991, 0, 1885, 2000, 1773, 0, 1968, 0, 0,
	0, 0, 1932, 2028, 1845, 242, 0, 1769, 1770, 1771,
	0, 1875, 1876, 0, 0, 1986, 1985, 1984, 1987, 0,
	2021, 2019, 2022, 1788, 1809, 1831, 1881, 1882, 1884, 1916,
	1917, 1962, 1935, 1944, 1818, 1877, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 1903, 199, 212,
	312, 2029, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 1965, 1910, 0, 1849, 1851, 1850, 1800,
	1802, 1801, 1799, 2032, 346, 1992, 1756, 1764, 1791, 1807,
	1814, 1822, 1833, 1834, 1842, 1848, 1860, 1870, 1871, 1887,
	1901, 1902, 1909, 1939, 1942, 1959, 1967, 1974, 1979, 1981,
	471, 252, 1883, 1908, 1946, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 0, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 1856, 196,
	0, 0, 202, 0, 203, 205, 1841, 201, 1988, 2024,
	1920, 1934, 1825, 2004, 0, 1966, 448, 1859, 2008, 1808,
	1838, 2026, 1844, 1847, 1928, 1774, 1897, 357, 1835, 1775,
	1758, 1813, 1762, 1826, 1763, 1810, 259, 1806, 1969, 1900,
	2006, 1879, 1921, 1931, 258, 244, 1889, 1888, 1994, 1824,
	1823, 1926, 1983, 2005, 1878, 0, 0, 477, 0, 2015,
	314, 1980, 0, 475, 423, 339, 0, 0, 1874, 1989,
	1895, 1958, 1857, 1930, 1790, 1913, 2010, 1836, 1922, 2011,
	0, 0, 0, 0, 0, 0, 4363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1918, 2002, 1829, 0,
	1869, 1927, 2031, 1761, 1914, 0, 1766, 1777, 2025, 1995,
	1820, 1821, 263, 0, 0, 0, 0, 0, 0, 0,
	1872, 1896, 1948, 1854, 0, 468, 1933, 1943, 1961, 1846,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 0, 1911, 0, 0, 0, 1782, 1768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 1789, 1759, 1817, 1950, 1760, 1757,
	340, 1778, 1963, 1993, 1855, 301, 0, 1999, 1853, 1852,
	1937, 1783, 1973, 2023, 1839, 311, 1781, 195, 1776, 1784,
	1837, 353, 1947, 1955, 0, 198, 313, 1970, 1811, 1828,
	245, 0, 392, 1923, 467, 0, 278, 0, 1904, 391,
	315, 460, 1938, 2001, 466, 1840, 442, 476, 481, 271,
	1880, 234, 420, 261, 254, 1819, 1960, 1765, 284, 375,
	249, 306, 1858, 1929, 1812, 241, 1941, 1912, 1975, 419,
	457, 200, 334, 458, 480, 0, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	1971, 1954, 1977, 1805, 1785, 1796, 4366, 4367, 4368, 293,
	285, 1978, 1976, 1830, 361, 224, 1893, 1886, 1873, 1951,
	470, 2027, 257, 1956, 472, 0, 406, 405, 1843, 292,
	1957, 0, 0, 385, 0, 302, 204, 1982, 485, 220,
	309, 450, 0, 277, 352, 1925, 362, 197, 380, 329,
	331, 328, 332, 282, 0, 0, 1953, 382, 408, 455,
	222, 426, 0, 0, 0, 398, 0, 0, 2009, 322,
	266, 270, 286, 297, 1924, 389, 427, 473, 1915, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 1949, 216, 237, 428,
	210, 1997, 1972, 1906, 1861, 1867, 1767, 0, 209, 1862,
	1863, 1864, 1865, 1866, 1945, 1816, 1832, 1804, 1919, 1803,
	281, 1936, 463, 464, 246, 1779, 2017, 211, 1780, 2016,
	349, 356, 348, 2020, 2018, 459, 1998, 1907, 1892, 1890,
	1772, 1996, 1905, 1891, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 1894, 425, 320, 0, 206,
	0, 424, 2007, 2033, 439, 226, 1798, 1964, 454, 0,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 1940, 2030, 360, 393, 233, 469, 421, 262, 1794,
	0, 1797, 1792, 1795, 1793, 1898, 1899, 2012, 2013, 2014,
	1952, 1787, 0, 0, 1990, 1991, 0, 1885, 2000, 1773,
	0, 1968, 0, 0, 0, 0, 1932, 2028, 1845, 242,
	0, 1769, 1770, 1771, 0, 1875, 1876, 0, 0, 1986,
	1985, 1984, 1987, 0, 2021, 2019, 2022, 1788, 1809, 1831,
	1881, 1882, 1884, 1916, 1917, 1962, 1935, 1944, 1818, 1877,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 1903, 199, 212, 312, 2029, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 1965, 1910, 0,
	1849, 1851, 1850, 1800, 1802, 1801, 1799, 2032, 346, 1992,
	1756, 1764, 1791, 1807, 1814, 1822, 1833, 1834, 1842, 1848,
	1860, 1870, 1871, 1887, 1901, 1902, 1909, 1939, 1942, 1959,
	1967, 1974, 1979, 1981, 471, 252, 1883, 1908, 1946, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 0, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 1856, 196, 0, 0, 202, 0, 203, 205,
	1841, 201, 1988, 2024, 1920, 1934, 1825, 2004, 0, 1966,
	448, 1859, 2008, 1808, 1838, 2026, 1844, 1847, 1928, 1774,
	1897, 357, 1835, 1775, 1758, 1813, 1762, 1826, 1763, 1810,
	259, 1806, 1969, 1900, 2006, 1879, 1921, 1931, 258, 244,
	1889, 1888, 1994, 1824, 1823, 1926, 1983, 2005, 1878, 0,
	0, 477, 0, 2015, 314, 1980, 0, 475, 423, 339,
	0, 0, 1874, 1989, 1895, 1958, 1857, 1930, 1790, 1913,
	2010, 1836, 1922, 2011, 0, 0, 0, 0, 0, 0,
	3166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1918, 2002, 1829, 0, 1869, 1927, 2031, 1761, 1914, 0,
	1766, 1777, 2025, 1995, 1820, 1821, 263, 0, 0, 0,
	0, 0, 0, 0, 1872, 1896, 1948, 1854, 0, 468,
	1933, 1943, 1961, 1846, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 0, 1911, 0, 0, 0,
	1782, 1768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 1789, 1759,
	1817, 1950, 1760, 1757, 340, 1778, 1963, 1993, 1855, 301,
	0, 1999, 1853, 1852, 1937, 1783, 1973, 2023, 1839, 311,
	1781, 195, 1776, 1784, 1837, 353, 1947, 1955, 0, 198,
	313, 1970, 1811, 1828, 245, 0, 392, 1923, 467, 0,
	278, 0, 1904, 391, 315, 460, 1938, 2001, 466, 1840,
	442, 476, 481, 271, 1880, 234, 420, 261, 254, 1819,
	1960, 1765, 284, 375, 249, 306, 1858, 1929, 1812, 241,
	1941, 1912, 1975, 419, 457, 200, 334, 458, 480, 0,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 1971, 1954, 1977, 1805, 1785, 1796,
	1786, 1827, 2003, 293, 285, 1978, 1976, 1830, 361, 224,
	1893, 1886, 1873, 1951, 470, 2027, 257, 1956, 472, 0,
	406, 405, 1843, 292, 1957, 0, 0, 385, 0, 302,
	204, 1982, 485, 220, 309, 450, 0, 277, 352, 1925,
	362, 197, 380, 329, 331, 328, 332, 282, 0, 0,
	1953, 382, 408, 455, 222, 426, 0, 0, 0, 398,
	0, 0, 2009, 322, 266, 270, 286, 297, 1924, 389,
	427, 473, 1915, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	1949, 216, 237, 428, 210, 1997, 1972, 1906, 1861, 1867,
	1767, 0, 209, 1862, 1863, 1864, 1865, 1866, 1945, 1816,
	1832, 1804, 1919, 1803, 281, 1936, 463, 464, 246, 1779,
	2017, 211, 1780, 2016, 349, 356, 348, 2020, 2018, 459,
	1998, 1907, 1892, 1890, 1772, 1996, 1905, 1891, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 1894,
	425, 320, 0, 206, 0, 424, 2007, 2033, 439, 226,
	1798, 1964, 454, 0, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 1940, 2030, 360, 393, 233,
	469, 421, 262, 1794, 0, 1797, 1792, 1795, 1793, 1898,
	1899, 2012, 2013, 2014, 1952, 1787, 0, 0, 1990, 1991,
	0, 1885, 2000, 1773, 0, 1968, 0, 0, 0, 0,
	1932, 2028, 1845, 242, 0, 1769, 1770, 1771, 0, 1875,
	1876, 0, 0, 1986, 1985, 1984, 1987, 0, 2021, 2019,
	2022, 1788, 1809, 1831, 1881, 1882, 1884, 1916, 1917, 1962,
	1935, 1944, 1818, 1877, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 1903, 199, 212, 312, 2029,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 1965, 1910, 0, 1849, 1851, 1850, 1800, 1802, 1801,
	1799, 2032, 346, 1992, 1756, 1764, 1791, 1807, 1814, 1822,
	1833, 1834, 1842, 1848, 1860, 1870, 1871, 1887, 1901, 1902,
	1909, 1939, 1942, 1959, 1967, 1974, 1979, 1981, 471, 252,
	1883, 1908, 1946, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 0, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 1856, 196, 0, 0,
	202, 0, 203, 205, 1841, 201, 1988, 2024, 1920, 1934,
	588, 448, 582, 593, 575, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 1344, 0, 0, 0, 0,
	0, 259, 0, 0, 583, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	636, 637, 0, 730, 0, 731, 733, 734, 735, 736,
	0, 0, 0, 732, 2314, 3384, 3385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 3379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 0, 574,
	573, 576, 0, 0, 0, 340, 0, 0, 0, 581,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 585, 0, 0,
	198, 313, 589, 0, 0, 245, 0, 392, 2311, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 592, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	577, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 580, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 1347, 408, 455, 222, 426, 578, 579, 586,
	587, 590, 591, 594, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 597, 598, 599, 600, 601,
	602, 603, 604, 605, 606, 607, 608, 609, 610, 611,
	612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 1659, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	2312, 2313, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 3396, 1064, 0,
	3386, 3387, 3389, 3397, 3398, 3388, 3390, 3391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 0, 0,
	3392, 3393, 3394, 3395, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	1660, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 584, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 0, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 588, 448, 582,
	593, 575, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 567, 0, 0, 0, 0, 0, 259, 0,
	0, 583, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 477,
	0, 0, 314, 0, 0, 475, 423, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	1673, 1676, 1677, 1678, 1679, 1680, 1681, 0, 1682, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 0, 1661, 1662, 1663, 1643, 1642, 1674, 1644, 1647,
	1641, 1645, 1640, 0, 0, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 0, 0, 574, 573, 576, 0,
	0, 0, 340, 0, 0, 0, 581, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 195,
	0, 0, 0, 353, 585, 0, 0, 198, 313, 589,
	0, 0, 245, 0, 392, 0, 467, 0, 278, 0,
	0, 391, 315, 460, 0, 592, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 577, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 1675, 257, 0, 472, 0, 406, 405,
	580, 292, 0, 0, 0, 385, 1664, 302, 204, 0,
	485, 220, 309, 450, 0, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 0, 0, 0, 570,
	408, 455, 222, 426, 578, 579, 586, 587, 590, 591,
	594, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 0, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	584, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 2464, 2468, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 2467, 301, 191, 0, 0, 0, 2460, 0,
	2461, 2463, 2462, 311, 1163, 195, 0, 2458, 2466, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 1157,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 1474, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1476,
	1475, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 1470, 1471, 1469, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 1472, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 0, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 448, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 477, 190, 0,
	314, 0, 497, 475, 423, 339, 500, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1161, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 0, 0, 0, 0,
	376, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 1163, 195, 0, 1159,
	0, 353, 0, 0, 177, 198, 313, 0, 0, 0,
	245, 1157, 392, 0, 467, 496, 278, 0, 0, 391,
	315, 460, 0, 0, 466, 0, 442, 476, 481, 271,
	0, 234, 420, 261, 254, 0, 0, 0, 284, 375,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 419,
	457, 200, 334, 458, 480, 166, 272, 411, 273, 441,
	264, 235, 378, 214, 304, 0, 0, 255, 299, 0,
	0, 483, 474, 225, 274, 386, 390, 367, 221, 449,
	335, 345, 238, 240, 239, 215, 412, 456, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 361, 224, 0, 0, 0, 0,
	470, 0, 257, 0, 472, 180, 406, 405, 0, 292,
	0, 181, 170, 385, 182, 302, 204, 0, 485, 220,
	309, 450, 495, 277, 352, 0, 362, 197, 380, 329,
	331, 328, 332, 282, 175, 183, 0, 382, 408, 455,
	222, 426, 173, 176, 185, 398, 186, 187, 0, 322,
	266, 270, 286, 297, 0, 389, 427, 473, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	395, 429, 446, 400, 280, 321, 323, 431, 432, 437,
	433, 434, 430, 436, 435, 396, 397, 307, 438, 208,
	440, 465, 229, 407, 410, 484, 0, 216, 237, 428,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 463, 464, 246, 0, 0, 211, 0, 0,
	349, 356, 348, 0, 0, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 269, 288, 373, 317, 374,
	289, 343, 342, 344, 319, 0, 425, 320, 0, 206,
	0, 424, 0, 0, 439, 226, 0, 0, 454, 178,
	381, 227, 279, 267, 372, 347, 218, 291, 422, 308,
	316, 0, 0, 360, 393, 233, 469, 421, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 207, 219, 230, 231, 232, 256, 253, 251, 260,
	268, 0, 0, 294, 303, 0, 318, 337, 330, 366,
	333, 0, 0, 0, 368, 387, 409, 415, 416, 443,
	444, 445, 447, 451, 452, 453, 0, 0, 0, 377,
	248, 0, 199, 212, 312, 0, 384, 276, 336, 413,
	338, 298, 247, 482, 341, 383, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 324, 325, 326, 327, 350, 351, 354, 355,
	358, 359, 363, 364, 365, 370, 371, 379, 184, 388,
	399, 401, 402, 403, 404, 414, 417, 418, 461, 462,
	478, 479, 448, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 477, 190, 0, 314, 0, 497, 475,
	423, 339, 500, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 0, 0, 0, 0, 376, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 3544, 195, 0, 0, 3543, 353, 0, 0,
	177, 198, 313, 0, 0, 0, 245, 0, 392, 0,
	467, 496, 278, 0, 0, 391, 315, 460, 0, 0,
	466, 0, 442, 476, 481, 271, 0, 234, 420, 261,
	254, 0, 0, 0, 284, 375, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 419, 457, 200, 334, 458,
	480, 166, 272, 411, 273, 441, 264, 235, 378, 214,
	304, 0, 0, 255, 299, 0, 0, 483, 474, 225,
	274, 386, 390, 367, 221, 449, 335, 345, 238, 240,
	239, 215, 412, 456, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	361, 224, 0, 0, 0, 0, 470, 0, 257, 0,
	472, 180, 406, 405, 0, 292, 0, 181, 170, 385,
	182, 302, 204, 0, 485, 220, 309, 450, 495, 277,
	352, 0, 362, 197, 380, 329, 331, 328, 332, 282,
	175, 183, 0, 382, 408, 455, 222, 426, 173, 176,
	185, 398, 186, 187, 0, 322, 266, 270, 286, 297,
	0, 389, 427, 473, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 395, 429, 446, 400,
	280, 321, 323, 431, 432, 437, 433, 434, 430, 436,
	435, 396, 397, 307, 438, 208, 440, 465, 229, 407,
	410, 484, 0, 216, 237, 428, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 463, 464,
	246, 0, 0, 211, 0, 0, 349, 356, 348, 0,
	0, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 269, 288, 373, 317, 374, 289, 343, 342, 344,
	319, 0, 425, 320, 0, 206, 0, 424, 0, 0,
	439, 226, 0, 0, 454, 178, 381, 227, 279, 267,
	372, 347, 218, 291, 422, 308, 316, 0, 0, 360,
	393, 233, 469, 421, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	0, 0, 194, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 207, 219, 230,
	231, 232, 256, 253, 251, 260, 268, 0, 0, 294,
	303, 0, 318, 337, 330, 366, 333, 0, 0, 0,
	368, 387, 409, 415, 416, 443, 444, 445, 447, 451,
	452, 453, 0, 0, 0, 377, 248, 0, 199, 212,
	312, 0, 384, 276, 336, 413, 338, 298, 247, 482,
	341, 383, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 324, 325,
	326, 327, 350, 351, 354, 355, 358, 359, 363, 364,
	365, 370, 371, 379, 184, 388, 399, 401, 402, 403,
	404, 414, 417, 418, 461, 462, 478, 479, 448, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 477,
	190, 0, 314, 0, 497, 475, 423, 339, 500, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3511, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 376, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 1163, 195,
	0, 0, 2466, 353, 0, 0, 177, 198, 313, 0,
	0, 0, 245, 0, 392, 0, 467, 496, 278, 0,
	0, 391, 315, 460, 0, 0, 466, 0, 442, 476,
	481, 271, 0, 234, 420, 261, 254, 0, 0, 0,
	284, 375, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 419, 457, 200, 334, 458, 480, 166, 272, 411,
	273, 441, 264, 235, 378, 214, 304, 0, 0, 255,
	299, 0, 0, 483, 474, 225, 274, 386, 390, 367,
	221, 449, 335, 345, 238, 240, 239, 215, 412, 456,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 361, 224, 0, 0,
	0, 0, 470, 0, 257, 0, 472, 180, 406, 405,
	0, 292, 0, 181, 170, 385, 182, 302, 204, 0,
	485, 220, 309, 450, 495, 277, 352, 0, 362, 197,
	380, 329, 331, 328, 332, 282, 175, 183, 0, 382,
	408, 455, 222, 426, 173, 176, 185, 398, 186, 187,
	0, 322, 266, 270, 286, 297, 0, 389, 427, 473,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 395, 429, 446, 400, 280, 321, 323, 431,
	432, 437, 433, 434, 430, 436, 435, 396, 397, 307,
	438, 208, 440, 465, 229, 407, 410, 484, 0, 216,
	237, 428, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 463, 464, 246, 0, 0, 211,
	0, 0, 349, 356, 348, 0, 0, 459, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 269, 288, 373,
	317, 374, 289, 343, 342, 344, 319, 0, 425, 320,
	0, 206, 0, 424, 0, 0, 439, 226, 0, 0,
	454, 178, 381, 227, 279, 267, 372, 347, 218, 291,
	422, 308, 316, 0, 0, 360, 393, 233, 469, 421,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 207, 219, 230, 231, 232, 256, 253,
	251, 260, 268, 0, 0, 294, 303, 0, 318, 337,
	330, 366, 333, 0, 0, 0, 368, 387, 409, 415,
	416, 443, 444, 445, 447, 451, 452, 453, 0, 0,
	0, 377, 248, 0, 199, 212, 312, 0, 384, 276,
	336, 413, 338, 298, 247, 482, 341, 383, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 324, 325, 326, 327, 350, 351,
	354, 355, 358, 359, 363, 364, 365, 370, 371, 379,
	184, 388, 399, 401, 402, 403, 404, 414, 417, 418,
	461, 462, 478, 479, 448, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 477, 190, 0, 314, 0,
	497, 475, 423, 339, 500, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2917, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 0, 376, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 1163, 195, 0, 0, 2466, 353,
	0, 0, 177, 198, 313, 0, 0, 0, 245, 0,
	392, 0, 467, 496, 278, 0, 0, 391, 315, 460,
	0, 0, 466, 0, 442, 476, 481, 271, 0, 234,
	420, 261, 254, 0, 0, 0, 284, 375, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 419, 457, 200,
	334, 458, 480, 166, 272, 411, 273, 441, 264, 235,
	378, 214, 304, 0, 0, 255, 299, 0, 0, 483,
	474, 225, 274, 386, 390, 367, 221, 449, 335, 345,
	238, 240, 239, 215, 412, 456, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 361, 224, 0, 0, 0, 0, 470, 0,
	257, 0, 472, 180, 406, 405, 0, 292, 0, 181,
	170, 385, 182, 302, 204, 0, 485, 220, 309, 450,
	495, 277, 352, 0, 362, 197, 380, 329, 331, 328,
	332, 282, 175, 183, 0, 382, 408, 455, 222, 426,
	173, 176, 185, 398, 186, 187, 0, 322, 266, 270,
	286, 297, 0, 389, 427, 473, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 429,
	446, 400, 280, 321, 323, 431, 432, 437, 433, 434,
	430, 436, 435, 396, 397, 307, 438, 208, 440, 465,
	229, 407, 410, 484, 0, 216, 237, 428, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	463, 464, 246, 0, 0, 211, 0, 0, 349, 356,
	348, 0, 0, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 269, 288, 373, 317, 374, 289, 343,
	342, 344, 319, 0, 425, 320, 0, 206, 0, 424,
	0, 0, 439, 226, 0, 0, 454, 178, 381, 227,
	279, 267, 372, 347, 218, 291, 422, 308, 316, 0,
	0, 360, 393, 233, 469, 421, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 207,
	219, 230, 231, 232, 256, 253, 251, 260, 268, 0,
	0, 294, 303, 0, 318, 337, 330, 366, 333, 0,
	0, 0, 368, 387, 409, 415, 416, 443, 444, 445,
	447, 451, 452, 453, 0, 0, 0, 377, 248, 0,
	199, 212, 312, 0, 384, 276, 336, 413, 338, 298,
	247, 482, 341, 383, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 346, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	324, 325, 326, 327, 350, 351, 354, 355, 358, 359,
	363, 364, 365, 370, 371, 379, 184, 388, 399, 401,
	402, 403, 404, 414, 417, 418, 461, 462, 478, 479,
	448, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 477, 190, 0, 314, 0, 497, 475, 423, 339,
	500, 499, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1476,
	1475, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	0, 0, 0, 0, 376, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 340, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 195, 0, 0, 0, 353, 0, 0, 177, 198,
	313, 0, 0, 0, 245, 2268, 392, 0, 467, 496,
	278, 0, 0, 391, 315, 460, 0, 0, 466, 0,
	442, 476, 481, 271, 0, 234, 420, 261, 254, 0,
	0, 0, 284, 375, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 419, 457, 200, 334, 458, 480, 166,
	272, 411, 273, 441, 264, 235, 378, 214, 304, 0,
	0, 255, 299, 0, 0, 483, 474, 225, 274, 386,
	390, 367, 221, 449, 335, 345, 238, 240, 239, 215,
	412, 456, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 361, 224,
	0, 0, 0, 0, 470, 0, 257, 0, 472, 180,
	406, 405, 0, 292, 0, 181, 170, 385, 182, 302,
	204, 0, 485, 220, 309, 450, 495, 277, 352, 0,
	362, 197, 380, 329, 331, 328, 332, 282, 175, 183,
	0, 382, 408, 455, 222, 426, 173, 176, 185, 398,
	186, 187, 0, 322, 266, 270, 286, 297, 0, 389,
	427, 473, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 395, 429, 446, 400, 280, 321,
	323, 431, 432, 437, 433, 434, 430, 436, 435, 396,
	397, 307, 438, 208, 440, 465, 229, 407, 410, 484,
	0, 216, 237, 428, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 463, 464, 246, 0,
	0, 211, 0, 0, 349, 356, 348, 0, 0, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 269,
	288, 373, 317, 374, 289, 343, 342, 344, 319, 0,
	425, 320, 0, 206, 0, 424, 0, 0, 439, 226,
	0, 0, 454, 178, 381, 227, 279, 267, 372, 347,
	218, 291, 422, 308, 316, 0, 0, 360, 393, 233,
	469, 421, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 0, 0,
	194, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 207, 219, 230, 231, 232,
	256, 253, 251, 260, 268, 0, 0, 294, 303, 0,
	318, 337, 330, 366, 333, 0, 0, 0, 368, 387,
	409, 415, 416, 443, 444, 445, 447, 451, 452, 453,
	0, 0, 0, 377, 248, 0, 199, 212, 312, 0,
	384, 276, 336, 413, 338, 298, 247, 482, 341, 383,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 324, 325, 326, 327,
	350, 351, 354, 355, 358, 359, 363, 364, 365, 370,
	371, 379, 184, 388, 399, 401, 402, 403, 404, 414,
	417, 418, 461, 462, 478, 479, 0, 196, 42, 448,
	202, 0, 203, 205, 0, 201, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 88, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 678,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 96, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 679, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 109, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 672,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3502,
	0, 0, 0, 0, 0, 3504, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 497, 475, 423,
	339, 500, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 2039, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	496, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 495, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 497, 475, 423, 339, 500, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2037, 2039, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 496, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 495, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 497,
	475, 423, 339, 500, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 1163, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 496, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 495,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 497, 475, 423, 339, 500,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3357,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 496, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 495, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 497, 475, 423,
	339, 500, 499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3504, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	496, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 495, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 497, 475, 423, 339, 500, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 496, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 495, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 497,
	475, 423, 339, 500, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1210, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 496, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 495,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 497, 475, 423, 339, 500,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 496, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 495, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 497, 475, 423, 339, 500, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 498, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 496, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 495, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 678, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3213, 679, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 672, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 678, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	679, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 672, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 477, 190, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 0, 340, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 177, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 547, 544, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 166, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 180, 406, 405, 0, 292, 0, 181, 170,
	385, 182, 302, 204, 0, 485, 220, 309, 450, 161,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 175, 183, 0, 382, 408, 455, 222, 426, 173,
	176, 185, 398, 186, 187, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 178, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 0, 0, 194, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 184, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	477, 190, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 177, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 2538, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 180, 406,
	405, 0, 292, 0, 181, 170, 385, 182, 302, 204,
	0, 485, 220, 309, 450, 161, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 175, 183, 0,
	382, 408, 455, 222, 426, 173, 176, 185, 398, 186,
	187, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 178, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 184, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 2424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	2164, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 0, 196, 0,
	0, 202, 0, 203, 205, 448, 201, 0, 0, 1605,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 477, 190, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 177, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 180, 406, 405, 0, 292, 0,
	181, 170, 385, 182, 302, 204, 0, 485, 220, 309,
	450, 161, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 175, 183, 0, 382, 408, 455, 222,
	426, 173, 176, 185, 398, 186, 187, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 178, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 184, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 477, 190, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 155, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 177,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	166, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	180, 406, 405, 0, 292, 0, 181, 170, 385, 182,
	302, 204, 0, 485, 220, 309, 450, 161, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 175,
	183, 0, 382, 408, 455, 222, 426, 173, 176, 185,
	398, 186, 187, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 178, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 184, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 477, 190,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 177, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 166, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 180, 406, 405, 0,
	292, 0, 181, 170, 385, 182, 302, 204, 0, 485,
	220, 309, 450, 161, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 175, 183, 0, 382, 408,
	455, 222, 426, 173, 176, 185, 398, 186, 187, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	178, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 184,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 1487,
	1486, 1496, 1497, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1488, 0, 0, 1498, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 166, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 652, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 166, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 4462, 0, 0, 0, 0,
	0, 259, 4460, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 4461, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2989, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 2990, 2991, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 1622, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 2468, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 2467, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 636, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 2072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	636, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 3558, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 3556, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 3554, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 3552,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 3547, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 3534, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 3532, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 3462, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3453,
	0, 0, 0, 0, 0, 1161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 1161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1161, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 2588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	2746, 2745, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 448,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 314, 0, 0, 475, 423, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 0,
	0, 0, 0, 376, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	195, 0, 0, 0, 353, 0, 0, 0, 198, 313,
	0, 0, 0, 245, 0, 392, 0, 467, 0, 278,
	0, 0, 391, 315, 460, 0, 0, 466, 0, 442,
	476, 481, 271, 0, 234, 420, 261, 254, 0, 0,
	0, 284, 375, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 419, 457, 200, 334, 458, 480, 0, 272,
	411, 273, 441, 264, 235, 378, 214, 304, 0, 0,
	255, 299, 0, 0, 483, 474, 225, 274, 386, 390,
	367, 221, 449, 335, 345, 238, 240, 239, 215, 412,
	456, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 361, 224, 0,
	0, 0, 0, 470, 0, 257, 0, 472, 0, 406,
	405, 0, 292, 0, 0, 0, 385, 0, 302, 204,
	0, 485, 220, 309, 450, 0, 277, 352, 0, 362,
	197, 380, 329, 331, 328, 332, 282, 0, 0, 0,
	382, 408, 455, 222, 426, 0, 0, 0, 398, 0,
	0, 0, 322, 266, 270, 286, 297, 0, 389, 427,
	473, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 395, 429, 446, 400, 280, 321, 323,
	431, 432, 437, 433, 434, 430, 436, 435, 396, 397,
	307, 438, 208, 440, 465, 229, 407, 410, 484, 0,
	216, 237, 428, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 463, 464, 246, 0, 0,
	211, 0, 0, 349, 356, 348, 0, 0, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 269, 288,
	373, 317, 374, 289, 343, 342, 344, 319, 0, 425,
	320, 0, 206, 0, 424, 0, 0, 439, 226, 0,
	0, 454, 0, 381, 227, 279, 267, 372, 347, 218,
	291, 422, 308, 316, 0, 0, 360, 393, 233, 469,
	421, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 207, 219, 230, 231, 232, 256,
	253, 251, 260, 268, 0, 0, 294, 303, 0, 318,
	337, 330, 366, 333, 0, 0, 0, 368, 387, 409,
	415, 416, 443, 444, 445, 447, 451, 452, 453, 0,
	0, 0, 377, 248, 0, 199, 212, 312, 0, 384,
	276, 336, 413, 338, 298, 247, 482, 341, 383, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 324, 325, 326, 327, 350,
	351, 354, 355, 358, 359, 363, 364, 365, 370, 371,
	379, 0, 388, 399, 401, 402, 403, 404, 414, 417,
	418, 461, 462, 478, 479, 448, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 477, 0, 0, 314,
	0, 0, 475, 423, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 0, 0, 0, 0, 376,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 195, 0, 0, 0,
	353, 0, 0, 0, 198, 313, 0, 0, 0, 245,
	0, 392, 0, 467, 0, 278, 0, 0, 391, 315,
	460, 0, 0, 466, 0, 442, 476, 481, 271, 0,
	234, 420, 261, 254, 0, 0, 0, 284, 375, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 419, 457,
	200, 334, 458, 480, 0, 272, 411, 273, 441, 264,
	235, 378, 214, 304, 0, 0, 255, 299, 0, 0,
	483, 474, 225, 274, 386, 390, 367, 221, 449, 335,
	345, 238, 240, 239, 215, 412, 456, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 361, 224, 0, 0, 0, 0, 470,
	0, 257, 0, 472, 0, 406, 405, 0, 292, 0,
	0, 0, 385, 0, 302, 204, 0, 485, 220, 309,
	450, 0, 277, 352, 0, 362, 197, 380, 329, 331,
	328, 332, 282, 0, 0, 0, 382, 408, 455, 222,
	426, 0, 0, 0, 398, 0, 0, 0, 322, 266,
	270, 286, 297, 0, 389, 427, 473, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 395,
	429, 446, 400, 280, 321, 323, 431, 432, 437, 433,
	434, 430, 436, 435, 396, 397, 307, 438, 208, 440,
	465, 229, 407, 410, 484, 0, 216, 237, 428, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 463, 464, 246, 0, 0, 211, 0, 0, 349,
	356, 348, 0, 0, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 269, 288, 373, 317, 374, 289,
	343, 342, 344, 319, 0, 425, 320, 0, 206, 0,
	424, 0, 0, 439, 226, 0, 0, 454, 0, 381,
	227, 279, 267, 372, 347, 218, 291, 422, 308, 316,
	0, 0, 360, 393, 233, 469, 421, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	207, 219, 230, 231, 232, 256, 253, 251, 260, 268,
	0, 0, 294, 303, 0, 318, 337, 330, 366, 333,
	0, 0, 0, 368, 387, 409, 415, 416, 443, 444,
	445, 447, 451, 452, 453, 0, 0, 0, 377, 248,
	0, 199, 212, 312, 0, 384, 276, 336, 413, 338,
	298, 247, 482, 341, 383, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 324, 325, 326, 327, 350, 351, 354, 355, 358,
	359, 363, 364, 365, 370, 371, 379, 0, 388, 399,
	401, 402, 403, 404, 414, 417, 418, 461, 462, 478,
	479, 448, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 477, 0, 0, 314, 0, 0, 475, 423,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 0, 0, 376, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 195, 0, 0, 0, 353, 0, 0, 0,
	198, 313, 0, 0, 0, 245, 0, 392, 0, 467,
	0, 278, 0, 0, 391, 315, 460, 0, 0, 466,
	0, 442, 476, 481, 271, 0, 234, 420, 261, 254,
	0, 0, 0, 284, 375, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 419, 457, 200, 334, 458, 480,
	0, 272, 411, 273, 441, 264, 235, 378, 214, 304,
	0, 0, 255, 299, 0, 0, 483, 474, 225, 274,
	386, 390, 367, 221, 449, 335, 345, 238, 240, 239,
	215, 412, 456, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 361,
	224, 0, 0, 0, 0, 470, 0, 257, 0, 472,
	0, 406, 405, 0, 292, 0, 0, 0, 385, 0,
	302, 204, 0, 485, 220, 309, 450, 0, 277, 352,
	0, 362, 197, 380, 329, 331, 328, 332, 282, 0,
	0, 0, 382, 408, 455, 222, 426, 0, 0, 0,
	398, 0, 0, 0, 322, 266, 270, 286, 297, 0,
	389, 427, 473, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 395, 429, 446, 400, 280,
	321, 323, 431, 432, 437, 433, 434, 430, 436, 435,
	396, 397, 307, 438, 208, 440, 465, 229, 407, 410,
	484, 0, 216, 237, 428, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 463, 464, 246,
	0, 0, 211, 0, 0, 349, 356, 348, 0, 0,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	269, 288, 373, 317, 374, 289, 343, 342, 344, 319,
	0, 425, 320, 0, 206, 0, 424, 0, 0, 439,
	226, 0, 0, 454, 0, 381, 227, 279, 267, 372,
	347, 218, 291, 422, 308, 316, 0, 0, 360, 393,
	233, 469, 421, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 207, 219, 230, 231,
	232, 256, 253, 251, 260, 268, 0, 0, 294, 303,
	0, 318, 337, 330, 366, 333, 0, 0, 0, 368,
	387, 409, 415, 416, 443, 444, 445, 447, 451, 452,
	453, 0, 0, 0, 377, 248, 0, 199, 212, 312,
	0, 384, 276, 336, 413, 338, 298, 247, 482, 341,
	383, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 324, 325, 326,
	327, 350, 351, 354, 355, 358, 359, 363, 364, 365,
	370, 371, 379, 0, 388, 399, 401, 402, 403, 404,
	414, 417, 418, 461, 462, 478, 479, 448, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	0, 314, 0, 0, 475, 423, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 0, 0, 0,
	0, 376, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 195, 0,
	0, 0, 353, 0, 0, 0, 198, 313, 0, 0,
	0, 245, 0, 392, 0, 467, 0, 278, 0, 0,
	391, 315, 460, 0, 0, 466, 0, 442, 476, 481,
	271, 0, 234, 420, 261, 254, 0, 0, 0, 284,
	375, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	419, 457, 200, 334, 458, 480, 0, 272, 411, 273,
	441, 264, 235, 378, 214, 304, 0, 0, 255, 299,
	0, 0, 483, 474, 225, 274, 386, 390, 367, 221,
	449, 335, 345, 238, 240, 239, 215, 412, 456, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 361, 224, 0, 0, 0,
	0, 470, 0, 257, 0, 472, 0, 406, 405, 0,
	292, 0, 0, 0, 385, 0, 302, 204, 0, 485,
	220, 309, 450, 0, 277, 352, 0, 362, 197, 380,
	329, 331, 328, 332, 282, 0, 0, 0, 382, 408,
	455, 222, 426, 0, 0, 0, 398, 0, 0, 0,
	322, 266, 270, 286, 297, 0, 389, 427, 473, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 395, 429, 446, 400, 280, 321, 323, 431, 432,
	437, 433, 434, 430, 436, 435, 396, 397, 307, 438,
	208, 440, 465, 229, 407, 410, 484, 0, 216, 237,
	428, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 463, 464, 246, 0, 0, 211, 0,
	0, 349, 356, 348, 0, 0, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 269, 288, 373, 317,
	374, 289, 343, 342, 344, 319, 0, 425, 320, 0,
	206, 0, 424, 0, 0, 439, 226, 0, 0, 454,
	0, 381, 227, 279, 267, 372, 347, 218, 291, 422,
	308, 316, 0, 0, 360, 393, 233, 469, 421, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 207, 219, 230, 231, 232, 256, 253, 251,
	260, 268, 0, 0, 294, 303, 0, 318, 337, 330,
	366, 333, 0, 0, 0, 368, 387, 409, 415, 416,
	443, 444, 445, 447, 451, 452, 453, 0, 0, 0,
	377, 248, 0, 199, 212, 312, 0, 384, 276, 336,
	413, 338, 298, 247, 482, 341, 383, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 324, 325, 326, 327, 350, 351, 354,
	355, 358, 359, 363, 364, 365, 370, 371, 379, 0,
	388, 399, 401, 402, 403, 404, 414, 417, 418, 461,
	462, 478, 479, 448, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 477, 0, 0, 314, 0, 0,
	475, 423, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 0, 0, 0, 0, 376, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 195, 0, 0, 0, 353, 0,
	0, 0, 198, 313, 0, 0, 0, 245, 0, 392,
	0, 467, 0, 278, 0, 0, 391, 315, 460, 0,
	0, 466, 0, 442, 476, 481, 271, 0, 234, 420,
	261, 254, 0, 0, 0, 284, 375, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 419, 457, 200, 334,
	458, 480, 0, 272, 411, 273, 441, 264, 235, 378,
	214, 304, 0, 0, 255, 299, 0, 0, 483, 474,
	225, 274, 386, 390, 367, 221, 449, 335, 345, 238,
	240, 239, 215, 412, 456, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 361, 224, 0, 0, 0, 0, 470, 0, 257,
	0, 472, 0, 406, 405, 0, 292, 0, 0, 0,
	385, 0, 302, 204, 0, 485, 220, 309, 450, 0,
	277, 352, 0, 362, 197, 380, 329, 331, 328, 332,
	282, 0, 0, 0, 382, 408, 455, 222, 426, 0,
	0, 0, 398, 0, 0, 0, 322, 266, 270, 286,
	297, 0, 389, 427, 473, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 395, 429, 446,
	400, 280, 321, 323, 431, 432, 437, 433, 434, 430,
	436, 435, 396, 397, 307, 438, 208, 440, 465, 229,
	407, 410, 484, 0, 216, 237, 428, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 463,
	464, 246, 0, 0, 211, 0, 0, 349, 356, 348,
	0, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 269, 288, 373, 317, 374, 289, 343, 342,
	344, 319, 0, 425, 320, 0, 206, 0, 424, 0,
	0, 439, 226, 0, 0, 454, 0, 381, 227, 279,
	267, 372, 347, 218, 291, 422, 308, 316, 0, 0,
	360, 393, 233, 469, 421, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 207, 219,
	230, 231, 232, 256, 253, 251, 260, 268, 0, 0,
	294, 303, 0, 318, 337, 330, 366, 333, 0, 0,
	0, 368, 387, 409, 415, 416, 443, 444, 445, 447,
	451, 452, 453, 0, 0, 0, 377, 248, 0, 199,
	212, 312, 0, 384, 276, 336, 413, 338, 298, 247,
	482, 341, 383, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 324,
	325, 326, 327, 350, 351, 354, 355, 358, 359, 363,
	364, 365, 370, 371, 379, 0, 388, 399, 401, 402,
	403, 404, 414, 417, 418, 461, 462, 478, 479, 42,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 71, 0, 0,
	4274, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4267, 0, 0, 0, 0, 4611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 4274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4267, 0, 0, 0, 0,
	4610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 71, 0, 0, 0, 0, 0, 93, 0,
	0, 47, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 89, 4607, 0, 71, 0, 0, 4274,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 70, 0, 4270, 0, 0,
	4267, 0, 0, 0, 0, 0, 0, 4279, 4271, 4272,
	4273, 4277, 4278, 4275, 0, 4276, 0, 4280, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 89, 0, 0,
	0, 0, 0, 4274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 69, 70,
	0, 4270, 0, 0, 4267, 0, 60, 0, 0, 4599,
	0, 4279, 4271, 4272, 4273, 4277, 4278, 4275, 0, 4276,
	0, 4280, 0, 0, 0, 0, 78, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 84, 4268, 0, 0, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 0, 4281, 4269, 0, 66, 67, 73, 0,
	74, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 4281, 4269, 0,
	66, 67, 73, 0, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 0, 4270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4279, 4271, 4272, 4273,
	4277, 4278, 4275, 0, 4276, 0, 4280, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 69, 70, 0,
	4270, 0, 0, 0, 0, 60, 0, 0, 0, 0,
	4279, 4271, 4272, 4273, 4277, 4278, 4275, 0, 4276, 0,
	4280, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 42, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 71, 0, 0, 0, 0, 0, 93, 0, 60,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 4281, 4269, 0, 66, 67, 73, 0, 74,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 71, 0, 0, 4274, 0,
	0, 93, 0, 0, 47, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 59, 61, 4267,
	0, 0, 0, 87, 4596, 0, 4281, 4269, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 4274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 4267, 0, 0, 0, 0, 4513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 90, 56, 55,
	58, 0, 0, 0, 0, 96, 0, 0, 0, 0,
	0, 4268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 62,
	92, 91, 0, 0, 0, 0, 57, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 93, 0, 0, 47,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 59, 61, 0, 4268, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	42, 0, 0, 62, 92, 91, 0, 0, 0, 0,
	57, 89, 0, 0, 71, 0, 0, 4274, 0, 0,
	93, 0, 0, 47, 0, 0, 0, 0, 0, 0,
	85, 0, 69, 70, 0, 4270, 59, 61, 4267, 0,
	0, 0, 87, 0, 0, 4279, 4271, 4272, 4273, 4277,
	4278, 4275, 0, 4276, 0, 4280, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 89, 0, 0, 0, 0,
	0, 4274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 84, 69, 70, 0, 4270,
	0, 0, 4267, 0, 60, 0, 0, 4505, 0, 4279,
	4271, 4272, 4273, 4277, 4278, 4275, 0, 4276, 0, 4280,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 84,
	4268, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 4281, 4269, 0, 66, 67, 73, 0, 74, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 4281, 4269, 0, 66, 67,
	73, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 70, 0, 4270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4279, 4271, 4272, 4273, 4277, 4278,
	4275, 4510, 4276, 0, 4280, 0, 0, 0, 0, 78,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 69, 70, 0, 4270, 0,
	0, 0, 0, 60, 0, 0, 0, 0, 4279, 4271,
	4272, 4273, 4277, 4278, 4275, 0, 4276, 0, 4280, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 42, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 71,
	0, 0, 0, 0, 0, 93, 0, 60, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	4281, 4269, 0, 66, 67, 73, 0, 74, 0, 42,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	89, 0, 0, 71, 0, 0, 4274, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 59, 61, 4267, 0, 0,
	0, 87, 4503, 0, 4281, 4269, 0, 66, 67, 73,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	4274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 4267, 0, 0, 0, 0, 4383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 90, 56, 55, 58, 0,
	0, 0, 0, 96, 0, 0, 0, 0, 0, 4268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 62, 92, 91,
	0, 0, 0, 0, 57, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 93, 0, 0, 47, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	59, 61, 0, 4268, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 89,
	0, 0, 0, 0, 0, 4274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	69, 70, 0, 4270, 59, 61, 4267, 0, 0, 0,
	87, 0, 0, 4279, 4271, 4272, 4273, 4277, 4278, 4275,
	0, 4276, 0, 4280, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 84, 69, 70, 0, 4270, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 4279, 4271, 4272,
	4273, 4277, 4278, 4275, 0, 4276, 0, 4280, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 90, 56, 55, 58, 0, 0,
	0, 0, 96, 0, 0, 0, 0, 84, 4268, 0,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 62, 92, 91, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 0, 4281,
	4269, 0, 66, 67, 73, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4281, 4269, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	70, 0, 4270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4279, 4271, 4272, 4273, 4277, 4278, 4275, 0,
	4276, 0, 4280, 0, 0, 0, 0, 78, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 4281, 4269,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 61,
	0, 0, 0, 0, 87, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	7860, -1000, -504, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2931, -1000, 2931, 351, -1000, 431, -1000, 1543, 816,
	-1000, -1000, -1000, -1000, -1000, 725, 460, 59859, 1167, 53963,
	79731, -249, 4590, 78995, 178, -1000, 178, 428, 56171, 869,
	1016, 78259, 2791, 2175, 182, 20, 16, 233, 39976, 1070,
	299, 212, 224, 218, 213, 1329, -1000, 62067, 893, -1000,
	312, -1000, -1000, -1000, -1000, -1000, 55435, 3009, 3024, 3009,
	-1000, 2911, 2929, -1000, -1000, 2911, 2229, 2229, -1000, 62067,
	14350, -1000, -1000, -1000, -1000, -1000, 31692, -1000, 1422, -1000,
	60595, 42184, 2931, -1000, 1154, 1140, -113, 1067, 1067, 880,
	1067, 1067, -467, 1165, -1000, 850, 1702, -1000, -1000, -1000,
	-1000, 1692, 60595, 67219, 1163, 76787, 1070, 1070, 1070, 1070,
	1070, 1070, 1070, 1070, 53227, 60595, -1000, 1281, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 60595, 2994, 2993,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2608, 2607, 52491, 590, 2839, 1664, 344, 1664, -1000,
	-1000, 1643, -1000, 981, 978, 977, 970, 959, 966, 9,
	1619, 1693, 2906, -1000, 2497, 2911, 2911, 1619, -1000, 965,
	-1000, -1000, -1000, -1000, -1000, -1000, 1368, -1000, -1000, 1760,
	1760, 556, 1136, 985, 993, 985, 2881, 1673, 2838, 2836,
	2214, 2835, 1011, 2833, 2600, -1000, 1266, -1000, -1000, 63,
	-1000, 2172, 60595, -1000, -1000, 2042, 2041, 664, 2489, 1217,
	2657, -1000, -1000, 676, 846, 2595, 843, 2595, 2595, 2595,
	423, 2595, 2595, 15, 2595, 2595, 2595, 341, 2595, 362,
	2595, 2595, 2595, 2595, 2595, -1000, 2208, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 39229,
	2868, 223, -1000, -177, 197, 2894, 749, -1000, -1000, -1000,
	310, 1422, 62803, 2550, -1000, 2497, -1000, -1000, -1000, 2560,
	2497, -1000, 2121, 1162, 1070, 773, -1000, 700, -1000, -1000,
	-1000, 2863, 2497, 45867, -1000, -1000, 1800, -1000, 2497, 2497,
	1422, 2892, 1422, 1422, 2890, 2888, 1422, 2820, 28676, 18874,
	2740, 1817, -1000, -1000, -1000, -1000, 1422, 2991, -1000, 41448,
	1264, -1000, 18874, 2031, 2497, 2497, -1000, 1205, 1310, -1000,
	1191, 1249, -1000, -1000, 19628, 19628, 19628, 19628, 19628, 19628,
	19628, -1000, -1000, -1000, -1000, -1000, -1000, 2315, 2313, 2312,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2497, 1257, 1253, 1251, 2497, 2497, 2497, 2497, 2497, -1000,
	17366, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2497, 2497, 2497, 2497, 2497, 2497, 2497,
	2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, 18874, 2497,
	2497, 2497, 2497, 2497, -1000, 2497, 2497, 2497, 2497, 2497,
	2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497,
	2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497,
	2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2497, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2497,
	2497, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2497, 1075, 1075, 59123, 2556, -62,
	30938, -1000, -1000, -1000, -1000, 29430, 65011, 1608, -1000, -1000,
	-1000, -1000, 2832, -1000, -1000, 1250, 1249, 1205, 1203, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2931, 354, -1000,
	2470, -1000, -1000, 39654, 39654, 39654, 39654, 39654, 39654, 48811,
	-1000, -1000, -1000, 2599, 2911, -1000, 76787, 60595, 939, 2159,
	1741, 2158, 78259, 78259, 1067, -1000, 791, 67219, 67219, -366,
	1067, 840, 67219, 801, 2555, 1135, 2554, 1134, 2182, 1070,
	2656, 60595, 2156, 2155, 78259, 78259, 67219, 67219, 78259, -1000,
	-1000, -1000, 27922, -1000, 1361, 2552, 48075, 47339, 51755, 51755,
	-1000, -1000, -1000, 963, -1000, 1664, -1000, 5387, 18874, 1067,
	1067, 60595, 60595, 60595, 60595, 60595, -1000, 60595, -1000, -1000,
	1664, -1000, -1000, 1664, 1664, 1664, 1619, 2988, 1619, -1000,
	-1000, -1000, 1664, 78995, 78995, 18874, -1000, 19628, 66483, 1389,
	-1000, -1000, 1664, -1000, 78995, 1015, 1015, 1015, -1000, 2154,
	548, 358, -1000, 985, 354, -1000, -1000, 2801, 2882, 2880,
	2149, 1011, 1011, -1000, 2319, 1011, 2541, -1000, 1671, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1011, 2881, 18120, 76787, -482, -1000, -1000, 2551, -1000,
	441, -1000, -1000, 1014, 2655, 1014, 8168, 67219, 67219, 67219,
	-1000, 2595, 76787, -1000, 2595, 2595, 2595, 14, 2595, 2595,
	-1000, -1000, 2595, -1000, -1000, -1000, 2595, -1000, -1000, 2595,
	-1000, -1000, -1000, 2595, 2595, -1000, 2595, 2595, -1000, -1000,
	-1000, -1000, -1000, 67219, 714, 2487, 2542, 2654, -1000, 1133,
	205, -45, 171, -1000, -1000, -1000, -1000, -1000, -1000, 307,
	303, 302, 301, -1000, -1000, -1000, -1000, 300, 296, -1000,
	-1000, 58379, 58379, 976, -1000, 2550, 62803, 2879, 23398, 893,
	-1000, 18874, 2846, -1000, 2846, -1000, -1000, -1000, 376, -1000,
	60595, 67219, 78259, 55435, 55435, 55435, 55435, -1000, 2681, 2679,
	-1000, 2678, 2675, 2672, 488, 62803, -1000, 2863, 351, 2468,
	2229, 2229, 700, 45867, -1000, 2497, -1000, 62803, 1262, 1152,
	1144, 1143, 2801, -1000, -1000, -1000, -1000, -1000, 2276, 2206,
	1960, 13596, 19628, -1000, -1000, -1000, -1000, -1000, 3009, 3009,
	-1000, -1000, -1000, -1000, -1000, -1000, 1771, 3004, 1533, 2539,
	-1000, -1000, -1000, 2548, -1000, 1919, 1247, 1893, 1822, -1000,
	-1000, -1000, -1000, -1000, -1000, 14350, -1000, 60595, -1000, 18874,
	18874, 18874, 1836, -1000, 45128, -1000, -1000, -1000, 24152, 1542,
	19628, 1849, 1616, 19628, 19628, 19628, 19628, 19628, 19628, 19628,
	19628, 19628, 19628, 19628, 19628, 19628, 19628, 19628, 1425, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2148, -1000, 354,
	36970, 13596, 36970, 695, 695, 76787, 1376, 1376, 1376, 1376,
	1376, 1376, 61331, -1000, -1000, -1000, 2886, 35462, 76787, 36970,
	2886, 2886, 2886, 2886, 2886, 2466, 1968, 62067, 17366, 55435,
	13596, 13596, 13596, 2229, 18874, 18874, 13596, 19628, 13596, 16612,
	15858, 21136, 13596, 13596, 2886, 1636, 1968, 27168, 13596, -1000,
	2229, -1000, -1000, -1000, -1000, 1924, -1000, -1000, -158, -158,
	-158, 408, 13596, 13596, 13596, 13596, 2229, 2229, 13596, 13596,
	13596, 13596, 13596, 13596, 2229, 2229, 2229, 13596, 13596, 13596,
	13596, 13596, 13596, 13596, 13596, 13596, 13596, 13596, 13596, -1000,
	-1000, -1000, 1923, 57643, 55435, 60595, 2524, 2475, -1000, -1000,
	1241, 30184, 2520, -1000, -51, -57, -62, -1000, -1000, 1348,
	-1000, -1000, -1000, -1000, 15104, -1000, -1000, -1000, 24906, 2911,
	-1000, 40712, -1000, 58, -1000, -1000, -1000, 2579, -1000, 2584,
	136, 526, 2584, 102, 90, 2584, 2584, 2584, -1000, -1000,
	-1000, -1000, 118, -1000, -1000, -1000, -1000, -1000, 2598, 2597,
	-1000, 2579, 2579, 2579, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2589, 546,
	2581, 2581, 2581, 2581, 2581, -1000, -1000, -1000, -1000, -1000,
	1030, -1000, -1000, -1000, 18874, 2820, 2747, 2604, 2497, 1139,
	-468, 840, 2846, 2865, 2846, 946, -1000, 1232, 2596, 78259,
	860, 2280, -1000, 587, 2482, 1173, 56907, -1000, -1000, -1000,
	-1000, -1000, 60595, 60595, 67219, 67219, 67219, 60595, 60595, 2547,
	-1000, -1000, -1000, -1000, -1000, 2505, -1000, 2482, -1000, -1000,
	1224, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -440, -441, 60595, -1000, -1000, -1000,
	-1000, -1000, -1000, 2546, -1000, 2546, -1000, -1000, -1000, 2318,
	1968, 2147, 2146, 2881, -1000, -1000, -1000, -1000, 1639, -1000,
	-1000, -1000, -1000, 1664, 60595, 2881, -1000, -1000, -1000, 1968,
	1562, 2606, 2497, 2229, -1000, -1000, -1000, 176, -1000, 174,
	-1000, -1000, -1000, 2143, -1000, -1000, -1000, -1000, -1000, 358,
	-1000, 19628, 2800, 2797, -1000, 2541, 2541, -1000, 2541, 1011,
	11217, 2541, -1000, -1000, 2447, -1000, 315, 2317, 60595, -1000,
	62803, 57, -1000, -75, 75315, -1000, -1000, -1000, 1014, 75315,
	-1000, 341, 254, -1000, 1130, -1000, 2445, -1000, -1000, -1000,
	-1000, 2595, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1014, 575, 2540, 1014, 67219, 67219, 640, 2531,
	-1000, 1654, 1644, -1000, -1000, 164, -1000, -1000, -1000, -1000,
	2904, -1000, -1000, 253, -69, -1000, 253, 2316, 19628, -1000,
	2497, 2388, -1000, 1223, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2497, -1000, -1000, -1000, -1000, 2830, 1608, 1608, 1608,
	6875, 587, 2652, 2594, 2651, 495, -1000, -1000, -1000, -1000,
	2671, -1000, 2669, 2668, -1000, -1000, -1000, 2563, 62803, 55435,
	-1000, -1000, -1000, 2229, 76787, 1219, -1000, 62803, 2497, 2497,
	2497, 19628, 19628, 1513, -1000, 19628, 19628, 1511, -1000, 19628,
	19628, 1508, -1000, 2229, 2530, -1000, -1000, 1968, 1212, 5525,
	-1000, 76051, 46, 2693, 28676, 28676, 18874, -1000, -1000, -1000,
	24906, 2905, -1000, 2706, 2704, 2981, -1000, -1000, -1000, 1542,
	1667, 1630, -1000, -1000, 1809, -1000, -1000, -1000, -1000, -1000,
	1206, 2497, -1000, -1000, -1000, -1000, -1000, -1000, 5550, -1000,
	-1000, -1000, -1000, 1849, 19628, 19628, 19628, 1562, 5550, 5345,
	1507, 1917, 1376, 1585, 1585, 1338, 1338, 1338, 1338, 1338,
	1540, 1540, -1000, -1000, -1000, -1000, 2229, -1000, 2427, -1000,
	-1000, 2315, 2313, 2312, -1000, -1000, -1000, -1000, 13596, -1000,
	-1000, -1000, -1000, -1000, -1000, 13596, 13596, 13596, 13596, 13596,
	18874, -1000, 2427, 2427, 2427, -1000, 1754, 2180, 2340, 5290,
	2427, 1358, 2980, 2427, 1356, 2977, 2427, 2056, 19628, 19628,
	19628, 2427, 2427, 13596, 1730, -1000, 18874, 2229, 1313, 2229,
	1205, 1203, 2427, -1000, 2229, 2527, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2523, 2974, 2521,
	-1000, -1000, -1000, -1000, 2427, 2229, 2427, 2427, -132, -132,
	2229, 2427, 2229, 2427, 2427, 2229, -132, -132, -132, 2427,
	2427, 2427, 2427, 2427, 2427, 2427, 2427, 2427, 2427, 2427,
	2427, -1000, 2229, 1476, 60595, -1000, 2526, 1476, 2403, 55435,
	-1000, -1000, 55435, 78995, 26414, -1000, 29430, -62, -89, -1000,
	-1000, 2520, -1000, -1000, 1655, -1000, -1000, 2311, 1968, -1000,
	1202, 2820, 5928, -1000, -1000, -1000, -1000, 2590, 44392, -1000,
	2757, 1267, 1267, 1267, 65747, 77523, 2749, -1000, -1000, 210,
	26, -1000, -1000, -1000, 2037, -1000, 353, 527, 2584, -1000,
	-1000, -1000, 2584, 2584, -1000, 2584, 2584, -1000, -1000, -1000,
	-1000, 2307, 2307, -1000, -1000, -1000, -1000, 2023, -1000, 2589,
	-1000, 2020, -1000, -1000, -1000, -1000, 210, 210, 210, 210,
	210, -1000, 1941, -1000, 2649, 76787, 2878, 60595, -367, -1000,
	-1000, -1000, 2956, -1000, -1000, 76787, 64275, 2648, -1000, -1000,
	356, 67219, 580, 759, 334, -1000, 1723, -1000, -1000, 1129,
	-1000, 1128, -1000, -1000, 1157, -1000, 60595, 67219, 76787, 2634,
	2632, -1000, 51755, -1000, -1000, -1000, -1000, 2951, 2133, 2131,
	-1000, 1619, 1664, -1000, 19628, 67219, -1000, 944, -1000, -1000,
	-1000, -1000, 5550, 19628, 19628, -1000, -1000, -1000, -1000, 1769,
	-1000, -1000, -1000, -1000, -46, -1000, -1000, 1123, 1198, 1197,
	75315, 1122, -1000, 367, 67219, -1000, 76787, -1000, 75315, 422,
	569, 75315, 2505, 2972, 2517, -1000, 1632, 1602, 1599, 1594,
	1593, 1580, 1558, 1553, 205, 2588, 2587, -1000, -1000, 263,
	-1000, 2812, -1000, -1000, 5550, -1000, -1000, 23398, 36970, -1000,
	1608, 1631, -1000, 1624, 2306, 1753, 1740, -1000, -1000, -1000,
	2927, 1279, 1243, 1038, 1608, 1041, 479, 1120, 2809, 2808,
	599, 594, -1000, 1608, 1041, 1239, 669, -1000, 1501, 1500,
	1498, 1492, 1491, 1490, 1488, 1482, 657, -368, -1000, 1608,
	1608, 1608, 1608, 1608, 1608, 1608, 1608, -194, -199, 1608,
	1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608,
	1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608,
	1608, 1608, 32446, 1608, 1608, -281, -1000, 1175, 757, -1000,
	-1000, 18874, 2585, -1000, 18874, -1000, -1000, -1000, -1000, -1000,
	76787, 2563, 700, -1000, 2386, -1000, -1000, 1219, 76787, 76787,
	76787, 5234, 1980, 2497, 5181, 1861, 2497, 5057, 1748, 2497,
	2863, 13596, 22644, 2304, 2515, 2303, 2300, -1000, 43, 2691,
	-1000, -1000, -1000, 60595, -1000, -1000, -1000, -1000, 2951, 54699,
	14350, -1000, -1000, -1000, -1000, 34708, 13596, -1000, 1562, 5550,
	4901, -1000, 19628, -1000, -1000, 2229, 2427, 2427, 2427, 2427,
	2427, 1968, -1000, -1000, -1000, 383, 1425, 383, -1000, 1425,
	19628, -1000, 19628, 19628, -1000, 19628, 19628, -1000, -1000, 19628,
	4875, 4751, 4675, -253, -1000, 2536, 1704, -1000, 18874, 2119,
	-1000, -1000, -1000, -1000, -1000, 19628, 19628, 19628, 19628, -1000,
	-1000, -1000, -1000, -1000, 74579, -1000, -132, -132, -132, -132,
	-132, -132, -1000, -1000, -1000, -132, -132, -132, -132, -132,
	-132, -132, -132, -132, -132, -132, -132, -1000, 407, 2497,
	-1000, 25660, 2951, 55435, 2442, 2442, -1000, 1196, -1000, -1000,
	-1000, -84, -81, -1000, -1000, -1000, -1000, -1000, 36970, -1000,
	-1000, -1000, 8438, -1000, 1608, 1608, 1608, 382, 1608, 1608,
	1608, 1608, 1608, -201, -202, 1608, 1608, 1608, 1608, 1608,
	1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608, 1608,
	1608, 1608, 192, 1608, 1608, 1608, 1608, 1608, 1608, 32446,
	1608, 1608, -372, 49547, 1211, 1027, -1000, -1000, -1000, 77523,
	77523, 77523, -1000, 77523, 77523, -1000, -1000, -1000, -1000, 50283,
	-1000, -1000, 1779, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2497, -494, 2017, 60595, -1000, 2828, 1604, 39232, 3002,
	-1000, 2745, -1000, 2737, 2736, 2299, -1000, -1000, 2393, 2377,
	2372, -1000, 2584, -1000, -1000, -1000, -1000, -1000, 2412, -1000,
	2409, 2514, -1000, 2407, -428, 60595, -1000, -1000, 2497, 2015,
	2631, -1000, -1000, -1000, -1000, 2368, 2512, -1000, 39654, 76787,
	76787, 76787, 769, -281, 716, -1000, 67219, 433, 587, 826,
	2047, -404, 2860, 60595, 67219, -1000, -1000, -1000, -1000, -1000,
	-1000, 73843, 73843, -1000, -1000, 18874, -1000, -1000, 2881, -1000,
	5550, 2482, -1000, -1000, 5550, 5550, 1476, 1161, -1000, 67219,
	1386, 73107, 1119, 67219, 411, 251, -1000, 2971, 2970, 385,
	2967, 67219, 640, 2298, 2296, 2295, 2014, 2012, 2004, 1990,
	1987, -1000, 60595, 60595, 2294, -1000, -1000, -1000, 1588, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1468, 8090, 1740, 1467,
	1465, 1460, 1444, -1000, 162, 46603, 77523, 1252, 1043, -1000,
	-1000, 2497, -1000, 43656, 50283, 50283, 50283, 76787, 2735, 2731,
	76787, 50283, 50283, 76787, 50283, 935, 2130, 2826, 1608, 114,
	-1000, -1000, -1000, 72371, -1000, 71635, 857, 51019, 50283, 76787,
	60595, 42920, -1000, -1000, -1000, -1000, 70899, 1977, 76787, 76787,
	70163, 69427, 68691, 67955, -1000, -243, 1000, 18874, 1000, 1874,
	1874, 2293, 2292, 2291, 1608, 1608, 206, 1874, 2289, 206,
	1874, 38478, 2288, 1013, 1000, 1000, 1000, 1874, 1874, 1874,
	1874, 2287, 402, 2013, 2286, 1874, 2235, 2232, 1000, -1000,
	-230, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1874, 2497, -1000, 541, 943, 1118, 919, -10,
	1968, 76787, 1968, 2405, -1000, -1000, 1274, 76787, -1000, 2351,
	2351, 2351, 19628, 19628, 19628, 19628, 19628, 19628, 19628, 19628,
	19628, 62803, -1000, -1000, 1190, 7, 76787, -1000, 48, -1000,
	-1000, -1000, 2948, -1000, 2511, -1000, -1000, -1000, 2229, -1000,
	19628, 5550, -1000, -132, -132, -132, -132, -132, 2229, 2579,
	2579, 2579, -1000, 2579, 2581, 127, -1000, -1000, -1000, 2579,
	153, 2579, 149, -1000, 2229, 2229, 2229, 2274, 4155, 3925,
	2908, 2114, 2274, 19628, 19628, 19628, 2497, -125, -1000, 1968,
	18874, 2825, 2582, 2274, 2274, -1000, -1000, 2125, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2630, 2630, 25660,
	2863, -1000, 21890, -1000, 893, -1000, -1000, 76787, 2532, -1000,
	1608, 1278, 1608, 1608, 2931, 2442, -1000, -1000, 1385, -1000,
	-1000, -1000, -1000, 1000, 1000, 1000, 1608, 2818, 1608, 1874,
	1874, 2281, 2279, 2278, 1608, 1608, 206, 1874, 2275, 206,
	1874, 38478, 2273, 1013, 1000, 1000, 1000, 1874, 1874, 1874,
	1874, 2272, 402, -1000, 1881, 2270, 1874, 2226, 2091, 1000,
	-1000, -231, 1874, 2497, -245, 2398, -1000, 2579, 2579, 2725,
	1267, -1000, -1000, -1000, -1000, -1000, -1000, 2578, -1000, -1000,
	19628, 2877, -1000, 2576, 1544, -1000, -1000, -1000, -1000, 695,
	2269, -1000, -1000, 19628, -1000, -1000, 2497, 2497, 2497, 2497,
	2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, 2497, -74,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2267,
	-1000, 1957, -1000, 1950, -1000, -1000, -1000, 2575, -1000, 2875,
	-1000, 60595, 267, 64275, -1000, 39654, 39654, 39654, -10, 534,
	-1000, 1759, -1000, -1000, -1000, 2266, 2265, 2264, 2482, 592,
	1751, 453, -1000, 2864, 2862, 2263, 2262, 2260, 2259, 1949,
	-1000, -1000, 2605, 76787, 2510, -1000, 1968, 1664, 48, 60595,
	251, -1000, -1000, -1000, 67219, 251, -1000, -1000, 528, 67219,
	67219, 2962, 67219, 2505, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2396, 2392, -1000, -1000, -1000, -1000, -1000,
	-1000, 1301, 1269, 357, 347, -220, -1000, 472, 371, -1000,
	-1000, -1000, 51019, 1006, 39654, 39654, 2604, 1267, -1000, 2721,
	1426, -1000, -1000, -1000, -1000, -1000, -1000, 50283, 2509, -430,
	-432, 1322, -452, -1000, -1000, -1000, -1000, 51019, 1608, 1425,
	2817, 673, 336, 666, 335, -1000, -1000, -1000, -1000, 1006,
	1254, 1115, -1000, 2719, 50283, 1101, 619, 327, -1000, 1821,
	-287, 2509, -1000, 2509, -1000, 2509, -1000, 2509, -1000, -1000,
	-1000, 1968, -1000, -1000, -1000, -1000, -1000, -1000, 2257, 2256,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -195, -1000,
	38478, 541, -1000, 1942, 1937, 1930, 1929, 1785, -1000, 2629,
	78259, -1000, 744, 2627, 1010, 695, 2390, -1000, 76787, -1000,
	-1000, -1000, -1000, -1000, 5550, 5550, 2400, 5550, 5550, 2379,
	5550, 5550, 2364, -1000, 33954, 2497, -1000, -7, -1000, 2946,
	2925, -1000, -1000, 5550, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 405, 397, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19628, 19628, 19628, 19628, -1000, 2274,
	2274, 2274, 19628, 2229, 2255, 1968, 19628, 19628, -1000, -1000,
	1435, -1000, -1000, 2852, -1000, 2480, 62803, 2229, 2496, 2388,
	2229, 350, -1000, -1000, -1000, 62067, 55435, 2506, -1000, 2497,
	2386, 2931, 25660, 18874, 18874, 18874, 18874, 2911, -1000, -1000,
	-1000, -1000, 1425, 1608, 33200, -1000, -1000, -1000, -1000, -1000,
	2254, 2253, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -197,
	-1000, 38478, -1000, 236, 49547, 2851, 2851, 77523, 77523, 76787,
	2274, 2497, 76787, -1000, -1000, -1000, -1000, -1000, 2274, -1000,
	-1000, 2359, 2336, 49547, 354, -1000, -404, 2903, -1000, 267,
	-1000, 2252, 835, 847, -1000, 825, 802, 800, 793, 787,
	-1000, -1000, -1000, -1000, 2627, 783, 534, -1000, -61, 1922,
	1485, 2807, 790, -1000, -1000, -1000, -1000, 311, 587, -1000,
	799, 2251, 728, 2250, -1000, -1000, 584, -1000, -1000, 2789,
	2384, -1000, -7, -1000, 2873, 251, 2873, 381, 2505, 2505,
	67219, 2505, -1000, -1000, -235, 1921, 19628, 2497, 2497, 782,
	2277, -1000, -1000, 2117, -1000, -1000, 2570, 77523, 77523, 2354,
	-1000, 76787, -1000, -1000, -1000, -1000, -1000, 2845, 2843, -1000,
	-1000, 1006, 1425, -1000, 1425, -1000, -1000, -1000, -1000, -1000,
	50283, 76787, 50283, 1097, 50283, -1000, -1000, 2497, 1159, -1000,
	-1000, -1000, -1000, 2380, -1000, -1000, -1000, -1000, -1000, -1000,
	600, 2249, 322, -1000, -1000, 1175, 726, -1000, -1000, -1000,
	-322, -1000, -1000, 19628, 19628, 19628, -1000, 36216, 2781, 2772,
	-135, 18874, 18874, -1000, -1000, -1000, -1000, 2274, 2274, 2274,
	2274, -1000, -1000, -1000, 255, -1000, -1000, 2274, 2274, 2931,
	2924, 2713, -1000, 2563, -1000, -1000, 2496, 350, -1000, 893,
	-1000, 12842, -1000, 2911, -1000, 1968, 1968, 1968, 1968, -1000,
	-1000, 1425, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2380,
	236, -1000, 38478, 1608, 2248, 1608, 1608, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2371, -497, 19628, 2367, -1000, -1000,
	-1000, 2365, -1000, -1000, 899, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2788, 2785, 852, 943, -1000, 2243, 2241, -1000,
	686, 2036, 1285, -139, -1000, -1000, -1000, -1000, -1000, -1000,
	708, 2115, -1000, 445, -1000, -1000, 443, -1000, -1000, 2923,
	-404, 19628, -1000, 2781, -1000, 67219, 2873, -1000, -1000, 2505,
	2497, 2922, -1000, 2274, 76787, 19628, 2497, 1552, -1000, -1000,
	210, 210, 49547, 2604, 2569, -1000, 1426, 2700, 19628, -1000,
	-1000, 1373, 1363, -1000, -1000, 1080, 50283, -1000, 1426, 60595,
	38478, -1000, -1000, -1000, -1000, 943, 1411, 766, 2274, 2274,
	2274, 2343, -1000, 11567, 343, -1000, -1000, 2761, 2920, -1000,
	76787, -1000, 1968, 2504, -1000, 1968, -1000, -1000, -1000, -1000,
	2229, 328, -330, -1000, -1000, 1461, 18874, 3000, -1000, -1000,
	-1000, 350, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1903,
	-1000, 2233, 2228, 1019, -1000, -1000, -1000, 2274, -1000, 236,
	-307, 354, 871, 81873, -1000, -1000, -1000, -1000, 1785, -1000,
	-1000, -1000, -1000, 1901, -1000, -1000, 1900, 702, 413, -1000,
	2872, -1000, -1000, 1894, 5550, 1072, -288, -1000, -1000, 1426,
	-414, -1000, 2351, 2274, 76787, 1887, 2357, 2566, 49547, -1000,
	950, 5550, 1608, 1425, 50283, -1000, 2354, 37, -1000, 81873,
	1785, 1270, 756, 1010, -1000, -1000, -1000, 2229, 36216, 404,
	-457, -4, 2224, 2771, 2777, 2768, -1000, 2222, 2499, -1000,
	2871, 18874, -1000, 2690, -279, -334, 2229, 365, 365, 2498,
	25660, 2229, -1000, -1000, -1000, 60595, -497, -1000, 236, -1000,
	366, -1000, 859, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12088, 18874, 189,
	37724, 2099, 2098, 81873, 2116, 81873, 18874, 2092, 2090, 2748,
	19628, 81718, 598, -342, -1000, -343, -1000, -1000, -1000, 2219,
	-1000, 2563, 1883, 543, 2354, 363, -1000, -1000, 2351, -1000,
	236, 49547, 2349, 874, 1425, -1000, -1000, -1000, 668, -1000,
	-1000, 597, 695, -1000, 1010, -1000, 2863, -1000, -1000, 2218,
	-174, -1000, 2497, -5, 2919, 2918, -1000, 2917, 2916, -1000,
	76787, 2497, -1000, -1000, 2685, -1000, -1000, -1000, 355, -1000,
	1450, 870, 1446, -1000, 695, -1000, 2490, -1000, 2562, -1000,
	378, 1029, 1028, -307, -1000, 2076, 2074, -1000, 2107, 1758,
	-1000, 18874, 1984, 644, 632, 9101, -1000, -1000, -1000, -1000,
	-1000, -1000, -505, -1000, 412, -506, 1042, -1000, -1000, 2073,
	-1000, 2960, 5550, -1000, -507, -1000, -1000, -1000, -1000, 2814,
	1564, 63539, -1000, 2497, 782, -1000, -1000, 2347, 236, 2497,
	-1000, -1000, -1000, -1000, -322, -1000, 1411, 62803, 662, 2216,
	36216, 2497, 2207, 2188, 2179, 2120, -1000, -1000, -309, 1744,
	-1000, -1000, -1000, -1000, -1000, -158, 76787, -1000, 377, 373,
	-1000, -1000, -1000, -1000, 1731, 1719, 81873, -1000, 1981, 81873,
	2902, 2901, 2900, 48, 36970, 81664, 81329, 81873, 81873, 18874,
	81275, 81873, 1765, -1000, 81120, 81873, -1000, 25660, -1000, -1000,
	-1000, -1000, 3012, 2482, 19628, 2497, 236, -1000, 20382, 81873,
	-1000, 1411, -1000, 1880, 1872, 2626, 2624, 695, -1000, 2343,
	36216, -1000, -1000, -1000, -1000, -331, 355, -1000, 2345, -1000,
	-1000, 295, 1713, 81873, -1000, -508, 81873, -509, 883, 354,
	1114, 1348, -1000, 617, -1000, 2065, -510, -511, -513, 930,
	18874, -514, 2057, -1000, -1000, 2490, 67219, 2274, 19628, -1000,
	2274, 2229, -1000, -1000, 2623, 695, -1000, 2622, 695, -85,
	-86, 2619, -1000, 2343, -335, -1000, 2618, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 81066, 62067, -1000, -515, 80731, -516,
	8775, -1000, -1000, -1000, 80677, -1000, -1000, -1000, -1000, 625,
	-1000, -1000, 2842, -1000, -1000, 80522, 80468, 10731, 81873, 1912,
	10335, 2488, -1000, -1000, 2482, -239, 2274, -1000, -1000, -1000,
	290, 2617, -383, 2616, 289, 288, -1000, -1000, -88, -1000,
	-1000, 2615, 2614, 2959, -1000, -517, -1000, -1000, 10180, 1712,
	81873, 1064, 81873, 1670, -1000, 18874, -1000, 1114, -1000, 19628,
	2055, 616, 18874, -518, 609, 605, 2053, -1000, 1847, -239,
	286, -387, 2611, 2610, -1000, -1000, -1000, 2961, -1000, 2996,
	1210, 1210, 9828, 1649, -1000, -1000, -520, 1063, 81873, -1000,
	1811, -1000, 5550, -1000, 2048, 1858, 9675, -1000, -1000, -1000,
	-1000, -1000, 278, -388, -1000, -1000, -1000, 1018, 1862, -1000,
	-1000, -1000, 9319, -1000, -522, 81873, -1000, 608, 604, -1000,
	-1000, -1000, -1000, -1000, 1061, 265, -523, 1986, 1864, -1000,
	1058, 81873, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3456, 3455, 3451, 12, 3450, 283, 313, 305, 31,
	2823, 3449, 286, 3448, 287, 3447, 37, 33, 16, 48,
	3446, 3127, 3124, 3118, 3116, 41, 3444, 7, 3443, 3442,
	3114, 3441, 3440, 3111, 3437, 3436, 3435, 3434, 3433, 3432,
	3431, 3426, 3425, 3109, 3105, 3101, 3092, 3423, 3422, 3421,
	3090, 3088, 3086, 3420, 3419, 87, 51, 22, 3417, 5,
	3414, 198, 220, 3412, 4, 3410, 3409, 23, 199, 3408,
	3406, 70, 3084, 3405, 3402, 3400, 3386, 3385, 3384, 151,
	3383, 3382, 3080, 3381, 3077, 3380, 3075, 3070, 3068, 3066,
	3061, 204, 3379, 3057, 3055, 3048, 3378, 2750, 226, 452,
	224, 3377, 130, 135, 1979, 3376, 314, 3375, 212, 3374,
	3370, 3369, 450, 223, 3368, 166, 3366, 4165, 169, 170,
	180, 981, 3364, 63, 163, 323, 3360, 8, 3359, 113,
	3358, 214, 3357, 219, 2820, 195, 269, 190, 3356, 3355,
	202, 3353, 3352, 3351, 211, 3350, 3349, 235, 5018, 3348,
	3347, 187, 3345, 134, 3344, 138, 3343, 3342, 3341, 3340,
	229, 118, 82, 167, 139, 3339, 159, 3337, 3336, 3335,
	3333, 3332, 3331, 85, 35, 40, 3330, 148, 193, 3329,
	59, 47, 30, 3328, 3327, 56, 3326, 3322, 127, 3320,
	3319, 129, 3316, 188, 65, 3314, 3311, 3310, 3309, 111,
	80, 3308, 44, 3306, 186, 3304, 3302, 3300, 3299, 3298,
	98, 3297, 81, 3288, 189, 171, 1369, 3287, 3286, 54,
	52, 3285, 64, 20, 15, 107, 29, 110, 86, 182,
	172, 125, 154, 61, 152, 62, 146, 141, 3284, 225,
	174, 209, 115, 27, 3283, 3282, 203, 3281, 112, 207,
	183, 184, 206, 3280, 3279, 3274, 231, 3272, 176, 517,
	3270, 114, 228, 227, 2754, 241, 140, 3269, 3267, 3266,
	3259, 121, 55, 133, 3254, 39, 236, 230, 237, 50,
	150, 3253, 547, 5239, 6411, 7923, 25, 77, 104, 6682,
	120, 205, 3251, 79, 3249, 3246, 3244, 3672, 168, 46,
	84, 155, 3242, 164, 26, 88, 3231, 3230, 3229, 3223,
	3222, 3221, 157, 131, 3211, 3210, 66, 3209, 3208, 28,
	43, 19, 14, 3207, 158, 218, 216, 215, 3206, 208,
	53, 3205, 3204, 178, 132, 3203, 3202, 3201, 3200, 177,
	116, 201, 3198, 200, 128, 185, 3195, 117, 3194, 3193,
	103, 2947, 126, 3188, 3187, 144, 123, 145, 191, 3186,
	3184, 3183, 69, 3182, 3181, 3, 3179, 105, 60, 58,
	109, 32, 162, 3178, 3177, 194, 3172, 3171, 149, 179,
	3170, 136, 143, 68, 3169, 72, 156, 3168, 165, 2,
	9, 6, 3166, 3164, 3163, 3162, 3161, 3160, 3159, 3158,
	122, 3157, 3156, 102, 83, 73, 3155, 3154, 3152, 3151,
	3150, 197, 173, 78, 233, 92, 24, 3148, 3145, 11,
	3143, 175, 3141, 99, 3140, 3139, 124, 3137, 3136, 71,
	101, 36, 95, 3135, 3132, 108, 153, 3131, 100, 3130,
	3129, 234, 403, 3121, 577, 3103, 196, 181, 74, 89,
	3099, 75, 106, 3097, 91, 3072, 10, 67, 3064, 18,
	21, 1628, 3053, 0, 3107, 213, 3051, 160, 3030, 3026,
	217, 3022,
}

var yyR1 = [...]int{
	0, 462, 462, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 244, 244, 96, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 127, 127, 8, 8,
	126, 126, 126, 241, 241, 241, 241, 238, 238, 128,
	128, 125, 125, 133, 16, 16, 16, 110, 110, 17,
	18, 18, 18, 18, 465, 465, 142, 142, 140, 140,
	141, 141, 236, 236, 19, 19, 19, 246, 246, 251,
	251, 251, 254, 254, 254, 254, 224, 225, 226, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 453, 453, 453, 454, 454, 454,
	454, 454, 279, 279, 279, 279, 417, 417, 433, 433,
	433, 434, 434, 432, 432, 432, 432, 432, 436, 436,
	437, 437, 435, 435, 435, 435, 439, 439, 440, 440,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 420, 420, 420, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 442, 442, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 444, 444, 445, 445, 446, 446, 446, 446,
	447, 447, 447, 447, 447, 448, 448, 448, 448, 448,
	448, 448, 449, 449, 450, 450, 3, 2, 398, 398,
	399, 399, 400, 400, 400, 400, 401, 401, 402, 402,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	31, 31, 31, 31, 31, 31, 278, 278, 274, 274,
	274, 276, 276, 277, 277, 277, 419, 419, 419, 413,
	413, 413, 415, 415, 414, 414, 414, 416, 416, 421,
	421, 421, 421, 421, 424, 424, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 425, 425, 425, 422,
	422, 161, 161, 426, 426, 431, 431, 427, 427, 428,
	428, 430, 430, 430, 429, 429, 429, 429, 316, 316,
	180, 180, 69, 69, 70, 70, 70, 213, 213, 213,
	20, 20, 20, 20, 20, 20, 26, 26, 28, 28,
	28, 28, 56, 56, 57, 29, 29, 29, 29, 58,
	58, 59, 32, 32, 32, 32, 32, 32, 66, 66,
	66, 65, 65, 64, 64, 64, 64, 64, 64, 34,
	35, 36, 466, 466, 466, 60, 60, 37, 37, 37,
	40, 40, 40, 41, 41, 41, 38, 39, 42, 30,
	30, 30, 30, 67, 67, 62, 62, 61, 61, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 33, 33, 33, 33, 33, 33, 25, 397, 397,
	397, 55, 55, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 77, 77, 353, 354,
	354, 354, 354, 354, 354, 340, 340, 341, 341, 341,
	341, 341, 341, 330, 330, 330, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 304, 304, 304, 304, 308, 308, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 307, 307, 307, 307, 307, 307,
	307, 307, 309, 309, 309, 309, 309, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 311, 311, 311, 311, 311, 311, 311,
	311, 339, 339, 313, 313, 312, 312, 312, 333, 333,
	334, 334, 334, 331, 331, 331, 332, 332, 317, 317,
	317, 317, 317, 317, 318, 335, 319, 319, 320, 320,
	320, 320, 320, 320, 321, 321, 322, 322, 322, 324,
	324, 329, 329, 328, 328, 328, 328, 328, 328, 325,
	325, 325, 325, 325, 325, 326, 326, 326, 327, 338,
	338, 338, 338, 338, 314, 46, 46, 52, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 375, 375, 380, 380, 268, 268,
	269, 269, 53, 53, 53, 53, 53, 167, 167, 54,
	54, 54, 376, 376, 378, 378, 378, 378, 378, 378,
	378, 378, 377, 377, 379, 379, 342, 342, 371, 371,
	370, 370, 369, 369, 369, 369, 369, 369, 369, 351,
	351, 352, 352, 366, 366, 366, 366, 366, 366, 366,
	366, 366, 346, 346, 346, 345, 345, 347, 347, 350,
	350, 350, 368, 368, 367, 367, 343, 343, 343, 381,
	381, 381, 381, 381, 101, 101, 344, 344, 344, 382,
	348, 348, 349, 349, 349, 390, 391, 389, 389, 389,
	389, 389, 168, 168, 168, 373, 373, 373, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 102, 102, 102, 103,
	103, 323, 323, 355, 355, 355, 355, 355, 461, 461,
	461, 356, 356, 356, 356, 356, 356, 452, 452, 451,
	451, 451, 357, 357, 358, 359, 359, 359, 360, 360,
	362, 362, 275, 275, 363, 363, 364, 364, 361, 361,
	361, 365, 365, 394, 394, 394, 393, 393, 72, 72,
	72, 72, 74, 74, 73, 73, 73, 81, 81, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 71, 71, 288, 288, 76, 212, 212, 212,
	273, 273, 387, 387, 388, 388, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 384, 384, 383,
	383, 385, 385, 75, 75, 75, 75, 162, 162, 22,
	22, 78, 78, 418, 418, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 392, 392, 392, 24, 24,
	82, 83, 83, 83, 287, 287, 287, 287, 287, 86,
	86, 86, 86, 239, 239, 240, 240, 87, 87, 87,
	87, 88, 88, 88, 88, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 122, 260,
	260, 259, 259, 258, 258, 258, 261, 261, 261, 261,
	302, 302, 302, 85, 85, 85, 97, 97, 92, 92,
	95, 95, 95, 95, 98, 98, 99, 99, 100, 100,
	93, 94, 43, 44, 44, 44, 44, 45, 90, 90,
	90, 91, 91, 91, 91, 112, 112, 113, 113, 468,
	468, 468, 89, 469, 104, 105, 105, 107, 107, 107,
	108, 108, 108, 109, 109, 109, 265, 265, 265, 265,
	265, 265, 265, 106, 106, 106, 116, 116, 120, 120,
	120, 120, 119, 119, 119, 119, 215, 215, 220, 294,
	294, 196, 196, 216, 216, 221, 221, 221, 222, 222,
	223, 223, 223, 223, 223, 218, 218, 217, 217, 219,
	183, 183, 183, 183, 181, 181, 181, 181, 181, 181,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 179, 179, 292, 292, 292,
	292, 291, 291, 291, 124, 124, 129, 129, 131, 131,
	131, 131, 131, 131, 131, 131, 134, 198, 198, 470,
	470, 152, 152, 153, 153, 153, 153, 154, 154, 154,
	154, 154, 156, 156, 156, 157, 157, 157, 157, 157,
	157, 158, 159, 159, 155, 155, 155, 177, 177, 234,
	234, 235, 235, 233, 233, 237, 237, 130, 130, 132,
	132, 132, 132, 137, 137, 138, 138, 139, 139, 299,
	299, 299, 143, 143, 143, 145, 144, 144, 144, 144,
	144, 144, 146, 146, 455, 456, 456, 457, 457, 457,
	457, 458, 458, 458, 458, 458, 458, 458, 458, 458,
	458, 459, 459, 460, 460, 147, 147, 149, 150, 150,
	148, 148, 148, 148, 148, 148, 160, 160, 151, 163,
	163, 163, 163, 164, 164, 121, 121, 121, 121, 121,
	121, 121, 121, 257, 257, 166, 166, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 192, 192, 192,
	192, 192, 192, 169, 169, 169, 169, 169, 169, 169,
	115, 115, 193, 193, 193, 136, 135, 135, 118, 118,
	117, 117, 194, 194, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	186, 186, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	191, 191, 191, 191, 191, 467, 467, 188, 188, 187,
	187, 187, 187, 187, 187, 111, 111, 111, 111, 111,
	300, 300, 300, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 303, 303, 303, 68, 68, 205, 205, 114,
	114, 203, 203, 204, 206, 206, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 176, 176, 176, 207, 207, 195,
	195, 123, 208, 208, 209, 210, 210, 211, 211, 214,
	227, 227, 227, 228, 228, 228, 228, 178, 178, 178,
	229, 229, 229, 229, 171, 171, 170, 170, 170, 172,
	172, 172, 172, 173, 173, 471, 471, 232, 232, 231,
	231, 230, 230, 230, 230, 230, 230, 230, 242, 242,
	197, 197, 200, 200, 199, 201, 243, 243, 248, 248,
	248, 248, 245, 245, 249, 249, 249, 249, 252, 252,
	253, 253, 253, 250, 250, 250, 250, 247, 247, 247,
	296, 296, 296, 296, 255, 255, 264, 264, 262, 262,
	263, 263, 256, 256, 315, 315, 315, 270, 270, 271,
	271, 272, 272, 266, 266, 266, 266, 267, 267, 293,
	293, 289, 289, 295, 295, 290, 290, 297, 297, 298,
	298, 298, 298, 395, 395, 396, 396, 396, 336, 336,
	407, 407, 337, 337, 408, 408, 409, 409, 404, 404,
	405, 405, 406, 406, 406, 47, 410, 410, 411, 411,
	412, 412, 412, 412, 48, 49, 49, 49, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 286,
	286, 286, 286, 286, 286, 283, 283, 283, 283, 283,
	283, 284, 284, 284, 463, 464,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 8, 8, 8, 9, 5, 7, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 0, 1, 4, 3, 3, 3,
	6, 6, 5, 5, 5, 5, 4, 3, 5, 1,
	3, 1, 3, 3, 5, 0, 5, 0, 3, 0,
	3, 0, 3, 4, 0, 1, 1, 3, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 4, 2, 5, 8,
	4, 7, 1, 2, 5, 7, 10, 8, 11, 1,
	2, 5, 5, 5, 5, 6, 5, 7, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 1, 1, 2,
	2, 5, 0, 1, 2, 1, 3, 5, 7, 8,
	7, 9, 10, 7, 9, 10, 2, 2, 2, 2,
	4, 2, 4, 2, 3, 1, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 3, 2, 4, 4, 0, 2,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 5, 5, 5, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 1, 1, 0, 2, 2, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 6, 8,
	3, 6, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 3, 2,
	3, 3, 2, 3, 3, 2, 3, 4, 2, 2,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 4, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 3, 3, 0, 5,
	0, 3, 5, 0, 1, 1, 0, 1, 2, 3,
	3, 2, 2, 4, 3, 1, 0, 1, 3, 3,
	3, 2, 2, 2, 0, 1, 2, 2, 2, 0,
	1, 0, 1, 1, 1, 1, 2, 2, 2, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 2,
	1, 2, 1, 2, 2, 5, 5, 3, 2, 2,
	2, 2, 1, 1, 1, 1, 3, 2, 1, 1,
	2, 2, 3, 3, 0, 3, 0, 3, 1, 1,
	0, 1, 5, 4, 2, 3, 3, 0, 1, 0,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 3, 5, 5, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 3, 3, 1, 1, 0,
	1, 1, 1, 3, 5, 3, 3, 3, 5, 3,
	2, 2, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 1, 1, 3, 3, 3, 3, 2, 1, 11,
	12, 12, 13, 13, 0, 1, 3, 2, 1, 5,
	1, 1, 0, 2, 2, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 2, 3, 3, 3,
	3, 4, 5, 3, 3, 4, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 4, 4, 3, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 6, 1, 4, 5, 5, 6,
	0, 1, 0, 3, 1, 1, 0, 2, 0, 8,
	9, 0, 2, 0, 1, 2, 0, 2, 1, 1,
	1, 1, 4, 3, 7, 5, 5, 1, 3, 5,
	4, 8, 10, 9, 2, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 3, 3, 6, 5, 4, 4,
	5, 5, 8, 4, 5, 7, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 3, 3, 3, 4,
	5, 5, 3, 7, 6, 5, 2, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 4, 4, 3,
	5, 3, 1, 1, 1, 1, 6, 0, 1, 2,
	0, 1, 0, 1, 1, 2, 5, 3, 4, 4,
	4, 4, 4, 4, 3, 7, 6, 8, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 3, 1,
	3, 8, 8, 8, 11, 12, 15, 0, 3, 3,
	3, 3, 5, 3, 5, 6, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 8, 5, 1, 1, 1, 1, 1, 1, 4,
	4, 4, 4, 1, 3, 1, 1, 2, 2, 4,
	4, 3, 3, 3, 3, 3, 4, 3, 5, 5,
	5, 4, 4, 4, 4, 3, 2, 2, 6, 2,
	4, 3, 3, 4, 4, 5, 8, 6, 3, 4,
	4, 2, 4, 3, 2, 4, 5, 6, 2, 6,
	6, 3, 3, 4, 2, 4, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 3, 2,
	0, 1, 1, 2, 4, 1, 0, 1, 2, 1,
	2, 4, 4, 5, 0, 1, 0, 3, 0, 2,
	4, 4, 2, 3, 4, 4, 5, 3, 4, 5,
	4, 1, 1, 1, 1, 0, 3, 0, 1, 1,
	1, 1, 3, 0, 2, 0, 2, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 0, 2, 2, 2,
	2, 2, 2, 0, 1, 1, 3, 5, 1, 1,
	3, 5, 1, 2, 3, 5, 2, 2, 6, 0,
	1, 0, 3, 0, 1, 0, 2, 2, 4, 1,
	2, 2, 2, 2, 2, 0, 2, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 2,
	2, 1, 1, 1, 1, 3, 1, 1, 1, 4,
	5, 1, 2, 3, 1, 1, 2, 2, 4, 0,
	1, 2, 6, 1, 3, 2, 4, 1, 1, 1,
	1, 1, 5, 5, 8, 5, 5, 8, 5, 5,
	8, 2, 2, 2, 3, 4, 4, 0, 1, 3,
	1, 0, 3, 1, 3, 1, 3, 4, 6, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 1,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	3, 2, 2, 2, 12, 1, 3, 3, 3, 6,
	7, 2, 3, 3, 4, 4, 5, 5, 8, 8,
	3, 3, 4, 3, 4, 1, 3, 3, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 0,
	5, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 1, 1,
	5, 6, 6, 6, 5, 5, 5, 6, 5, 5,
	6, 5, 5, 5, 5, 6, 5, 5, 5, 4,
	4, 5, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 3, 6, 6, 4, 6, 6,
	6, 4, 8, 8, 8, 8, 4, 6, 7, 7,
	7, 9, 4, 7, 5, 4, 4, 4, 4, 2,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 6,
	3, 4, 2, 2, 2, 0, 2, 1, 3, 4,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 3, 3, 3,
	1, 2, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 2, 1, 2, 1, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 5, 1, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 1,
	3, 1, 0, 2, 1, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 1, 1, 1,
	0, 2, 4, 4, 1, 4, 1, 3, 4, 1,
	4, 3, 6, 2, 3, 1, 1, 0, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 0, 5,
	1, 3, 2, 3, 3, 1, 1, 3, 3, 3,
	3, 3, 1, 3, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 3, 4, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 3, 0, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 1, 0, 1,
	0, 4, 0, 1, 0, 3, 0, 3, 0, 4,
	0, 2, 0, 4, 4, 3, 1, 3, 2, 4,
	1, 2, 1, 2, 2, 2, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -462, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -72, -22, -23, -24, -82, -86, -87, -88, -84,
	-85, -92, -93, -94, -90, -89, -30, -33, -25, -96,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -134, -463, 12, -128, 34, -77, 190,
	-453, -74, -73, -75, -76, 193, 192, 230, 194, 645,
	368, 646, 223, 72, 445, -95, 448, 449, -468, 306,
	307, 25, 42, 450, 452, 35, 36, 246, 334, 336,
	197, 446, 428, 429, 359, 693, -6, 651, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	762, -210, 20, -104, -469, -210, -10, -9, -4, 651,
	-104, -110, 14, 15, 13, 556, -104, -353, 28, -3,
	117, 76, -8, 11, -267, -278, 97, 547, 198, -276,
	330, 332, 208, -264, -266, -274, 256, 266, 49, 210,
	209, 267, 199, 330, -264, 200, 202, 547, 198, 239,
	238, 330, 332, 271, 645, 199, -148, -297, -283, -285,
	-284, 348, 82, -282, 576, 580, 271, 583, 584, 589,
	338, 90, 52, 368, 570, 360, 369, 220, 525, 571,
	331, 337, 340, 361, 734, 370, 372, 373, 568, 569,
	54, 202, 558, 559, 562, 213, 749, 353, 221, 648,
	267, 757, 752, 754, 342, 755, 515, 607, 445, 464,
	456, 483, 649, 705, 279, 301, 453, 385, 532, 608,
	345, 294, 366, 706, 321, 289, 521, 527, 304, 448,
	609, 610, 611, 541, 247, 277, 707, 454, 298, 300,
	299, 261, 575, 305, 41, 226, 480, 658, 646, 256,
	708, 614, 701, 613, 250, 283, 612, 328, 40, 32,
	615, 249, 544, 108, 276, 709, 376, 529, 616, 501,
	377, 245, 272, 274, 290, 711, 653, 349, 232, 528,
	430, 476, 359, 127, 254, 316, 378, 712, 502, 506,
	713, 533, 335, 315, 619, 714, 715, 379, 657, 284,
	716, 201, 341, 620, 280, 717, 257, 443, 535, 346,
	500, 211, 650, 222, 56, 236, 536, 504, 622, 510,
	513, 431, 375, 432, 718, 719, 720, 721, 357, 355,
	624, 356, 358, 626, 268, 296, 654, 623, 656, 61,
	196, 660, 508, 507, 509, 297, 674, 531, 488, 486,
	722, 723, 350, 217, 724, 725, 487, 23, 726, 727,
	539, 320, 352, 728, 729, 730, 625, 293, 630, 606,
	731, 732, 530, 503, 505, 255, 126, 645, 278, 733,
	354, 526, 363, 661, 652, 339, 291, 631, 735, 381,
	292, 235, 228, 540, 425, 426, 441, 442, 371, 736,
	429, 737, 738, 739, 740, 333, 332, 449, 364, 632,
	450, 273, 302, 655, 741, 633, 634, 742, 743, 265,
	248, 543, 534, 60, 517, 512, 367, 382, 455, 427,
	438, 433, 434, 436, 437, 440, 439, 435, 444, 520,
	446, 275, 242, 635, 636, 637, 428, 638, 12, 295,
	347, 639, 640, 641, 524, 365, 303, 266, 269, 491,
	237, 744, 745, 478, 479, 447, 240, 230, 121, 542,
	326, 700, 330, 383, 288, 59, 243, 53, 746, 747,
	270, 244, 659, 287, 451, 344, 662, 199, 82, -287,
	-282, -285, -286, -283, -284, 348, 231, 58, 95, 63,
	62, 82, -282, 645, 143, 484, 532, 190, 522, 523,
	529, -346, 530, 238, 425, 367, 241, -302, 199, -260,
	240, 521, 335, 354, 580, 244, 245, 272, 426, 432,
	200, 201, 37, 534, 533, 525, -297, -97, 451, -97,
	-97, 203, 451, -112, 232, 194, -148, 231, -67, 82,
	308, -67, 34, 82, -160, -289, -297, 82, -282, 41,
	82, 450, 524, 524, 84, 652, 247, 26, -442, -416,
	363, -441, -414, 191, 190, 15, 192, 271, 368, 369,
	334, 200, 13, 35, 734, 218, 370, 371, 11, 223,
	372, 373, 239, 14, 374, -443, -419, 386, 387, 388,
	389, 390, 391, 392, 393, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 418,
	419, 420, 421, 422, 423, 424, 81, 82, -282, -262,
	205, 371, 425, 447, 425, 425, -269, -268, 384, 510,
	143, -127, 704, -125, -133, -299, -297, -283, -284, -198,
	-470, 252, 547, -256, 330, -276, 204, -129, -131, -132,
	-152, -135, 702, -463, -130, -455, -148, -136, 82, 605,
	-108, 10, -107, -109, 9, 8, -108, -228, 22, 21,
	-265, -105, -228, -464, 78, -464, -127, -119, 134, -121,
	-297, -165, 100, -175, 33, 29, -174, 348, 231, -166,
	-202, -283, -201, -136, 143, -301, 132, 133, 140, 101,
	186, -186, -184, -185, -187, -189, -190, 226, 478, 479,
	81, 83, 91, 84, 85, 86, 87, 92, 93, 94,
	-289, -285, -284, -281, 576, 580, 583, 584, 589, -199,
	-463, 144, 145, 146, 147, 148, 149, 150, 151, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 66, 67, 574, 198, 557, 558, 481,
	559, 13, 560, 561, 562, 647, 220, 566, 103, 55,
	325, 548, 549, 553, -191, 550, 554, 555, 568, 569,
	570, 571, 205, 547, 138, 556, 593, 594, 595, 596,
	597, 598, 599, 600, 602, 603, 601, 577, 578, 579,
	581, 582, 585, 586, 587, 588, 590, 591, 592, 676,
	195, 191, 194, 99, 28, 30, 677, 253, 102, 462,
	496, 565, 21, 25, 214, 197, 484, 212, 142, 207,
	215, 310, 312, 190, 70, 678, 545, 311, 522, 672,
	669, 671, 670, 475, 473, 309, 679, 15, 31, 224,
	260, 680, 471, 192, 251, 106, 107, 681, 46, 45,
	8, 313, 225, 319, 472, 682, 683, 24, 73, 216,
	16, 210, 241, 756, 684, 334, 18, 125, 19, 685,
	666, 668, 667, 204, 119, 200, 748, 68, 258, 686,
	460, 465, 466, 467, 468, 469, 461, 96, 687, 688,
	116, 324, 64, 605, 37, 246, 702, 563, 323, 689,
	43, 42, 495, 499, 494, 322, 511, 117, 22, 551,
	552, 35, 690, 691, 234, 498, 459, 493, 703, 692,
	664, 263, 71, 384, 474, 760, 38, 74, 229, 380,
	351, 47, 97, 20, 259, 69, 39, 572, 122, 761,
	477, 206, 238, 693, 537, 262, 694, 123, 470, 704,
	218, 118, 452, 193, 362, 307, 219, 329, 336, 695,
	252, 124, 523, 663, 696, 567, 34, 223, 306, 458,
	208, 697, 264, 318, 308, 317, 698, 699, 343, 48,
	758, 675, 199, 44, 105, 497, 457, 492, 203, 564,
	239, 314, 9, 49, 36, 518, 14, 374, 72, 75,
	485, 482, 490, 489, 209, 759, 17, 327, 573, 651,
	538, 98, 673, 519, 546, -104, -104, -104, -245, 447,
	-252, -249, 533, 534, -250, -253, -247, -202, 510, 731,
	732, 532, 484, 531, -289, -297, -283, 348, 231, 143,
	577, 578, 579, 103, 481, 557, 593, 548, 550, 545,
	549, 547, 33, 594, 29, 94, 595, 574, 205, 13,
	186, 581, 582, 596, 597, 598, 66, 551, 552, 647,
	138, 100, 599, 600, 92, 602, 603, 325, 556, 67,
	601, 198, 587, 586, 585, 588, 560, 561, 93, 553,
	554, 555, 55, 591, 590, 592, -2, -6, -463, -148,
	-354, -341, -344, -289, -283, -285, -286, 227, -284, 215,
	-382, 82, -282, 212, -210, -104, 200, 202, 556, -263,
	205, -263, 239, 238, 271, -277, 264, -263, -263, 735,
	199, -276, 109, 109, -78, -148, -418, -413, -419, 199,
	-289, -262, -262, -262, -262, -262, -262, -262, -262, 82,
	-287, -148, 187, -83, -148, -140, 16, 16, 75, 75,
	82, -287, 82, 431, 375, 34, -261, 117, 17, 547,
	198, 199, 238, 239, 202, 271, -261, -348, 16, 119,
	242, 242, 242, 242, 242, 243, 242, -259, 524, 526,
	527, 528, -258, 16, 119, 17, -122, 117, 24, -463,
	-228, -228, -258, 242, 135, -99, 99, -99, 82, 450,
	203, -113, 233, -112, -113, -177, -155, 28, 6, 7,
	109, 34, 34, 81, 59, 34, -62, -61, -63, 294,
	295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 34, -397, 76, 187, -336, 510, 82, -410, -411,
	-148, 84, 84, 74, 354, 74, 77, 203, 77, 74,
	-444, 364, 76, -444, 332, 364, 365, 266, 330, 202,
	-444, -444, 332, -444, -444, -444, 351, -444, -444, 524,
	-444, -444, -444, 366, 367, -444, 522, 202, -444, -444,
	-444, -444, -444, 79, 26, -442, -416, 363, 29, 427,
	430, 537, 651, -54, 443, 444, -167, 26, -374, 143,
	376, 377, 378, 379, 375, 354, 380, 381, 382, 242,
	383, 199, 524, 375, -6, -125, 77, -232, -463, 77,
	-199, -463, 82, -329, -328, -325, -326, -327, -324, 33,
	199, -262, 271, -143, -145, -144, -146, 64, 68, 70,
	65, 66, 67, 525, 71, -272, 28, -135, -463, -124,
	-9, -134, -129, -463, -153, 122, -163, -272, -154, 72,
	204, 73, 28, -155, -156, -157, -158, -159, 6, 7,
	54, -463, -463, -7, -8, 26, 27, -14, -7, -12,
	-14, 26, 27, 26, 27, -7, -229, 24, 35, -178,
	84, 87, -202, -211, -214, -121, -297, 58, -116, 26,
	27, 65, 57, 63, 62, -225, 89, 16, -292, 99,
	97, 98, 116, -291, 28, 82, 81, -287, 187, -121,
	-169, 119, 100, 117, 118, 102, 129, 128, 139, 132,
	133, 134, 135, 136, 137, 138, 130, 131, 142, 109,
	110, 111, 112, 113, 114, 115, -257, -463, -136, -463,
	187, -463, 187, 188, 189, 187, -175, -175, -175, -175,
	-175, -175, -175, 81, 81, 81, -463, 187, 187, 187,
	-463, -463, -463, -463, -463, -194, -121, 651, -463, 199,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -205, -121, -463, -463, -467,
	-463, -467, -467, -188, -467, -463, -188, -188, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -463,
	-463, -463, -463, -463, -463, -463, -463, -463, -463, -188,
	-188, -188, -463, -256, -256, 16, -140, -141, -148, -151,
	-297, 77, -246, -251, 535, 537, 447, -250, -250, -296,
	-289, 81, 33, 143, -352, 109, 120, 34, 187, -210,
	78, 77, -304, -308, -310, -309, -311, -306, -307, -68,
	488, 486, 482, 481, 484, 487, 143, 485, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 34,
	226, 478, 479, 480, 662, 502, 503, 504, 505, 506,
	507, 508, 509, 456, 483, 649, 457, 458, 459, 460,
	461, 462, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, -304, -304, -304, -304, -304,
	-288, -382, 82, -287, 76, -228, -265, -289, -148, -278,
	208, -276, 82, 100, 82, -147, -289, -297, -160, -263,
	265, -422, -421, -413, -416, 675, -263, -277, -413, 270,
	268, 269, 77, 203, 77, 203, 79, -262, 74, -142,
	-148, 82, 82, -147, -160, -415, -413, -416, -161, -289,
	-297, -298, -297, -280, -285, -286, 676, 195, 26, 191,
	194, 99, 28, 30, 677, 253, 102, 462, 143, 577,
	578, 579, 496, 565, 21, 25, 214, 103, 197, 481,
	484, 212, 142, 207, 215, 310, 312, 557, 593, 190,
	70, 678, 548, 550, 545, 549, 311, 547, 522, 672,
	669, 671, 670, 475, 473, 309, 33, 679, 15, 594,
	31, 224, 260, 27, 680, 136, 471, 192, 604, 251,
	106, 107, 681, 46, 45, 8, 29, 313, 225, 94,
	319, 595, 472, 682, 683, 24, 73, 216, 16, 210,
	241, 756, 684, 334, 18, 574, 125, 19, 685, 666,
	668, 667, 205, 204, 119, 200, 748, 68, 258, 13,
	686, 460, 465, 466, 467, 468, 469, 461, 186, 96,
	687, 688, 116, 324, 64, 581, 582, 605, 50, 37,
	246, 596, 597, 702, 598, 563, 323, 689, 43, 42,
	495, 499, 494, 322, 511, 66, 117, 22, 551, 552,
	35, 690, 691, 647, 234, 498, 459, 493, 703, 692,
	664, 138, 263, 71, 100, 384, 599, 600, 92, 474,
	760, 38, 74, 229, 380, 351, 47, 97, 20, 259,
	69, 39, 572, 122, 761, 602, 477, 206, 238, 693,
	537, 262, 694, 123, 603, 470, 704, 218, 118, 452,
	193, 325, 556, 362, 307, 219, 329, 336, 67, 695,
	252, 124, 601, 198, 523, 663, 11, 696, 567, 34,
	223, 306, 458, 208, 697, 264, 318, 308, 317, 698,
	57, 699, 343, 48, 587, 586, 585, 588, 758, 65,
	560, 561, 675, 199, 44, 105, 497, 457, 492, 203,
	564, 239, 93, 314, 9, 49, 36, 518, 14, 374,
	72, 75, 553, 554, 555, 55, 485, 482, 490, 591,
	489, 590, 592, 209, 759, 104, 17, 327, 573, 651,
	538, 98, 673, 519, 14, 192, 77, 81, -240, 82,
	-287, 81, -240, -239, -240, -239, 242, -261, 81, -301,
	-121, -263, -263, -148, -148, -148, -148, -148, -148, -261,
	-261, -261, -261, -258, 16, -258, -261, -297, -297, -121,
	-175, -413, 549, 134, -261, -297, -100, -98, 217, -98,
	-100, 82, 82, 450, -91, -4, -18, -16, -17, -113,
	-9, 38, 28, 28, 82, -62, -62, 81, -62, 77,
	109, -62, -177, 78, -194, -289, -395, 748, 77, -412,
	28, 537, 538, 511, -446, 199, 241, 238, 74, -446,
	-441, 371, -415, -414, -413, -444, -445, -289, -444, -444,
	-444, 524, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -419, 74, 77, 354, 74, 16, 74, 203, -377,
	-379, 441, 442, 538, 539, 454, 375, 375, 375, 375,
	375, 375, -375, -140, 651, -375, -140, 203, 253, -133,
	28, -231, -230, -290, -283, -284, -285, -286, 227, -289,
	-280, -470, -329, -326, -325, -327, 484, 532, 142, 544,
	-148, -413, -161, -131, -131, -129, -131, 64, 64, 64,
	69, 64, 69, 69, 64, 64, -144, -299, -272, 77,
	-464, -464, -464, -9, -463, -299, -163, -272, 200, 200,
	200, 102, 16, 52, 26, 102, 16, 52, 26, 102,
	16, 52, 26, -118, -117, -120, 134, -121, -297, -175,
	-241, 96, 14, 119, 77, 23, 77, -227, 30, 31,
	187, -176, 59, 84, 87, -241, 77, -119, -148, -121,
	-121, -121, -192, 92, 100, 93, 94, -291, 227, 134,
	-298, -290, -285, -283, -284, 348, 231, -280, -175, -193,
	-199, -136, 88, 119, 117, 118, 102, -175, -175, -175,
	-175, -175, -175, -175, -175, -175, -175, -175, -175, -175,
	-175, -175, -300, 82, 81, 143, 82, -290, -117, -290,
	-174, 226, 478, 479, 92, -174, -289, -289, -106, 26,
	27, -290, 525, -289, -290, -106, -106, -106, -106, -106,
	77, -464, -117, -117, -117, -464, -121, -121, -117, -175,
	-117, -202, 81, -117, -202, 81, -117, -175, 563, 564,
	565, -117, -117, -106, -203, -204, 104, -202, -283, -286,
	348, 231, -117, -464, 84, -181, -182, 654, 663, 664,
	666, 669, 662, 661, 660, 658, 657, 656, 659, 655,
	673, 672, 671, 670, 668, 667, 665, -181, -181, -183,
	226, 480, 478, 479, -117, -118, -117, -117, -464, -464,
	-120, -117, -120, -117, -117, -120, -464, -464, -464, -117,
	-117, -117, -117, -117, -117, -117, -117, -117, -117, -117,
	-117, -464, 84, -150, 96, -148, -124, -148, -140, -465,
	16, 75, -465, 77, 187, -249, -252, 77, 536, 538,
	539, -246, -321, -322, 142, 74, 95, 81, -121, -290,
	-298, -228, -373, -341, -342, -343, -344, -366, 215, -381,
	206, 208, 210, 209, 49, -345, 216, 200, 50, -305,
	-331, 517, 518, -313, 76, -312, 76, -68, 482, 481,
	484, -312, 482, 489, -312, 489, 489, -312, -312, -312,
	482, 76, 76, -313, -313, -313, -333, 76, -333, 477,
	-334, 76, -334, -334, -334, -334, -305, -305, -305, -305,
	-305, -382, -121, -229, -293, 75, -232, 202, 735, -329,
	29, -329, -69, 253, 221, 187, 76, -161, 256, 257,
	-417, 77, 33, -423, 331, 84, 205, -148, 231, -148,
	-148, -413, -413, -419, -140, -148, 77, 77, 187, 714,
	714, -148, 77, 81, 82, 82, -177, -349, 16, 119,
	-261, -148, -177, -115, 227, 75, -467, -464, 452, 453,
	82, -91, -175, 38, 38, -61, -174, -289, 78, -396,
	204, 556, 81, -411, -299, 510, 538, -447, 134, -289,
	-446, -447, -450, 651, 203, 78, 77, -444, -446, 334,
	77, -446, -415, -413, -376, -378, 433, 435, 436, 434,
	437, 438, 439, 440, 77, 109, 109, 455, -380, 24,
	-375, 537, -375, 81, -175, -135, -464, 77, 187, -199,
	34, -351, -352, -351, -351, -81, -388, -358, -79, -386,
	122, 195, 192, 191, 267, 197, -324, 557, 250, 249,
	283, 284, 73, 35, 196, 193, -71, -80, 230, 289,
	235, 290, 194, 229, 291, 228, 292, 651, 287, 755,
	515, 607, 608, 641, 90, 611, 247, 41, 200, 621,
	614, 544, 617, 618, 376, 616, 620, 211, 624, 623,
	625, 627, 628, 629, 340, 632, 633, 634, 248, 635,
	636, 637, 365, 642, 9, -424, -423, -430, 74, -138,
	-137, 74, 75, -139, 74, -137, 64, 64, 64, -235,
	76, -299, -129, -464, -237, -289, -163, -299, -463, -463,
	-463, -175, -175, 119, -175, -175, 119, -175, -175, 119,
	-464, 77, 187, 77, -238, 40, 39, -289, 512, 60,
	-178, -178, -214, -255, 24, 16, 55, 55, -126, 16,
	-225, -225, 92, 93, 94, 187, -463, -193, -175, -175,
	-175, -115, 99, -464, -464, -118, -117, -117, -117, -117,
	-117, -121, -464, -464, -464, 77, 75, 28, -464, 75,
	119, -464, 16, 16, -464, 16, 16, -464, -464, 16,
	-175, -175, -175, -464, -464, -117, -206, -204, 106, -121,
	-464, -464, -464, -464, -464, 77, 77, 16, 77, -464,
	-464, -464, -464, -215, 572, -215, -464, -464, -464, -464,
	-464, -464, -215, -215, -215, -464, -464, -464, -464, -464,
	-464, -464, -464, -464, -464, -464, -464, -464, -236, 122,
	-148, 34, -236, 75, -124, -124, -151, -297, 134, -251,
	-254, 540, 537, 543, 82, 81, 143, 81, 187, -229,
	-357, -372, 77, -358, 755, 515, 607, -324, 608, 641,
	90, 611, 247, 41, 200, 621, 614, 544, 617, 618,
	376, 616, 620, 211, 624, 623, 625, 627, 628, 629,
	340, 632, 446, 633, 634, 248, 635, 636, 637, 365,
	642, 9, 651, 76, -350, -288, -381, 82, -282, 50,
	-345, -347, -345, -345, -345, -350, 82, -282, -350, 50,
	717, 92, 100, -320, -322, 143, -317, -318, -335, -338,
	-314, 28, 756, 520, 218, -344, 484, 532, 33, 74,
	515, 206, 50, 49, 210, 90, -332, 519, 84, 84,
	583, -312, 489, -312, -312, -312, -312, -312, -339, 81,
	-339, 84, -333, 84, 78, 74, -289, 28, -148, 675,
	-70, 13, 14, 15, -289, -398, -399, -400, -289, 119,
	258, 259, 74, -433, 362, -421, 332, 341, 99, 21,
	651, -454, 100, 203, 203, -392, 219, 214, -148, -413,
	-289, 74, 74, -240, -164, 17, 82, 82, -258, -261,
	-175, -416, 244, 245, -175, -175, -149, 96, -412, 203,
	187, 187, -447, 203, 353, -415, -289, -447, 351, 334,
	-447, 16, 77, 109, 109, 109, 109, 109, 109, 109,
	109, -379, 76, 76, 385, 35, -230, -290, -351, 82,
	81, 143, 82, 81, 143, 81, -387, 77, -388, 195,
	192, 283, 284, -386, 21, -273, -345, -394, -393, -343,
	-344, 122, 207, 215, 215, 212, -273, -345, 206, 216,
	122, 215, 212, -273, 200, -351, -273, 484, 142, 203,
	37, 37, 365, 122, 365, 122, -351, -273, 207, -345,
	-270, 215, -271, 203, 28, 288, 122, 122, 122, 122,
	122, 122, 122, 122, 293, 675, -351, -351, -351, -351,
	-351, -351, -351, -351, 613, 613, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -355,
	-451, 81, -461, 90, 271, 340, 82, -282, -280, 84,
	86, 85, -351, -351, -436, 651, -162, 193, 277, 273,
	-121, 76, -121, -233, -289, -235, -464, 77, -163, -233,
	-233, -233, 99, 203, -463, 99, 203, -463, 99, 203,
	-463, -272, -120, 134, -298, 81, 77, 81, 81, 513,
	61, -148, -164, 604, -124, -119, 134, -290, -118, -115,
	99, -175, -464, -464, -464, -464, -464, -464, -303, 143,
	481, 484, 226, 480, 473, 471, 470, 472, 500, 486,
	517, 478, 518, 662, -300, -303, -300, -175, -175, -175,
	-175, -175, -175, 16, 16, 16, 648, -210, 108, -121,
	105, -175, -175, -175, -175, -289, -220, -463, -215, -215,
	-215, -215, -215, -215, -216, -215, -216, -216, -216, -216,
	-216, -216, -216, -216, -216, -216, -216, -171, -172, 34,
	-170, -9, -463, -173, -471, 55, 59, -463, -243, -248,
	-202, -283, -286, 227, -164, -124, -164, -164, 187, 537,
	541, 542, -372, -351, -351, -351, 532, 484, 142, -351,
	-351, -351, -351, -351, 613, 613, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, 447, -351, -351, -351, -351, -351, -351,
	-355, -451, -351, -351, 675, -368, -367, 82, -287, 206,
	49, -381, -350, -350, -350, -350, -350, -101, -288, 92,
	-463, 757, 84, -148, 34, 82, 143, 81, -174, 133,
	-301, -166, -185, -463, 93, 94, 548, 549, 553, 550,
	554, 555, 568, 569, 570, 571, 545, 551, 552, 14,
	50, 50, 50, 81, 78, 78, 78, -312, 78, 77,
	78, 77, 78, 77, -168, 709, 710, -148, -224, -232,
	84, 74, 78, 77, -304, -289, -289, -289, 273, -436,
	337, -434, -432, 343, 344, 345, 346, 347, -416, 342,
	-423, 339, 81, 82, 81, 674, 708, 729, 701, 29,
	-148, -413, -234, 76, -233, -234, -121, -177, -236, 199,
	-415, 134, 134, -289, 203, -415, 351, -449, 651, 16,
	16, 351, 16, -415, -378, 81, 81, 81, 84, 84,
	84, 84, 84, -140, -140, 81, 82, 81, 143, -357,
	-79, 195, 192, 283, 284, -359, -360, -363, -362, 123,
	622, 689, 76, -340, 82, -287, -350, -266, 208, 206,
	-463, 82, -288, -288, -288, -289, 50, 50, -237, -288,
	-288, -289, -288, 33, 280, 281, 282, 82, 34, -351,
	484, -237, 26, -237, 26, 33, 337, 285, 286, -340,
	-288, -289, -148, 216, 212, -288, -237, 26, 84, -237,
	-289, -237, 26, -237, 26, -237, 26, -237, 26, 643,
	-355, -121, -355, -461, -461, 81, 81, 81, -351, -351,
	-103, 644, 217, -461, 81, -103, -461, -451, 81, -102,
	217, 220, 222, -355, -355, -355, -461, -461, -461, -461,
	81, -356, 33, 615, 476, 610, 631, 609, 82, 92,
	81, 81, -461, 33, -461, 33, -461, -355, 638, -461,
	-463, -437, -435, 355, 356, 357, 358, -429, 249, 250,
	203, 278, 100, -426, 754, 274, -233, 78, 77, -153,
	-289, -464, -464, -464, -175, -175, -175, -175, -175, -175,
	-175, -175, -175, -299, 187, 527, -289, -319, -320, -207,
	18, -225, -464, -175, -216, -216, -216, -216, -216, -464,
	-313, -313, -313, -313, -334, 477, -313, 461, -313, 461,
	-464, -464, -464, -464, 24, 24, 24, 24, -464, -175,
	-175, -175, -463, -114, 567, -121, 77, 77, -464, -464,
	-294, 82, -242, 74, -242, -243, -272, -9, -464, -231,
	-173, -463, 11, 55, 59, 651, 199, -197, -200, -470,
	-237, -164, 77, -352, -352, -352, -352, -210, -164, -355,
	-355, -355, -351, 34, -351, -461, -461, 81, 81, 81,
	-351, -351, -103, -461, 81, -103, -461, -451, 81, -102,
	-355, -355, -355, -461, -461, -461, -461, 81, -356, 82,
	92, 81, 81, -461, 33, -461, 33, -461, -355, 638,
	-461, -463, 643, 78, 77, -313, -313, 50, -347, 76,
	-175, 28, 76, 82, 143, 81, -174, 81, -175, -191,
	81, 84, 84, 76, -226, 28, -454, -148, -401, -402,
	-403, 90, 650, 100, 260, 261, 217, 262, 263, 264,
	-400, -304, -304, -304, -426, -439, -440, -438, 340, 360,
	361, 348, 99, 81, 81, 81, -425, 331, 99, 340,
	21, 28, 21, 28, 81, 81, 81, 81, 84, 75,
	-233, -261, -319, -148, -449, -415, -449, 334, -415, -415,
	16, -415, 78, 78, -364, 630, -463, 527, 619, 50,
	-340, -212, 220, 221, -304, -304, -293, -347, 50, -383,
	-385, 122, -288, 709, 710, 709, 710, 34, 192, 747,
	717, -340, -351, -300, 34, 365, 365, 365, 365, -212,
	-271, 203, 50, -288, 203, 365, 365, 96, 651, 81,
	81, 612, 626, -452, -451, -435, 84, 84, 84, 84,
	-316, 90, 74, -161, 278, -430, 74, -180, -174, -185,
	-174, 78, -289, 77, 77, 77, 134, -463, -404, -259,
	-208, 19, 21, -319, 82, -319, 82, -175, -175, -175,
	-175, -464, -464, -464, -175, -464, 81, -175, -175, -196,
	122, 32, -242, -299, -464, -173, -463, -464, -464, 77,
	-199, -463, -464, -210, -248, -121, -121, -121, -121, -228,
	-300, -351, -323, -451, 81, 81, 81, 612, 626, -452,
	-370, -369, 75, 211, 90, 616, 634, 747, 717, -367,
	-227, -227, -350, -350, -233, -464, -463, -233, -464, 78,
	78, -368, -9, -224, 24, -225, -403, 81, 264, 260,
	264, 264, 264, 264, 265, -430, -420, 90, 338, -438,
	349, 715, 333, 362, 84, 84, 121, 35, 36, -432,
	21, 651, -423, 339, 81, 81, 339, 81, 81, 331,
	-454, 41, 78, -404, -448, 28, -449, -448, 351, -415,
	-361, 639, 84, -175, -463, -463, -275, 267, 78, 82,
	-305, -305, 76, -350, -350, -464, 77, -289, 33, 33,
	-212, -300, -300, -288, -289, -288, 203, -288, -463, 199,
	77, -464, 328, 81, 367, -162, -431, -182, -175, -175,
	-175, -456, -457, -290, 722, -405, 43, -408, 44, -218,
	573, -209, -121, -195, -123, -121, -464, -464, -464, -464,
	-111, 119, 651, -464, -464, -210, 21, 50, -235, -173,
	-9, -463, -200, -464, -228, -300, -464, -369, -451, -351,
	81, -351, -351, 78, -330, 759, 758, -175, 78, 78,
	-224, -226, 251, -226, 41, 41, 256, 257, -429, 81,
	81, 33, 350, 186, 33, 84, 186, 575, 339, 81,
	82, 340, 340, 21, -175, -405, -413, -448, -384, -463,
	21, -464, -233, -175, -463, 109, -368, -293, 76, -385,
	55, -175, 142, 142, 203, -288, -383, -148, -451, -224,
	-429, 132, -427, 275, -464, -464, -464, -464, 77, -304,
	24, 81, 606, -406, -407, -337, 47, 21, -217, -219,
	-289, 77, -464, 649, 71, 652, -221, 124, 123, -194,
	14, -9, 84, 81, 81, 218, -464, -371, -370, -279,
	651, -9, 252, -27, -4, -16, -17, -18, -19, -21,
	-72, -22, -23, -28, -29, -24, -82, -86, -87, -88,
	-84, -95, -93, -94, -90, -89, -32, -34, -35, -37,
	-40, -41, -38, -39, -36, -30, -33, -42, -25, -43,
	-44, -45, -50, -51, -31, -52, -46, 103, 205, 446,
	309, 320, 321, 322, 82, 325, 327, 323, 324, 319,
	329, 445, -316, 84, 33, 84, 33, 352, 340, 28,
	84, -315, 204, 651, -383, -362, -464, -464, -233, 84,
	78, 76, -368, 236, -351, -300, -288, -464, -71, 651,
	-27, -316, 186, -428, 276, -180, -464, -457, -458, 606,
	29, 728, 527, 81, 48, 44, -409, 45, 46, 81,
	77, 28, -123, 61, 650, 653, -464, -222, 102, -223,
	121, 575, -179, 84, 186, -222, -243, -464, -148, -330,
	212, 279, 510, -224, -213, 254, 255, -224, -121, -56,
	-57, 104, -121, 82, -66, -295, 312, 313, 314, -290,
	82, 82, -55, -27, 80, -55, -121, 82, 82, -466,
	16, 58, -175, 108, -55, 328, 658, 658, 81, -235,
	84, 332, -464, 619, 50, -464, -371, -368, 78, 237,
	-300, 288, -224, 328, -174, -180, -431, -272, 81, 606,
	-463, 527, 21, 21, 21, 21, -219, -220, 61, -223,
	126, 127, 252, 126, 127, -174, 76, 351, 212, 212,
	-279, -224, 82, 82, -56, 108, 106, -57, -121, 105,
	310, 311, 315, -304, 77, 762, 445, 322, 325, 327,
	762, 328, 82, 16, 762, -224, -244, 34, 43, 124,
	33, 337, 26, -416, -463, -275, 78, -371, -463, -224,
	-182, -431, -299, -459, -460, 377, 92, 33, 81, -456,
	-463, 81, 81, 81, 81, 651, 99, -181, -233, 351,
	351, -226, 108, 106, 103, -55, 105, -55, 24, 24,
	24, -319, -290, 108, -27, 108, -55, -55, -55, -121,
	326, -55, 96, 108, -27, -243, 8, -175, -463, -371,
	-175, 234, -27, -460, 92, 33, -459, 92, 33, 74,
	74, -174, -464, -456, 652, -223, 78, -20, -26, -19,
	-25, -16, -17, -18, 445, 651, 103, -55, 762, -55,
	762, -67, 84, -9, -65, -64, 84, -67, 317, 100,
	318, 82, -321, 322, 82, 762, 762, 762, 328, -121,
	762, -60, 82, -224, -416, -464, -175, -464, -464, -224,
	74, -174, 74, -174, 681, 377, 681, 377, 74, -464,
	653, -390, -391, 74, -224, -55, 108, -127, 762, 108,
	762, 108, 106, -58, -59, 107, -27, 77, 316, 33,
	108, 108, 326, -55, 108, 108, 77, -365, 640, -464,
	74, 74, 377, 377, 681, 377, -391, 74, -390, 74,
	15, 14, 762, 108, 103, 205, -55, 108, 106, -59,
	-121, -64, -175, 82, 322, -121, 762, 325, 327, 82,
	84, -365, 74, 74, -389, 219, 214, 217, 34, -389,
	108, 103, 762, 205, -55, 105, 82, 108, 108, 377,
	681, 213, 33, 92, 108, 762, -55, 325, 327, 205,
	108, 762, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1725, 1223, 1725, 0, 1223, 0, 1223, 0, -2,
	133, 928, 929, 930, 931, 0, 1806, 0, 0, 0,
	0, 0, -2, 1185, 1186, 1189, 1186, 1186, 1215, 0,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	0, 0, 0, 0, 730, 0, 64, 0, 1329, 2754,
	-2, 1219, 1220, 1221, -2, -2, 0, 53, 0, 60,
	2, 1733, 0, 1236, 1225, 1733, 0, 0, 49, 0,
	0, 1223, 1223, 1223, 87, 88, 0, 119, 0, 121,
	0, 0, 1725, 1223, 0, 0, 0, 1810, 1810, 333,
	1810, 1810, 1825, 0, 1828, 331, 0, 1807, 1823, 1824,
	1826, 0, 0, 0, 0, 0, 1808, 1808, 1808, 1808,
	1808, 1808, 1808, 1808, 0, 0, 1099, 1420, 1422, 1423,
	1424, 1425, 1837, 1838, 2745, 2746, 2747, 2748, 2749, 2750,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2751, 2752, 2753, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 2715, 2716, 0, 0, 0,
	1104, 1105, 1106, 1107, 1108, 2739, 2740, 2741, 2742, 2743,
	2744, 1117, 1118, 0, 0, 0, 1176, 0, 1176, 1136,
	1137, 0, 1139, 0, 0, 0, 0, 0, 0, 0,
	1173, 1151, 1154, 1158, 0, 1733, 1733, 1173, 1164, 0,
	782, 783, 784, 1181, 1182, 1170, 1183, 1188, 1187, 1196,
	1196, 0, 1187, 1217, -2, 1217, 1357, 0, 459, 461,
	0, 482, 0, 485, 488, 1426, 0, -2, -2, 1848,
	1202, 0, 0, 1874, 1875, 0, 0, 0, 0, 0,
	2612, 231, 347, 272, 272, 272, 272, 272, 272, 272,
	0, 272, 272, 0, 272, 272, 272, 2628, 272, 0,
	272, 272, 272, 272, 272, 230, 346, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 336, 337, 338, 0,
	0, 0, 734, 1190, 739, 737, 0, 731, 728, 729,
	0, 80, 0, 67, 81, 1757, 1379, 1380, 1381, 1326,
	0, 1330, -2, 0, 1808, 0, 1813, 69, 1316, 1317,
	1318, -2, 0, 0, 1324, 1325, -2, 1476, 1837, 0,
	0, 1230, 0, 0, 1227, 1233, 0, 1740, 0, 0,
	117, 1224, 47, 48, 2755, 59, 0, 0, 1252, 1307,
	0, 1435, 2309, 1441, -2, 2222, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 2167, 0, 0, 0, 0, 0,
	2264, 1514, 1515, 1516, 1517, 1518, 1519, 2475, 2693, 2694,
	1703, 1707, 1708, 1709, 1710, 1711, 1712, -2, -2, -2,
	1686, 1687, 1701, 0, 2745, 2746, 2748, 2749, 2750, 1775,
	0, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 2290, 2353, 2241, 2358, 2186, 2751, 2178,
	2752, 2255, 2382, 2383, 2753, 2298, 2724, 0, -2, 2407,
	2346, -2, -2, -2, 1582, -2, -2, -2, 2735, 2736,
	2721, 2726, 2248, 2196, 2306, 2347, 2187, 2208, 2227, 2276,
	2277, 2279, 2311, 2312, 2330, 2339, 2357, 2168, 2169, 2170,
	2271, 2272, 2379, 2378, 2377, 2380, 2413, 2411, 2414, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2171, 2172, 2173, 2174, 2175, 2177, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2188, 2189, 2190, -2, 2195, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2206, 2207, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2223, 2224, 2226, 2228, 2229, 2230, 2231, 2232, 2233,
	2234, 2235, 2236, 2237, 2238, 2239, 2240, 2242, 2243, 2244,
	2245, 2246, 2247, 2249, 2250, 2251, 2252, 2253, 2254, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2265, 2266, 2267,
	2268, 2269, 2270, 2273, 2274, 2275, 2278, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2291, 2292, -2,
	-2, 2295, 2296, 2297, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2307, 2308, 2310, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2340, 2341,
	2342, 2343, 2344, 2345, 2348, 2349, 2350, 2351, 2352, 2354,
	2355, 2356, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2381, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2408, 2409, 2410, 2412, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 0, 1812, 1812, 0, 104, 2695,
	0, 1782, -2, -2, 1784, 0, 0, 0, -2, -2,
	-2, -2, 2179, -2, 1686, 0, 0, 0, 0, 2167,
	2168, 2169, 2170, 2176, 2178, 2186, 2187, 2191, 2192, 2193,
	2194, 2196, 2205, 2208, 2222, 2225, 2227, 2241, 2248, 2255,
	2264, 2271, 2272, 2276, 2277, 2279, 2290, 2293, 2294, 2298,
	2306, 2309, 2311, 2312, 2313, 2330, 2339, 2346, 2347, 2353,
	2357, 2358, 2377, 2378, 2379, 2380, 2382, 2383, 2394, 2404,
	2405, 2406, 2407, 2411, 2413, 2414, 120, 1725, 0, 122,
	0, 539, 540, 0, 0, 0, 0, 0, 0, 0,
	808, 1831, 1832, 0, 1733, 1236, 0, 0, 331, 0,
	0, 0, 0, 0, 1810, 326, 0, 0, 0, 0,
	1810, 333, 0, 0, 1079, 0, 1080, 0, 341, 1808,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	1124, 1098, 0, 1100, 98, 1103, 0, 0, 0, 0,
	1121, 1122, 1125, 0, 1167, 1176, 1127, 0, 0, 1810,
	1810, 0, 0, 0, 0, 0, 1135, 0, 810, 811,
	1176, 1141, 1142, 1176, 1176, 1176, 1173, 0, 1173, 1148,
	1171, 1172, 1176, 0, 0, 0, 1153, 0, 0, 0,
	1161, 1162, 1176, 1166, 0, -2, 1194, -2, 1203, 0,
	0, 79, 1218, 1217, 0, 1222, 1358, 0, 0, 0,
	0, 0, 0, 463, 0, 0, 484, 465, 0, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 1357, 0, 0, 1843, 1849, 1207, 1865, 1866,
	0, 1876, 1877, 276, 0, 276, 0, 0, 0, 0,
	198, 272, 0, 200, 272, 272, 272, 0, 272, 272,
	207, 208, 272, 210, 211, 212, 272, 214, 215, 272,
	217, 218, 219, 272, 272, 222, 272, 272, 225, 226,
	227, 228, 229, 345, 0, 0, 0, 2612, 1809, 0,
	0, 0, 0, 735, 740, 741, 736, 738, 707, 0,
	0, 0, 0, 712, 713, 714, 715, 0, 0, 718,
	719, 724, 724, 0, 65, 66, 0, 0, 0, 1329,
	1327, 0, -2, 933, -2, 683, 684, 685, 0, 680,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	1385, 0, 0, 0, 0, 0, 1822, -2, 0, 0,
	0, 0, 1314, 0, 1331, 0, 1333, 0, -2, 0,
	0, 0, 1822, 1337, 1338, 1339, 1340, 1341, 0, 0,
	0, 1478, 0, 57, 58, 1231, 1232, 54, 62, 63,
	55, 1228, 1229, 1234, 1235, 56, 73, 0, 0, 1734,
	1737, 1738, 1739, 1726, 1727, 1730, 0, 0, 73, 1237,
	1238, 1239, 1240, 1241, 1242, 0, 1226, 0, 1253, 0,
	0, 0, 0, 1308, 0, 1311, 1312, 1313, 0, 1439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1442, 0, 1456, 0,
	0, 0, 0, 0, 0, 0, 1507, 1508, 1509, 1510,
	1511, 1512, 0, 1704, 1705, 1706, 1243, 0, 0, 0,
	1243, 1243, 1243, 1243, 1243, 0, 1482, 2420, 0, 2385,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1243, 0, 1678, 0, 0, 1579,
	0, 1580, 1581, 1583, 1597, 0, 1584, 1585, 0, 0,
	0, 0, 0, 1478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1592,
	1593, 1594, 0, 0, 0, 0, 0, 0, 98, 100,
	1420, 0, 105, 107, 0, 0, 2695, 1785, 1786, 674,
	1800, 1801, 1802, 1803, 0, 771, 772, 1798, 0, 1733,
	825, 0, 556, 653, 574, 575, 576, 643, 578, 645,
	0, 645, 645, 1675, 1676, 645, 645, 645, 620, 621,
	622, 623, 624, 626, 627, 628, 629, 630, 0, 0,
	602, 643, 643, 643, 606, 633, 634, 635, 636, 637,
	638, 639, 640, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 592, 593, 648, 648,
	650, 650, 650, 650, 650, 556, 556, 556, 556, 556,
	0, 807, 1034, 1035, 0, 1740, 117, 1829, 1757, 0,
	0, 333, -2, 0, -2, 0, 1415, 0, 0, 0,
	0, 146, 369, 349, 131, 0, 0, 327, 332, 328,
	329, 330, 0, 0, 0, 0, 340, 0, 0, 1087,
	96, 1088, 1089, 1090, 1091, 1092, 342, 1093, 1094, 371,
	0, 1421, 1839, 1840, 1841, 1842, 1878, 1879, 1880, 1881,
	1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901,
	1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
	1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951,
	1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971,
	1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,
	2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031,
	2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041,
	2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051,
	2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061,
	2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071,
	2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081,
	2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 0, 0, 0, 1109, 1111, 1115,
	1116, 1110, 1112, 1119, 1113, 1120, 1165, 1126, 1177, 0,
	1179, 0, 0, 1357, 1131, 1132, 1133, 1134, 812, 1140,
	1143, 1144, 1150, 1176, 0, 1357, 1149, 1174, 1175, 1152,
	1470, 1155, 1595, 0, 1163, 1184, 1200, 0, 1195, 0,
	1201, 1205, 1204, 0, 1208, 1211, 1212, 1213, 1214, 79,
	1210, 0, 0, 0, 1216, 460, 462, 464, 483, 0,
	0, 486, 487, 489, 0, 1427, 1845, 0, 0, 1868,
	0, 1870, 1872, 0, 0, 277, 278, 279, 276, 0,
	232, 0, 294, 348, 0, 199, 0, 274, 201, 202,
	203, 272, 205, 206, 209, 213, 216, 220, 221, 223,
	224, 344, 276, 0, 0, 276, 0, 0, 0, 733,
	752, 0, 0, 1191, 1192, 0, 708, 709, 710, 711,
	726, 717, 720, 724, 0, 721, 724, 0, 0, 82,
	0, 0, 1759, 1762, 1763, 1764, 1765, 1766, 1767, 1835,
	1836, 0, 932, 686, 687, 688, 0, 769, 769, 769,
	679, 354, 381, 1375, 1377, 0, 1372, 1383, 1384, 1386,
	0, 1388, 0, 0, 1391, 1392, 1393, 1361, 0, 0,
	1323, 1475, 1477, 0, 0, 1429, 1335, 0, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 0, 1352, 0,
	0, 0, 1353, 0, 1479, 1480, 1248, 1249, 0, 0,
	45, 0, 1741, 0, 0, 0, 0, 1729, 1731, 1732,
	0, 0, 1714, 0, 0, 70, 117, 117, 50, 1436,
	1437, 1438, 1440, 1457, 0, 1459, 1461, 1309, 1310, 1254,
	0, 1688, -2, 1690, 1691, -2, -2, -2, 1447, 1448,
	1472, 1473, 1474, 0, 0, 0, 0, 1470, 1452, 0,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1506, 1610, 1611, 1612, 0, 1699, 0, 1700,
	1504, 0, 0, 0, 1713, 1505, 1694, 1513, 1478, 1244,
	1245, 1697, 1698, 1695, 1696, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 1554, 0, 0, 0, 0,
	0, 1488, 1703, 0, 1488, 1703, 0, 0, 2280, 2392,
	2172, 0, 0, 0, 1684, 1681, 0, 0, 0, 0,
	2739, 2740, 0, 1596, 0, 0, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 0, 0, 0,
	1280, 1281, 1282, 1283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 0, 102, 0, 1419, 0, -2, 0, 0,
	94, 95, 0, 0, 0, 1783, 0, 0, 0, 110,
	111, 106, 1787, 675, 0, -2, 1794, 1703, 1796, 1688,
	0, 1740, -2, 541, 542, 543, 544, 0, 789, 798,
	0, 0, 787, 0, 789, 789, 0, 785, 786, 547,
	656, 654, 655, 577, 0, 607, 0, 645, 645, 1675,
	1676, 609, 645, 645, 612, 645, 645, 615, 618, 619,
	625, 0, 0, 603, 604, 605, 594, 0, 595, 648,
	597, 0, 598, 599, 600, 601, 548, 549, 550, 551,
	552, 806, 0, 296, 0, 0, 0, 0, 0, 126,
	1811, 127, 0, 392, 393, 0, 298, 0, 334, 335,
	148, 0, 0, 350, 0, 137, 0, 536, 537, 0,
	1081, 0, 1083, 339, 1095, 1086, 0, 0, 0, 0,
	0, 99, 0, 1178, 1128, 1129, 1130, 1433, 0, 0,
	1145, 1173, 1176, 1168, 0, 0, 1156, 0, 1199, 1197,
	1206, 1209, 1354, 0, 0, 466, 467, 468, 490, 0,
	1846, 1847, 1844, 1867, 0, 1871, 1873, 0, 280, 282,
	0, 0, 190, 0, 0, 273, 0, 204, 0, 0,
	0, 0, 196, 0, 732, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1193, 716, 0,
	722, 0, 723, 705, 706, 83, 1758, 0, 0, 1328,
	769, 0, 770, 0, 0, 1042, 935, 936, 937, 1044,
	0, -2, 1040, 1040, 769, 1040, 0, 0, 0, 0,
	0, 0, 974, 769, 1040, 1817, 0, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1032, 1033, 769,
	769, 769, 769, 769, 769, 769, 769, 0, 0, 769,
	769, 769, 769, 769, 769, 769, 769, 769, 769, 769,
	769, 769, 769, 769, 769, 769, 769, 769, 769, 769,
	769, 769, 0, 769, 769, 158, 355, 1077, 0, 1369,
	1376, 0, 0, 1370, 0, 1371, 1387, 1389, 1390, 1319,
	0, 1361, 1315, -2, 0, 1365, 1334, 1429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 0, 74, 2488, 0, 77, 0, 0,
	1735, 1736, 1728, 0, 1804, 1805, 1715, 1716, 1433, 0,
	0, 1246, 1458, 1460, 1462, 0, 1478, 1449, 1470, 1453,
	0, 1450, 0, 1444, 1552, 0, 0, 0, 0, 0,
	0, 1483, 1550, 1551, 1553, 0, 0, 0, 1557, 0,
	0, 1561, 0, 0, 1603, 0, 0, 1604, 1566, 0,
	0, 0, 0, 0, 1572, 1725, 0, 1682, 0, 0,
	1575, 1576, 1577, 1578, 1598, 0, 0, 0, 0, 1599,
	1600, 1601, 1602, 1539, 0, 1540, 0, 0, 0, 0,
	0, 0, 1547, 1548, 1549, 1263, 1263, 1263, 1263, 1263,
	1263, 1263, 1263, 1263, 1263, 1263, 1263, 1591, 0, 0,
	1418, 0, 1433, 0, 1433, 1433, 101, 0, 1428, 108,
	109, 0, 0, 115, 676, 677, 678, 1795, 0, 297,
	538, 826, 679, 903, 769, 769, 769, 0, 769, 769,
	769, 769, 769, 0, 0, 769, 769, 769, 769, 769,
	769, 769, 769, 769, 769, 769, 769, 769, 769, 769,
	769, 769, 0, 769, 769, 769, 769, 769, 769, 0,
	769, 769, 0, 0, 0, 0, 797, -2, -2, 789,
	789, 789, 788, 789, 789, 780, 790, 791, 781, 804,
	557, 558, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	665, 0, 700, 702, 0, 0, 573, 657, 0, 0,
	0, 608, 645, 616, 610, 611, 613, 614, 0, 641,
	0, 0, 596, 0, 822, 0, 1830, 116, 1757, 0,
	0, 394, 395, 396, 1416, 0, 299, 300, 0, 0,
	0, 0, 0, 158, 0, 370, 0, 0, 0, 0,
	0, 134, 0, 0, 0, 1085, 1096, 1097, 97, 343,
	372, 0, 0, 1114, 1138, 0, 813, 814, 1357, 1147,
	1471, 1157, 1159, 1160, 1355, 1356, 102, 0, 1869, 0,
	0, 0, 0, 0, 0, 292, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 0, 0, 725, 1760, 1761, 0, 692,
	693, 694, 695, 696, 697, 698, 902, 679, 1043, 0,
	0, 0, 0, 1045, 910, 0, 789, 0, 0, 944,
	945, 0, 1041, 924, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	966, 967, 968, 0, 969, 0, 0, 0, 0, 0,
	0, 0, 1818, 1819, 1820, 986, 0, 0, 0, 0,
	0, 0, 0, 0, 1066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1025,
	1026, 883, 884, 885, 886, 887, 899, 900, 901, 888,
	889, 890, 0, 0, 1036, 0, 384, 0, 0, 0,
	1373, 0, 1378, 0, 1363, 1320, -2, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 1250, 0, 0, 0, 75, 666, 1742,
	1743, 46, 1717, 71, 72, 117, 1255, 1702, 0, 1451,
	0, 1454, 1520, 1263, 1263, 1263, 1263, 1263, 0, 643,
	643, 643, 1660, 643, 650, 1663, 1665, 1666, 1667, 643,
	1669, 643, 1672, 1674, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 1574, 1685,
	0, 0, 0, 0, 0, 1256, 1257, 1259, 1541, 1542,
	1543, 1544, 1545, 1546, 1524, 1264, 1525, 1526, 1528, 1529,
	1531, 1532, 1533, 1534, 1536, 1537, 1538, 1768, 1768, 0,
	-2, 1749, 0, 1746, 1329, 1755, 1756, 0, 1433, 1776,
	0, 0, 0, 0, 1725, 1433, 92, 93, 0, 112,
	113, 114, 827, 0, 0, 0, 769, 0, 769, 0,
	0, 0, 0, 0, 769, 769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 0, 0, 0, 0,
	869, 870, 0, 0, 0, 0, 792, 643, 643, 0,
	787, 796, 773, 775, 776, 777, 779, 0, 805, 559,
	0, 0, 570, 0, 0, 671, 672, 673, 658, 0,
	0, 661, 662, 0, 1445, 1446, 1595, 1595, 1595, 1595,
	1595, 1595, 0, 0, 0, 0, 1595, 1595, 1595, 0,
	699, 701, 703, 704, 644, 646, 647, 617, 631, 0,
	632, 0, 651, 0, 809, 823, 824, 0, 118, 0,
	137, 0, 306, 0, 302, 0, 0, 0, 0, 166,
	149, 150, 151, 153, 154, 0, 0, 0, 147, 0,
	352, 0, 357, 358, 359, 0, 0, 0, 0, 0,
	1082, 1084, 0, 0, 1360, 1102, 1434, 1176, 666, 0,
	292, 281, 283, 284, 0, 292, 295, 191, 0, 0,
	0, 0, 0, 197, 743, 744, 745, 746, 747, 748,
	749, 750, 751, 0, 0, 727, 689, 690, 691, 934,
	938, -2, 1040, 0, 0, 916, 905, 0, 0, 914,
	915, 911, 0, 1037, 0, 0, 1829, 787, 1825, 0,
	0, -2, 946, 947, 970, 971, 972, 0, 1047, 0,
	0, 0, 0, 952, 953, 954, 955, 0, 769, 0,
	0, 0, 0, 0, 0, 975, 976, 977, 978, 1037,
	0, 0, 982, 0, 0, 0, 0, 0, 1054, 0,
	0, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1031,
	988, 989, 990, 991, 992, 993, 994, 995, 0, 0,
	998, 879, 880, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	876, 877, 878, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 891, 892, 893, 894, 895, 896, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 0, 1029,
	0, 159, 160, 0, 0, 0, 0, 388, 385, 386,
	0, 382, 0, 381, 0, 0, 0, 1362, 0, 1332,
	1366, 1430, 1431, 1432, 1342, 1343, 0, 1345, 1346, 0,
	1348, 1349, 0, 1368, 0, 0, 78, 1858, 667, 1722,
	0, 1247, 1521, 1455, 1523, 1527, 1522, 1530, 1535, 1555,
	1655, 666, 666, 1661, 1662, 1664, 1668, 1670, 1671, 1673,
	1559, 1556, 1558, 1560, 0, 0, 0, 0, 1567, 0,
	0, 0, 0, 0, 0, 1683, 0, 0, 1588, 1589,
	1261, 1260, 84, 0, 85, 1768, 0, 0, 0, 0,
	0, 0, -2, -2, -2, 2151, 2115, 1753, 1770, 0,
	0, 1725, 0, 0, 0, 0, 0, 1733, 91, 828,
	829, 830, 0, 769, 0, 833, 834, 836, 837, 838,
	0, 0, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 0,
	873, 0, 875, 757, 0, 1730, 1730, 789, 789, 0,
	0, 0, 0, 668, 669, 670, 659, 660, 0, 664,
	642, 0, 0, 0, 0, 116, 136, 0, 117, 307,
	308, 0, 0, 0, 313, 0, 0, 0, 0, 0,
	301, 303, 304, 305, 381, 184, 167, 168, 0, 0,
	0, 0, 0, 155, 156, 157, 351, 0, 0, 356,
	0, 0, 0, 0, 138, 139, 0, 141, 137, 0,
	0, 1146, 1858, 1417, 285, 292, 285, 0, 192, 194,
	0, 193, 754, 755, 918, 0, 0, 0, 0, 912,
	0, 940, 1038, 0, 556, 556, 0, 789, 789, 0,
	1069, 0, 973, 948, 950, 949, 951, 0, 0, 958,
	959, 1037, 0, 963, 0, 1048, 1049, 1050, 1051, 979,
	0, 0, 0, 0, 0, 1052, 1053, 0, 0, 996,
	997, 1027, 1028, 0, 897, 161, 162, 163, 164, 165,
	1073, 0, 0, 1078, 383, 1077, 0, 375, 390, 391,
	0, 1374, 1364, 0, 0, 0, 1251, 0, 1860, 1854,
	1275, 0, 0, 1656, 1657, 1658, 1659, 0, 0, 0,
	0, 1568, 1569, 1570, 1605, 1573, 1680, 0, 0, 1725,
	0, 0, 86, 1361, -2, 1747, 0, 0, 1754, 1329,
	1772, 0, 103, 1733, 1777, 1778, 1779, 1780, 1781, 90,
	831, 0, 835, 881, 882, 839, 840, 871, 872, 0,
	756, 760, 0, 769, 0, 769, 769, 767, 768, 793,
	794, 795, 774, 778, 0, 553, 0, 0, 663, 649,
	652, 0, 116, 118, 0, 118, 309, 310, 311, 312,
	314, 315, 0, 0, 0, 384, 130, 0, 0, 169,
	0, 0, 0, 0, 179, 180, 181, 182, 183, 152,
	0, 0, 353, 0, 362, 364, 0, 363, 365, 0,
	135, 0, 1359, 1860, 187, 0, 285, 189, 293, 195,
	1067, 0, 917, 0, 0, 0, 0, 0, 939, 1039,
	545, 546, 0, 1829, 0, 1046, 0, 0, 0, 957,
	960, 961, 964, 980, 981, 0, 0, 985, 0, 0,
	0, 1030, 116, 389, 387, 384, 373, 377, 0, 0,
	0, 0, 1395, 0, 2580, 76, 1862, -2, 0, 68,
	0, 1723, 1724, 1718, 1719, 1721, 1562, 1564, 1563, 1565,
	0, 0, 0, 1586, 1587, 1265, 0, 0, 1745, 1748,
	1750, 0, 1771, 1773, 89, 832, 874, 761, 762, 0,
	764, 0, 0, 0, 568, 554, 555, 0, 571, 758,
	142, 0, 0, 79, 316, 317, 318, 319, 388, 185,
	186, 170, 171, 0, 173, 174, 0, 0, 0, 367,
	0, 360, 361, 0, 1101, 1814, 286, 188, 904, 0,
	910, 906, 0, 0, 0, 0, 0, 0, 0, 1070,
	0, 956, 769, 0, 0, 984, 0, 1056, 898, 79,
	388, 0, 379, 0, 1344, 1347, 1350, 0, 0, 0,
	0, 0, 0, 1861, 1856, 0, 1853, 0, 1276, 1277,
	0, 0, 1571, 0, 0, 0, 0, 0, 0, 1262,
	0, 0, 763, 765, 766, 0, 553, 123, 759, 124,
	0, 116, 397, 116, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 535, 0, 0, 0,
	0, 0, 0, 79, 0, 79, 0, 0, 0, 442,
	0, 79, 0, 0, 175, 0, 177, 178, 366, 0,
	140, 1361, 0, 0, 0, 0, 907, 908, 0, 913,
	758, 0, 0, 0, 0, 965, 983, 1055, 0, 1032,
	116, 1074, 0, 374, 0, 375, 1821, 1396, 1397, 0,
	0, 1398, 0, 0, 0, 0, 1859, 0, 0, 1855,
	0, 0, 1720, 1606, 0, 1609, 1258, 1266, 0, 1269,
	0, 0, 0, 1305, 0, 1267, 1769, -2, 0, 569,
	0, 0, 0, 142, 116, 0, 0, 129, 0, 0,
	412, 0, 0, 1831, 0, 0, -2, -2, -2, 1833,
	439, 440, 0, 491, 0, 0, 0, 456, 457, 0,
	443, 0, 458, 320, 0, 116, 172, 176, 368, 42,
	0, 0, 1068, 0, 912, 909, 941, 0, 758, 0,
	962, 1057, 1075, 116, 0, 375, 378, 0, 1401, 0,
	0, 0, 0, 0, 0, 0, 1278, 1279, 1607, 0,
	1270, 1271, 1272, 1273, 1274, 0, 0, 143, 0, 0,
	125, 118, 398, 399, 0, 0, 79, 413, 0, 79,
	0, 0, 0, 666, 0, 79, 79, 79, 79, 0,
	79, 79, 0, 444, 79, 79, 44, 0, 1815, 1816,
	287, 288, 289, 291, 0, 0, 758, 943, 0, 79,
	376, 380, 1394, 1402, 1403, 0, 0, 0, 1410, 0,
	0, 1863, 1864, 1857, 1851, 0, 0, 1306, 0, 144,
	145, 79, 0, 79, 410, 0, 79, 0, 0, 0,
	0, 674, 1834, 0, 492, 321, 0, 0, 0, 0,
	0, 0, 0, 323, 116, 43, 0, 0, 0, 942,
	0, 2299, 116, 1404, 0, 0, 1405, 0, 0, 0,
	0, 0, 1399, 0, 0, 1268, 799, 116, 400, 401,
	402, 403, 404, 405, 79, 0, 408, 0, 79, 0,
	79, 422, 423, 424, 79, 431, 433, 434, 435, 0,
	437, 438, 426, 447, 322, 79, 79, 79, 79, 0,
	79, 441, 445, 132, 290, 921, 0, 1071, 1072, 1076,
	0, 0, 0, 0, 1406, 1407, 1411, 1413, 0, 1400,
	1608, 800, 801, 0, 128, 0, 407, 80, 79, 0,
	-2, 0, 79, 0, 419, 0, 425, 0, 436, 0,
	324, 0, 0, 0, 0, 0, 0, 919, 0, 921,
	0, 0, 0, 0, 1412, 1414, 802, 0, 803, 0,
	0, 0, 79, 0, 411, 415, 0, 0, 79, 420,
	0, 432, 427, 325, 448, 0, 79, 450, 453, 446,
	922, 920, 0, 0, 815, 817, 818, 0, 0, 816,
	406, 409, 79, 417, 0, 79, 449, 0, 0, 1408,
	1409, 819, 820, 821, 0, 79, 0, 451, 454, 416,
	0, -2, 452, 455, 418,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 762,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 58072, 749, 58073, 750, 58074, 751,
	58075, 752, 58076, 753, 58077, 754, 58078, 755, 58079, 756,
	58080, 757, 58081, 758, 58082, 759, 58083, 760, 58084, 761,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:556
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:607
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:616
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:622
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:644
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:656
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:703
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:726
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:730
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:743
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:770
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:782
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:802
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:811
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:833
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:837
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:841
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:858
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:862
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:934
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:959
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:998
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1004
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1022
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1045
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1058
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1071
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1120
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1125
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1129
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1135
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1139
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1146
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1201
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1206
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1240
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1267
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1287
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1308
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1326
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1344
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1368
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1390
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1422
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1437
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1465
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1471
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1483
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1496
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1532
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1542
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1565
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1570
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1579
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1583
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1619
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1624
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1638
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1644
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1721
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1738
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1742
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1753
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1769
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1785
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1800
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1812
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1828
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1843
		{
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     yyDollar[3].val.([]Privilege),
				ObjectType:     yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[6].val.(PrivilegeLevel),
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1857
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1872
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				IfExists:       yyDollar[2].val.(int) == 1,
				Privileges:     allPriv,
				ObjectType:     GrantObjectType_Any,
				PrivilegeLevel: PrivilegeLevel{Database: "*", TableRoutine: "*"},
				From:           yyDollar[9].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1887
		{
			yyVAL.val = &RevokeRole{
				IfExists: yyDollar[2].val.(int) == 1,
				Roles:    yyDollar[3].val.([]AccountName),
				From:     yyDollar[5].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1899
		{
			yyVAL.val = &RevokeProxy{
				IfExists: yyDollar[2].val.(int) == 1,
				On:       yyDollar[5].val.(AccountName),
				From:     yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2037
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2116
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2138
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2142
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2146
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2155
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2163
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2167
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2171
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2175
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2179
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2184
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2193
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2204
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2217
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2257
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2266
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2280
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2290
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2298
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2332
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2336
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2345
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2349
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2353
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2378
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2382
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2387
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2391
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2396
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2404
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2492
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2496
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2500
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2504
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2509
		{
			yyVAL.val = &Authentication{}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2513
		{
			yyVAL.val = yyDollar[1].val
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2519
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2527
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2535
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2539
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2543
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2547
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2551
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2555
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2561
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2569
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2589
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2599
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2608
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2622
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2631
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2639
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.val = EventStatus_Enable
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2652
		{
			yyVAL.val = EventStatus_Disable
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.val = BeforeStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.val = AfterStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.val = InsertStr
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.val = UpdateStr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.val = DeleteStr
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2704
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2708
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2712
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2718
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2729
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2739
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2743
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2747
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2751
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2761
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2767
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2773
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2778
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2783
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 418:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2789
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2801
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2807
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2813
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2817
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2821
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2825
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2829
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2836
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2850
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2896
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2908
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2924
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2930
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2934
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 449:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2938
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2949
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 451:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2953
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 452:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2957
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 453:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2972
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 455:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2976
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2999
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3009
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3017
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3043
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3077
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3103
		{
			yyVAL.val = &Resignal{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3107
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3111
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3119
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3123
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3129
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3145
		{
			yyVAL.val = Exprs(nil)
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3149
		{
			yyVAL.val = Exprs(nil)
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3153
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3217
		{
			var temp bool
			authType := AuthType_CREATE
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3244
		{
			authType := AuthType_CREATE
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
				authType = AuthType_CREATE_TEMP
			}

			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   temp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3274
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3284
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3294
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3336
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3358
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3391
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3403
		{
			yyVAL.val = BoolVal(false)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.val = BoolVal(false)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.val = BoolVal(true)
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3416
		{
			yyVAL.val = ColumnType{}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3420
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3424
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3446
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3456
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3467
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3478
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3489
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3500
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3522
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3533
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3544
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3567
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3609
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3643
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3659
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3684
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3712
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3719
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3757
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3761
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3773
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3777
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3781
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3793
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3797
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3853
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3858
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3908
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3912
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3917
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3925
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3930
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3934
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3942
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3952
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3960
		{
			yyVAL.val = BoolVal(false)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3973
		{
			yyVAL.val = BoolVal(false)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3977
		{
			yyVAL.val = BoolVal(true)
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3983
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3987
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4005
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4009
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4013
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.val = BoolVal(true)
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4030
		{
			yyVAL.val = ""
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4040
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4052
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4056
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4066
		{
			yyVAL.val = ""
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4076
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4084
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.val = false
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.val = true
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4120
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4124
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4128
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4134
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4138
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4142
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4146
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4150
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4154
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4160
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4164
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4168
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4174
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.val = colKeyPrimary
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.val = colKey
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4188
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.val = colKeyUnique
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4202
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4208
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4212
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4218
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4240
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4244
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4252
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), ReadLock: yyDollar[2].val.(bool)}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4292
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.val = false
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4299
		{
			yyVAL.val = true
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4302
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4304
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4313
		{
			yyVAL.val = ""
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4319
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4329
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4339
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4357
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			yyVAL.val = false
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.val = true
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4373
		{
			yyVAL.bytes = nil
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4397
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4405
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4409
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4413
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4421
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4425
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4435
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4441
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4445
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4451
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4455
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4474
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4480
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4489
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4497
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4511
		{
			yyVAL.val = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4521
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = ":="
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4537
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4549
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4553
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4562
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4566
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4570
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4576
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4584
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4599
		{
			yyVAL.val = ""
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4608
		{
			yyVAL.val = ""
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4612
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4632
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4636
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4642
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4646
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 799:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4656
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4660
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4664
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4668
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4672
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			yyVAL.bytes = []byte(nil)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4687
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4691
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4701
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4716
		{
			yyVAL.val = ""
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4720
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4724
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4730
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4736
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.val = Restrict
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.val = Cascade
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4750
		{
			yyVAL.val = NoAction
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4754
		{
			yyVAL.val = SetDefault
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4758
		{
			yyVAL.val = SetNull
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4763
		{
			yyVAL.val = true
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4767
		{
			yyVAL.val = true
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4771
		{
			yyVAL.val = false
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4776
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4780
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4784
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4790
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4798
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4802
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4806
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4810
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4814
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4818
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4822
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4830
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4834
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4838
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4850
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4854
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4858
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4862
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4874
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4882
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4894
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4910
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4914
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4926
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4930
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4934
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4938
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4942
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4946
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4950
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4954
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4958
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4962
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4966
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4970
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4974
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4978
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5002
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5008
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5018
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5031
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5035
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5041
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5045
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5063
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5067
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5075
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5081
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5085
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5096
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5100
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5106
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5115
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5126
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5135
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5143
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5153
		{
			yyVAL.val = false
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			yyVAL.val = true
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5162
		{
			yyVAL.val = ""
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5166
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5172
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5181
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5185
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5190
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 919:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5194
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 920:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5203
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5214
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5218
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5223
		{
			yyVAL.val = ""
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5227
		{
			yyVAL.val = ""
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5231
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5236
		{
			yyVAL.val = string("")
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5240
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5252
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5266
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 934:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5281
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 935:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5301
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5314
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table: tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5328
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5332
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5338
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5356
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			if ddl.TableSpec.Constraints != nil {
				ddl.ConstraintAction = AddStr
			}
			yyVAL.val = ddl
		}
	case 941:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5375
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5392
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5416
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5438
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5452
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5466
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5484
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5503
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5513
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5523
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5533
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5543
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5553
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5573
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5583
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5598
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5614
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5624
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5634
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5650
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5664
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5678
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5692
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 965:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5706
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5720
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5733
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5746
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5756
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5766
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5778
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5792
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5806
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5823
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5833
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5843
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5853
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5863
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5873
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5890
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5903
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5918
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 983:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5932
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 984:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5953
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5974
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5993
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6003
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6019
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6023
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6027
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6031
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6035
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6039
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6043
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6047
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6051
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6055
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6059
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6063
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6079
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6083
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6087
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6091
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6095
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6099
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6103
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6107
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6111
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6115
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6119
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6123
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6127
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6131
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6139
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6143
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6147
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6151
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6155
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6193
		{
			yyVAL.val = true
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6197
		{
			yyVAL.val = false
		}
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6207
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			accountLimits, err := NewAccountLimits(yyDollar[6].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
				AccountLimits: accountLimits,
			}
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6233
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6237
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6241
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6246
		{
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6248
		{
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6251
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6255
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6261
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6265
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6271
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6275
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6279
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6283
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6287
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6291
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6295
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6299
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6303
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6307
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6311
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1057:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6315
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6319
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6323
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6336
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6340
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6344
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6348
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6352
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6356
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6360
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6365
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6369
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6375
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6379
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1071:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6385
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1072:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6389
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1073:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6395
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1074:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6425
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1075:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6451
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1076:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6479
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1077:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6509
		{
			yyVAL.val = EventName{}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6513
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6519
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6523
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6535
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6559
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6575
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6579
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1085:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6585
		{
			var temp bool
			if yyDollar[2].val.(int) != 0 {
				temp = true
			}

			var exists bool
			if yyDollar[4].val.(int) != 0 {
				exists = true
			}

			tableNames := yyDollar[5].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Temporary:  temp,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6610
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6630
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6648
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6665
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6682
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6702
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6722
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6737
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6752
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6771
		{

		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6775
		{
			yyVAL.val = Restrict
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6779
		{
			yyVAL.val = Cascade
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6785
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6798
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6813
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1101:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6819
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6823
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6827
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6840
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6844
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6848
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6852
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6858
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6862
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6869
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6873
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6879
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6883
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6887
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6891
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6897
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6901
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6905
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6909
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6915
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6926
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6937
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6948
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6960
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6972
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6985
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6998
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7009
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7020
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7031
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7042
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7052
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7062
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7075
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7085
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7096
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7106
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7116
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7127
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7139
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:7151
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7165
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7178
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7189
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7203
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7215
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7225
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7236
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7249
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7259
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7271
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7282
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7295
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1159:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7304
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7315
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7326
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7337
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7348
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7362
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7372
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7382
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7392
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7404
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7410
		{
			yyVAL.val = false
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7414
		{
			yyVAL.val = true
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7420
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7424
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7430
		{
			yyVAL.val = ""
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7434
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7438
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7444
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7448
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7452
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7456
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7462
		{
			yyVAL.val = ""
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7466
		{
			yyVAL.val = SessionStr
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7470
		{
			yyVAL.val = GlobalStr
		}
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7476
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7488
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7501
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7513
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7517
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7523
		{
			yyVAL.val = &Begin{}
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7527
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7533
		{
			yyVAL.val = &Begin{}
		}
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7537
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7541
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1193:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7545
		{
			yyVAL.val = &Begin{}
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7550
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7554
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7559
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7563
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7568
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7572
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7578
		{
			yyVAL.val = &Commit{}
		}
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7584
		{
			yyVAL.val = &Rollback{}
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7590
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7596
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7600
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7604
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7608
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7614
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7620
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Plan: yyDollar[3].val.(bool), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7624
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Plan: yyDollar[4].val.(bool), Statement: tryCastStatement(yyDollar[5].val)}
		}
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7628
		{
			yyVAL.val = &Explain{Analyze: true, Plan: yyDollar[3].val.(bool), ExplainFormat: TreeStr, Statement: yyDollar[4].val.(SelectStatement)}
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7634
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7642
		{
			yyVAL.val = ""
		}
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7646
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7651
		{
			yyVAL.val = false
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7655
		{
			yyVAL.val = true
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7667
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7687
		{
			setAllowComments(yylex, true)
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7691
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7699
		{
			yyVAL.val = Comments(nil)
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7703
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7709
		{
			yyVAL.val = UnionStr
		}
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7713
		{
			yyVAL.val = UnionAllStr
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7717
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7723
		{
			yyVAL.val = IntersectStr
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7727
		{
			yyVAL.val = IntersectAllStr
		}
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7731
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7737
		{
			yyVAL.val = ExceptStr
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7741
		{
			yyVAL.val = ExceptAllStr
		}
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7745
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7750
		{
			yyVAL.val = QueryOpts{}
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7754
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7765
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7776
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7787
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7798
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7809
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7821
		{
			yyVAL.val = ""
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7825
		{
			yyVAL.val = AllStr
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7829
		{
			yyVAL.val = DistinctStr
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7835
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7843
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7854
		{
			yyVAL.val = &StarExpr{}
		}
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7858
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7862
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7866
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7872
		{
			yyVAL.val = &StarExpr{}
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7876
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7880
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7884
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7890
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7894
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7900
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7905
		{
			yyVAL.val = ColIdent{}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7908
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7913
		{
			yyVAL.val = Exprs(nil)
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7917
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7922
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7926
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7931
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7935
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7939
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7946
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7969
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7988
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7992
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7996
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8003
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8011
		{
			yyVAL.val = Window(nil)
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8014
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8020
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8023
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8029
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8069
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8073
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8078
		{
			yyVAL.val = ColIdent{}
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8082
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8086
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8090
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8096
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8100
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8104
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8110
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8114
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8124
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8128
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8143
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8158
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8164
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8170
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8178
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8184
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8188
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8193
		{
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8195
		{
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8199
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8209
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8224
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8228
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8232
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8236
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8242
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8246
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8250
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8254
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8258
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8264
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8268
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8272
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8278
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8282
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1347:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8286
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8290
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8294
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8298
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8304
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8310
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8314
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8320
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8324
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8328
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8333
		{
			yyVAL.val = Expr(nil)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8337
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8343
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8352
		{
			yyVAL.val = Columns(nil)
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8356
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8362
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8366
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8372
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8376
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8382
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8386
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8400
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8404
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8408
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8412
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8418
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8420
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8424
		{
			yyVAL.val = JoinCondition{}
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8426
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8430
		{
			yyVAL.val = JoinCondition{}
		}
	case 1378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8432
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8437
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8441
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8447
		{
			yyVAL.val = JoinStr
		}
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8451
		{
			yyVAL.val = JoinStr
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8455
		{
			yyVAL.val = JoinStr
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8461
		{
			yyVAL.val = StraightJoinStr
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8467
		{
			yyVAL.val = LeftJoinStr
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = LeftJoinStr
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8475
		{
			yyVAL.val = RightJoinStr
		}
	case 1389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8479
		{
			yyVAL.val = RightJoinStr
		}
	case 1390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8483
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8487
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8493
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8497
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1394:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8507
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8514
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8519
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8525
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8529
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8533
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1400:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8538
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8545
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8549
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8553
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8561
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8565
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8569
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8573
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8577
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8587
		{
			yyVAL.val = &NullVal{}
		}
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8591
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8597
		{
			yyVAL.val = &NullVal{}
		}
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8601
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8617
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8623
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8627
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8633
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8637
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8641
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8645
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8649
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8653
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8659
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8663
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8669
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8674
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8678
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8682
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8686
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8691
		{
			yyVAL.val = Expr(nil)
		}
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8695
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8701
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8705
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8709
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8713
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8717
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8721
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8725
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8729
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8735
		{
			yyVAL.val = ""
		}
	case 1444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8739
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8745
		{
			yyVAL.val = BoolVal(true)
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8749
		{
			yyVAL.val = BoolVal(false)
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8755
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8759
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8763
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8767
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8771
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8775
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8779
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8783
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1455:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8787
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8791
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8797
		{
			yyVAL.val = IsNullStr
		}
	case 1458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8801
		{
			yyVAL.val = IsNotNullStr
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8805
		{
			yyVAL.val = IsTrueStr
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8809
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8813
		{
			yyVAL.val = IsFalseStr
		}
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8817
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8823
		{
			yyVAL.val = EqualStr
		}
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8827
		{
			yyVAL.val = LessThanStr
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8831
		{
			yyVAL.val = GreaterThanStr
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8835
		{
			yyVAL.val = LessEqualStr
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8839
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8843
		{
			yyVAL.val = NotEqualStr
		}
	case 1469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8847
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8852
		{
			yyVAL.val = Expr(nil)
		}
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8856
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8862
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8866
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8870
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8876
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8882
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8886
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8891
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8898
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8902
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8908
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8912
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8918
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8922
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8926
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8930
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8934
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8938
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8942
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8946
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8950
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8954
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8958
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8962
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8966
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8970
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8974
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8978
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8982
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8986
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8990
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8994
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8998
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9002
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9006
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9010
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9014
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9018
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9026
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9040
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9044
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9048
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9068
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1521:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9072
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1522:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9082
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1523:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9086
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9090
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9094
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9098
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1527:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9102
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9106
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9110
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9114
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9118
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9122
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1533:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9126
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9130
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9134
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9138
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9142
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9146
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9155
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9159
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1541:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9163
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9167
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9171
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9175
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9179
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9183
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9187
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9191
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1549:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9195
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1550:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9206
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9210
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9214
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9218
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9222
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1555:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9226
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1556:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9230
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9234
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9238
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9242
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9246
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9250
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1562:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9254
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1563:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9258
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1564:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9262
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1565:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9266
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9270
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1567:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9274
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1568:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9278
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1569:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9282
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1570:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9286
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1571:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9290
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9294
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1573:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9298
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1574:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9302
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9306
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9310
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9315
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9319
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9330
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9343
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9347
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9351
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9355
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9359
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1587:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9363
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1588:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9367
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1589:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9371
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9379
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9383
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9387
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9391
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9395
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9408
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9412
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9422
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9426
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9442
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9448
		{
			yyVAL.val = ""
		}
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9452
		{
			yyVAL.val = BooleanModeStr
		}
	case 1607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9456
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1608:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9460
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9464
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9470
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9474
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9478
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9484
		{
			yyVAL.val = Armscii8Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9488
		{
			yyVAL.val = AsciiStr
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9492
		{
			yyVAL.val = Big5Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9496
		{
			yyVAL.val = UBinaryStr
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9500
		{
			yyVAL.val = Cp1250Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9504
		{
			yyVAL.val = Cp1251Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9508
		{
			yyVAL.val = Cp1256Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9512
		{
			yyVAL.val = Cp1257Str
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9516
		{
			yyVAL.val = Cp850Str
		}
	case 1622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9520
		{
			yyVAL.val = Cp852Str
		}
	case 1623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9524
		{
			yyVAL.val = Cp866Str
		}
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9528
		{
			yyVAL.val = Cp932Str
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9532
		{
			yyVAL.val = Dec8Str
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9536
		{
			yyVAL.val = EucjpmsStr
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9540
		{
			yyVAL.val = EuckrStr
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9544
		{
			yyVAL.val = Gb18030Str
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9548
		{
			yyVAL.val = Gb2312Str
		}
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9552
		{
			yyVAL.val = GbkStr
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9556
		{
			yyVAL.val = Geostd8Str
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9560
		{
			yyVAL.val = GreekStr
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9564
		{
			yyVAL.val = HebrewStr
		}
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9568
		{
			yyVAL.val = Hp8Str
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9572
		{
			yyVAL.val = Keybcs2Str
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9576
		{
			yyVAL.val = Koi8rStr
		}
	case 1637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9580
		{
			yyVAL.val = Koi8uStr
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9584
		{
			yyVAL.val = Latin1Str
		}
	case 1639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9588
		{
			yyVAL.val = Latin2Str
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9592
		{
			yyVAL.val = Latin5Str
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9596
		{
			yyVAL.val = Latin7Str
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9600
		{
			yyVAL.val = MacceStr
		}
	case 1643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9604
		{
			yyVAL.val = MacromanStr
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9608
		{
			yyVAL.val = SjisStr
		}
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9612
		{
			yyVAL.val = Swe7Str
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9616
		{
			yyVAL.val = Tis620Str
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9620
		{
			yyVAL.val = Ucs2Str
		}
	case 1648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9624
		{
			yyVAL.val = UjisStr
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9628
		{
			yyVAL.val = Utf16Str
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9632
		{
			yyVAL.val = Utf16leStr
		}
	case 1651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9636
		{
			yyVAL.val = Utf32Str
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9640
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9644
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9648
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9654
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9658
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9662
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9666
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9670
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9674
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9678
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9682
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9689
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9693
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9697
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9701
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9705
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9709
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9713
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9717
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9721
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9725
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9729
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9733
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9739
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9743
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9748
		{
			yyVAL.val = Expr(nil)
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9752
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9757
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9761
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9767
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9771
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9777
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9782
		{
			yyVAL.val = Expr(nil)
		}
	case 1685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9786
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9792
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9796
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9800
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9804
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9808
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9812
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9816
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9820
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9824
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9828
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9832
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9836
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9840
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9844
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9848
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9852
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1702:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9856
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9862
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9866
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9870
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9874
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9878
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9886
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9890
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9894
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9898
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9902
		{
			yyVAL.val = &NullVal{}
		}
	case 1714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9908
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9912
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9916
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9921
		{
			yyVAL.val = Exprs(nil)
		}
	case 1718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9925
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9931
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9941
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9946
		{
			yyVAL.val = Expr(nil)
		}
	case 1723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9950
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9956
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9961
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9965
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9971
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9975
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9981
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9986
		{
			yyVAL.val = AscScr
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9990
		{
			yyVAL.val = AscScr
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9994
		{
			yyVAL.val = DescScr
		}
	case 1733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9999
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10003
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10007
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10011
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10017
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10021
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10025
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10030
		{
			yyVAL.val = ""
		}
	case 1741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10034
		{
			yyVAL.val = ForUpdateStr
		}
	case 1742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10038
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1743:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10042
		{
			yyVAL.val = ShareModeStr
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10048
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1745:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10052
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10072
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10076
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10081
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10088
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10092
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10096
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1752:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:10101
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10108
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10112
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10121
		{
			yyVAL.val = Columns(nil)
		}
	case 1758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10125
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10131
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10135
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10141
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10145
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10149
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10153
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10157
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10161
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10165
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10170
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:10174
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10180
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10184
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10194
		{
			yyVAL.val = ValTuple{}
		}
	case 1774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10200
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10206
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10216
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10220
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10226
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10229
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10233
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10237
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10243
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10247
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10253
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10264
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10277
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10290
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10296
		{
			yyVAL.val = SetScope_Global
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10300
		{
			yyVAL.val = SetScope_Session
		}
	case 1790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10306
		{
			yyVAL.val = SetScope_Session
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10310
		{
			yyVAL.val = SetScope_Persist
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10314
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10320
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10324
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10328
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10338
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10345
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10356
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10360
		{
			yyVAL.val = &Default{}
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10364
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10373
		{
			yyVAL.val = 0
		}
	case 1807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10375
		{
			yyVAL.val = 1
		}
	case 1808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10378
		{
			yyVAL.val = 0
		}
	case 1809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10380
		{
			yyVAL.val = 1
		}
	case 1810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10383
		{
			yyVAL.val = 0
		}
	case 1811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10385
		{
			yyVAL.val = 1
		}
	case 1812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10388
		{
			yyVAL.val = ""
		}
	case 1813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10390
		{
			yyVAL.val = IgnoreStr
		}
	case 1814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10393
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10395
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10397
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10400
		{
			yyVAL.val = struct{}{}
		}
	case 1818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10402
		{
			yyVAL.val = struct{}{}
		}
	case 1819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10406
		{
			yyVAL.val = struct{}{}
		}
	case 1820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10408
		{
			yyVAL.val = struct{}{}
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10411
		{
			yyVAL.val = struct{}{}
		}
	case 1822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10413
		{
			yyVAL.val = struct{}{}
		}
	case 1823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10417
		{
			yyVAL.val = UniqueStr
		}
	case 1824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10419
		{
			yyVAL.val = FulltextStr
		}
	case 1825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10421
		{
			yyVAL.val = SpatialStr
		}
	case 1826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10423
		{
			yyVAL.val = VectorStr
		}
	case 1827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10426
		{
			yyVAL.val = ""
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10428
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10431
		{
			yyVAL.val = ColIdent{}
		}
	case 1830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10433
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10437
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10441
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10447
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10451
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10458
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10464
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10468
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10475
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10479
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10483
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10488
		{
			yyVAL.val = string("")
		}
	case 1844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10490
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10493
		{
			yyVAL.val = string("")
		}
	case 1846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10495
		{
			yyVAL.val = IgnoreStr
		}
	case 1847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10497
		{
			yyVAL.val = ReplaceStr
		}
	case 1848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10500
		{
			yyVAL.val = BoolVal(false)
		}
	case 1849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10502
		{
			yyVAL.val = BoolVal(true)
		}
	case 1850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10505
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10509
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10514
		{
			yyVAL.val = BoolVal(false)
		}
	case 1853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10518
		{
			yyVAL.val = BoolVal(true)
		}
	case 1854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10523
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10527
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10532
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10536
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10544
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10548
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10553
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10557
		{
			yyVAL.val = yyDollar[2].val
		}
	case 1862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10562
		{
			yyVAL.val = &Lines{}
		}
	case 1863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10566
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{StartingBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).StartingBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1864:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10575
		{
			if yyDollar[1].val == nil {
				yyVAL.val = &Lines{TerminatedBy: NewStrVal(yyDollar[4].bytes)}
			} else {
				yyDollar[1].val.(*Lines).TerminatedBy = NewStrVal(yyDollar[4].bytes)
				yyVAL.val = yyDollar[1].val
			}
		}
	case 1865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10586
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10592
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10596
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10602
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1869:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10617
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10635
		{
			yyVAL.val = LockRead
		}
	case 1871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10639
		{
			yyVAL.val = LockReadLocal
		}
	case 1872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10643
		{
			yyVAL.val = LockWrite
		}
	case 1873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10647
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10653
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10659
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10670
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10680
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11608
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11617
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
