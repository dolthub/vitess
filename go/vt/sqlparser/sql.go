// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const AND = 57427
const NOT = 57428
const BETWEEN = 57429
const CASE = 57430
const WHEN = 57431
const THEN = 57432
const ELSE = 57433
const ELSEIF = 57434
const END = 57435
const LE = 57436
const GE = 57437
const NE = 57438
const NULL_SAFE_EQUAL = 57439
const IS = 57440
const LIKE = 57441
const REGEXP = 57442
const IN = 57443
const UNBOUNDED = 57444
const PARTITION = 57445
const RANGE = 57446
const ROWS = 57447
const GROUPS = 57448
const PRECEDING = 57449
const FOLLOWING = 57450
const SHIFT_LEFT = 57451
const SHIFT_RIGHT = 57452
const DIV = 57453
const MOD = 57454
const UNARY = 57455
const COLLATE = 57456
const BINARY = 57457
const UNDERSCORE_ARMSCII8 = 57458
const UNDERSCORE_ASCII = 57459
const UNDERSCORE_BIG5 = 57460
const UNDERSCORE_BINARY = 57461
const UNDERSCORE_CP1250 = 57462
const UNDERSCORE_CP1251 = 57463
const UNDERSCORE_CP1256 = 57464
const UNDERSCORE_CP1257 = 57465
const UNDERSCORE_CP850 = 57466
const UNDERSCORE_CP852 = 57467
const UNDERSCORE_CP866 = 57468
const UNDERSCORE_CP932 = 57469
const UNDERSCORE_DEC8 = 57470
const UNDERSCORE_EUCJPMS = 57471
const UNDERSCORE_EUCKR = 57472
const UNDERSCORE_GB18030 = 57473
const UNDERSCORE_GB2312 = 57474
const UNDERSCORE_GBK = 57475
const UNDERSCORE_GEOSTD8 = 57476
const UNDERSCORE_GREEK = 57477
const UNDERSCORE_HEBREW = 57478
const UNDERSCORE_HP8 = 57479
const UNDERSCORE_KEYBCS2 = 57480
const UNDERSCORE_KOI8R = 57481
const UNDERSCORE_KOI8U = 57482
const UNDERSCORE_LATIN1 = 57483
const UNDERSCORE_LATIN2 = 57484
const UNDERSCORE_LATIN5 = 57485
const UNDERSCORE_LATIN7 = 57486
const UNDERSCORE_MACCE = 57487
const UNDERSCORE_MACROMAN = 57488
const UNDERSCORE_SJIS = 57489
const UNDERSCORE_SWE7 = 57490
const UNDERSCORE_TIS620 = 57491
const UNDERSCORE_UCS2 = 57492
const UNDERSCORE_UJIS = 57493
const UNDERSCORE_UTF16 = 57494
const UNDERSCORE_UTF16LE = 57495
const UNDERSCORE_UTF32 = 57496
const UNDERSCORE_UTF8 = 57497
const UNDERSCORE_UTF8MB3 = 57498
const UNDERSCORE_UTF8MB4 = 57499
const INTERVAL = 57500
const JSON_EXTRACT_OP = 57501
const JSON_UNQUOTE_EXTRACT_OP = 57502
const CREATE = 57503
const ALTER = 57504
const DROP = 57505
const RENAME = 57506
const ANALYZE = 57507
const ADD = 57508
const MODIFY = 57509
const CHANGE = 57510
const SCHEMA = 57511
const TABLE = 57512
const INDEX = 57513
const INDEXES = 57514
const VIEW = 57515
const TO = 57516
const IGNORE = 57517
const IF = 57518
const PRIMARY = 57519
const COLUMN = 57520
const SPATIAL = 57521
const FULLTEXT = 57522
const KEY_BLOCK_SIZE = 57523
const CHECK = 57524
const ACTION = 57525
const CASCADE = 57526
const CONSTRAINT = 57527
const FOREIGN = 57528
const NO = 57529
const REFERENCES = 57530
const RESTRICT = 57531
const FIRST = 57532
const AFTER = 57533
const SHOW = 57534
const DESCRIBE = 57535
const EXPLAIN = 57536
const DATE = 57537
const ESCAPE = 57538
const REPAIR = 57539
const OPTIMIZE = 57540
const TRUNCATE = 57541
const FORMAT = 57542
const MAXVALUE = 57543
const REORGANIZE = 57544
const LESS = 57545
const THAN = 57546
const PROCEDURE = 57547
const TRIGGER = 57548
const TRIGGERS = 57549
const FUNCTION = 57550
const STATUS = 57551
const VARIABLES = 57552
const WARNINGS = 57553
const ERRORS = 57554
const KILL = 57555
const CONNECTION = 57556
const SEQUENCE = 57557
const ENABLE = 57558
const DISABLE = 57559
const EACH = 57560
const ROW = 57561
const BEFORE = 57562
const FOLLOWS = 57563
const PRECEDES = 57564
const DEFINER = 57565
const INVOKER = 57566
const INOUT = 57567
const OUT = 57568
const DETERMINISTIC = 57569
const CONTAINS = 57570
const READS = 57571
const MODIFIES = 57572
const SQL = 57573
const SECURITY = 57574
const TEMPORARY = 57575
const ALGORITHM = 57576
const MERGE = 57577
const TEMPTABLE = 57578
const UNDEFINED = 57579
const CLASS_ORIGIN = 57580
const SUBCLASS_ORIGIN = 57581
const MESSAGE_TEXT = 57582
const MYSQL_ERRNO = 57583
const CONSTRAINT_CATALOG = 57584
const CONSTRAINT_SCHEMA = 57585
const CONSTRAINT_NAME = 57586
const CATALOG_NAME = 57587
const SCHEMA_NAME = 57588
const TABLE_NAME = 57589
const COLUMN_NAME = 57590
const CURSOR_NAME = 57591
const SIGNAL = 57592
const RESIGNAL = 57593
const SQLSTATE = 57594
const DECLARE = 57595
const CONDITION = 57596
const CURSOR = 57597
const CONTINUE = 57598
const EXIT = 57599
const UNDO = 57600
const HANDLER = 57601
const FOUND = 57602
const SQLWARNING = 57603
const SQLEXCEPTION = 57604
const USER = 57605
const IDENTIFIED = 57606
const ROLE = 57607
const REUSE = 57608
const GRANT = 57609
const GRANTS = 57610
const REVOKE = 57611
const NONE = 57612
const ATTRIBUTE = 57613
const RANDOM = 57614
const PASSWORD = 57615
const INITIAL = 57616
const AUTHENTICATION = 57617
const SSL = 57618
const X509 = 57619
const CIPHER = 57620
const ISSUER = 57621
const SUBJECT = 57622
const ACCOUNT = 57623
const EXPIRE = 57624
const NEVER = 57625
const DAY = 57626
const OPTION = 57627
const OPTIONAL = 57628
const EXCEPT = 57629
const ADMIN = 57630
const PRIVILEGES = 57631
const MAX_QUERIES_PER_HOUR = 57632
const MAX_UPDATES_PER_HOUR = 57633
const MAX_CONNECTIONS_PER_HOUR = 57634
const MAX_USER_CONNECTIONS = 57635
const FLUSH = 57636
const FAILED_LOGIN_ATTEMPTS = 57637
const PASSWORD_LOCK_TIME = 57638
const REQUIRE = 57639
const PROXY = 57640
const ROUTINE = 57641
const TABLESPACE = 57642
const CLIENT = 57643
const SLAVE = 57644
const EVENT = 57645
const EXECUTE = 57646
const FILE = 57647
const RELOAD = 57648
const REPLICATION = 57649
const SHUTDOWN = 57650
const SUPER = 57651
const USAGE = 57652
const LOGS = 57653
const ENGINE = 57654
const ERROR = 57655
const GENERAL = 57656
const HOSTS = 57657
const OPTIMIZER_COSTS = 57658
const RELAY = 57659
const SLOW = 57660
const USER_RESOURCES = 57661
const NO_WRITE_TO_BINLOG = 57662
const CHANNEL = 57663
const BEGIN = 57664
const START = 57665
const TRANSACTION = 57666
const COMMIT = 57667
const ROLLBACK = 57668
const SAVEPOINT = 57669
const WORK = 57670
const RELEASE = 57671
const BIT = 57672
const TINYINT = 57673
const SMALLINT = 57674
const MEDIUMINT = 57675
const INT = 57676
const INTEGER = 57677
const BIGINT = 57678
const INTNUM = 57679
const SERIAL = 57680
const REAL = 57681
const DOUBLE = 57682
const FLOAT_TYPE = 57683
const DECIMAL = 57684
const NUMERIC = 57685
const DEC = 57686
const FIXED = 57687
const PRECISION = 57688
const TIME = 57689
const TIMESTAMP = 57690
const DATETIME = 57691
const YEAR = 57692
const CHAR = 57693
const VARCHAR = 57694
const BOOL = 57695
const CHARACTER = 57696
const VARBINARY = 57697
const NCHAR = 57698
const NVARCHAR = 57699
const NATIONAL = 57700
const VARYING = 57701
const TEXT = 57702
const TINYTEXT = 57703
const MEDIUMTEXT = 57704
const LONGTEXT = 57705
const LONG = 57706
const BLOB = 57707
const TINYBLOB = 57708
const MEDIUMBLOB = 57709
const LONGBLOB = 57710
const JSON = 57711
const ENUM = 57712
const GEOMETRY = 57713
const POINT = 57714
const LINESTRING = 57715
const POLYGON = 57716
const GEOMETRYCOLLECTION = 57717
const MULTIPOINT = 57718
const MULTILINESTRING = 57719
const MULTIPOLYGON = 57720
const LOCAL = 57721
const LOW_PRIORITY = 57722
const NULLX = 57723
const AUTO_INCREMENT = 57724
const APPROXNUM = 57725
const SIGNED = 57726
const UNSIGNED = 57727
const ZEROFILL = 57728
const COLLATION = 57729
const DATABASES = 57730
const SCHEMAS = 57731
const TABLES = 57732
const FULL = 57733
const PROCESSLIST = 57734
const COLUMNS = 57735
const FIELDS = 57736
const ENGINES = 57737
const PLUGINS = 57738
const NAMES = 57739
const CHARSET = 57740
const GLOBAL = 57741
const SESSION = 57742
const ISOLATION = 57743
const LEVEL = 57744
const READ = 57745
const WRITE = 57746
const ONLY = 57747
const REPEATABLE = 57748
const COMMITTED = 57749
const UNCOMMITTED = 57750
const SERIALIZABLE = 57751
const ENCRYPTION = 57752
const CURRENT_TIMESTAMP = 57753
const DATABASE = 57754
const CURRENT_DATE = 57755
const CURRENT_USER = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const UTC_DATE = 57760
const UTC_TIME = 57761
const UTC_TIMESTAMP = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const TRIM = 57768
const LEADING = 57769
const TRAILING = 57770
const BOTH = 57771
const GROUP_CONCAT = 57772
const SEPARATOR = 57773
const TIMESTAMPADD = 57774
const TIMESTAMPDIFF = 57775
const OVER = 57776
const WINDOW = 57777
const GROUPING = 57778
const CURRENT = 57779
const AVG = 57780
const BIT_AND = 57781
const BIT_OR = 57782
const BIT_XOR = 57783
const COUNT = 57784
const JSON_ARRAYAGG = 57785
const JSON_OBJECTAGG = 57786
const MAX = 57787
const MIN = 57788
const STDDEV_POP = 57789
const STDDEV = 57790
const STD = 57791
const STDDEV_SAMP = 57792
const SUM = 57793
const VAR_POP = 57794
const VARIANCE = 57795
const VAR_SAMP = 57796
const CUME_DIST = 57797
const DENSE_RANK = 57798
const FIRST_VALUE = 57799
const LAG = 57800
const LAST_VALUE = 57801
const LEAD = 57802
const NTH_VALUE = 57803
const NTILE = 57804
const ROW_NUMBER = 57805
const PERCENT_RANK = 57806
const RANK = 57807
const MATCH = 57808
const AGAINST = 57809
const BOOLEAN = 57810
const LANGUAGE = 57811
const WITH = 57812
const QUERY = 57813
const EXPANSION = 57814
const UNUSED = 57815
const ARRAY = 57816
const DESCRIPTION = 57817
const EMPTY = 57818
const JSON_TABLE = 57819
const LATERAL = 57820
const MEMBER = 57821
const RECURSIVE = 57822
const ACTIVE = 57823
const BUCKETS = 57824
const CLONE = 57825
const COMPONENT = 57826
const DEFINITION = 57827
const ENFORCED = 57828
const EXCLUDE = 57829
const GEOMCOLLECTION = 57830
const GET_MASTER_PUBLIC_KEY = 57831
const HISTOGRAM = 57832
const HISTORY = 57833
const INACTIVE = 57834
const INVISIBLE = 57835
const LOCKED = 57836
const MASTER_COMPRESSION_ALGORITHMS = 57837
const MASTER_PUBLIC_KEY_PATH = 57838
const MASTER_TLS_CIPHERSUITES = 57839
const MASTER_ZSTD_COMPRESSION_LEVEL = 57840
const NESTED = 57841
const NETWORK_NAMESPACE = 57842
const NOWAIT = 57843
const NULLS = 57844
const OJ = 57845
const OLD = 57846
const ORDINALITY = 57847
const ORGANIZATION = 57848
const OTHERS = 57849
const PATH = 57850
const PERSIST = 57851
const PERSIST_ONLY = 57852
const PRIVILEGE_CHECKS_USER = 57853
const PROCESS = 57854
const REFERENCE = 57855
const REQUIRE_ROW_FORMAT = 57856
const RESOURCE = 57857
const RESPECT = 57858
const RESTART = 57859
const RETAIN = 57860
const SECONDARY = 57861
const SECONDARY_ENGINE = 57862
const SECONDARY_LOAD = 57863
const SECONDARY_UNLOAD = 57864
const SKIP = 57865
const SRID = 57866
const THREAD_PRIORITY = 57867
const TIES = 57868
const VCPU = 57869
const VISIBLE = 57870
const SYSTEM = 57871
const INFILE = 57872
const GENERATED = 57873
const ALWAYS = 57874
const STORED = 57875
const VIRTUAL = 57876
const NVAR = 57877
const PASSWORD_LOCK = 57878

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 57,
	-2, 1129,
	-1, 43,
	188, 1193,
	189, 1211,
	-2, 244,
	-1, 49,
	227, 717,
	228, 717,
	-2, 706,
	-1, 558,
	176, 1221,
	-2, 1215,
	-1, 559,
	176, 1222,
	-2, 1216,
	-1, 704,
	99, 1509,
	176, 1509,
	-2, 1177,
	-1, 705,
	99, 1628,
	176, 1628,
	-2, 1178,
	-1, 710,
	99, 1533,
	176, 1533,
	-2, 1179,
	-1, 711,
	99, 1581,
	176, 1581,
	-2, 1180,
	-1, 712,
	99, 1582,
	176, 1582,
	-2, 1181,
	-1, 713,
	99, 1454,
	176, 1454,
	-2, 1185,
	-1, 715,
	99, 1558,
	176, 1558,
	-2, 1187,
	-1, 1236,
	1, 814,
	5, 814,
	12, 814,
	13, 814,
	14, 814,
	15, 814,
	17, 814,
	19, 814,
	29, 814,
	30, 814,
	56, 814,
	57, 814,
	58, 814,
	59, 814,
	60, 814,
	62, 814,
	63, 814,
	66, 814,
	67, 814,
	69, 814,
	70, 814,
	87, 814,
	453, 814,
	555, 814,
	-2, 846,
	-1, 1242,
	67, 74,
	69, 74,
	-2, 78,
	-1, 1338,
	1, 496,
	555, 496,
	-2, 494,
	-1, 1340,
	1, 496,
	555, 496,
	-2, 494,
	-1, 1502,
	176, 1224,
	-2, 1220,
	-1, 1668,
	44, 562,
	-2, 1466,
	-1, 1672,
	68, 560,
	72, 560,
	-2, 1503,
	-1, 1673,
	68, 562,
	-2, 1412,
	-1, 1676,
	68, 558,
	72, 558,
	-2, 1329,
	-1, 1677,
	68, 559,
	72, 559,
	-2, 1339,
	-1, 1724,
	1, 497,
	555, 497,
	-2, 494,
	-1, 1808,
	44, 605,
	195, 607,
	197, 605,
	198, 605,
	-2, 642,
	-1, 1888,
	5, 58,
	-2, 916,
	-1, 2203,
	69, 1386,
	70, 1386,
	176, 1386,
	-2, 748,
	-1, 2226,
	1, 871,
	5, 871,
	12, 871,
	13, 871,
	14, 871,
	15, 871,
	17, 871,
	19, 871,
	29, 871,
	30, 871,
	56, 871,
	57, 871,
	58, 871,
	59, 871,
	60, 871,
	62, 871,
	63, 871,
	66, 871,
	67, 871,
	69, 871,
	70, 871,
	87, 871,
	453, 871,
	555, 871,
	-2, 846,
	-1, 2336,
	195, 608,
	-2, 606,
	-1, 2397,
	5, 58,
	-2, 1149,
	-1, 2612,
	41, 1231,
	-2, 1229,
	-1, 2711,
	5, 58,
	-2, 1152,
}

const yyPrivate = 57344

const yyLast = 39157

var yyAct = [...]int{
	624, 80, 2911, 2937, 2944, 2893, 2864, 929, 2809, 430,
	2783, 2894, 2824, 2723, 7, 2722, 6, 2031, 2145, 2829,
	2913, 2844, 2808, 2280, 2777, 2720, 3, 2721, 5, 1473,
	561, 1273, 559, 2697, 2657, 2699, 2781, 1953, 2409, 2554,
	2724, 8, 2240, 2612, 2220, 1719, 729, 2128, 1923, 2496,
	1191, 550, 2614, 1373, 1678, 1743, 1626, 2715, 2472, 1620,
	2114, 2466, 2450, 2241, 564, 2297, 1480, 2716, 2320, 1624,
	2197, 2196, 543, 1669, 455, 455, 1694, 461, 413, 416,
	129, 80, 962, 129, 1980, 2047, 476, 566, 1372, 129,
	1659, 576, 2330, 2127, 1807, 1924, 2193, 106, 93, 458,
	458, 985, 83, 1837, 1658, 1710, 542, 2205, 2167, 1536,
	1974, 2212, 129, 1527, 1375, 2092, 1603, 1770, 1488, 1421,
	1665, 1349, 1471, 129, 623, 1727, 1393, 129, 732, 1599,
	724, 1239, 1726, 1725, 1253, 727, 1660, 1706, 1648, 2022,
	1090, 1593, 1233, 706, 2138, 1610, 1504, 129, 458, 1093,
	732, 1097, 1236, 1014, 993, 1232, 709, 1723, 129, 1252,
	1101, 1787, 546, 698, 1110, 702, 945, 723, 703, 928,
	475, 1981, 432, 433, 568, 1426, 992, 1341, 917, 126,
	912, 1344, 1244, 1208, 102, 98, 2976, 695, 412, 85,
	1207, 1994, 2972, 2967, 2952, 2950, 1996, 2932, 2906, 2852,
	82, 2659, 2658, 2254, 1419, 2591, 2437, 2278, 2923, 2792,
	425, 2892, 2001, 2000, 448, 2709, 442, 453, 436, 1756,
	1756, 2589, 697, 2604, 2869, 36, 721, 87, 88, 89,
	90, 91, 725, 2059, 1997, 2769, 2592, 2294, 443, 36,
	36, 2451, 2791, 2708, 1538, 2188, 926, 69, 473, 2003,
	2453, 1987, 2644, 2787, 2677, 36, 2825, 940, 1988, 1859,
	1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1126, 2391, 36, 1136, 72, 39, 40, 1918, 911,
	2539, 1622, 914, 1786, 919, 920, 2038, 81, 2784, 2236,
	2237, 1425, 922, 1645, 1646, 1644, 1919, 72, 39, 40,
	2235, 81, 81, 679, 1083, 685, 687, 686, 683, 684,
	682, 681, 680, 2787, 1423, 1424, 1442, 81, 41, 949,
	950, 1422, 1042, 953, 2429, 2430, 1467, 1468, 1962, 965,
	2782, 1961, 552, 424, 1963, 81, 1254, 423, 1255, 966,
	967, 719, 2005, 1680, 1050, 465, 1785, 1011, 2784, 110,
	1695, 1682, 1682, 2788, 2525, 951, 952, 1686, 1688, 1700,
	1687, 1695, 1707, 1999, 2378, 2456, 2002, 427, 2376, 407,
	422, 1405, 975, 472, 2089, 1064, 1463, 1462, 1461, 120,
	116, 117, 1460, 118, 1459, 1458, 1026, 435, 434, 437,
	1046, 1047, 2054, 99, 2081, 2884, 2617, 441, 972, 2473,
	2474, 2475, 2476, 2319, 466, 2454, 2455, 2457, 2458, 2459,
	80, 80, 129, 2788, 445, 122, 121, 2086, 449, 1798,
	2811, 1057, 2757, 980, 1058, 982, 2810, 2304, 2759, 2058,
	2590, 2681, 452, 2679, 2492, 979, 983, 981, 2467, 1815,
	1809, 1810, 2295, 1808, 1811, 1812, 2470, 2608, 2298, 2299,
	2300, 2301, 2302, 2484, 2817, 1799, 129, 2586, 1453, 2056,
	2468, 2469, 2307, 2298, 2299, 2300, 2301, 2302, 1744, 1079,
	1074, 973, 974, 123, 114, 124, 2482, 1087, 2941, 1818,
	2849, 2584, 1026, 2671, 2847, 2848, 108, 1347, 1356, 1357,
	1355, 2583, 101, 1817, 1816, 417, 2582, 113, 2579, 916,
	915, 2581, 112, 111, 2580, 2908, 2917, 129, 2834, 2912,
	2578, 942, 963, 414, 964, 966, 967, 918, 108, 1026,
	2667, 2668, 1734, 408, 2915, 918, 2663, 2036, 2718, 438,
	439, 440, 446, 1432, 450, 451, 454, 961, 418, 2411,
	1944, 958, 1738, 1739, 2072, 2073, 108, 2168, 2796, 2797,
	1070, 1733, 402, 959, 960, 1015, 109, 113, 1145, 1049,
	957, 1147, 948, 2887, 2861, 2962, 2948, 115, 1998, 2497,
	2498, 2037, 1069, 1065, 1066, 1067, 1068, 1071, 1072, 1073,
	1075, 2656, 1272, 2039, 1272, 1113, 103, 1271, 104, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 2277, 119, 1189, 426, 1193, 2335, 1245, 2170, 2902,
	2673, 2645, 2057, 2785, 110, 1025, 1272, 2977, 2321, 1792,
	2100, 2555, 1033, 2098, 1406, 976, 2974, 2452, 1146, 2678,
	1190, 2968, 380, 1979, 1695, 2557, 2953, 1076, 1709, 1814,
	2012, 1685, 1059, 2607, 913, 2587, 2707, 931, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 2306, 1206,
	1209, 1209, 1209, 1215, 1209, 1209, 1215, 1209, 1215, 1224,
	1225, 1226, 1227, 2785, 1237, 2605, 1425, 1036, 2758, 383,
	415, 1979, 1031, 2683, 415, 2060, 73, 79, 392, 400,
	401, 415, 410, 2914, 2916, 471, 1078, 1995, 2111, 1423,
	1424, 79, 79, 1085, 1427, 129, 129, 129, 73, 1629,
	1631, 2508, 1032, 2080, 1028, 100, 415, 79, 444, 2946,
	1979, 732, 2947, 389, 2945, 2507, 390, 411, 2077, 398,
	399, 2062, 2244, 1231, 2061, 79, 2672, 1272, 1022, 1429,
	1753, 2100, 1428, 1793, 1979, 1752, 1722, 709, 1029, 1030,
	1361, 1359, 709, 2556, 977, 2172, 910, 1979, 1951, 2075,
	2176, 1240, 2171, 1950, 2169, 1949, 909, 112, 111, 2174,
	1098, 1984, 1082, 921, 379, 1897, 2511, 1978, 1894, 2361,
	1117, 2353, 2173, 2106, 2098, 2079, 395, 2078, 2103, 1148,
	1149, 2102, 2105, 1966, 1958, 1854, 1842, 2175, 2177, 1823,
	1737, 1735, 1266, 1483, 1230, 1265, 1242, 396, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1250, 1649, 1116, 941, 2676, 1978, 1257, 1136, 2315, 2572,
	1640, 1258, 2098, 2444, 1270, 2442, 1272, 2267, 1630, 2099,
	2100, 1403, 1332, 1126, 1211, 1213, 1136, 1217, 1219, 1192,
	1222, 1210, 1212, 1214, 1216, 1218, 1220, 1221, 1223, 1248,
	2698, 1021, 1243, 2521, 1978, 1901, 2137, 2110, 2835, 2836,
	2119, 2107, 381, 1125, 1124, 1134, 1135, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1126, 556, 1604, 1136, 1978, 2573,
	1267, 2832, 2833, 2445, 2506, 2443, 2594, 2268, 96, 2704,
	2703, 1978, 1205, 1476, 1511, 394, 384, 385, 455, 405,
	1351, 1109, 2115, 386, 388, 2210, 382, 404, 403, 1509,
	1510, 1508, 732, 129, 1089, 1893, 2209, 455, 2512, 1374,
	1107, 2595, 458, 458, 1394, 1762, 458, 1108, 1107, 1629,
	1631, 1148, 1149, 129, 1148, 1149, 129, 1109, 2956, 2938,
	2955, 458, 458, 1350, 129, 1109, 1414, 1354, 1263, 984,
	397, 924, 923, 129, 129, 129, 129, 129, 1377, 955,
	1771, 1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1126, 947, 458, 1136, 2190, 1594, 2966, 968,
	1108, 1107, 1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1126, 2903, 1401, 1136, 1594, 1109, 1909,
	455, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 1596,
	1339, 1136, 1335, 1129, 1130, 1131, 1132, 1133, 1126, 2867,
	2483, 1136, 1395, 1763, 458, 458, 458, 2477, 96, 732,
	1417, 1474, 697, 562, 1451, 1367, 1124, 1134, 1135, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1126, 1435, 2252, 1136,
	80, 2356, 1384, 1385, 1386, 1387, 1388, 956, 1630, 458,
	1397, 2513, 1398, 470, 458, 458, 1337, 1336, 946, 1474,
	1781, 1353, 1352, 95, 970, 1465, 1494, 1496, 1497, 1104,
	1433, 1378, 2963, 1495, 1370, 129, 1457, 129, 1363, 1371,
	732, 1380, 2755, 2762, 1389, 1390, 1391, 1392, 2754, 1382,
	1383, 1892, 2845, 1891, 2873, 2712, 2872, 2602, 129, 1108,
	1107, 2674, 94, 478, 1113, 81, 2970, 2601, 80, 2600,
	1456, 2599, 1108, 1107, 1108, 1107, 1507, 1109, 2593, 1481,
	1482, 2905, 2436, 1502, 1409, 1410, 2854, 2964, 1412, 2756,
	1109, 2435, 1109, 1190, 1839, 1840, 1841, 2027, 1094, 1531,
	1532, 1095, 692, 693, 1415, 2025, 2384, 2006, 2675, 732,
	1017, 1016, 1381, 1431, 1193, 1430, 1434, 1134, 1135, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1126, 1506, 1528, 1136,
	1529, 1108, 1107, 1399, 1466, 2853, 732, 732, 2846, 1574,
	2814, 2812, 1108, 1107, 1472, 1108, 1107, 2768, 1964, 1109,
	1965, 1500, 2192, 1452, 1485, 2670, 1455, 1490, 1623, 1464,
	1109, 2842, 1632, 1109, 1505, 1237, 990, 2669, 2655, 1237,
	1108, 1107, 2609, 1501, 1192, 1469, 2845, 1089, 1486, 2577,
	2535, 1487, 129, 1190, 1580, 1583, 2480, 2479, 1109, 989,
	129, 1595, 129, 2478, 2446, 1546, 1498, 129, 129, 2433,
	1551, 129, 129, 129, 1125, 1124, 1134, 1135, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1126, 2326, 1377, 1136, 2260,
	2124, 732, 732, 2123, 1635, 2028, 2023, 1782, 1637, 1362,
	1757, 1411, 1502, 2841, 2680, 2653, 709, 2626, 1534, 1984,
	2620, 2504, 1542, 1108, 1107, 1240, 1628, 930, 2364, 2349,
	2345, 2337, 1240, 1553, 1554, 1619, 1240, 2308, 2067, 1655,
	2066, 1109, 1775, 1759, 1758, 1530, 1566, 1407, 1404, 1369,
	1570, 1368, 1491, 1492, 1340, 1338, 1012, 943, 421, 1633,
	419, 1605, 2546, 2870, 1591, 1056, 1696, 1697, 1698, 1699,
	1750, 2619, 1612, 1615, 1616, 1617, 1613, 1636, 1614, 1618,
	1654, 2568, 2213, 2214, 2567, 129, 2420, 2860, 2775, 1089,
	2287, 129, 129, 458, 458, 458, 2420, 2773, 129, 2261,
	1666, 1954, 1653, 1215, 2420, 2771, 725, 1332, 2420, 2661,
	2546, 2649, 2618, 1638, 1748, 1749, 1647, 1642, 2546, 2562,
	1641, 2546, 1089, 2546, 2545, 2420, 2419, 129, 129, 129,
	1656, 1681, 1712, 1713, 1714, 1715, 1022, 1663, 1192, 2401,
	1089, 1674, 1578, 1579, 2888, 1778, 933, 934, 935, 936,
	937, 938, 939, 129, 2866, 129, 1822, 1089, 1607, 732,
	2275, 2274, 1708, 732, 1089, 2208, 1716, 1717, 2271, 2272,
	2356, 1820, 1954, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	2271, 2270, 1852, 1089, 1745, 732, 1760, 1634, 732, 1245,
	1746, 1747, 2368, 1607, 1089, 1795, 1794, 1754, 1731, 1768,
	1572, 1779, 1843, 1572, 1089, 1269, 1268, 732, 1652, 1784,
	84, 1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1126, 2194, 1478, 1136, 2208, 1606, 1767, 2208,
	1502, 1742, 1060, 1061, 1019, 1020, 1572, 1020, 478, 2395,
	1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1126, 1015, 1607, 1136, 1756, 2288, 1246, 1240, 2273,
	1764, 2222, 2122, 1246, 1852, 1769, 2091, 1607, 1777, 1968,
	1643, 1852, 1741, 1881, 1783, 1477, 1880, 1413, 1718, 1755,
	1479, 81, 1088, 1084, 1454, 581, 580, 583, 584, 585,
	586, 1022, 1790, 1773, 582, 587, 1506, 1420, 1654, 1360,
	1358, 1251, 2793, 2772, 1920, 1922, 2221, 2625, 1237, 1237,
	1237, 1237, 1237, 1247, 1797, 1249, 1114, 1800, 720, 1247,
	1501, 1245, 2623, 1819, 1623, 1804, 1945, 1829, 1830, 1921,
	1848, 1831, 2438, 1505, 1682, 1237, 2407, 1711, 2383, 2251,
	129, 129, 129, 129, 129, 2213, 2214, 429, 1707, 1574,
	1972, 1026, 129, 1926, 1736, 1844, 129, 1702, 1701, 1333,
	129, 1009, 1612, 1615, 1616, 1617, 1613, 129, 1614, 1618,
	1720, 1925, 1772, 1956, 2927, 1957, 2925, 2895, 2219, 2286,
	81, 2216, 2194, 2029, 1365, 1948, 1062, 1023, 1858, 1860,
	1018, 732, 1838, 2218, 1955, 1240, 1240, 1240, 1240, 1240,
	1886, 1872, 1873, 1874, 1875, 1936, 1940, 709, 1934, 1933,
	1937, 1240, 1932, 1935, 1947, 460, 1938, 2838, 1616, 1617,
	547, 548, 1240, 2790, 1098, 2125, 1828, 1102, 1103, 1489,
	2823, 2398, 1836, 1835, 1908, 2536, 1125, 1124, 1134, 1135,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 2503, 1969,
	1136, 1928, 1929, 732, 1931, 129, 1100, 2423, 2344, 2343,
	2007, 2008, 1952, 1927, 1939, 1986, 1930, 2014, 732, 732,
	732, 2259, 2258, 2257, 458, 1976, 2246, 2021, 1959, 2685,
	455, 2688, 2071, 2767, 1983, 1985, 1257, 2766, 129, 458,
	1331, 2613, 2813, 2611, 1971, 1350, 1967, 2666, 2665, 2065,
	420, 1408, 2596, 2597, 1332, 458, 2118, 2382, 2117, 1091,
	2064, 2282, 2016, 1264, 1007, 991, 988, 1887, 987, 2880,
	1092, 80, 944, 2630, 2629, 1729, 458, 2393, 732, 1481,
	1482, 1730, 1364, 2015, 458, 2017, 2018, 2019, 2020, 1910,
	2889, 2485, 2024, 1977, 2760, 1982, 1190, 2026, 2486, 2615,
	2035, 2427, 986, 2281, 2032, 732, 732, 2033, 2034, 1721,
	2146, 1102, 1103, 2055, 96, 129, 1470, 1080, 1081, 1834,
	2879, 2878, 2877, 2574, 622, 732, 1400, 1833, 1803, 971,
	544, 2816, 2082, 2815, 2779, 2764, 2689, 2063, 2636, 545,
	2088, 84, 732, 2778, 2068, 2700, 1954, 2074, 2041, 2042,
	2043, 1502, 2929, 2928, 2076, 1125, 1124, 1134, 1135, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1126, 2516, 2324, 1136,
	2199, 80, 2087, 2090, 2085, 2101, 2084, 2112, 2113, 2095,
	1898, 2116, 1895, 1801, 1396, 2069, 1105, 2928, 2929, 2096,
	2646, 2256, 1475, 720, 467, 2224, 2200, 469, 2734, 52,
	2228, 2229, 2230, 732, 86, 732, 2736, 19, 55, 2120,
	2121, 2207, 2136, 2132, 2126, 1926, 716, 2195, 1, 2140,
	728, 2735, 18, 2131, 2737, 20, 2738, 21, 732, 2130,
	2093, 2104, 2109, 1925, 2733, 15, 2732, 14, 2726, 10,
	1791, 1501, 932, 2234, 1437, 2253, 2749, 34, 2465, 732,
	2464, 732, 2179, 732, 2227, 732, 2178, 2147, 2471, 2189,
	2293, 2150, 2151, 2152, 2747, 33, 2155, 2746, 32, 2745,
	28, 2744, 27, 2381, 1503, 2743, 26, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 2217, 2202, 2198, 2741, 23, 2245, 2296, 2247,
	2740, 22, 2053, 2225, 2742, 24, 2232, 1472, 2731, 13,
	2481, 2239, 129, 1348, 455, 2585, 2303, 2728, 12, 2223,
	2727, 11, 927, 2238, 2725, 9, 1740, 1013, 2765, 2684,
	2289, 2686, 732, 732, 732, 2610, 2264, 2488, 2248, 458,
	2449, 2249, 2448, 2250, 129, 458, 2046, 2045, 2283, 2284,
	2285, 1008, 1418, 2130, 2094, 2097, 1751, 1586, 129, 1716,
	458, 1717, 732, 458, 2305, 1597, 2310, 458, 458, 1813,
	458, 1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1126, 2696, 1802, 1136, 2187, 732, 1063, 1667,
	1657, 129, 732, 722, 92, 1761, 2262, 2263, 478, 732,
	954, 2312, 732, 2266, 2191, 732, 387, 2355, 1664, 1992,
	2269, 2279, 2687, 1010, 1991, 2004, 2314, 1679, 1724, 2318,
	2311, 1728, 1990, 2322, 2323, 1114, 2325, 1989, 2682, 1993,
	2357, 1277, 1275, 1276, 1274, 1279, 2328, 1278, 391, 2389,
	1259, 2803, 2334, 2309, 2327, 1600, 2363, 1106, 107, 2233,
	56, 2505, 1543, 1544, 2333, 2348, 2108, 2313, 463, 464,
	97, 105, 393, 1144, 1832, 1556, 1557, 1558, 1559, 1960,
	707, 708, 700, 1824, 1086, 2702, 2863, 2795, 1096, 2826,
	1571, 1573, 1907, 1204, 1592, 1332, 1577, 129, 565, 1943,
	2346, 2520, 1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1126, 732, 1926, 1136, 2828, 1493, 579,
	578, 732, 732, 732, 577, 574, 575, 2415, 2416, 2417,
	2786, 732, 1484, 1925, 1917, 1118, 2276, 563, 2374, 554,
	1235, 80, 1228, 2413, 732, 1780, 1611, 1609, 1608, 1366,
	2425, 696, 2394, 2215, 2211, 1621, 1234, 1238, 70, 2440,
	2515, 969, 409, 478, 2403, 2418, 2439, 2390, 2643, 38,
	2402, 468, 549, 25, 1776, 17, 978, 16, 1806, 129,
	925, 732, 2461, 2462, 2463, 2414, 42, 44, 2040, 1969,
	1732, 2424, 2802, 2910, 994, 1331, 2936, 2843, 31, 30,
	29, 2739, 2748, 2441, 2730, 2729, 2897, 2432, 2428, 2434,
	2896, 4, 1077, 71, 35, 718, 2, 458, 0, 2350,
	0, 0, 0, 2499, 2500, 0, 0, 0, 0, 0,
	0, 0, 0, 552, 2460, 0, 0, 0, 0, 2501,
	0, 0, 0, 2490, 0, 0, 732, 2491, 0, 0,
	0, 0, 0, 0, 732, 2489, 2199, 0, 2509, 2199,
	2541, 0, 0, 2431, 2517, 2518, 0, 0, 0, 0,
	2245, 0, 2224, 2493, 0, 1845, 1846, 1847, 2447, 2502,
	0, 2494, 2495, 0, 0, 2540, 0, 0, 2564, 0,
	1183, 1184, 0, 0, 732, 0, 0, 2392, 0, 0,
	732, 0, 2510, 1774, 1192, 129, 2544, 129, 0, 2524,
	0, 0, 0, 732, 2404, 2405, 0, 2570, 2406, 0,
	0, 2408, 0, 0, 2571, 0, 2537, 0, 0, 1192,
	2538, 732, 1716, 0, 0, 2543, 0, 0, 2487, 0,
	0, 2569, 2548, 0, 2558, 0, 478, 2553, 2559, 2560,
	2514, 0, 0, 1902, 1903, 1904, 2575, 0, 2130, 1628,
	0, 2549, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 1821, 2576, 0, 2631, 0, 0, 1237, 0, 0,
	2198, 0, 0, 2198, 0, 0, 0, 2588, 0, 0,
	2598, 0, 0, 0, 0, 2561, 2547, 0, 0, 2606,
	2199, 732, 80, 2603, 2616, 0, 0, 0, 0, 129,
	0, 0, 0, 2632, 2621, 2622, 0, 0, 0, 0,
	2628, 0, 0, 0, 0, 0, 0, 2648, 0, 2634,
	1850, 2565, 80, 2566, 0, 1853, 2633, 716, 0, 732,
	1855, 1856, 716, 1260, 0, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 2652, 0, 1871, 0, 2662, 0, 2664,
	1876, 1877, 1878, 1879, 1240, 0, 2651, 1883, 1884, 1885,
	0, 2647, 0, 2624, 1888, 1889, 1890, 2654, 0, 1237,
	0, 0, 1896, 2635, 0, 1899, 1900, 0, 0, 0,
	1905, 0, 0, 0, 0, 1911, 0, 1912, 1913, 1914,
	0, 1915, 1916, 0, 0, 0, 0, 0, 458, 0,
	0, 129, 0, 0, 0, 0, 732, 0, 732, 0,
	1941, 1942, 0, 0, 2198, 80, 2692, 0, 2694, 2690,
	2693, 0, 0, 2719, 0, 0, 0, 2070, 2691, 0,
	2717, 0, 2701, 478, 0, 0, 0, 2705, 0, 129,
	0, 478, 0, 1926, 0, 2710, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1240, 0, 0, 0,
	0, 1925, 1683, 1684, 0, 1689, 1690, 1691, 1692, 1693,
	0, 0, 0, 0, 0, 0, 0, 2761, 2763, 2770,
	0, 732, 1975, 1703, 1704, 1705, 0, 2798, 0, 0,
	0, 2789, 2141, 2142, 0, 0, 0, 0, 0, 2794,
	0, 2148, 2149, 0, 80, 2134, 2652, 0, 0, 0,
	0, 0, 552, 2156, 2157, 2158, 2159, 0, 0, 0,
	2163, 2164, 2165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 732, 2160, 2161, 2713, 0,
	1342, 1345, 0, 2831, 0, 0, 0, 0, 0, 0,
	2180, 2181, 0, 2182, 2183, 732, 2818, 2184, 0, 2822,
	0, 1342, 1345, 2840, 0, 2820, 0, 0, 0, 2837,
	0, 0, 0, 0, 0, 455, 732, 2858, 0, 2819,
	0, 2821, 2839, 0, 0, 2850, 0, 0, 0, 0,
	0, 0, 0, 2859, 0, 0, 0, 80, 0, 0,
	458, 0, 2226, 80, 2862, 0, 0, 0, 732, 0,
	0, 2883, 0, 0, 2871, 2874, 0, 0, 0, 2876,
	732, 0, 2885, 0, 80, 0, 0, 0, 2891, 80,
	0, 1192, 0, 0, 732, 2901, 2890, 2900, 2920, 2807,
	2146, 2135, 455, 0, 2919, 2921, 2904, 2143, 2907, 2899,
	2926, 1438, 2255, 80, 2909, 2924, 80, 80, 2922, 2153,
	2154, 80, 2898, 0, 2930, 2883, 0, 458, 2886, 2939,
	0, 732, 2162, 0, 0, 2931, 2166, 0, 2933, 0,
	0, 0, 0, 80, 2949, 0, 80, 0, 0, 0,
	2957, 2883, 0, 2959, 0, 0, 0, 0, 0, 2367,
	0, 80, 0, 80, 0, 0, 0, 80, 2954, 2883,
	2201, 2883, 728, 0, 0, 0, 0, 0, 80, 0,
	0, 80, 0, 80, 0, 0, 2883, 80, 0, 2969,
	0, 2883, 0, 0, 0, 2883, 0, 0, 2881, 0,
	0, 728, 2231, 2973, 0, 2799, 2800, 1125, 1124, 1134,
	1135, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 0,
	0, 1136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2186, 2360, 2827, 2830, 0, 0, 0, 0, 0,
	2362, 1533, 0, 1120, 0, 1123, 2243, 0, 0, 2359,
	2365, 2366, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 2369,
	1121, 1122, 1119, 0, 0, 0, 0, 0, 1564, 1565,
	1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1126, 0, 0, 1136, 0, 0, 0, 2185, 0,
	0, 716, 0, 0, 0, 0, 0, 0, 0, 0,
	2875, 2386, 2387, 2388, 0, 0, 0, 0, 0, 0,
	0, 1024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2830, 0, 0, 0, 0, 0, 2009, 2010, 2011,
	2013, 0, 0, 0, 0, 0, 716, 1125, 1124, 1134,
	1135, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 0,
	728, 1136, 0, 728, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2332, 0, 0, 2426,
	0, 0, 0, 1975, 0, 0, 2339, 2341, 0, 0,
	0, 2358, 0, 0, 0, 0, 2332, 0, 0, 0,
	0, 0, 0, 2958, 1125, 1124, 1134, 1135, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1126, 0, 0, 1136, 2133,
	0, 0, 0, 0, 0, 1099, 0, 2370, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2379, 2380,
	0, 0, 0, 0, 2385, 0, 0, 1125, 1124, 1134,
	1135, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 2396,
	2397, 1136, 2399, 0, 0, 2400, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 406, 0, 0, 0,
	0, 0, 127, 0, 0, 2412, 0, 0, 478, 0,
	0, 0, 0, 2522, 2523, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 477, 0, 2526, 2527, 2528,
	2529, 0, 0, 553, 0, 2533, 699, 717, 0, 0,
	127, 1789, 0, 0, 0, 1789, 0, 1125, 1124, 1134,
	1135, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1126, 0,
	127, 1136, 0, 0, 0, 0, 0, 1789, 0, 0,
	1789, 127, 1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1126, 0, 0, 1136, 0, 0, 1827,
	0, 0, 0, 0, 1535, 1540, 1541, 0, 728, 0,
	1545, 0, 1547, 1548, 1549, 1550, 0, 1552, 0, 0,
	1555, 0, 0, 0, 0, 1560, 1561, 1562, 1563, 0,
	0, 0, 1567, 1568, 1569, 0, 0, 0, 0, 0,
	1575, 1576, 0, 2332, 0, 1582, 1585, 0, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2332, 0, 0, 0, 0, 0, 0,
	1598, 0, 1601, 1602, 0, 0, 2530, 2531, 2532, 0,
	2534, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2550, 2551, 2552, 0, 0,
	0, 0, 0, 0, 0, 0, 2563, 0, 0, 0,
	2660, 0, 0, 0, 0, 0, 478, 0, 478, 0,
	0, 716, 0, 0, 2243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1299, 0, 0, 728, 0, 2695, 0, 1027, 1034, 1035,
	1037, 1038, 1039, 1040, 1041, 0, 1043, 1044, 1045, 0,
	1048, 0, 1051, 1052, 1053, 1054, 1055, 0, 0, 0,
	0, 0, 2637, 2638, 0, 0, 2639, 2640, 2641, 2642,
	2851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2030, 0, 0, 0, 0,
	2371, 2372, 0, 2373, 0, 0, 2375, 0, 2377, 0,
	2044, 2048, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 1286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2083, 0, 0, 0, 2421, 2422, 0, 0, 0, 0,
	477, 0, 0, 2706, 0, 0, 0, 2243, 2711, 2243,
	0, 0, 0, 0, 0, 0, 0, 728, 728, 0,
	2714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1300, 0, 0, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 728,
	1851, 0, 0, 0, 2144, 0, 2774, 0, 1857, 0,
	0, 0, 2780, 0, 0, 0, 0, 0, 0, 1869,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2918, 1906, 0, 0,
	0, 0, 0, 716, 0, 728, 0, 2206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2206, 0, 0, 0, 0, 0, 2942, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2243, 0, 0, 0,
	0, 728, 0, 728, 0, 728, 1299, 2242, 0, 1313,
	1316, 1317, 1318, 1319, 1320, 1321, 0, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 0, 1301, 1302, 1303, 1304,
	1280, 1284, 1314, 1281, 1287, 1283, 1285, 1282, 0, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 127, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2290, 2291, 2292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1286,
	0, 0, 0, 0, 2317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 2342,
	0, 0, 2960, 2961, 2347, 0, 0, 1315, 0, 0,
	0, 2351, 0, 0, 2352, 0, 0, 2354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1300, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2410, 0, 0, 0,
	0, 0, 0, 2410, 2410, 2410, 0, 0, 0, 0,
	0, 0, 0, 728, 0, 0, 127, 0, 0, 0,
	0, 1343, 1346, 0, 0, 0, 2410, 1436, 0, 0,
	1439, 1440, 1441, 0, 1443, 1444, 127, 0, 1445, 127,
	0, 0, 1343, 1346, 1446, 0, 0, 1376, 1447, 1448,
	0, 1449, 1450, 0, 0, 0, 127, 127, 127, 127,
	127, 0, 0, 2048, 0, 1313, 1316, 1317, 1318, 1319,
	1320, 1321, 0, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 0, 1301, 1302, 1303, 1304, 1280, 1284, 1314, 1281,
	1287, 1283, 1285, 1282, 0, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2542, 0, 0, 0,
	0, 0, 2410, 0, 0, 0, 0, 0, 127, 0,
	477, 0, 0, 0, 0, 2242, 0, 0, 0, 0,
	0, 0, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 2242, 0, 0, 0, 0, 0, 0,
	0, 0, 1376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1539, 1539, 1539, 0, 0, 0,
	1539, 1539, 1539, 1539, 1539, 1539, 1539, 1539, 0, 0,
	1539, 0, 0, 2627, 0, 1539, 1539, 1539, 1539, 0,
	0, 0, 1539, 1539, 1539, 0, 0, 0, 0, 0,
	1539, 1539, 0, 0, 0, 1539, 1539, 0, 1539, 0,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 2650, 0, 0, 0, 0, 0, 0, 0, 0,
	1539, 1539, 1539, 1539, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 477, 0, 0, 0, 0,
	127, 127, 0, 0, 127, 1639, 1376, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 0, 2242, 0,
	2242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2336, 0, 0, 0, 0,
	0, 716, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 500,
	0, 0, 0, 0, 127, 127, 0, 0, 0, 0,
	0, 127, 0, 2776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1765, 1766, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 728, 477, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 0, 2242, 0, 0,
	0, 498, 481, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 0, 0, 0, 0, 0, 0, 2410, 0,
	527, 0, 0, 493, 0, 488, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, 0, 0, 1376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2868, 0, 0, 0, 0, 0, 0, 0,
	505, 503, 0, 0, 0, 506, 728, 0, 0, 0,
	0, 514, 482, 0, 518, 0, 0, 0, 0, 0,
	1539, 0, 480, 0, 0, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 0, 0, 496, 520, 0, 1539,
	1539, 0, 0, 2865, 494, 495, 497, 524, 0, 526,
	532, 0, 1539, 0, 0, 0, 1539, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 127, 127, 127, 127, 127, 0, 0,
	0, 0, 0, 0, 0, 477, 0, 0, 0, 127,
	0, 0, 0, 477, 0, 0, 0, 0, 1539, 0,
	127, 0, 0, 483, 0, 0, 0, 0, 717, 0,
	0, 0, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 534, 0, 0, 0, 0, 484,
	485, 486, 487, 489, 507, 508, 512, 513, 530, 529,
	528, 531, 535, 538, 537, 539, 490, 491, 499, 509,
	510, 511, 515, 516, 525, 521, 523, 0, 127, 0,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2329, 0, 0,
	0, 2331, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 0, 492, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 0, 500, 517, 519, 78, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	81, 2940, 0, 0, 0, 0, 0, 0, 0, 1539,
	0, 0, 0, 0, 0, 0, 0, 0, 1539, 0,
	1376, 0, 0, 0, 0, 2750, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 502, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 0, 493,
	0, 488, 0, 0, 0, 0, 0, 36, 501, 72,
	39, 40, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 0,
	41, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 505, 503, 0, 0,
	0, 506, 0, 0, 0, 0, 2751, 514, 482, 0,
	518, 0, 0, 0, 0, 0, 0, 0, 480, 81,
	0, 0, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 496, 520, 0, 0, 0, 0, 0, 0,
	494, 495, 497, 524, 2750, 526, 532, 2935, 2938, 2934,
	0, 0, 0, 0, 36, 37, 72, 39, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 78, 127, 0, 41, 63, 64,
	57, 58, 0, 2752, 0, 60, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 50, 0, 0, 0, 81, 0, 0, 483,
	0, 127, 0, 0, 68, 0, 0, 0, 504, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2751, 0, 0, 0, 0,
	0, 0, 2753, 75, 127, 53, 54, 61, 0, 62,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 533,
	534, 0, 0, 0, 553, 484, 485, 486, 487, 489,
	507, 508, 512, 513, 530, 529, 528, 531, 535, 538,
	537, 539, 490, 491, 499, 509, 510, 511, 515, 516,
	525, 521, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 57,
	58, 0, 2752, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 522,
	477, 73, 0, 0, 717, 0, 0, 0, 49, 77,
	76, 0, 0, 68, 0, 47, 0, 0, 0, 0,
	0, 0, 517, 519, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2753, 75, 0, 53, 54, 61, 0, 62, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 75,
	73, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 477, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 553, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 2801, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 127, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 2804, 2805, 2806, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 731, 0, 1661, 1662, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 1970, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 731, 0, 1661, 1662, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 2203, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 81, 0, 1089,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 2204, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 2519, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 2139, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 2129, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 1640, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 1499, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 1673, 1677, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 1676, 213,
	903, 885, 803, 802, 1670, 0, 1671, 1672, 223, 730,
	130, 146, 1668, 1675, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 153,
	130, 146, 164, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 0, 794, 135,
	874, 904, 837, 848, 888, 863, 340, 808, 891, 765,
	791, 906, 796, 800, 843, 749, 821, 266, 787, 750,
	0, 769, 739, 779, 740, 766, 183, 764, 865, 824,
	890, 222, 838, 0, 182, 171, 230, 228, 0, 0,
	0, 273, 339, 889, 816, 0, 898, 225, 0, 833,
	899, 327, 250, 0, 0, 812, 875, 819, 861, 807,
	845, 758, 832, 893, 788, 840, 894, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 836, 887, 782, 839, 810, 842, 737, 835,
	0, 744, 751, 905, 882, 772, 773, 774, 0, 0,
	0, 0, 0, 0, 0, 811, 820, 855, 804, 360,
	277, 294, 315, 798, 285, 785, 0, 0, 0, 0,
	0, 0, 0, 0, 770, 0, 830, 0, 0, 0,
	752, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 809, 0, 0, 0, 757, 736,
	771, 857, 0, 734, 251, 148, 862, 881, 806, 213,
	903, 885, 803, 802, 287, 0, 334, 201, 223, 730,
	130, 146, 726, 200, 262, 854, 309, 784, 735, 866,
	767, 780, 172, 776, 301, 270, 359, 789, 827, 300,
	226, 349, 850, 886, 358, 793, 869, 368, 373, 775,
	817, 755, 324, 185, 180, 184, 0, 137, 786, 284,
	177, 218, 805, 844, 768, 168, 852, 831, 868, 323,
	346, 134, 248, 347, 372, 155, 341, 249, 255, 165,
	167, 166, 147, 318, 345, 160, 170, 328, 305, 335,
	176, 0, 0, 0, 0, 0, 799, 790, 0, 0,
	364, 801, 312, 311, 795, 208, 860, 834, 741, 293,
	847, 214, 136, 337, 376, 154, 220, 342, 733, 195,
	261, 174, 271, 272, 192, 132, 289, 242, 243, 241,
	244, 199, 781, 849, 859, 291, 314, 344, 156, 331,
	777, 778, 783, 856, 303, 867, 879, 892, 233, 188,
	191, 202, 209, 841, 298, 332, 365, 0, 149, 138,
	338, 357, 161, 313, 316, 374, 299, 141, 355, 333,
	246, 215, 216, 139, 0, 140, 296, 181, 198, 175,
	265, 0, 197, 286, 352, 353, 173, 377, 150, 367,
	143, 151, 366, 258, 0, 257, 369, 348, 356, 247,
	235, 0, 142, 354, 245, 234, 221, 190, 204, 282,
	229, 283, 205, 253, 252, 254, 231, 236, 0, 742,
	0, 329, 362, 378, 158, 763, 317, 343, 792, 290,
	159, 196, 189, 281, 256, 152, 207, 326, 219, 227,
	295, 375, 269, 302, 162, 361, 325, 186, 761, 762,
	759, 0, 760, 822, 823, 895, 896, 897, 858, 754,
	0, 876, 877, 0, 0, 0, 0, 0, 864, 883,
	884, 846, 907, 797, 169, 743, 746, 747, 748, 756,
	813, 814, 826, 829, 872, 871, 870, 873, 878, 901,
	900, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 825, 133, 144, 224, 908, 292, 194,
	363, 738, 179, 0, 815, 818, 828, 853, 131, 145,
	157, 163, 178, 187, 193, 203, 206, 210, 211, 212,
	217, 232, 237, 238, 239, 240, 259, 260, 263, 264,
	267, 268, 274, 275, 276, 278, 279, 280, 288, 851,
	297, 304, 306, 307, 308, 310, 319, 320, 321, 322,
	330, 336, 350, 351, 370, 371, 880, 340, 794, 135,
	874, 904, 837, 848, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 560, 0, 0, 183, 557, 0,
	0, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 678, 225, 0,
	0, 536, 327, 250, 0, 0, 0, 0, 667, 668,
	0, 0, 0, 0, 0, 0, 1650, 0, 81, 0,
	0, 0, 558, 581, 580, 583, 584, 585, 586, 0,
	0, 541, 582, 587, 620, 621, 1651, 0, 0, 0,
	555, 572, 0, 677, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 500, 0, 0, 0,
	0, 569, 570, 0, 0, 0, 0, 690, 0, 571,
	0, 0, 567, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 573, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 148, 669, 0, 0,
	213, 540, 0, 0, 688, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 0, 309, 595, 481,
	0, 0, 0, 172, 0, 301, 270, 359, 597, 0,
	300, 226, 349, 0, 0, 358, 0, 527, 368, 373,
	493, 0, 488, 324, 185, 180, 184, 0, 137, 501,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 505, 503, 0,
	0, 364, 506, 312, 311, 0, 208, 0, 514, 482,
	293, 518, 214, 136, 337, 376, 154, 220, 342, 480,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 496, 520, 0, 291, 314, 344, 156,
	331, 494, 495, 497, 524, 303, 526, 532, 0, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	483, 0, 329, 362, 378, 158, 0, 317, 343, 504,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 679,
	689, 685, 687, 686, 683, 684, 682, 681, 680, 691,
	670, 671, 672, 673, 674, 0, 0, 0, 676, 0,
	614, 615, 0, 0, 0, 169, 588, 589, 590, 591,
	592, 598, 599, 603, 604, 612, 611, 610, 613, 616,
	618, 617, 619, 593, 594, 596, 600, 601, 602, 605,
	606, 609, 607, 608, 675, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	522, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 36, 340, 0,
	135, 0, 0, 517, 519, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 79,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 551, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 1089, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 1537, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 1584, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 1537, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 1581, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 1537, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 1416, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 560, 0, 0, 183, 557,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 555, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 1587, 1588, 1589, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	2943, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 1089, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 678, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 667,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 558, 581, 580, 583, 584, 585, 586,
	0, 0, 541, 582, 587, 620, 621, 0, 0, 0,
	0, 0, 572, 0, 677, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 569, 570, 0, 0, 0, 0, 690, 0,
	571, 0, 0, 567, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 573, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 669, 0,
	0, 213, 540, 0, 0, 688, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 595,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 597,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	679, 689, 685, 687, 686, 683, 684, 682, 681, 680,
	691, 670, 671, 672, 673, 674, 0, 0, 0, 676,
	0, 614, 615, 0, 0, 0, 169, 588, 589, 590,
	591, 592, 598, 599, 603, 604, 612, 611, 610, 613,
	616, 618, 617, 619, 593, 594, 596, 600, 601, 602,
	605, 606, 609, 607, 608, 675, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 1627, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	0, 0, 0, 128, 0, 479, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 1630, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 1627, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 1631, 0, 0, 0,
	0, 0, 0, 128, 0, 479, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 1625, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 1630, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 1111, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 1115, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 1108,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 1109, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 479, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 474,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 1946, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 479, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 479, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 0, 1115, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 340, 0,
	0, 135, 0, 0, 517, 519, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 222, 0, 0, 182, 171, 230, 228,
	0, 0, 0, 273, 339, 0, 0, 0, 0, 225,
	0, 0, 536, 327, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 277, 294, 315, 0, 285, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 148, 0, 0,
	0, 213, 540, 0, 0, 0, 287, 0, 334, 201,
	223, 153, 130, 146, 164, 200, 262, 0, 309, 498,
	481, 0, 0, 0, 172, 0, 301, 270, 359, 502,
	0, 300, 226, 349, 0, 0, 358, 0, 527, 368,
	373, 493, 0, 488, 324, 185, 180, 184, 0, 137,
	501, 284, 177, 218, 0, 0, 0, 168, 0, 0,
	0, 323, 346, 134, 248, 347, 372, 155, 341, 249,
	255, 165, 167, 166, 147, 318, 345, 160, 170, 328,
	305, 335, 176, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 364, 506, 312, 311, 0, 208, 0, 514,
	482, 293, 518, 214, 136, 337, 376, 154, 220, 342,
	480, 195, 261, 174, 271, 272, 192, 132, 289, 242,
	243, 241, 244, 199, 496, 520, 0, 291, 314, 344,
	156, 331, 494, 495, 497, 524, 303, 526, 532, 0,
	233, 188, 191, 202, 209, 0, 298, 332, 365, 0,
	149, 138, 338, 357, 161, 313, 316, 374, 299, 141,
	355, 333, 246, 215, 216, 139, 0, 140, 296, 181,
	198, 175, 265, 0, 197, 286, 352, 353, 173, 377,
	150, 367, 143, 151, 366, 258, 0, 257, 369, 348,
	356, 247, 235, 0, 142, 354, 245, 234, 221, 190,
	204, 282, 229, 283, 205, 253, 252, 254, 231, 236,
	0, 483, 0, 329, 362, 378, 158, 0, 317, 343,
	504, 290, 159, 196, 189, 281, 256, 152, 207, 326,
	219, 227, 295, 375, 269, 302, 162, 361, 325, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 534, 0, 0, 0, 169, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 133, 144, 224, 0,
	292, 194, 363, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 187, 193, 203, 206, 210,
	211, 212, 217, 232, 237, 238, 239, 240, 259, 260,
	263, 264, 267, 268, 274, 275, 276, 278, 279, 280,
	288, 522, 297, 304, 306, 307, 308, 310, 319, 320,
	321, 322, 330, 336, 350, 351, 370, 371, 0, 0,
	0, 135, 0, 0, 517, 519, 448, 340, 442, 453,
	436, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 459, 0, 0, 0, 0, 0, 183, 0, 0,
	443, 0, 222, 0, 0, 182, 171, 230, 228, 0,
	0, 0, 273, 339, 0, 0, 0, 0, 225, 0,
	0, 0, 327, 250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 277, 294, 315, 0, 285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 435,
	434, 437, 0, 0, 0, 251, 148, 0, 0, 441,
	213, 0, 0, 0, 0, 287, 0, 334, 201, 223,
	153, 130, 146, 164, 200, 262, 445, 309, 0, 0,
	449, 0, 0, 172, 0, 301, 270, 359, 0, 0,
	300, 226, 349, 0, 452, 358, 0, 0, 368, 373,
	0, 0, 0, 324, 185, 180, 184, 0, 137, 0,
	284, 177, 218, 0, 0, 0, 168, 0, 0, 0,
	323, 346, 134, 248, 347, 372, 155, 341, 249, 255,
	165, 167, 166, 147, 318, 345, 160, 170, 328, 305,
	335, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 364, 0, 312, 311, 0, 208, 0, 0, 0,
	293, 0, 214, 136, 337, 376, 154, 220, 342, 0,
	195, 261, 174, 271, 272, 192, 132, 289, 242, 243,
	241, 244, 199, 0, 0, 0, 462, 314, 344, 156,
	331, 438, 439, 440, 446, 447, 450, 451, 454, 233,
	188, 191, 202, 209, 0, 298, 332, 365, 0, 149,
	138, 338, 357, 161, 313, 316, 374, 299, 141, 355,
	333, 246, 215, 216, 139, 0, 140, 296, 181, 198,
	175, 265, 0, 197, 286, 352, 353, 173, 377, 150,
	367, 143, 151, 366, 258, 0, 257, 369, 348, 356,
	247, 235, 0, 142, 354, 245, 234, 221, 190, 204,
	282, 229, 283, 205, 253, 252, 254, 231, 236, 0,
	0, 0, 329, 362, 378, 158, 0, 317, 343, 0,
	290, 159, 196, 189, 281, 256, 152, 207, 326, 219,
	227, 295, 375, 269, 302, 162, 361, 325, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 224, 0, 292,
	194, 363, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 187, 193, 203, 206, 210, 211,
	212, 217, 232, 237, 238, 239, 240, 259, 260, 263,
	264, 267, 268, 274, 275, 276, 278, 279, 280, 288,
	444, 297, 304, 306, 307, 308, 310, 319, 320, 321,
	322, 330, 336, 350, 351, 370, 371, 0, 0, 0,
	135, 448, 340, 442, 453, 436, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 428, 0, 0, 0,
	0, 0, 183, 0, 0, 443, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 435, 434, 437, 0, 0, 0,
	251, 148, 0, 0, 441, 213, 0, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 445, 309, 0, 0, 449, 0, 0, 172, 0,
	301, 270, 359, 0, 0, 300, 226, 349, 0, 452,
	358, 0, 0, 368, 373, 0, 0, 0, 324, 185,
	180, 184, 0, 137, 0, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 312, 311,
	0, 208, 0, 0, 0, 293, 0, 214, 136, 337,
	376, 154, 220, 342, 0, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 0, 0,
	0, 431, 314, 344, 156, 331, 438, 439, 440, 446,
	447, 450, 451, 454, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 0, 0, 329, 362, 378,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 444, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 0, 1125, 1124, 1134, 1135, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1126, 0, 0, 1136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 0, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 0, 0, 0, 0, 0, 172, 0,
	301, 270, 359, 0, 0, 300, 226, 349, 0, 0,
	358, 0, 0, 368, 373, 0, 0, 0, 324, 185,
	180, 184, 0, 137, 0, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 312, 311,
	0, 208, 0, 0, 0, 293, 0, 214, 136, 337,
	376, 154, 220, 342, 0, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 0, 0,
	0, 291, 314, 344, 156, 331, 0, 0, 0, 0,
	303, 0, 0, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 0, 0, 329, 362, 378,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 0, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 340, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 2857, 0, 0, 0,
	0, 0, 183, 2855, 0, 0, 0, 222, 0, 0,
	182, 171, 230, 228, 0, 0, 0, 273, 339, 0,
	0, 0, 0, 225, 0, 0, 0, 327, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 277, 294, 315, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 148, 0, 0, 0, 213, 0, 0, 0, 0,
	287, 0, 334, 201, 223, 153, 130, 146, 164, 200,
	262, 0, 309, 0, 0, 0, 0, 0, 172, 0,
	301, 270, 359, 0, 0, 300, 226, 349, 0, 0,
	358, 0, 0, 368, 373, 0, 0, 0, 324, 185,
	180, 184, 0, 137, 0, 284, 177, 218, 0, 0,
	0, 168, 0, 0, 0, 323, 346, 134, 248, 347,
	372, 155, 341, 249, 255, 165, 167, 166, 147, 318,
	345, 160, 170, 328, 305, 335, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 364, 0, 312, 311,
	0, 208, 0, 2856, 0, 293, 0, 214, 136, 337,
	376, 154, 220, 342, 0, 195, 261, 174, 271, 272,
	192, 132, 289, 242, 243, 241, 244, 199, 0, 0,
	0, 291, 314, 344, 156, 331, 0, 0, 0, 0,
	303, 0, 0, 0, 233, 188, 191, 202, 209, 0,
	298, 332, 365, 0, 149, 138, 338, 357, 161, 313,
	316, 374, 299, 141, 355, 333, 246, 215, 216, 139,
	0, 140, 296, 181, 198, 175, 265, 0, 197, 286,
	352, 353, 173, 377, 150, 367, 143, 151, 366, 258,
	0, 257, 369, 348, 356, 247, 235, 0, 142, 354,
	245, 234, 221, 190, 204, 282, 229, 283, 205, 253,
	252, 254, 231, 236, 0, 0, 0, 329, 362, 378,
	158, 0, 317, 343, 0, 290, 159, 196, 189, 281,
	256, 152, 207, 326, 219, 227, 295, 375, 269, 302,
	162, 361, 325, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 224, 0, 292, 194, 363, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 187,
	193, 203, 206, 210, 211, 212, 217, 232, 237, 238,
	239, 240, 259, 260, 263, 264, 267, 268, 274, 275,
	276, 278, 279, 280, 288, 0, 297, 304, 306, 307,
	308, 310, 319, 320, 321, 322, 330, 336, 350, 351,
	370, 371, 36, 340, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 1622, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 79, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 2050,
	2051, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 1402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 1262, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	1261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 2316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	1825, 1826, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 694, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 125, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 357, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 714, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 710, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 715, 713, 704, 705, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 711, 712, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 1256, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 151, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 231, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 0, 290, 159, 196, 189,
	281, 256, 152, 207, 326, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 279, 280, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 340, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 222, 0,
	0, 182, 171, 230, 228, 0, 0, 0, 273, 339,
	0, 0, 0, 0, 225, 0, 0, 0, 327, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 277, 294, 315,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 148, 0, 0, 0, 213, 0, 0, 0,
	0, 287, 0, 334, 201, 223, 153, 130, 146, 164,
	200, 262, 0, 309, 0, 0, 0, 0, 0, 172,
	0, 301, 270, 359, 0, 0, 300, 226, 349, 0,
	0, 358, 0, 0, 368, 373, 0, 0, 0, 324,
	185, 180, 184, 0, 137, 0, 284, 177, 218, 0,
	0, 0, 168, 0, 0, 0, 323, 346, 134, 248,
	347, 372, 155, 341, 249, 255, 165, 167, 166, 147,
	318, 345, 160, 170, 328, 305, 335, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 364, 0, 312,
	311, 0, 208, 0, 0, 0, 293, 0, 214, 136,
	337, 376, 154, 220, 342, 0, 195, 261, 174, 271,
	272, 192, 132, 289, 242, 243, 241, 244, 199, 0,
	0, 0, 291, 314, 344, 156, 331, 0, 0, 0,
	0, 303, 0, 0, 0, 233, 188, 191, 202, 209,
	0, 298, 332, 365, 0, 149, 138, 338, 701, 161,
	313, 316, 374, 299, 141, 355, 333, 246, 215, 216,
	139, 0, 140, 296, 181, 198, 175, 265, 0, 197,
	286, 352, 353, 173, 377, 150, 367, 143, 714, 366,
	258, 0, 257, 369, 348, 356, 247, 235, 0, 142,
	354, 245, 234, 221, 190, 204, 282, 229, 283, 205,
	253, 252, 254, 710, 236, 0, 0, 0, 329, 362,
	378, 158, 0, 317, 343, 536, 290, 159, 196, 189,
	281, 715, 713, 704, 705, 219, 227, 295, 375, 269,
	302, 162, 361, 325, 186, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 224, 0, 292, 194, 363, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	187, 193, 203, 206, 210, 211, 212, 217, 232, 237,
	238, 239, 240, 259, 260, 263, 264, 267, 268, 274,
	275, 276, 278, 711, 712, 288, 0, 297, 304, 306,
	307, 308, 310, 319, 320, 321, 322, 330, 336, 350,
	351, 370, 371, 0, 0, 540, 135, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 498, 481, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 493, 0, 488, 0, 0, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 0, 506, 0, 0, 1330,
	0, 0, 514, 482, 0, 518, 0, 0, 541, 0,
	0, 0, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 496, 520, 0,
	0, 0, 0, 0, 0, 494, 495, 497, 524, 0,
	526, 532, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2331, 0, 0, 0,
	0, 0, 0, 0, 483, 541, 0, 0, 540, 0,
	0, 0, 0, 504, 0, 0, 0, 1272, 0, 0,
	0, 0, 492, 0, 0, 498, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	500, 0, 0, 0, 527, 0, 0, 493, 0, 488,
	0, 0, 0, 0, 533, 534, 501, 0, 0, 0,
	484, 485, 486, 487, 489, 507, 508, 512, 513, 530,
	529, 528, 531, 535, 538, 537, 539, 490, 491, 499,
	509, 510, 511, 515, 516, 525, 521, 523, 0, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 514, 482, 0, 518, 0,
	0, 0, 0, 0, 0, 540, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 520, 498, 481, 522, 0, 0, 0, 494, 495,
	497, 524, 502, 526, 532, 0, 0, 0, 0, 0,
	0, 527, 0, 0, 493, 0, 488, 517, 519, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 503, 0, 0, 0, 506, 0, 0, 2340,
	0, 0, 514, 482, 0, 518, 0, 483, 541, 0,
	0, 0, 0, 480, 0, 0, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 496, 520, 0,
	0, 0, 0, 0, 0, 494, 495, 497, 524, 0,
	526, 532, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 0, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 540, 0,
	0, 0, 0, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 498, 481, 522, 0, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 0, 0, 493, 0, 488,
	517, 519, 0, 0, 533, 534, 501, 0, 0, 0,
	484, 485, 486, 487, 489, 507, 508, 512, 513, 530,
	529, 528, 531, 535, 538, 537, 539, 490, 491, 499,
	509, 510, 511, 515, 516, 525, 521, 523, 0, 0,
	0, 0, 0, 0, 505, 503, 0, 0, 0, 506,
	0, 0, 0, 0, 0, 514, 482, 0, 518, 0,
	0, 0, 0, 0, 0, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 520, 0, 0, 522, 0, 0, 0, 494, 495,
	497, 524, 0, 526, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 517, 519, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2338, 0, 0, 0, 0, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 504, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 0,
	0, 0, 0, 484, 485, 486, 487, 489, 507, 508,
	512, 513, 530, 529, 528, 531, 535, 538, 537, 539,
	490, 491, 499, 509, 510, 511, 515, 516, 525, 521,
	523, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 0,
	0, 493, 0, 488, 0, 0, 0, 522, 0, 36,
	501, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	517, 519, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 505, 503,
	0, 0, 0, 506, 0, 0, 0, 0, 0, 514,
	482, 0, 518, 0, 0, 0, 0, 0, 0, 0,
	480, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 520, 0, 0, 0, 0,
	0, 0, 494, 495, 497, 524, 2750, 526, 532, 0,
	0, 2975, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 41,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	504, 0, 43, 74, 46, 45, 48, 0, 0, 0,
	0, 0, 0, 2750, 0, 0, 0, 2751, 2971, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 533, 534, 0, 0, 0, 0, 484, 485, 486,
	487, 489, 507, 508, 512, 513, 530, 529, 528, 531,
	535, 538, 537, 539, 490, 491, 499, 509, 510, 511,
	515, 516, 525, 521, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2752, 0, 0, 0, 0, 43,
	74, 46, 45, 48, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 2751, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 77, 76, 0, 0, 68, 0, 47, 0, 36,
	0, 72, 39, 40, 517, 519, 0, 0, 0, 0,
	0, 0, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 41, 2753, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 0, 0, 0, 0, 36,
	0, 72, 39, 40, 0, 0, 0, 0, 57, 58,
	0, 2752, 0, 59, 0, 0, 0, 0, 0, 78,
	0, 81, 41, 0, 0, 66, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2750, 0, 0, 0,
	0, 2965, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2753, 75, 73, 53, 54, 61, 2750, 62, 0, 0,
	0, 2951, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 43, 74, 46, 45, 48, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 2751, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 41, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 43, 74, 46, 45, 48, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 2751, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 49, 77, 76, 0, 0, 0, 0,
	47, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 0, 2752, 2750, 0, 0, 79, 0,
	2882, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 36, 0, 72, 39, 40, 0,
	0, 57, 58, 0, 2752, 68, 0, 0, 59, 0,
	0, 0, 0, 0, 78, 0, 0, 41, 66, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2753, 75, 0, 53, 54, 61, 0,
	62, 0, 0, 0, 0, 68, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 81, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2751, 0, 0, 0,
	0, 0, 0, 2753, 75, 0, 53, 54, 61, 0,
	62, 2750, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 0, 2752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 0, 0, 0, 0, 0, 43, 74, 46,
	45, 48, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 2751, 0, 68, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 77,
	76, 0, 0, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 2753, 75, 0, 53, 54, 61, 0, 62,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 57, 58, 0, 2752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 67, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2753, 75,
	0, 53, 54, 61, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	5208, -1000, -355, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1876, -1000, -1000, -1000, -1000,
	-1000, -1000, 1035, 305, -1000, 286, 192, 33406, 606, 520,
	34486, -1000, -1000, -1000, 177, 529, 34486, 441, 466, 1288,
	1764, 1286, 25, -71, -75, 135, 25305, 24760, 7, -1000,
	1938, 1942, -1000, -1000, 522, 31, -1000, -1000, -1000, 22051,
	219, -1000, -1000, 1863, 1873, 1666, -1000, 14491, 522, 522,
	32866, 36646, -1000, 1937, 34486, 12869, -1000, 597, 585, -160,
	470, 470, 276, 470, 470, 605, -1000, 277, 883, -1000,
	-1000, -1000, -1000, 882, 34486, 29086, 473, 33946, 473, 473,
	473, 473, 473, 473, 473, 34486, -1000, 667, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34486,
	1285, 1793, 991, 132, -1000, -1000, -1000, 978, -1000, 333,
	314, 326, 310, 104, 997, 1860, -1000, 1513, 1863, 1863,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 300, 582, 267,
	219, 880, 1829, 1789, 1787, 1195, 1786, 572, 1785, 1593,
	-50, -1000, 1284, 34486, -1000, -1000, 1116, 1115, 1624, 1468,
	689, 1621, -1000, -1000, 318, 451, 1583, 414, 1583, 1583,
	1583, 1583, 1583, -86, 1583, 1583, 1583, 71, 1583, 153,
	1583, 1583, 1583, 1583, 1583, 1294, -1000, -1000, -1000, 355,
	1466, 1522, 1620, 243, -1000, -1000, -1000, -1000, 1612, 1846,
	604, -1000, -117, 1514, 23131, -1000, 1513, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1187, 1790, 1103, 17731, 1706, -1000, -1000, 1029,
	1925, -1000, 21511, 666, -1000, 17731, 2943, 1513, -1000, -1000,
	1513, -1000, -1000, -1000, 632, -1000, -1000, 19891, 19891, 19891,
	19891, 19891, 19891, 19891, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	-1000, -1000, 1513, -1000, 13951, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1513, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 17731, 1513, 1513,
	1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513, 1513,
	1513, 1513, 32326, 29626, 34486, 1552, 1546, -1000, -1000, 664,
	1532, -83, 36106, -1000, -1000, -1000, -1000, 35026, 28546, 879,
	-1000, -1000, -1000, -1000, 1784, -1000, -1000, 649, -1000, 1876,
	-1000, -1000, 1436, 384, -1000, 3817, 37217, -1000, -1000, -1000,
	1591, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33946,
	34486, 245, 1283, 950, 1282, 35026, 35026, -1000, 237, 29086,
	29086, 470, 268, 29086, 235, 1531, 579, 1530, 578, 1238,
	34486, 1808, 1618, 34486, 1279, 1277, 35026, 35026, 29086, 29086,
	-1000, 12319, -1000, -1000, 991, -1000, 3898, 17731, 470, 470,
	34486, 34486, 34486, 34486, 34486, -1000, -1000, 991, 991, 991,
	991, 943, 1923, 943, -1000, 943, -1000, -1000, 17731, -1000,
	19891, 28006, 738, -1000, -1000, -1000, 1276, 299, -1000, -1000,
	-1000, -1000, -1000, -1000, 1275, -1000, 1768, 572, 572, -1000,
	1237, 572, 1508, -1000, 877, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 572, -1000, 17191,
	-344, -1000, -1000, 1528, -1000, 298, -1000, -1000, 536, 536,
	208, 29086, 29086, 29086, -1000, 1583, 33946, -1000, 1583, 1583,
	1583, -92, 1583, 1583, -1000, -1000, 1583, -1000, -1000, -1000,
	-1000, -1000, 1583, -1000, -1000, -1000, 1583, 1583, -1000, 1583,
	1583, -1000, -1000, -1000, -1000, -1000, 29086, 536, 173, 1515,
	536, 29086, 29086, -1000, 56, 55, 53, 49, -1000, -1000,
	-1000, -1000, 48, 47, -1000, -1000, 1666, -1000, -1000, 219,
	-1000, -1000, 34486, -96, 23131, 1514, 1843, 10669, -1000, -1000,
	974, 1933, 814, 1506, -1000, -1000, 1511, -1000, 1134, 647,
	1183, 1680, -1000, -1000, -1000, 34486, -1000, 17731, 17731, 1023,
	-1000, 23671, -1000, -1000, -1000, -1000, 10119, 825, 19891, 1077,
	832, 19891, 19891, 19891, 19891, 19891, 19891, 19891, 19891, 19891,
	19891, 19891, 19891, 19891, 19891, 19891, 1136, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1273, -1000, 219, 1512, 1512,
	716, 716, 716, 716, 716, 716, 25845, 1840, 15571, 15571,
	15571, 1840, 1187, 1187, 15571, 15571, 15571, 15571, 15571, 15571,
	15571, 15571, 1840, 1840, 15571, 1187, 1187, 1187, 1187, 15571,
	15571, 15571, 15571, 33946, 33946, 1840, 15571, 15571, 15571, 1840,
	1187, 1434, 869, 13951, 15571, 15571, 1187, 17731, 17731, 16651,
	16111, 18271, 15571, 1840, 913, 869, 35026, -1000, -1000, 19351,
	-1000, -1000, -1000, -1000, -1000, 1187, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15571, 15571, 15571, 15571, 795, 34486,
	-1000, 1498, 1606, -1000, -1000, -1000, 1841, 26926, -1000, 20971,
	-1000, 1513, 795, 1420, 29626, 34486, -1000, -1000, 29626, 34486,
	9569, 35566, 1501, -1000, -125, -129, -83, -1000, -1000, 710,
	-1000, -1000, -1000, 13410, -1000, 11219, 1863, 1666, 6819, 11769,
	-1000, 37217, 1591, -1000, -60, -1000, -1000, -1000, 1566, -1000,
	1566, 284, -12, 1566, 1566, 1566, 1566, 1566, -22, -22,
	-22, -22, -11, -1000, -1000, -1000, -1000, -1000, 1590, 1589,
	-1000, 1566, 1566, 1566, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1580, 294, 1569, 1569, 1569, 1569, 1569,
	382, 382, -1000, 17731, 1603, 1836, 575, 268, 1797, 1807,
	1797, 313, -1000, 645, 1586, -1000, 644, 301, 1503, -1000,
	186, 1367, 34486, -1000, -1000, -1000, -1000, -1000, 34486, 34486,
	29086, 29086, 29086, 558, -1000, 34486, 1510, -1000, -1000, -1000,
	-1000, -1000, 1486, -1000, 1367, -1000, -1000, -1000, -1000, -1000,
	1236, 869, 1272, 1271, 1829, -1000, -1000, -1000, 944, -1000,
	-1000, -1000, -1000, 991, 34486, 34486, 34486, 1829, 991, 869,
	776, 1605, 1513, 1187, -1000, -1000, 1270, -1000, 19891, 1508,
	1508, -1000, 1508, 572, 1512, 1508, -1000, 1431, 1013, 1233,
	34486, -1000, 23131, -51, -1000, -139, 31786, -1000, -1000, -1000,
	31786, -1000, 71, 151, -1000, 571, -1000, 1426, -1000, -1000,
	-1000, -1000, 1583, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 31786, 116, 170, 31786, 1486, 1922, -1000, -1000,
	-1000, -1000, 1859, -1000, 1840, 1187, 259, -1000, -1000, -1000,
	1513, 1387, 643, -1000, 31246, -1000, 1674, 1103, 1103, 17731,
	-1000, -1000, -1000, 11219, 1858, -1000, 1686, 1685, 1635, -1000,
	-1000, 825, 861, -1000, -1000, 1091, -1000, -1000, -1000, -1000,
	640, 1513, -1000, 3215, -1000, -1000, -1000, -1000, 1077, 19891,
	19891, 19891, 776, 3215, 3190, 1078, 948, 716, 920, 920,
	735, 735, 735, 735, 735, 910, 910, -1000, -1000, -1000,
	1187, -1000, -1000, -1000, 15571, 1413, -1000, -1000, 869, 639,
	1413, 1413, 15571, -193, -193, 1413, 1187, 1413, 1413, 1413,
	1413, 1187, 1413, 15571, 15571, 1413, -193, -193, -193, -193,
	1413, 1413, 1413, 1413, 1507, 1504, 15571, 1413, 1413, 1413,
	15571, -1000, 17731, -1000, 1187, 1413, 1413, -1000, 1064, 922,
	787, 1921, 1413, 784, 1919, 1413, 874, 19891, 19891, 19891,
	1413, 15571, 933, -1000, 17731, 1187, -1000, 1394, 1413, 1187,
	1502, 1413, 1413, 249, 1513, -1000, 11219, 29626, 29626, 29626,
	29626, 29626, -1000, 1656, 1653, -1000, 1652, 1649, 1660, 23131,
	1424, 1187, 303, 26926, -1000, 1513, -1000, 22591, 665, 596,
	594, 589, 15571, 1884, 29626, 1389, -1000, 1389, -1000, 638,
	-1000, -1000, 35026, -83, -93, -1000, -1000, 1501, -1000, 1156,
	-1000, -1000, 869, -1000, 637, 1790, 1840, 1500, 6269, -1000,
	-1000, -1000, -1000, 384, -1000, -1000, -1000, 1582, 37004, -1000,
	1730, 732, 732, 719, 1247, 1720, -1000, -1000, 168, -62,
	-1000, -1000, 1112, -22, -22, 1566, 1566, 283, 1566, -1000,
	-22, -1000, -1000, -1000, 710, 1783, 710, 710, 710, 710,
	-22, 1232, 1232, -1000, -1000, -1000, -1000, 1110, -1000, 1580,
	-1000, 1102, -1000, -1000, -1000, -1000, -1000, -1000, 1235, 1617,
	33946, -1000, 34486, -1000, 1797, -1000, -1000, -1000, 155, -1000,
	-1000, -1000, 1890, -1000, -1000, 33946, 27466, 33946, -1000, -1000,
	77, 29086, 176, 340, 217, -1000, 562, -1000, 559, -1000,
	-1000, -1000, -1000, -1000, -1000, 34486, 29086, -1000, -1000, -1000,
	-1000, 1884, 1268, 1266, -1000, -1000, -1000, 943, 991, -1000,
	-1000, 19891, 29086, -1000, 315, -1000, 3215, -1000, -1000, -1000,
	795, 591, -1000, -1000, -107, -1000, -1000, 556, 631, 629,
	541, -1000, 88, 29086, -1000, 33946, -1000, 1915, 1913, 114,
	1911, 29086, -1000, 35, 1680, -1000, 1497, -1000, 656, 608,
	695, 447, 447, -1000, 833, 447, 1776, 1774, 779, -1000,
	234, -1000, 10669, 10669, 1493, 1229, 1226, -1000, 1672, -1000,
	-1000, -1000, 34486, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 9019, 15571, -1000, 776, 3215, 3110, -1000, 19891,
	-1000, 1413, 15571, -193, 8469, -193, -193, 1413, -1000, 30706,
	-1000, -1000, -193, -1000, -193, -193, -193, -193, -193, 1413,
	1413, -193, -1000, -1000, -1000, -1000, -193, -193, -193, -193,
	19891, 19891, 1413, -193, -193, -193, 1187, 869, -1000, -1000,
	-1000, 415, 1136, 415, 19891, 19891, -1000, 19891, 19891, -1000,
	-1000, 19891, 3067, 3010, 2125, -240, 1495, 908, -1000, 17731,
	1137, -1000, -1000, -1000, -1000, -1000, -1000, 1616, 11219, 1513,
	7369, -1000, 33946, 1460, -1000, 847, 836, 1606, 1579, 1615,
	1316, -1000, -1000, -1000, -1000, 1637, -1000, 1622, -1000, -1000,
	1538, -1000, -1000, 1492, 1513, 33946, 19891, 665, -1000, 1513,
	1513, 1513, 1187, 1876, 17731, 1389, -1000, -1000, 727, -1000,
	-1000, -121, -136, -1000, -1000, -1000, 10669, -1000, 6819, -1000,
	6819, -1000, 24211, 557, 1732, 436, -1000, 1247, -1000, -1000,
	1247, -1000, 1247, -1000, -1000, -1000, 1571, -1000, 995, -1000,
	-1000, -1000, -1000, -1000, 1513, -347, 19891, 1932, -1000, 1728,
	-1000, 1727, 1726, 1225, -1000, -1000, 1329, 710, 710, -22,
	-1000, -1000, 1566, -1000, 710, -1000, 785, -1000, -1000, -1000,
	-1000, 710, 1411, -1000, 1399, 1490, -1000, 1391, 117, 34486,
	-1000, -1000, 1830, -1000, -1000, -1000, 1782, 833, 833, 833,
	1613, -1000, -1000, -1000, -1000, 1320, 1487, -1000, 3817, 33946,
	33946, 33946, -1000, -251, 154, -1000, 29086, 134, 186, 388,
	1265, 34486, 29086, -1000, -1000, -1000, -1000, -1000, 1829, -1000,
	3215, 1367, -1000, -1000, -22, 34486, -1000, 29086, 725, 30166,
	29086, 100, 150, -1000, 29086, 29086, 1907, 29086, 1486, 1222,
	1635, 259, 4879, 1247, 590, -1000, -1000, 431, -1000, 4443,
	1720, 1259, 37831, 37537, 33946, 1714, 1713, 1258, 34486, 33946,
	-1000, -1000, 37324, 1257, 17731, -1000, 33946, -1000, -1000, 33946,
	625, -1000, 33946, -1000, -1000, -1000, -1000, 1012, 14491, -1000,
	-1000, 1187, -1000, 19891, 3215, -193, -1000, -1000, -1000, -1000,
	623, -1000, -1000, -193, -1000, -1000, 1256, -1000, -1000, -1000,
	-1000, -1000, -1000, -193, -193, -1000, -1000, -1000, -1000, -1000,
	2880, 1423, -193, -1000, -1000, -1000, -1000, 1187, 1566, 1566,
	-1000, 1566, 1569, -1000, 1566, 15, 1566, 11, 1187, 1187,
	2004, 1788, 1619, 1167, 1394, 19891, 19891, 19891, 1513, -177,
	-1000, 869, 17731, -1000, 1800, 1457, 1470, -1000, -1000, 15031,
	1187, 1684, 1387, -1000, 22051, 1370, -1000, 1876, 11219, 17731,
	17731, -1000, -1000, 17731, 1568, -1000, 17731, -1000, -1000, -1000,
	-1000, 33946, 302, -1000, 17731, 1370, 895, -1000, 33946, 33946,
	33946, -1000, 1863, 869, -1000, -1000, -1000, -1000, 6269, -1000,
	1356, -1000, 1566, 1566, 1712, -1000, 732, -1000, -1000, -1000,
	-1000, 33946, -1000, 19891, 1828, 3215, -126, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 710, -1000, -1000, -1000, -1000, -1000,
	-22, 1205, -22, 1096, -1000, 1087, -1000, -1000, -298, 1564,
	219, -1000, 833, 783, 781, 1200, 34486, 160, 27466, -1000,
	3817, 3817, 3817, 147, 91, -1000, 968, -1000, -1000, -1000,
	1199, 1193, 1192, 1367, 194, 961, 162, -1000, 1825, -1000,
	-1000, 991, -72, -1000, 150, -1000, -1000, -1000, 150, -1000,
	-1000, 149, 1486, 1486, 29086, 1486, -1000, -1000, -1000, 37324,
	361, 3817, 3817, 1603, 732, 1703, 436, -1000, -1000, -1000,
	-1000, -1000, -1000, 1249, -1000, 722, -1000, 539, 361, 37324,
	869, 767, 1004, 10669, -1000, 1906, -1000, -1000, -1000, 3215,
	-1000, 7919, -1000, 772, -1000, -1000, -1000, 19891, 19891, -1000,
	-1000, -1000, 282, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19891, 19891, 19891, 19891, -1000, 1394, 1394, 1394, 19891,
	1187, 1186, 869, 1690, -1000, 1513, -1000, -1000, 1513, 233,
	-1000, 33946, 1863, -1000, 869, 869, 869, 33946, 869, 1354,
	-1000, 1513, 20431, -1000, 23131, 1352, 1352, 1352, -1000, 574,
	24211, 1804, 1804, -1000, 1247, 1349, 1394, 1513, -1000, 1513,
	1513, -1000, 710, -1000, 710, 1314, 1311, -1000, 24211, -1000,
	-1000, 777, -1000, -1000, -1000, -1000, -1000, 1854, -1000, 160,
	-1000, 1185, 261, 253, -1000, 255, 252, 247, 242, 231,
	-1000, -1000, -1000, -1000, 376, 147, -1000, -79, 1083, 841,
	1772, 91, -1000, 1076, 1074, 1072, 1062, 169, -1000, -1000,
	-1000, -1000, 207, 186, -1000, 373, 1178, -1000, 1755, 1752,
	1826, 1826, 93, 1486, 1401, 1301, -1000, -1000, 1248, -1000,
	-1000, 1554, 1247, 1539, -1000, 1245, -1000, -1000, 33946, -1000,
	361, 1796, 1795, 1513, -1000, 1884, 29626, 14491, -1000, -1000,
	1876, 1872, 1394, 1394, -1000, -1000, 1394, 1394, 1394, 1394,
	-1000, -1000, -1000, 143, -1000, -1000, 1931, -1000, 1470, 1513,
	-1000, 219, -1000, -1000, 1341, -1000, 33946, -1000, -1000, 665,
	-1000, -1000, -1000, 574, -1000, 1243, 833, 1174, -1000, -1000,
	-1000, -1000, 375, -350, 19891, -1000, -1000, -1000, -1000, 1339,
	-1000, 219, -1000, -1000, 290, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1762, 1761, 279, -1000, 1173, 1161, -1000, 455,
	1113, 669, -201, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 359, 1242, -1000, 140, -1000, -1000,
	510, 1736, 1739, 1870, -1000, 29086, -1000, -1000, 29626, -1000,
	-1000, 168, 168, 24211, 1603, 24211, -1000, -1000, -1000, 19891,
	-1000, 769, 1882, 1484, -1000, 807, 17731, -1000, -1000, -1000,
	-1000, -1000, -1000, 1187, 180, -274, 11219, 1470, 1187, -1000,
	-1000, -1000, -1000, -1000, 1060, -1000, 34486, -1000, -1000, -1000,
	1394, 574, -1000, 291, 38668, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1053, -1000, -1000, 1094, 394, 137, -1000,
	1821, -1000, 1538, 1048, 1752, 1869, 1747, 1742, -1000, 1153,
	-253, 1389, 1335, 1535, 1327, 3215, 1319, -1000, 33946, 1879,
	1868, -1000, 1187, 238, 238, 1467, -1000, 1670, -245, -281,
	1396, -1000, -1000, 1534, -350, -1000, 574, -1000, 309, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17731, 17731, 5719, 38668, 124, -1000, 118, -1000, -1000, -1000,
	1147, -1000, 1754, -1000, 1146, -1000, 1867, 1865, -1000, 171,
	1882, 574, 24211, 574, -1000, 769, 1683, -197, 17731, 17731,
	-1000, -1000, 178, -1000, 796, 271, 773, -1000, 1512, -1000,
	-1000, 1664, -1000, 33946, -1000, -1000, 1241, 1169, -1000, 1162,
	1123, 212, 203, 3501, -1000, -1000, -1000, -1000, -356, -1000,
	-1000, -1000, -1000, -1000, -1000, 1141, 1092, 26385, 1879, -1000,
	1317, -1000, -1000, 343, 974, 33946, -1000, 869, 1385, -1000,
	869, 960, -1000, -1000, -1000, -1000, -1000, 33946, -264, 1293,
	-1000, -1000, -1000, 1038, -1000, 17731, 38668, 1853, 1852, 1851,
	1791, 10669, 38552, -1000, -1000, -1000, -1000, 90, 1367, -197,
	574, 341, -1000, 1375, -1000, 1817, 17731, 178, -1000, -278,
	1611, 289, 931, 38668, -1000, 1066, -357, 430, 219, 434,
	19891, -1000, -1000, -1000, 29086, -1000, -1000, 1513, 33946, 1513,
	-1000, -1000, -282, 1610, 1608, 1893, -1000, -1000, -1000, -1000,
	-1000, -1000, 38668, -1000, -358, 38668, 5111, -1000, -1000, -1000,
	4972, -1000, -1000, -1000, -1000, 200, -1000, -1000, 3215, 1367,
	18811, -1000, -1000, -1000, -1000, 1929, -1000, 1927, 537, 537,
	-1000, -360, 38413, -361, 462, 38668, 872, -1000, 17731, -1000,
	434, -1000, 1394, 1187, -1000, -1000, -1000, 364, 1084, -1000,
	38373, 915, 38668, -1000, -362, 457, 38668, -1000, 1051, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 38160, -1000, -363,
	38668, 452, 38063, -369, -1000, 443, 38668, -1000,
}

var yyPgo = [...]int{
	0, 2356, 2355, 25, 2354, 247, 2353, 2352, 2351, 27,
	15, 13, 40, 2350, 2074, 2070, 2067, 2058, 2054, 2346,
	8, 2345, 2344, 2050, 2342, 2341, 2045, 2025, 2021, 2019,
	2340, 2339, 2338, 2017, 2014, 1996, 22, 2337, 21, 2336,
	3, 154, 176, 2334, 2, 2333, 2332, 20, 2330, 2328,
	1988, 2327, 2326, 2320, 94, 2318, 1986, 1984, 2317, 1976,
	1974, 2316, 2315, 1971, 1956, 1948, 2313, 189, 2312, 2311,
	2309, 160, 103, 162, 2308, 2307, 2302, 117, 93, 2195,
	129, 51, 109, 244, 2301, 19, 59, 248, 2300, 2298,
	155, 2297, 142, 2296, 170, 2295, 152, 87, 111, 2294,
	2293, 187, 2291, 2289, 2288, 145, 2287, 2286, 177, 131,
	2285, 2282, 163, 2280, 69, 181, 56, 37, 2279, 2277,
	2276, 2275, 2274, 30, 905, 2272, 101, 149, 2270, 2266,
	91, 2265, 2264, 183, 2260, 2259, 2258, 146, 50, 2257,
	2241, 71, 2239, 124, 70, 2238, 64, 2234, 141, 2233,
	2232, 35, 24, 2229, 102, 2228, 49, 2227, 151, 144,
	886, 2226, 12, 6, 18, 2225, 36, 10, 17, 47,
	23, 66, 72, 140, 122, 2224, 38, 44, 116, 107,
	2223, 29, 96, 48, 2222, 159, 2221, 95, 168, 143,
	134, 165, 2220, 2219, 2214, 1093, 2213, 126, 82, 2212,
	166, 1327, 180, 118, 2211, 97, 2210, 2209, 2208, 2206,
	2201, 98, 115, 2200, 2198, 184, 178, 185, 46, 32,
	1063, 1874, 136, 164, 2197, 45, 2196, 2191, 2190, 3205,
	114, 86, 113, 174, 2188, 108, 31, 54, 2187, 2185,
	2184, 2183, 2182, 2181, 1431, 2179, 2178, 2177, 2172, 76,
	138, 2171, 133, 132, 125, 2168, 157, 34, 2167, 2165,
	137, 105, 2164, 2163, 2162, 2159, 139, 92, 167, 2158,
	120, 130, 171, 2156, 84, 2150, 2145, 110, 60, 2144,
	2143, 2140, 104, 90, 2139, 63, 42, 39, 67, 57,
	2138, 2134, 73, 135, 2133, 33, 2119, 4, 5, 11,
	2106, 2105, 2104, 2102, 2101, 2097, 2096, 85, 2092, 2090,
	62, 2087, 2085, 2081, 43, 2079, 2078, 2077, 153, 119,
	53, 173, 88, 9, 2076, 2072, 7, 2065, 121, 2063,
	55, 2060, 65, 2052, 2048, 58, 2010, 2008, 61, 2000,
	1998, 172, 1647, 3101, 1994, 175, 161, 52, 68, 1990,
	1968, 0, 1039, 182, 190, 1958, 1954,
}

var yyR1 = [...]int{
	0, 350, 350, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 66, 3, 3, 8,
	4, 4, 4, 5, 88, 88, 181, 181, 181, 181,
	180, 180, 89, 89, 87, 87, 94, 6, 6, 7,
	7, 9, 9, 70, 70, 10, 11, 11, 11, 11,
	353, 353, 103, 103, 101, 101, 102, 102, 178, 178,
	12, 12, 12, 185, 185, 190, 190, 190, 193, 193,
	193, 193, 168, 169, 170, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 324, 324, 333,
	333, 333, 334, 334, 332, 332, 332, 332, 332, 336,
	336, 337, 337, 335, 335, 335, 335, 339, 339, 340,
	340, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 327, 327, 327, 33, 33,
	33, 33, 34, 34, 34, 34, 34, 34, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 342,
	342, 343, 343, 344, 344, 345, 345, 345, 345, 346,
	346, 346, 346, 346, 347, 347, 347, 347, 347, 347,
	347, 348, 348, 349, 349, 2, 305, 305, 306, 306,
	307, 307, 307, 307, 308, 308, 309, 309, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 24, 217,
	217, 214, 214, 214, 215, 215, 216, 216, 216, 326,
	326, 326, 320, 320, 320, 322, 322, 321, 321, 321,
	323, 323, 328, 328, 328, 328, 328, 330, 330, 330,
	330, 330, 330, 331, 331, 331, 329, 329, 48, 48,
	49, 49, 49, 157, 157, 157, 13, 13, 13, 13,
	13, 19, 21, 21, 37, 37, 38, 22, 22, 22,
	22, 39, 39, 40, 25, 25, 25, 25, 25, 25,
	46, 46, 46, 45, 45, 44, 44, 44, 44, 44,
	44, 23, 23, 23, 23, 47, 47, 42, 42, 41,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 43,
	43, 43, 26, 26, 26, 26, 26, 26, 18, 304,
	304, 304, 36, 36, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 52, 279, 280, 280, 280, 280,
	280, 280, 280, 280, 267, 267, 268, 257, 257, 257,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	236, 236, 236, 236, 240, 240, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 239, 239, 239, 239,
	239, 239, 239, 239, 241, 241, 241, 241, 241, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 243, 243, 243, 243, 243, 243,
	243, 243, 266, 266, 244, 244, 260, 260, 261, 261,
	261, 258, 258, 259, 259, 247, 248, 262, 249, 249,
	249, 250, 250, 250, 251, 251, 256, 256, 255, 255,
	255, 255, 255, 255, 252, 252, 252, 252, 253, 253,
	254, 265, 265, 265, 265, 265, 245, 35, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	291, 291, 207, 207, 208, 208, 269, 269, 289, 289,
	288, 288, 287, 287, 287, 278, 278, 284, 284, 284,
	284, 284, 284, 284, 284, 273, 273, 273, 272, 272,
	274, 274, 277, 277, 286, 286, 285, 285, 270, 270,
	270, 292, 292, 292, 292, 292, 271, 271, 271, 271,
	293, 275, 275, 276, 276, 276, 298, 299, 297, 297,
	297, 297, 297, 120, 120, 120, 281, 281, 281, 282,
	282, 282, 283, 283, 283, 302, 302, 301, 301, 50,
	51, 55, 55, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 156,
	156, 156, 212, 212, 296, 294, 294, 295, 295, 15,
	15, 53, 53, 325, 325, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 300, 300, 300, 17, 17, 56,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 84, 199, 199, 198, 198,
	197, 197, 197, 200, 200, 200, 200, 234, 234, 234,
	58, 58, 62, 62, 65, 65, 65, 63, 64, 27,
	28, 28, 28, 28, 29, 213, 213, 60, 60, 61,
	61, 61, 61, 76, 76, 355, 355, 59, 356, 67,
	68, 68, 69, 69, 69, 203, 203, 73, 73, 73,
	71, 71, 71, 72, 72, 78, 78, 82, 82, 82,
	82, 81, 81, 81, 81, 159, 159, 164, 226, 226,
	140, 140, 160, 160, 165, 165, 165, 166, 166, 167,
	167, 167, 167, 167, 162, 162, 161, 161, 163, 128,
	128, 224, 224, 224, 223, 223, 223, 223, 86, 86,
	90, 90, 92, 92, 92, 92, 92, 95, 142, 142,
	113, 113, 114, 114, 114, 114, 114, 126, 126, 177,
	177, 176, 176, 179, 179, 91, 93, 93, 93, 93,
	98, 98, 99, 99, 100, 100, 211, 211, 231, 231,
	231, 104, 104, 104, 106, 105, 105, 105, 105, 107,
	107, 108, 108, 110, 111, 111, 109, 109, 115, 115,
	112, 116, 116, 116, 116, 117, 117, 83, 83, 83,
	83, 83, 83, 83, 196, 196, 119, 119, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 136, 136,
	136, 136, 136, 136, 121, 121, 121, 121, 121, 121,
	121, 77, 77, 137, 137, 137, 97, 96, 96, 80,
	80, 79, 79, 138, 138, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 131,
	131, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 354, 354, 133,
	132, 132, 132, 132, 132, 132, 74, 74, 74, 74,
	74, 232, 232, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 149, 149,
	75, 75, 147, 147, 148, 150, 150, 146, 146, 146,
	123, 123, 123, 123, 123, 123, 123, 123, 125, 125,
	125, 151, 151, 139, 139, 85, 152, 152, 153, 154,
	154, 155, 155, 158, 171, 171, 171, 172, 172, 172,
	172, 127, 127, 173, 173, 173, 122, 122, 122, 122,
	122, 122, 122, 175, 175, 174, 174, 174, 174, 182,
	182, 141, 141, 144, 144, 143, 145, 183, 183, 187,
	187, 184, 184, 188, 188, 188, 188, 191, 191, 192,
	192, 192, 189, 189, 189, 186, 186, 186, 228, 228,
	228, 194, 194, 204, 204, 201, 201, 202, 202, 195,
	195, 246, 246, 210, 210, 209, 209, 209, 205, 205,
	205, 206, 206, 225, 225, 221, 221, 227, 227, 222,
	222, 229, 229, 230, 230, 303, 303, 263, 263, 313,
	313, 264, 264, 314, 314, 316, 316, 311, 311, 312,
	312, 315, 315, 30, 317, 317, 318, 318, 319, 319,
	319, 319, 31, 32, 32, 32, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 351, 352,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 5,
	1, 14, 3, 14, 0, 2, 0, 2, 3, 3,
	1, 3, 2, 3, 1, 3, 4, 1, 3, 1,
	3, 7, 8, 1, 1, 9, 8, 7, 6, 6,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 0, 0, 0, 2, 3, 3, 11, 9,
	11, 5, 5, 16, 12, 9, 4, 0, 3, 0,
	2, 2, 1, 3, 1, 1, 2, 2, 2, 0,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	2, 3, 3, 5, 3, 3, 4, 5, 4, 4,
	2, 2, 2, 2, 2, 0, 2, 2, 9, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 2, 2, 2, 3,
	3, 2, 3, 3, 2, 2, 2, 2, 2, 1,
	3, 0, 3, 1, 3, 0, 1, 1, 1, 1,
	3, 1, 3, 3, 0, 2, 5, 5, 5, 7,
	5, 0, 3, 0, 3, 4, 0, 1, 1, 3,
	2, 3, 3, 3, 0, 1, 1, 2, 2, 2,
	2, 1, 2, 2, 3, 3, 3, 3, 4, 2,
	3, 3, 3, 3, 0, 3, 0, 3, 3, 1,
	1, 1, 3, 2, 1, 1, 3, 3, 2, 1,
	1, 3, 1, 2, 5, 4, 6, 4, 3, 3,
	6, 5, 5, 4, 3, 5, 1, 3, 1, 1,
	1, 1, 1, 0, 2, 2, 1, 1, 1, 1,
	1, 4, 5, 8, 1, 2, 5, 7, 10, 8,
	11, 1, 2, 5, 5, 5, 5, 6, 3, 5,
	1, 1, 1, 1, 3, 1, 1, 1, 2, 1,
	1, 2, 4, 2, 4, 2, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 4, 3, 2, 4, 3, 0,
	2, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 4, 1, 1, 2, 3,
	4, 3, 3, 3, 3, 3, 3, 0, 1, 1,
	0, 2, 3, 2, 2, 2, 2, 2, 6, 8,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 3, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 4,
	4, 3, 3, 2, 4, 5, 2, 3, 4, 2,
	2, 3, 3, 3, 3, 3, 4, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 0, 1, 2, 3, 1, 0, 3,
	3, 0, 2, 2, 0, 1, 0, 1, 1, 1,
	1, 2, 2, 2, 5, 5, 4, 4, 4, 4,
	4, 2, 1, 2, 1, 2, 2, 3, 2, 2,
	2, 2, 1, 1, 1, 1, 3, 2, 1, 1,
	0, 3, 1, 1, 0, 1, 5, 4, 0, 1,
	1, 2, 2, 3, 2, 0, 1, 2, 4, 3,
	3, 5, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	5, 1, 3, 5, 4, 3, 5, 3, 8, 10,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 8, 2, 2, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 5, 4, 4, 4, 2,
	2, 2, 6, 2, 4, 4, 4, 5, 8, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 3, 2, 0, 1, 1,
	2, 1, 1, 1, 2, 4, 4, 1, 1, 2,
	3, 4, 4, 5, 3, 1, 1, 3, 3, 1,
	1, 1, 1, 0, 3, 1, 1, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 2, 6, 0, 1,
	0, 3, 0, 1, 0, 2, 2, 4, 1, 2,
	2, 2, 2, 2, 0, 2, 1, 3, 3, 1,
	3, 0, 1, 2, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 4, 1, 3, 1, 2, 2, 4,
	2, 6, 1, 4, 6, 3, 2, 0, 3, 0,
	3, 1, 3, 1, 3, 4, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 1, 3, 3, 2, 1, 1, 3, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 1, 1, 5,
	6, 6, 6, 5, 5, 5, 6, 5, 5, 6,
	5, 5, 5, 5, 6, 5, 5, 5, 4, 4,
	5, 5, 5, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 3, 6, 6, 6, 8, 8, 8, 8,
	4, 6, 7, 7, 7, 9, 4, 7, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 0, 2, 4, 2, 4, 1, 3,
	5, 4, 6, 0, 3, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 1, 1, 0, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 1, 0,
	4, 0, 1, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 3, 3, 1, 3, 2, 4, 1, 2,
	1, 2, 2, 2, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -350, -1, -3, -8, -9, -10, -11, -12, -14,
	-50, -15, -16, -17, -56, -57, -58, -62, -63, -64,
	-60, -59, -23, -26, -18, -66, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -4, 6, 7, -70, 9,
	10, 29, -52, 179, -51, 182, 181, 217, 183, 210,
	64, 340, -65, 343, 344, -355, -213, 268, 269, 20,
	37, 345, 347, 30, 31, 231, 285, 287, 312, -5,
	-89, -6, 8, 439, 180, 341, 212, 211, 26, 488,
	-351, 68, 555, -154, 15, -67, -356, -67, -67, -67,
	-67, -67, -279, -211, 107, 68, 23, -206, -217, 88,
	430, 187, -215, 281, 283, -204, -205, -214, 241, 251,
	44, 198, 197, 252, 188, 281, 188, 189, 191, 430,
	187, 224, 223, 281, 283, 188, -109, -229, 72, -219,
	201, 499, 306, 485, 252, 550, 293, 238, 340, 354,
	356, 348, 383, 371, 486, 500, 202, 263, 186, 339,
	369, 372, 416, 200, 296, 256, 319, 501, 405, 411,
	266, 343, 425, 502, 203, 260, 262, 261, 246, 455,
	267, 36, 213, 367, 302, 360, 271, 241, 503, 493,
	235, 358, 35, 27, 236, 234, 428, 504, 330, 413,
	388, 331, 305, 505, 490, 300, 412, 363, 359, 312,
	204, 198, 332, 506, 389, 393, 507, 417, 286, 333,
	508, 509, 510, 190, 292, 352, 353, 511, 242, 419,
	297, 387, 32, 199, 487, 48, 221, 420, 38, 391,
	37, 397, 512, 329, 386, 381, 398, 513, 514, 515,
	516, 310, 308, 309, 311, 385, 351, 380, 253, 258,
	53, 185, 395, 394, 396, 259, 415, 376, 374, 517,
	518, 301, 205, 519, 520, 361, 18, 521, 522, 423,
	216, 303, 304, 42, 523, 524, 525, 111, 526, 527,
	528, 414, 390, 392, 240, 115, 364, 195, 529, 307,
	410, 316, 489, 290, 112, 421, 357, 531, 335, 347,
	220, 215, 424, 325, 532, 269, 533, 534, 535, 207,
	536, 284, 283, 344, 317, 113, 345, 407, 264, 537,
	538, 539, 540, 250, 233, 427, 418, 52, 268, 402,
	541, 320, 336, 350, 197, 270, 542, 294, 341, 43,
	7, 257, 298, 408, 318, 265, 251, 254, 378, 222,
	543, 544, 365, 366, 384, 349, 379, 342, 225, 217,
	110, 426, 403, 491, 281, 337, 373, 370, 228, 377,
	545, 546, 255, 229, 346, 422, 295, 368, 404, 188,
	132, 372, 416, 179, 406, 407, 413, -273, 414, 223,
	226, -234, 188, -199, 405, 286, 307, 460, 229, 230,
	189, 190, 32, 418, 417, 409, -229, 192, 346, -76,
	183, 218, -109, -47, 72, 270, -47, 29, 72, 72,
	36, 72, 345, 408, 408, 75, 489, 232, 21, -342,
	-323, 316, -341, -321, 180, 179, 10, 181, 321, 322,
	323, 189, 8, 30, 530, 206, 324, 325, 6, 210,
	326, 327, 224, 9, 328, -326, 74, 72, -219, 21,
	-342, -323, 316, -208, -207, 338, 397, 6, -69, 5,
	-195, 193, 342, -87, 498, -94, -231, -229, -220, 74,
	299, 209, 289, 400, 456, 457, 458, 459, 232, 460,
	473, 474, 98, 230, 321, 322, 313, 323, 208, 475,
	116, 239, 218, 278, 409, 277, 282, 461, 462, 476,
	477, 478, 463, 464, 288, 479, 480, 553, 291, 554,
	314, 482, 530, 483, 324, 481, 326, 227, 467, 466,
	465, 468, 327, 450, 451, 469, 51, 471, 470, 472,
	191, 81, -3, -172, 17, 16, -73, 54, 55, -68,
	-81, 123, -83, -229, -118, 90, -124, 28, 72, -219,
	24, -123, -220, -119, -146, -145, -97, 132, -233, 121,
	122, 129, 91, 175, -131, -129, -130, -132, -134, -135,
	74, 73, 82, 75, 76, 77, 78, 83, 456, 457,
	458, 459, 460, 473, 474, 208, 475, 218, 461, 462,
	476, 477, 478, 463, 464, 479, 480, 482, 483, 481,
	467, 466, 465, 468, 450, 451, 469, 471, 470, 472,
	84, 85, -221, -143, -351, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 58, 59, 187,
	440, 441, 442, 443, 444, 484, 448, 93, 47, 429,
	438, 437, 436, 434, 435, 431, 433, 432, 194, 430,
	127, 439, -195, -195, 11, -101, -102, -109, -112, -229,
	-184, 342, -191, -188, 417, 418, -189, -192, -186, -146,
	397, 527, 528, 416, 372, 415, -221, -229, -2, -5,
	6, -109, -280, -268, -271, -222, 203, -293, -221, -218,
	200, 72, -219, 299, 184, 209, 180, 89, 492, 23,
	25, 289, 400, 456, 92, 132, 457, 458, 459, 16,
	20, 93, 131, 81, 440, 232, 460, 179, 62, 431,
	433, 429, 430, 406, 28, 10, 26, 211, 245, 22,
	125, 181, 96, 97, 98, 230, 214, 321, 322, 24,
	212, 313, 85, 323, 208, 116, 239, 19, 65, 218,
	278, 11, 409, 226, 549, 285, 13, 454, 114, 277,
	14, 282, 194, 193, 109, 243, 189, 60, 8, 175,
	87, 106, 56, 461, 462, 495, 45, 231, 496, 58,
	107, 17, 434, 435, 30, 484, 463, 219, 497, 464,
	127, 248, 63, 50, 288, 90, 83, 553, 33, 86,
	66, 334, 88, 15, 244, 61, 452, 291, 554, 314,
	223, 530, 247, 498, 206, 108, 324, 182, 439, 315,
	287, 59, 187, 6, 449, 29, 210, 326, 249, 227,
	467, 466, 465, 468, 551, 57, 442, 443, 469, 327,
	547, 188, 95, 450, 451, 192, 224, 84, 5, 44,
	31, 9, 328, 64, 67, 436, 437, 438, 47, 51,
	471, 470, 472, 191, 552, 94, 12, 453, 488, 189,
	191, 439, -202, 194, -202, 224, 223, -216, 249, -202,
	-202, 188, -215, 99, 99, -53, -109, -325, -320, -326,
	-201, 194, -221, -201, -201, -201, -201, -201, -201, -201,
	-109, 176, -109, 72, 29, -200, 107, 12, 430, 187,
	188, 223, 224, 191, -275, 11, 109, 227, 227, 227,
	228, 227, -198, 408, 410, 225, 411, 412, 12, -84,
	107, 19, -351, -172, -172, 72, 345, 192, -61, -3,
	-11, -9, -10, -3, 99, -126, 23, 29, 29, 74,
	51, 29, -42, -41, -43, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 29, -304, 68,
	-263, 397, 72, -317, -318, -109, 75, 75, 66, 66,
	69, 192, 69, 66, -343, 317, 68, -343, 283, 317,
	318, 251, 281, 191, -343, -343, 283, -343, -343, -343,
	-343, -343, 408, -343, -343, -343, 319, 320, -343, 406,
	191, -343, -343, -343, -343, -343, 71, 66, 69, 307,
	66, 11, 66, -290, 132, 330, 331, 332, 333, 329,
	307, 334, 335, 336, 227, 337, -67, -7, -5, -351,
	21, 22, 188, 421, 69, -87, -175, -351, -352, 70,
	-173, 19, 30, -127, 75, 78, -155, -158, -83, -229,
	50, -71, 21, 22, 80, 11, -224, 89, 88, 106,
	-223, 23, 72, -219, -220, 74, 176, -83, -121, 109,
	90, 107, 108, 92, 118, 117, 128, 121, 122, 123,
	124, 125, 126, 127, 119, 120, 131, 99, 100, 101,
	102, 103, 104, 105, -196, -351, -97, -351, 177, 178,
	-124, -124, -124, -124, -124, -124, -124, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-3, -138, -83, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -149, -83, -351, -354, -133, -351,
	-354, -133, -354, -133, -354, -351, -354, -133, -354, -133,
	-354, -354, -133, -354, -351, -351, -351, -351, -111, 87,
	-109, -86, -90, -92, -93, -113, -96, -351, -91, -109,
	-97, 72, -109, -101, -353, 69, 11, 67, -353, 69,
	176, 69, -185, -190, 419, 421, 342, -189, -189, -228,
	-221, 74, 28, 99, 29, 176, -154, -67, 70, 69,
	-271, 203, 200, -236, -240, -242, -241, -243, -238, -239,
	369, 372, 376, 374, 370, 375, 132, 373, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 388, 29,
	213, 365, 366, 367, 368, 389, 390, 391, 392, 393,
	394, 395, 396, 348, 371, 486, 349, 350, 351, 352,
	353, 354, 356, 357, 358, 359, 360, 361, 362, 363,
	72, -220, -293, 68, -221, -109, -217, -215, 72, 90,
	72, -108, -221, -229, -115, -221, -229, 250, -329, -328,
	-320, -323, -202, -216, -320, 255, 253, 254, 69, 192,
	69, 192, 71, -101, 24, 66, -103, -109, 72, 72,
	-108, -115, -322, -320, -323, -230, -229, -218, -200, 74,
	-233, -83, -202, -202, -109, -109, -109, -109, -109, -200,
	-200, -200, -200, -197, 11, 109, 11, -197, -197, -83,
	-124, -320, 432, 123, 72, 72, 345, 72, 33, -42,
	-42, 74, -42, 69, 99, -42, 70, -138, -303, 548,
	69, -319, 23, 421, 422, 398, -345, 188, 226, 223,
	-345, -341, 325, -322, -321, -320, -343, -344, -221, -343,
	-343, -343, 408, -343, -343, -343, -343, -343, -343, -343,
	-343, -326, -345, 285, 69, -345, -322, -320, 329, 329,
	329, 329, 329, 329, -73, -3, -109, 422, 423, -94,
	23, -174, -222, -181, 87, 9, 109, 69, 18, 69,
	-171, 25, 26, 176, -125, 51, 75, 78, -203, 49,
	-109, -83, -83, -136, 83, 90, 84, 85, -223, 123,
	-230, -222, -218, -124, -137, -143, -97, 79, 109, 107,
	108, 92, -124, -124, -124, -124, -124, -124, -124, -124,
	-124, -124, -124, -124, -124, -124, -124, -232, 72, 74,
	72, -123, -123, -221, -71, -79, -82, 123, -83, -229,
	-79, -79, -71, -352, -352, -79, -82, -79, -79, -79,
	-79, -82, -79, -71, -71, -79, -352, -352, -352, -352,
	-79, -79, -79, -79, -221, -221, -71, -79, -79, -79,
	-71, -352, 69, -352, -3, -79, -79, -352, -83, -83,
	-146, 74, -79, -146, 74, -79, -124, 445, 446, 447,
	-79, -71, -147, -148, 94, -146, -352, -124, -79, -80,
	-79, -79, -79, -178, 111, -109, 29, 69, -104, -106,
	-105, -107, 56, 60, 62, 57, 58, 59, 63, -211,
	-86, -95, 47, -351, -114, 111, -116, 23, -231, 64,
	193, 65, -351, -178, 67, -86, -109, -86, -112, -229,
	123, -188, -191, 69, 420, 422, 423, -185, -250, 131,
	66, 86, -83, -222, -230, -172, -73, -281, -282, -283,
	-222, 74, 75, -268, -269, -270, -271, -284, 203, -292,
	195, 197, 198, 44, -272, 204, 189, 45, -237, -258,
	403, -244, 68, -244, -244, 377, 369, 372, 370, -244,
	-244, -244, -244, -244, -249, 372, -249, -249, -249, -249,
	370, 68, 68, -244, -244, -244, -260, 68, -260, 364,
	-261, 68, -261, -261, -261, -261, -293, -293, -83, -225,
	67, 23, 191, -256, -255, -252, -253, -254, -251, 28,
	24, -256, -48, 238, 209, 176, 68, 176, 241, 242,
	-324, 69, 28, -330, 282, -109, -109, -109, -320, -320,
	-326, -300, 207, 202, -109, 69, 69, 74, 72, 72,
	-126, -276, 11, 109, -200, -229, -229, -109, -126, -200,
	-77, 214, 67, -354, -352, 72, -124, -41, -123, 70,
	-110, 87, 74, -318, -231, 397, 422, -346, 123, -221,
	-346, -349, 488, 192, 70, 69, -343, -346, 303, 285,
	-346, 11, -291, 19, -71, -352, -55, -54, 184, 181,
	182, 185, 186, -296, 400, 180, 235, 234, 220, -96,
	-351, -352, 69, 176, -180, 34, 35, -221, 52, -127,
	-127, -158, -194, 19, 11, 47, 47, -72, 57, 83,
	84, 85, 176, -351, -137, -124, -124, -124, -77, 89,
	-352, -79, 69, -352, 176, -352, -352, -79, -159, 452,
	-159, -352, -352, -352, -352, -352, -352, -352, -352, -79,
	-79, -352, -159, -159, -159, -159, -352, -352, -352, -352,
	69, 69, -79, -352, -352, -352, -80, -83, -352, -352,
	-352, 69, 67, 23, 11, 11, -352, 11, 11, -352,
	-352, 11, -124, -124, -124, -352, -79, -150, -148, 96,
	-83, -352, -352, -352, -352, -352, -352, -122, 29, 47,
	-351, -3, -351, -183, -187, -146, -218, -90, -92, -92,
	-90, -92, 56, 56, 56, 61, 56, 61, 56, -105,
	-231, -352, -352, -142, 237, -351, 33, -231, -116, 189,
	189, 189, -80, -117, 12, -86, -117, -117, 176, -190,
	-193, 424, 421, 427, 72, 74, 176, -173, 69, -283,
	99, -271, 68, 72, -277, -220, 45, -272, 189, 45,
	-274, -272, -272, -277, 72, -277, 45, 83, 90, -247,
	-248, -262, -265, -245, 23, 549, 28, 66, 400, 195,
	45, 44, 198, 81, -259, 404, 75, -249, -249, -244,
	-244, -244, 377, -244, -249, -250, 29, -250, -250, -250,
	-250, -249, -266, 74, -266, 75, -260, 75, 70, 66,
	-221, -168, -109, -253, -252, -254, 372, 416, 131, 428,
	-49, 8, 9, 10, -221, -305, -306, -307, -221, 109,
	243, 244, -221, -333, 315, -328, 283, 292, 89, 16,
	488, 192, 192, -109, -320, -117, 72, 72, -197, -200,
	-124, -323, 229, 230, -178, 188, -319, 192, 176, 176,
	192, 306, -322, -221, 11, 11, 303, 11, -322, 339,
	-203, 69, -212, -272, -302, -270, -271, -301, 196, 203,
	204, -212, 203, 200, -272, 204, 195, 196, -209, -272,
	192, 23, -212, -212, -278, 99, -212, 32, 32, 111,
	-222, -222, 69, 74, 74, 53, -109, -78, -169, 123,
	-222, -80, -77, 89, -124, -352, -82, -160, -159, 123,
	-230, -160, -160, -352, -221, -164, -351, -159, -160, -160,
	-159, -159, -159, -352, -352, -159, -160, -160, -160, -160,
	-124, -124, -352, -160, -160, -160, -352, -235, 132, 369,
	213, 367, 360, 387, 374, 402, 365, 403, -232, -235,
	-124, -124, -124, -124, -124, 11, 11, 11, 485, -154,
	98, -83, 95, -182, 66, -183, -141, -144, -143, -351,
	-3, -352, -174, 6, 488, -179, -221, -117, 69, 99,
	99, -99, -98, 66, 67, -100, 66, -98, 56, 56,
	-177, 68, 69, -143, -351, -179, -124, -116, -351, -351,
	-351, -352, -154, -83, -117, 421, 425, 426, -282, -283,
	-286, -285, -221, -220, 195, -292, 44, -292, -277, -277,
	-277, 68, 83, -351, 550, -124, 9, 45, 45, 45,
	74, 70, -250, -250, -249, -244, -250, 72, 132, -250,
	70, 69, 70, 69, 70, 69, -120, 504, 90, -109,
	-170, 23, 29, -278, -278, -278, 66, 70, 69, -236,
	-221, -221, -221, -336, 488, 288, -334, -332, 294, 295,
	296, 297, 298, -323, 293, -330, 290, 74, 72, -109,
	-320, -126, -249, -109, -322, 123, 123, -221, -322, 303,
	-348, 488, -322, -322, 11, -322, 74, -72, -54, 68,
	-267, 72, -220, -277, -205, 195, 72, 72, 72, -220,
	72, -220, -221, 45, 45, 72, -109, -221, -267, 72,
	-83, -221, -221, 176, -221, -181, 69, -81, -352, -124,
	-160, 176, -160, -226, 72, -160, -160, 69, 69, -160,
	-352, -244, -244, -244, -261, -244, 353, -244, 353, -352,
	-352, 19, 19, 19, 19, -352, -124, -124, -124, -351,
	-75, 449, -83, 27, -182, 69, -352, -352, 47, -352,
	-352, 69, -154, -187, -83, -83, -83, 68, -83, -176,
	-221, 237, -352, -116, -211, -176, -176, -176, -172, 70,
	69, -244, -244, 45, -274, -176, -124, 23, -130, 450,
	451, -250, -249, 74, -249, 75, 75, 504, 68, -3,
	-168, -278, 72, 132, 72, 132, 74, -109, -308, -309,
	-310, 81, 487, 90, 245, 246, 205, 247, 248, 249,
	-307, -236, -236, -236, -339, -340, -338, 291, 313, 314,
	299, -337, -335, 308, 309, 310, 311, 89, 74, 74,
	74, -331, 282, 89, 291, 16, 23, -200, -311, -198,
	-348, -348, 285, -322, -78, -267, -156, 208, 209, -236,
	-236, -225, -274, 45, 72, -210, 192, 23, 192, -156,
	-267, 29, 181, 87, -222, -88, 11, -169, -169, 123,
	-140, 111, -124, -124, -249, 72, -124, -124, -124, -124,
	-352, -352, -352, -124, -352, 74, 45, -144, -141, 47,
	-3, -351, -221, -172, -176, 70, 69, -143, -114, -231,
	-352, -352, -352, -288, -287, 67, 199, 81, -285, -171,
	-171, -277, 70, -352, -351, -250, -250, 70, 70, -286,
	-168, -170, 72, 132, 19, -169, -310, 74, 249, 245,
	249, 249, 249, 249, 250, -327, 81, 289, -338, 300,
	509, 284, 315, 75, 75, 110, 30, 31, -335, 75,
	75, 75, 75, -332, 16, 488, -330, 290, 74, 74,
	-312, 38, -314, 39, -347, 23, -347, 303, 11, 70,
	72, -237, -237, 68, -277, 68, 72, -221, -156, 28,
	28, -351, -117, -86, -81, -154, 16, -352, -352, -352,
	-352, -352, -352, -74, 109, 488, 9, -141, -3, 70,
	-221, -116, -287, 72, -278, 74, 206, -257, 552, 551,
	-124, 70, -3, 236, -170, 36, 36, 241, 242, 74,
	74, 28, 301, 175, 28, 75, 175, 455, 290, 74,
	72, 291, -246, 193, -315, 43, -313, -264, 42, 16,
	-320, -86, -286, -225, -286, -124, -294, -295, 111, -151,
	13, -169, -165, 113, 112, -138, -352, 486, 63, 489,
	-183, -352, 75, -109, -352, -289, -288, -168, 237, -20,
	-3, -9, -10, -11, -12, -14, -50, -15, -16, -21,
	-22, -17, -56, -57, -65, -63, -64, -60, -59, -25,
	-23, -26, -18, -27, -28, -29, -33, -34, -24, -35,
	93, 194, 271, 340, 75, 28, 75, 28, 304, 291,
	23, -177, 75, -314, 16, -316, 40, 41, 74, 488,
	-117, 70, 68, 70, -352, 69, -221, -152, 14, 16,
	-352, -166, 92, -167, 110, 455, -128, 75, 175, -166,
	53, 487, 490, 68, -257, -157, 239, 240, -168, -83,
	-83, 72, -46, -227, 274, 275, 276, -222, -36, -20,
	302, 302, 74, 38, 74, 16, 16, 283, -151, -289,
	-286, -289, -295, 47, -162, 453, -153, -83, -139, -85,
	-83, -167, 115, 116, 237, 115, 116, -123, 53, -176,
	-168, 72, 72, -37, -38, 94, 95, 272, 273, 277,
	-236, 69, 555, 74, 74, 28, 288, 21, -323, -152,
	70, 221, -181, -161, -163, -221, 69, 89, -221, 488,
	70, -170, 98, 96, -38, -83, -36, 19, 19, 19,
	28, -222, 98, -20, 305, -162, -289, 222, 69, 23,
	-85, -167, 489, -298, -299, 66, -13, -19, -12, -9,
	-10, -11, 340, 93, -36, 95, 555, -47, 75, -3,
	-45, -44, 75, -47, 279, 90, 280, 72, -124, -323,
	-351, -163, -164, 490, -299, 66, -298, 66, 10, 9,
	-168, -36, 555, -36, 98, 96, -39, -40, 97, -20,
	69, 278, -124, 219, -297, 207, 202, 205, 29, -297,
	555, 98, 555, 194, -36, 98, 96, -40, -83, -44,
	-352, -352, 201, 28, 83, 98, 93, 555, 194, -36,
	95, 98, 555, -36, 194, 98, 555, 194,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 748, 748, 748, 748,
	748, 748, 846, -2, 609, 0, 0, 0, 0, -2,
	721, 722, 723, 727, 728, 743, 745, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 534, 40,
	0, 0, 63, 64, 1199, 0, 746, 735, 736, 0,
	0, 1743, 2, 1137, 0, 757, 750, 0, 1199, 1199,
	0, 0, 95, 0, 0, 0, 847, 0, 0, 0,
	1197, 1197, 246, 1197, 1197, 0, 1212, 244, 0, 1194,
	1208, 1209, 1210, 0, 0, 0, 1195, 0, 1195, 1195,
	1195, 1195, 1195, 1195, 1195, 0, 668, 866, 1221, 1222,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 0,
	0, 0, 713, 0, 679, 680, 681, 0, 683, 0,
	0, 0, 0, 0, 693, 696, 700, 0, 1137, 1137,
	555, 556, 557, 718, 719, 707, 720, 0, 0, 0,
	0, 0, 827, 321, 323, 0, 343, 0, 346, 349,
	1227, 729, 0, 0, 1252, 1253, 0, 0, 0, 0,
	0, 1593, 189, 260, 191, 191, 191, 191, 191, 191,
	191, 191, 191, 0, 191, 191, 191, 1605, 191, 0,
	191, 191, 191, 191, 191, 259, 249, 250, 251, 0,
	0, 0, 1593, 0, 535, 532, 533, 748, 0, 752,
	0, 1200, 724, 52, 0, 54, 1153, 848, 849, 850,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720,
	1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730,
	1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740,
	1741, 1742, 0, 1143, 0, 0, 760, 758, 759, 749,
	0, 771, 801, 0, 877, 0, 882, 884, -2, -2,
	0, 925, 926, 927, 928, 929, 930, 0, 0, 0,
	0, 0, 0, 0, 953, 954, 955, 956, 957, 958,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1685, 1686,
	1687, 1688, 1690, 1691, 1692, 1699, 1700, 1703, 1708, 1709,
	1710, 1711, 1712, 1713, 1714, 1716, 1717, 1722, 1724, 1726,
	1729, 1730, 1731, 1732, 1734, 1735, 1736, 1738, 1739, 1740,
	886, 887, 1107, 1166, 0, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1098, 0, 1027,
	1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 76, 866,
	80, 1659, 0, 1171, -2, -2, 1173, 0, 0, 0,
	-2, -2, -2, -2, 1453, -2, 1107, 0, 96, 1129,
	748, 97, 0, 386, 387, 0, 1466, 579, 1219, 1220,
	1455, 1215, 1216, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 0,
	0, 244, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 1197, 246, 0, 0, 649, 0, 650, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 669, 670, 713, 672, 0, 0, 1197, 1197,
	0, 0, 0, 0, 0, 581, 582, 713, 713, 713,
	713, 710, 0, 710, 690, 710, 708, 709, 0, 695,
	0, 0, 0, 703, 704, 730, 0, 0, 737, 739,
	740, 741, 742, 738, 0, 747, 0, 0, 0, 325,
	0, 0, 345, 327, 0, 330, 331, 332, 333, 334,
	335, 336, 337, 338, 339, 340, 341, 0, 348, 0,
	1225, 1228, 734, 1243, 1244, 0, 1254, 1255, 195, 195,
	0, 0, 0, 0, 158, 191, 0, 160, 191, 191,
	191, 0, 191, 191, 167, 168, 191, 170, 171, 172,
	173, 174, 191, 176, 177, 178, 191, 191, 181, 191,
	191, 184, 185, 186, 187, 188, 258, 195, 0, 0,
	195, 0, 0, 517, 0, 0, 0, 0, 522, 523,
	524, 525, 0, 0, 528, 529, 757, 42, 59, 0,
	753, 754, 0, 0, 0, 53, 0, 0, 58, 1744,
	46, 0, 0, 1138, 1141, 1142, 1130, 1131, 1134, 0,
	0, 755, 761, 762, 751, 0, 772, 0, 0, 0,
	802, 0, 804, 805, 806, 807, 0, 880, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 904, 905, 906,
	907, 908, 909, 910, 883, 0, 897, 0, 0, 0,
	946, 947, 948, 949, 950, 951, 0, 760, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 760, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 760,
	0, 0, 923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 1099, 0, 1010, 1019, 0,
	1011, 1020, 1012, 1021, 1013, 0, 1014, 1022, 1015, 1023,
	1016, 1017, 1024, 1018, 0, 919, 0, 0, 78, 0,
	865, 0, 808, 810, 811, 812, -2, 0, 816, 871,
	917, 1221, -2, 0, 0, 0, 70, 71, 0, 0,
	0, 0, 81, 83, 0, 0, 1659, 1174, 1175, 491,
	1188, 1189, 1190, 0, 1186, 0, 1137, 757, 596, 0,
	388, 0, 0, 400, 481, 411, 412, 413, 474, 415,
	474, 474, 0, 474, 474, 474, 474, 474, 488, 488,
	488, 488, 488, 457, 458, 459, 460, 461, 0, 0,
	434, 474, 474, 474, 438, 464, 465, 466, 467, 468,
	469, 470, 471, 416, 417, 418, 419, 420, 421, 422,
	423, 424, 425, 476, 476, 478, 478, 478, 478, 478,
	0, 0, 578, 0, 1213, 0, 0, 246, -2, 0,
	-2, 0, 861, 0, 0, 868, 0, 0, 107, 276,
	262, 106, 0, 240, 245, 241, 242, 243, 0, 0,
	0, 0, 253, 664, 1196, 0, 657, 72, 658, 659,
	660, 661, 662, 255, 663, 867, 1223, 1224, 671, 714,
	0, 716, 0, 0, 827, 676, 677, 678, 583, 684,
	685, 686, 692, 713, 0, 0, 0, 827, 713, 694,
	911, 697, 1027, 0, 732, 731, 0, 744, 0, 322,
	324, 326, 344, 0, 0, 347, 350, 0, 0, 0,
	0, 1246, 0, 1248, 1250, 0, 0, 196, 197, 198,
	0, 190, 0, 213, 261, 0, 159, 0, 193, 161,
	162, 163, 191, 165, 166, 169, 175, 179, 180, 182,
	183, 257, 0, 0, 0, 0, 156, 0, 518, 519,
	520, 521, 530, 527, 760, 0, 0, 725, 726, 55,
	0, 0, 1155, 37, 0, 1144, 0, 0, 0, 0,
	1133, 1135, 1136, 0, 0, 1118, 0, 0, 763, 756,
	39, 878, 879, 881, 898, 0, 900, 902, 803, 773,
	0, 1108, -2, 888, 889, 913, 914, 915, 0, 0,
	0, 0, 911, 893, 0, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 945, 1041, 1042,
	0, 943, 944, 952, 0, 0, 921, 767, 768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	919, 916, 0, 1165, 0, 0, 0, 992, 0, 0,
	928, 1110, 0, 928, 1110, 0, 0, 0, 0, 0,
	0, 0, 1105, 1102, 0, 0, 1028, 0, 0, 0,
	920, 0, 0, 0, 0, 864, 0, 0, 0, 0,
	0, 0, 851, 0, 0, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 820, 1579, 822, 0, 871, 0,
	0, 0, 919, 875, 0, 875, 75, 875, 77, 0,
	870, 1172, 0, 0, 0, 86, 87, 82, 1176, 0,
	1182, 1183, 1184, 1108, 0, 1143, 760, 385, 597, 599,
	602, 603, 604, 389, 391, 392, 393, 0, -2, 570,
	1589, 1636, -2, -2, 562, 1502, -2, -2, 396, 483,
	482, 414, 0, 488, 488, 474, 474, 474, 474, 443,
	488, 446, 449, 450, 491, 0, 491, 491, 491, 491,
	488, 0, 0, 435, 436, 437, 426, 0, 427, 476,
	429, 0, 430, 431, 432, 433, 576, 577, 0, 0,
	0, 92, 0, 101, -2, 498, 499, 500, 0, 495,
	1198, 102, 0, 278, 279, 0, 216, 0, 247, 248,
	109, 0, 0, 263, 0, 384, 0, 651, 0, 653,
	252, 655, 665, 666, 656, 0, 0, 715, 673, 674,
	675, 875, 0, 0, 687, 711, 712, 710, 713, 691,
	705, 0, 0, 698, 0, 733, 828, 328, 329, 351,
	78, 0, 1226, 1245, 0, 1249, 1251, 0, 199, 201,
	0, 150, 0, 0, 192, 0, 164, 0, 0, 0,
	0, 0, 526, 0, 755, 60, 610, 611, -2, 642,
	1205, 642, 642, 628, 545, 642, 0, 0, 0, 56,
	0, 1154, 0, 0, 47, 0, 1484, 50, 0, 1139,
	1140, 1132, 0, 1191, 1192, 1119, 1120, 93, 764, 899,
	901, 903, 0, 919, 890, 911, 894, 0, 891, 0,
	885, 0, 0, 782, 0, 782, 782, 0, 978, 0,
	979, 1006, 0, 991, 782, 782, 0, 0, 0, 0,
	0, 0, 985, 986, 987, 988, 782, 782, 782, 782,
	0, 0, 0, 782, 782, 782, 0, 924, -2, 989,
	990, 0, 0, 0, 0, 0, 1034, 0, 0, 1035,
	1000, 0, 0, 0, 0, 0, 1129, 0, 1103, 0,
	0, 1009, 1029, 1030, 1031, 1032, 1033, 1159, 0, 0,
	0, 1148, 0, 875, 1167, 0, 0, 809, 842, 844,
	0, 839, 852, 853, 855, 0, 857, 0, 859, 860,
	829, 815, 918, 817, 0, 0, 0, 871, 826, 0,
	0, 0, 0, 1129, 0, 875, 68, 69, 0, 84,
	85, 0, 0, 91, 492, 493, 0, 215, 0, 600,
	0, 390, 0, 563, 0, 0, 547, 562, 558, 559,
	562, 561, 562, 553, 563, 554, 0, 401, 0, 403,
	404, 405, 406, 407, 0, 0, 0, 0, 487, 0,
	512, 514, 0, 0, 410, 484, 0, 491, 491, 488,
	441, 442, 474, 447, 491, 451, 0, 452, 453, 454,
	455, 491, 0, 472, 0, 0, 428, 0, 593, 0,
	1214, 94, 0, 501, 502, 503, 0, 545, 545, 545,
	0, 280, 281, 282, 862, 0, 217, 218, 0, 0,
	0, 0, 869, 119, 0, 277, 0, 0, 0, 0,
	0, 0, 0, 73, 256, 682, 584, 585, 827, 689,
	912, 699, 701, 702, 488, 0, 1247, 0, 0, 0,
	0, 0, 211, 194, 0, 0, 0, 0, 157, 0,
	763, 0, 0, 562, 0, 629, 630, 0, 643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1206, 1207, 0, 0, 0, 546, 0, 637, 638, 0,
	1157, 1156, 0, 48, 49, 1145, 38, 46, 0, 774,
	1109, 0, 892, 0, 895, 782, 922, 963, 783, 769,
	0, 964, 965, 782, 775, 776, 778, 980, 967, 968,
	981, 982, 983, 782, 782, 984, 972, 971, 970, 973,
	0, 0, 782, 976, 975, 977, 959, 0, 474, 474,
	1088, 474, 478, 1091, 474, 1093, 474, 1096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1100,
	1008, 1106, 0, 61, 0, 1159, 1146, 1161, 1163, 0,
	0, 0, 0, -2, 1431, 0, 833, 1129, 0, 0,
	0, 836, 843, 0, 0, 837, 0, 838, 856, 858,
	813, 0, 0, 818, 0, 0, -2, 825, 0, 0,
	0, 835, 1137, 876, 67, 88, 89, 90, 598, 601,
	0, 564, 474, 474, 0, 568, 560, 569, 549, 550,
	552, 0, 402, 0, 0, 485, 0, 511, 513, 515,
	516, 475, 439, 440, 491, 448, 444, 489, 490, 456,
	488, 0, 488, 0, 479, 0, 580, 594, 0, 0,
	0, 92, 545, 0, 0, 0, 0, 224, 0, 220,
	0, 0, 0, 127, 0, 110, 111, 112, 114, 115,
	0, 0, 0, 108, 0, 265, 0, 268, 269, 652,
	654, 713, 1237, 863, 211, 200, 202, 203, 211, 214,
	151, 0, 152, 154, 0, 153, 531, 93, 612, 0,
	639, 0, 0, 1213, 560, 0, -2, 615, 620, 621,
	622, 623, 624, 0, 635, 0, 617, 0, 639, 0,
	632, 0, 0, 0, 51, 44, 93, 93, 960, 896,
	962, 0, 966, 780, 779, 961, 969, 0, 0, 974,
	993, 1085, 488, 1089, 1090, 1092, 1094, 1095, 1097, 995,
	994, 0, 0, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 1104, 0, 62, 0, 1164, -2, 0, 0,
	79, 0, 1137, 1168, 1169, 1170, 840, 0, 845, 0,
	831, 0, 871, 823, 0, 0, 0, 0, 66, 537,
	0, 1134, 1134, 548, 562, 0, 0, 0, 486, 0,
	0, 445, 491, 473, 491, 0, 0, 595, 0, 92,
	94, 0, 506, 507, 508, 509, 510, 0, 93, 225,
	226, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	219, 221, 222, 223, 145, 128, 129, 0, 0, 0,
	0, 120, 121, 0, 0, 0, 0, 0, 116, 117,
	118, 264, 0, 0, 267, 0, 0, 688, 1239, 1233,
	204, 204, 0, 155, 0, 0, 614, 640, 0, 400,
	400, 0, 562, 0, 631, 0, 1203, 1204, 0, 626,
	639, 0, 0, 0, 1158, 875, 0, 0, 765, 770,
	1129, 0, 0, 0, 1086, 1087, 0, 0, 0, 0,
	1002, 1003, 1004, 1036, 1007, 1101, 0, 1162, 1147, 0,
	1151, 0, 834, 65, 0, 830, 0, 819, 821, 871,
	872, 873, 874, 536, 540, 0, 545, 0, 565, 566,
	567, 551, 0, 397, 0, 462, 463, 477, 480, 0,
	99, 0, 504, 505, 0, 94, 227, 228, 229, 230,
	232, 233, 0, 0, 0, 105, 0, 0, 130, 0,
	0, 0, 0, 140, 141, 142, 143, 144, 122, 123,
	124, 125, 126, 113, 0, 0, 266, 0, 271, 272,
	1201, 1241, -2, 0, 148, 0, 149, 212, 0, 613,
	641, 394, 395, 0, 1213, 0, 616, 625, 627, 0,
	634, 0, 1121, 45, 93, 784, 0, 1025, 1026, 996,
	998, 997, 999, 0, 0, 0, 0, 1150, 0, 841,
	832, 824, 541, 542, 0, 544, 0, 408, 398, 399,
	0, 538, 92, 0, 0, 234, 235, 236, 237, 146,
	147, 131, 132, 0, 134, 135, 0, 0, 0, 274,
	0, 270, 829, 0, 1233, 0, 1235, 0, 1232, 0,
	205, 875, 0, 0, 0, 633, 0, 645, 0, 1126,
	0, 766, 0, 0, 0, 781, 1005, 0, 0, 0,
	1160, -2, 543, 0, 397, 98, 539, 100, 283, 92,
	354, 355, 356, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 366, 367, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 0, 0, 0, 0, 136, 0, 138, 139, 273,
	0, 36, 0, 1240, 0, 1238, 0, 0, 1234, 0,
	1121, 538, 0, 538, 644, 0, 0, 794, 0, 0,
	777, 785, 0, 788, 0, 0, 0, 799, 0, 786,
	1037, 0, 1040, 0, 409, 92, 0, 0, 104, 0,
	0, 1215, 0, 0, 310, 311, 312, 1217, 0, 352,
	133, 137, 275, 1202, 1242, 0, 0, 0, 1126, 618,
	0, 636, 646, 0, 46, 0, 1127, 1128, 1122, 1123,
	1125, 0, 789, 790, 791, 792, 793, 0, 1038, 0,
	94, 284, 285, 0, 294, 0, 0, 0, 0, 0,
	308, 0, 0, 1236, 1230, 206, 207, 208, 210, 794,
	538, 0, 43, 795, 796, 0, 0, 0, 800, 0,
	571, 0, 0, 0, 295, 0, 0, 0, 0, 0,
	0, 1218, 238, 353, 0, 41, 619, 0, 0, 0,
	1124, 787, 0, 572, 573, 0, 92, 286, 287, 288,
	289, 290, 0, 292, 0, 0, 0, 304, 305, 306,
	0, 313, 315, 316, 317, 0, 319, 320, 309, 209,
	0, 797, 798, 1039, 574, 0, 575, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 301, 0, 307,
	0, 318, 0, 0, 586, 588, 589, 0, 0, 587,
	0, 0, 296, 297, 0, 0, 0, 302, 0, 314,
	647, 648, 590, 591, 592, 291, 293, 0, 299, 0,
	0, 0, 0, 0, 298, 0, 303, 300,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 91, 3, 3, 3, 126, 118, 3,
	68, 70, 123, 121, 69, 122, 176, 124, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 555,
	100, 99, 101, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 117, 3, 129,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 92, 93, 94, 95, 96,
	97, 98, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 119, 120, 125,
	127, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:516
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:520
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:562
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:574
		{
			if s, ok := yyDollar[1].selStmt.(*Select); ok {
				if s.Into == nil {
					yyDollar[1].selStmt.(*Select).Into = yyDollar[5].into
				} else if yyDollar[5].into != nil {
					yylex.Error(fmt.Errorf("Multiple INTO clauses in one query block").Error())
					return 1
				}
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:589
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:595
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:606
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:613
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:619
		{
			if yyDollar[8].into == nil {
				yyDollar[8].into = yyDollar[14].into
			} else if yyDollar[14].into != nil {
				yylex.Error(fmt.Errorf("Multiple INTO clauses in one query block").Error())
				return 1
			}

			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:638
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:644
		{
			yyVAL.into = nil
		}
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:648
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:652
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:672
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:686
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:692
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:698
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:702
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:712
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:718
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 62:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:730
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:742
		{
			yyVAL.str = InsertStr
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:746
		{
			yyVAL.str = ReplaceStr
		}
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:752
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:758
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:762
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 68:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:766
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:770
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:775
		{
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:776
		{
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:780
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:784
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:794
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:809
		{
			yyVAL.partitions = nil
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:813
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:823
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:830
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:839
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:853
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:863
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:867
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:871
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:885
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:890
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:896
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 98:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:915
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 99:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:919
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 100:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:925
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:931
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:939
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 103:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:947
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 104:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:951
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:955
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:974
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:983
		{
			yyVAL.accountNames = nil
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:992
		{
			yyVAL.tlsOptionItems = nil
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:996
		{
			yyVAL.tlsOptionItems = nil
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1000
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1037
		{
			yyVAL.accountLimitItems = nil
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1057
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1074
		{
			yyVAL.passLockItems = nil
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1098
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1102
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1106
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1110
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1114
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1118
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1122
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1126
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1130
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1138
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1151
		{
			yyVAL.str = ""
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 148:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1166
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1171
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1175
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1179
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 152:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1185
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 153:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1190
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1194
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1198
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1206
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1236
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1248
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1252
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1256
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1264
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1284
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1292
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1296
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1338
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1342
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1347
		{
			yyVAL.strs = nil
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1351
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1357
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1366
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1384
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1392
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1405
		{
			yyVAL.grantAssumption = nil
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1409
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1413
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1417
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1421
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1425
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1429
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1434
		{
			yyVAL.boolean = false
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1438
		{
			yyVAL.boolean = true
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1443
		{
			yyVAL.boolean = false
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.boolean = true
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1454
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1462
		{
			yyVAL.procedureParams = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1476
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1482
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1486
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1490
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1494
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1499
		{
			yyVAL.characteristics = nil
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1513
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1519
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1523
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1539
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1571
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = ""
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1627
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1649
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1655
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1699
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1703
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1707
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1713
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1725
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1729
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1733
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1739
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1743
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1747
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = BeforeStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = AfterStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = InsertStr
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = UpdateStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = DeleteStr
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1786
		{
			yyVAL.triggerOrder = nil
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1816
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1820
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1830
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1836
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 297:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1842
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 298:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1847
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 299:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1852
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 300:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1858
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1870
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1876
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1882
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1886
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1890
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 307:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1894
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1941
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1971
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1991
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2003
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &Resignal{}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2073
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2084
		{
			yyVAL.exprs = nil
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.exprs = nil
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2108
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2143
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2159
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2176
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2186
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2191
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2195
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2199
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2245
		{
			yyVAL.columnType = ColumnType{}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2312
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2321
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2354
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2358
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2599
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2615
		{
			yyVAL.sqlVal = nil
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2624
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2628
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2636
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2646
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2654
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2679
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2703
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2707
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2716
		{
			yyVAL.boolean = false
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.boolean = true
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2725
		{
			yyVAL.charsetCollates = nil
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2747
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2755
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2761
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2765
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2769
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2773
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2779
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2783
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2789
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.colKeyOpt = colKey
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2803
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2807
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2811
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2817
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = ""
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.str = yyDollar[1].str
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2895
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2899
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.indexOptions = nil
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2918
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2953
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2965
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = yyDollar[1].str
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3020
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3024
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3034
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3040
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3050
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3054
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 571:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3064
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 572:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3068
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 573:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3072
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 574:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3076
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 575:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3080
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3086
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3104
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = ""
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3139
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3145
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3161
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3166
		{
			yyVAL.boolean = true
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.boolean = true
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3174
		{
			yyVAL.boolean = false
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = ""
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3187
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = yyDollar[1].str
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = ""
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = string("")
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3244
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3257
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3267
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3274
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3281
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3285
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3294
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 619:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3298
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3312
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3326
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3330
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3337
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3347
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3359
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3364
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 633:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3368
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3372
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3376
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 636:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3380
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3386
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3390
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3395
		{
			yyVAL.columnOrder = nil
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3403
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3410
		{
		}
	case 644:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3414
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3420
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3424
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 647:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3430
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 648:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3434
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 652:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3454
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3462
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3466
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3472
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 656:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3480
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3484
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3492
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3500
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3508
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3516
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3524
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3532
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3541
		{

		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3545
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3559
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3575
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3583
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3587
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3591
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3596
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3600
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3604
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3612
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3616
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3620
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3624
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3628
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3632
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3636
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3640
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 688:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3644
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3649
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3654
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3658
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3662
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3670
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3684
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3688
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3693
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 699:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3697
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3702
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3706
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3710
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3714
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3718
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3730
		{
			yyVAL.boolean = false
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3734
		{
			yyVAL.boolean = true
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3764
		{
			yyVAL.showFilter = nil
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3776
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3786
		{
			yyVAL.str = SessionStr
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.str = GlobalStr
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.statement = &Begin{}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.statement = &Begin{}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3820
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3824
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.statement = &Commit{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.statement = &Rollback{}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3848
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3852
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3856
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3860
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3880
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3894
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3909
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3915
		{
			setAllowComments(yylex, true)
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3919
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3925
		{
			yyVAL.bytes2 = nil
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3929
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.str = UnionStr
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3939
		{
			yyVAL.str = UnionAllStr
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3943
		{
			yyVAL.str = UnionDistinctStr
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3948
		{
			yyVAL.byt = 0
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.byt = 1
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3957
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3961
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = SQLCacheStr
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3970
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = DistinctStr
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3983
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = StraightJoinHint
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4001
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4020
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4024
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4034
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4038
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4042
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4052
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4058
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4063
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4071
		{
			yyVAL.exprs = nil
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4080
		{
			yyVAL.over = nil
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.over = yyDollar[1].over
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.frame = nil
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4097
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4104
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4142
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4146
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4150
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4154
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4169
		{
			yyVAL.window = nil
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4172
		{
			yyVAL.window = yyDollar[2].window
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4181
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4187
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4200
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4241
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4255
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4265
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4288
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4294
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 821:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4299
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4310
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4314
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 824:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4318
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4322
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4326
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4337
		{
			yyVAL.expr = nil
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4341
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.columns = nil
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4350
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4376
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4389
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4393
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4397
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4401
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4409
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4413
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4415
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4419
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4421
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4424
		{
			yyVAL.empty = struct{}{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.empty = struct{}{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4431
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.str = JoinStr
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4445
		{
			yyVAL.str = JoinStr
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = JoinStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4455
		{
			yyVAL.str = StraightJoinStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4461
		{
			yyVAL.str = LeftJoinStr
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4465
		{
			yyVAL.str = LeftJoinStr
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4469
		{
			yyVAL.str = RightJoinStr
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4473
		{
			yyVAL.str = RightJoinStr
		}
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = NaturalJoinStr
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4483
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4493
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4497
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4503
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4509
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4523
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4539
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4544
		{
			yyVAL.indexHints = nil
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4548
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4552
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4556
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4561
		{
			yyVAL.expr = nil
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4575
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4579
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4583
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4587
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4595
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4601
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4605
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4611
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4615
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4621
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4629
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4633
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4637
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4641
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4645
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4649
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4653
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4657
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = IsNullStr
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = IsNotNullStr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = IsTrueStr
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = IsNotTrueStr
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			yyVAL.str = IsFalseStr
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4683
		{
			yyVAL.str = IsNotFalseStr
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4689
		{
			yyVAL.str = EqualStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			yyVAL.str = LessThanStr
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			yyVAL.str = GreaterThanStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4701
		{
			yyVAL.str = LessEqualStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = GreaterEqualStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = NotEqualStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4718
		{
			yyVAL.expr = nil
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4722
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4736
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4742
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4748
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4752
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4758
		{
			yyVAL.selectExprs = nil
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4765
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4769
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4775
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4779
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4789
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4793
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4797
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4801
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4805
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4821
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4869
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4873
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4877
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4899
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4903
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4907
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4927
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4931
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4941
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4945
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4949
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4953
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4957
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 966:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4961
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4965
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4969
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4973
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4977
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4981
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4985
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4989
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4993
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4997
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5001
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5005
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 978:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5014
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5018
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5022
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5026
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5030
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5046
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5050
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5054
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5065
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5073
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5077
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5081
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5085
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5089
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 996:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5093
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5097
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 998:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5101
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 999:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5105
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5109
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5113
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1002:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5117
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1003:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5121
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1004:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5125
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1005:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5129
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5133
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1007:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5137
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5141
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5145
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5159
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5168
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5173
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5178
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5184
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5189
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5193
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5198
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5202
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5206
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5211
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5216
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5221
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5225
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5229
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5240
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5250
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5254
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5258
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5262
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5266
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5270
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5276
		{
			yyVAL.str = ""
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5280
		{
			yyVAL.str = BooleanModeStr
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1039:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5288
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5292
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5298
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5302
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5308
		{
			yyVAL.str = Armscii8Str
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.str = AsciiStr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = Big5Str
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
			yyVAL.str = UBinaryStr
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5324
		{
			yyVAL.str = Cp1250Str
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5328
		{
			yyVAL.str = Cp1251Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5332
		{
			yyVAL.str = Cp1256Str
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5336
		{
			yyVAL.str = Cp1257Str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = Cp850Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5344
		{
			yyVAL.str = Cp852Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5348
		{
			yyVAL.str = Cp866Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5352
		{
			yyVAL.str = Cp932Str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5356
		{
			yyVAL.str = Dec8Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5360
		{
			yyVAL.str = EucjpmsStr
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
			yyVAL.str = EuckrStr
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5368
		{
			yyVAL.str = Gb18030Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.str = Gb2312Str
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5376
		{
			yyVAL.str = GbkStr
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5380
		{
			yyVAL.str = Geostd8Str
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5384
		{
			yyVAL.str = GreekStr
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5388
		{
			yyVAL.str = HebrewStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5392
		{
			yyVAL.str = Hp8Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5396
		{
			yyVAL.str = Keybcs2Str
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5400
		{
			yyVAL.str = Koi8rStr
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5404
		{
			yyVAL.str = Koi8uStr
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5408
		{
			yyVAL.str = Latin1Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5412
		{
			yyVAL.str = Latin2Str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5416
		{
			yyVAL.str = Latin5Str
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5420
		{
			yyVAL.str = Latin7Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5424
		{
			yyVAL.str = MacceStr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5428
		{
			yyVAL.str = MacromanStr
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5432
		{
			yyVAL.str = SjisStr
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5436
		{
			yyVAL.str = Swe7Str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5440
		{
			yyVAL.str = Tis620Str
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
			yyVAL.str = Ucs2Str
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5448
		{
			yyVAL.str = UjisStr
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5452
		{
			yyVAL.str = Utf16Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5456
		{
			yyVAL.str = Utf16leStr
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
			yyVAL.str = Utf32Str
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5464
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5468
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5472
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5478
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5482
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5486
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5490
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5494
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5498
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5504
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5508
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5512
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5516
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5520
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5528
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5533
		{
			yyVAL.expr = nil
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5537
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = string("")
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5546
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5552
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5556
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5562
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = nil
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5571
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5577
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5581
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5585
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5591
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5595
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5603
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5607
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5611
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5615
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5619
		{
			yyVAL.expr = &NullVal{}
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5625
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5629
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5633
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5638
		{
			yyVAL.exprs = nil
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5642
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5648
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5652
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5663
		{
			yyVAL.expr = nil
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5667
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5673
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5678
		{
			yyVAL.orderBy = nil
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5682
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5688
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5692
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5698
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5703
		{
			yyVAL.str = AscScr
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5707
		{
			yyVAL.str = AscScr
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5711
		{
			yyVAL.str = DescScr
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5716
		{
			yyVAL.limit = nil
		}
	case 1138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5720
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5724
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5728
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5734
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5743
		{
			yyVAL.str = ""
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5747
		{
			yyVAL.str = ForUpdateStr
		}
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5751
		{
			yyVAL.str = ShareModeStr
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5764
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5768
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5772
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5776
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5781
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5785
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1152:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5789
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5795
		{
			yyVAL.columns = nil
		}
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5799
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5809
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5813
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5817
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5822
		{
			yyVAL.assignExprs = nil
		}
	case 1160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5826
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5832
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5836
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5842
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5846
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5852
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5858
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5868
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5872
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5878
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5881
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5887
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5891
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5897
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5908
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5921
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5934
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5940
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5944
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5950
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5954
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5958
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5968
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5972
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5979
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5986
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5990
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5994
		{
			yyVAL.expr = &Default{}
		}
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6003
		{
			yyVAL.byt = 0
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6005
		{
			yyVAL.byt = 1
		}
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6008
		{
			yyVAL.byt = 0
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6010
		{
			yyVAL.byt = 1
		}
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6013
		{
			yyVAL.byt = 0
		}
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6015
		{
			yyVAL.byt = 1
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6018
		{
			yyVAL.str = ""
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6020
		{
			yyVAL.str = IgnoreStr
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6023
		{
			yyVAL.sqlVal = nil
		}
	case 1202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6025
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6029
		{
			yyVAL.empty = struct{}{}
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6031
		{
			yyVAL.empty = struct{}{}
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6034
		{
			yyVAL.empty = struct{}{}
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.empty = struct{}{}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.empty = struct{}{}
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = UniqueStr
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6044
		{
			yyVAL.str = FulltextStr
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6046
		{
			yyVAL.str = SpatialStr
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6049
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6054
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6056
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6060
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6064
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6070
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6074
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6081
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6087
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6091
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6103
		{
			yyVAL.str = string("")
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6105
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6108
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6113
		{
			yyVAL.EnclosedBy = nil
		}
	case 1230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6117
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6122
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6126
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6131
		{
			yyVAL.sqlVal = nil
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6135
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6140
		{
			yyVAL.sqlVal = nil
		}
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6144
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6149
		{
			yyVAL.Fields = nil
		}
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6153
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6158
		{
			yyVAL.Lines = nil
		}
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6162
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6167
		{
			yyVAL.sqlVal = nil
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6177
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6183
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6187
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6193
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6197
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6203
		{
			yyVAL.lockType = LockRead
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6207
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6211
		{
			yyVAL.lockType = LockWrite
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6215
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6221
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6227
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6231
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6235
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6759
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6768
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
