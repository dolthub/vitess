// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const UNBOUNDED = 57443
const PARTITION = 57444
const RANGE = 57445
const ROWS = 57446
const GROUPS = 57447
const PRECEDING = 57448
const FOLLOWING = 57449
const SHIFT_LEFT = 57450
const SHIFT_RIGHT = 57451
const DIV = 57452
const MOD = 57453
const UNARY = 57454
const COLLATE = 57455
const BINARY = 57456
const UNDERSCORE_ARMSCII8 = 57457
const UNDERSCORE_ASCII = 57458
const UNDERSCORE_BIG5 = 57459
const UNDERSCORE_BINARY = 57460
const UNDERSCORE_CP1250 = 57461
const UNDERSCORE_CP1251 = 57462
const UNDERSCORE_CP1256 = 57463
const UNDERSCORE_CP1257 = 57464
const UNDERSCORE_CP850 = 57465
const UNDERSCORE_CP852 = 57466
const UNDERSCORE_CP866 = 57467
const UNDERSCORE_CP932 = 57468
const UNDERSCORE_DEC8 = 57469
const UNDERSCORE_EUCJPMS = 57470
const UNDERSCORE_EUCKR = 57471
const UNDERSCORE_GB18030 = 57472
const UNDERSCORE_GB2312 = 57473
const UNDERSCORE_GBK = 57474
const UNDERSCORE_GEOSTD8 = 57475
const UNDERSCORE_GREEK = 57476
const UNDERSCORE_HEBREW = 57477
const UNDERSCORE_HP8 = 57478
const UNDERSCORE_KEYBCS2 = 57479
const UNDERSCORE_KOI8R = 57480
const UNDERSCORE_KOI8U = 57481
const UNDERSCORE_LATIN1 = 57482
const UNDERSCORE_LATIN2 = 57483
const UNDERSCORE_LATIN5 = 57484
const UNDERSCORE_LATIN7 = 57485
const UNDERSCORE_MACCE = 57486
const UNDERSCORE_MACROMAN = 57487
const UNDERSCORE_SJIS = 57488
const UNDERSCORE_SWE7 = 57489
const UNDERSCORE_TIS620 = 57490
const UNDERSCORE_UCS2 = 57491
const UNDERSCORE_UJIS = 57492
const UNDERSCORE_UTF16 = 57493
const UNDERSCORE_UTF16LE = 57494
const UNDERSCORE_UTF32 = 57495
const UNDERSCORE_UTF8 = 57496
const UNDERSCORE_UTF8MB3 = 57497
const UNDERSCORE_UTF8MB4 = 57498
const INTERVAL = 57499
const JSON_EXTRACT_OP = 57500
const JSON_UNQUOTE_EXTRACT_OP = 57501
const CREATE = 57502
const ALTER = 57503
const DROP = 57504
const RENAME = 57505
const ANALYZE = 57506
const ADD = 57507
const MODIFY = 57508
const CHANGE = 57509
const SCHEMA = 57510
const TABLE = 57511
const INDEX = 57512
const INDEXES = 57513
const VIEW = 57514
const TO = 57515
const IGNORE = 57516
const IF = 57517
const PRIMARY = 57518
const COLUMN = 57519
const SPATIAL = 57520
const FULLTEXT = 57521
const KEY_BLOCK_SIZE = 57522
const CHECK = 57523
const ACTION = 57524
const CASCADE = 57525
const CONSTRAINT = 57526
const FOREIGN = 57527
const NO = 57528
const REFERENCES = 57529
const RESTRICT = 57530
const FIRST = 57531
const AFTER = 57532
const SHOW = 57533
const DESCRIBE = 57534
const EXPLAIN = 57535
const DATE = 57536
const ESCAPE = 57537
const REPAIR = 57538
const OPTIMIZE = 57539
const TRUNCATE = 57540
const FORMAT = 57541
const MAXVALUE = 57542
const REORGANIZE = 57543
const LESS = 57544
const THAN = 57545
const PROCEDURE = 57546
const TRIGGER = 57547
const TRIGGERS = 57548
const FUNCTION = 57549
const STATUS = 57550
const VARIABLES = 57551
const WARNINGS = 57552
const ERRORS = 57553
const KILL = 57554
const CONNECTION = 57555
const SEQUENCE = 57556
const ENABLE = 57557
const DISABLE = 57558
const EACH = 57559
const ROW = 57560
const BEFORE = 57561
const FOLLOWS = 57562
const PRECEDES = 57563
const DEFINER = 57564
const INVOKER = 57565
const INOUT = 57566
const OUT = 57567
const DETERMINISTIC = 57568
const CONTAINS = 57569
const READS = 57570
const MODIFIES = 57571
const SQL = 57572
const SECURITY = 57573
const TEMPORARY = 57574
const ALGORITHM = 57575
const MERGE = 57576
const TEMPTABLE = 57577
const UNDEFINED = 57578
const CLASS_ORIGIN = 57579
const SUBCLASS_ORIGIN = 57580
const MESSAGE_TEXT = 57581
const MYSQL_ERRNO = 57582
const CONSTRAINT_CATALOG = 57583
const CONSTRAINT_SCHEMA = 57584
const CONSTRAINT_NAME = 57585
const CATALOG_NAME = 57586
const SCHEMA_NAME = 57587
const TABLE_NAME = 57588
const COLUMN_NAME = 57589
const CURSOR_NAME = 57590
const SIGNAL = 57591
const RESIGNAL = 57592
const SQLSTATE = 57593
const DECLARE = 57594
const CONDITION = 57595
const CURSOR = 57596
const CONTINUE = 57597
const EXIT = 57598
const UNDO = 57599
const HANDLER = 57600
const FOUND = 57601
const SQLWARNING = 57602
const SQLEXCEPTION = 57603
const USER = 57604
const IDENTIFIED = 57605
const ROLE = 57606
const REUSE = 57607
const GRANT = 57608
const GRANTS = 57609
const REVOKE = 57610
const NONE = 57611
const ATTRIBUTE = 57612
const RANDOM = 57613
const PASSWORD = 57614
const INITIAL = 57615
const AUTHENTICATION = 57616
const SSL = 57617
const X509 = 57618
const CIPHER = 57619
const ISSUER = 57620
const SUBJECT = 57621
const ACCOUNT = 57622
const EXPIRE = 57623
const NEVER = 57624
const DAY = 57625
const OPTION = 57626
const OPTIONAL = 57627
const EXCEPT = 57628
const ADMIN = 57629
const PRIVILEGES = 57630
const MAX_QUERIES_PER_HOUR = 57631
const MAX_UPDATES_PER_HOUR = 57632
const MAX_CONNECTIONS_PER_HOUR = 57633
const MAX_USER_CONNECTIONS = 57634
const FLUSH = 57635
const FAILED_LOGIN_ATTEMPTS = 57636
const PASSWORD_LOCK_TIME = 57637
const REQUIRE = 57638
const PROXY = 57639
const ROUTINE = 57640
const TABLESPACE = 57641
const CLIENT = 57642
const SLAVE = 57643
const EVENT = 57644
const EXECUTE = 57645
const FILE = 57646
const RELOAD = 57647
const REPLICATION = 57648
const SHUTDOWN = 57649
const SUPER = 57650
const USAGE = 57651
const LOGS = 57652
const ENGINE = 57653
const ERROR = 57654
const GENERAL = 57655
const HOSTS = 57656
const OPTIMIZER_COSTS = 57657
const RELAY = 57658
const SLOW = 57659
const USER_RESOURCES = 57660
const NO_WRITE_TO_BINLOG = 57661
const CHANNEL = 57662
const BEGIN = 57663
const START = 57664
const TRANSACTION = 57665
const COMMIT = 57666
const ROLLBACK = 57667
const SAVEPOINT = 57668
const WORK = 57669
const RELEASE = 57670
const BIT = 57671
const TINYINT = 57672
const SMALLINT = 57673
const MEDIUMINT = 57674
const INT = 57675
const INTEGER = 57676
const BIGINT = 57677
const INTNUM = 57678
const SERIAL = 57679
const REAL = 57680
const DOUBLE = 57681
const FLOAT_TYPE = 57682
const DECIMAL = 57683
const NUMERIC = 57684
const DEC = 57685
const FIXED = 57686
const PRECISION = 57687
const TIME = 57688
const TIMESTAMP = 57689
const DATETIME = 57690
const YEAR = 57691
const CHAR = 57692
const VARCHAR = 57693
const BOOL = 57694
const CHARACTER = 57695
const VARBINARY = 57696
const NCHAR = 57697
const NVARCHAR = 57698
const NATIONAL = 57699
const VARYING = 57700
const TEXT = 57701
const TINYTEXT = 57702
const MEDIUMTEXT = 57703
const LONGTEXT = 57704
const LONG = 57705
const BLOB = 57706
const TINYBLOB = 57707
const MEDIUMBLOB = 57708
const LONGBLOB = 57709
const JSON = 57710
const ENUM = 57711
const GEOMETRY = 57712
const POINT = 57713
const LINESTRING = 57714
const POLYGON = 57715
const GEOMETRYCOLLECTION = 57716
const MULTIPOINT = 57717
const MULTILINESTRING = 57718
const MULTIPOLYGON = 57719
const LOCAL = 57720
const LOW_PRIORITY = 57721
const NULLX = 57722
const AUTO_INCREMENT = 57723
const APPROXNUM = 57724
const SIGNED = 57725
const UNSIGNED = 57726
const ZEROFILL = 57727
const COLLATION = 57728
const DATABASES = 57729
const SCHEMAS = 57730
const TABLES = 57731
const FULL = 57732
const PROCESSLIST = 57733
const COLUMNS = 57734
const FIELDS = 57735
const ENGINES = 57736
const PLUGINS = 57737
const NAMES = 57738
const CHARSET = 57739
const GLOBAL = 57740
const SESSION = 57741
const ISOLATION = 57742
const LEVEL = 57743
const READ = 57744
const WRITE = 57745
const ONLY = 57746
const REPEATABLE = 57747
const COMMITTED = 57748
const UNCOMMITTED = 57749
const SERIALIZABLE = 57750
const ENCRYPTION = 57751
const CURRENT_TIMESTAMP = 57752
const DATABASE = 57753
const CURRENT_DATE = 57754
const CURRENT_USER = 57755
const CURRENT_TIME = 57756
const LOCALTIME = 57757
const LOCALTIMESTAMP = 57758
const UTC_DATE = 57759
const UTC_TIME = 57760
const UTC_TIMESTAMP = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const TRIM = 57767
const LEADING = 57768
const TRAILING = 57769
const BOTH = 57770
const GROUP_CONCAT = 57771
const SEPARATOR = 57772
const TIMESTAMPADD = 57773
const TIMESTAMPDIFF = 57774
const OVER = 57775
const WINDOW = 57776
const GROUPING = 57777
const CURRENT = 57778
const AVG = 57779
const BIT_AND = 57780
const BIT_OR = 57781
const BIT_XOR = 57782
const COUNT = 57783
const JSON_ARRAYAGG = 57784
const JSON_OBJECTAGG = 57785
const MAX = 57786
const MIN = 57787
const STDDEV_POP = 57788
const STDDEV = 57789
const STD = 57790
const STDDEV_SAMP = 57791
const SUM = 57792
const VAR_POP = 57793
const VARIANCE = 57794
const VAR_SAMP = 57795
const CUME_DIST = 57796
const DENSE_RANK = 57797
const FIRST_VALUE = 57798
const LAG = 57799
const LAST_VALUE = 57800
const LEAD = 57801
const NTH_VALUE = 57802
const NTILE = 57803
const ROW_NUMBER = 57804
const PERCENT_RANK = 57805
const RANK = 57806
const MATCH = 57807
const AGAINST = 57808
const BOOLEAN = 57809
const LANGUAGE = 57810
const WITH = 57811
const QUERY = 57812
const EXPANSION = 57813
const UNUSED = 57814
const ARRAY = 57815
const DESCRIPTION = 57816
const EMPTY = 57817
const JSON_TABLE = 57818
const LATERAL = 57819
const MEMBER = 57820
const RECURSIVE = 57821
const ACTIVE = 57822
const BUCKETS = 57823
const CLONE = 57824
const COMPONENT = 57825
const DEFINITION = 57826
const ENFORCED = 57827
const EXCLUDE = 57828
const GEOMCOLLECTION = 57829
const GET_MASTER_PUBLIC_KEY = 57830
const HISTOGRAM = 57831
const HISTORY = 57832
const INACTIVE = 57833
const INVISIBLE = 57834
const LOCKED = 57835
const MASTER_COMPRESSION_ALGORITHMS = 57836
const MASTER_PUBLIC_KEY_PATH = 57837
const MASTER_TLS_CIPHERSUITES = 57838
const MASTER_ZSTD_COMPRESSION_LEVEL = 57839
const NESTED = 57840
const NETWORK_NAMESPACE = 57841
const NOWAIT = 57842
const NULLS = 57843
const OJ = 57844
const OLD = 57845
const ORDINALITY = 57846
const ORGANIZATION = 57847
const OTHERS = 57848
const PATH = 57849
const PERSIST = 57850
const PERSIST_ONLY = 57851
const PRIVILEGE_CHECKS_USER = 57852
const PROCESS = 57853
const REFERENCE = 57854
const REQUIRE_ROW_FORMAT = 57855
const RESOURCE = 57856
const RESPECT = 57857
const RESTART = 57858
const RETAIN = 57859
const SECONDARY = 57860
const SECONDARY_ENGINE = 57861
const SECONDARY_LOAD = 57862
const SECONDARY_UNLOAD = 57863
const SKIP = 57864
const SRID = 57865
const THREAD_PRIORITY = 57866
const TIES = 57867
const VCPU = 57868
const VISIBLE = 57869
const SYSTEM = 57870
const INFILE = 57871
const GENERATED = 57872
const ALWAYS = 57873
const STORED = 57874
const VIRTUAL = 57875
const NVAR = 57876
const PASSWORD_LOCK = 57877

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 35,
	5, 60,
	-2, 1132,
	-1, 43,
	187, 1196,
	188, 1214,
	-2, 247,
	-1, 49,
	226, 720,
	227, 720,
	-2, 709,
	-1, 557,
	175, 1224,
	-2, 1218,
	-1, 558,
	175, 1225,
	-2, 1219,
	-1, 703,
	98, 1511,
	175, 1511,
	-2, 1180,
	-1, 704,
	98, 1630,
	175, 1630,
	-2, 1181,
	-1, 709,
	98, 1535,
	175, 1535,
	-2, 1182,
	-1, 710,
	98, 1583,
	175, 1583,
	-2, 1183,
	-1, 711,
	98, 1584,
	175, 1584,
	-2, 1184,
	-1, 712,
	98, 1457,
	175, 1457,
	-2, 1188,
	-1, 714,
	98, 1560,
	175, 1560,
	-2, 1190,
	-1, 1235,
	1, 817,
	5, 817,
	12, 817,
	13, 817,
	14, 817,
	15, 817,
	17, 817,
	19, 817,
	27, 817,
	30, 817,
	31, 817,
	56, 817,
	57, 817,
	58, 817,
	59, 817,
	60, 817,
	62, 817,
	63, 817,
	66, 817,
	67, 817,
	69, 817,
	70, 817,
	452, 817,
	554, 817,
	-2, 849,
	-1, 1241,
	67, 77,
	69, 77,
	-2, 81,
	-1, 1337,
	1, 499,
	554, 499,
	-2, 497,
	-1, 1339,
	1, 499,
	554, 499,
	-2, 497,
	-1, 1499,
	175, 1227,
	-2, 1223,
	-1, 1665,
	44, 565,
	-2, 1469,
	-1, 1669,
	68, 563,
	72, 563,
	-2, 1505,
	-1, 1670,
	68, 565,
	-2, 1415,
	-1, 1673,
	68, 561,
	72, 561,
	-2, 1332,
	-1, 1674,
	68, 562,
	72, 562,
	-2, 1342,
	-1, 1721,
	1, 500,
	554, 500,
	-2, 497,
	-1, 1805,
	44, 608,
	194, 610,
	196, 608,
	197, 608,
	-2, 645,
	-1, 1881,
	5, 61,
	-2, 919,
	-1, 2193,
	69, 1389,
	70, 1389,
	175, 1389,
	-2, 751,
	-1, 2216,
	1, 874,
	5, 874,
	12, 874,
	13, 874,
	14, 874,
	15, 874,
	17, 874,
	19, 874,
	27, 874,
	30, 874,
	31, 874,
	56, 874,
	57, 874,
	58, 874,
	59, 874,
	60, 874,
	62, 874,
	63, 874,
	66, 874,
	67, 874,
	69, 874,
	70, 874,
	452, 874,
	554, 874,
	-2, 849,
	-1, 2326,
	194, 611,
	-2, 609,
	-1, 2393,
	5, 61,
	-2, 1152,
	-1, 2617,
	41, 1234,
	-2, 1232,
	-1, 2733,
	5, 61,
	-2, 1155,
}

const yyPrivate = 57344

const yyLast = 38340

var yyAct = [...]int{
	623, 80, 2946, 2922, 2953, 2904, 2924, 2834, 2905, 928,
	429, 2024, 1657, 2745, 7, 2744, 6, 2743, 5, 2833,
	2270, 2646, 560, 2808, 2746, 8, 2716, 2712, 2863, 2559,
	2641, 2806, 2737, 2672, 2230, 558, 2644, 2643, 2405, 2617,
	1916, 2518, 1272, 1946, 1190, 2210, 2521, 2135, 1623, 1716,
	728, 2347, 2520, 2118, 2186, 549, 2619, 2287, 2492, 1967,
	1675, 2468, 2462, 83, 412, 415, 1617, 563, 2107, 622,
	2446, 1740, 1477, 2738, 1621, 2187, 454, 454, 460, 2231,
	565, 80, 2117, 129, 1691, 542, 129, 961, 1372, 2310,
	575, 475, 129, 1973, 2320, 1666, 2040, 1917, 2742, 3,
	93, 2183, 457, 457, 1655, 1656, 1707, 2195, 724, 1804,
	2202, 944, 2085, 106, 1470, 129, 1374, 2157, 1830, 1524,
	1767, 1974, 1485, 984, 1533, 1662, 129, 1420, 555, 1596,
	129, 731, 1724, 1348, 723, 1723, 1722, 1600, 726, 1392,
	1703, 2015, 1252, 1089, 705, 1232, 1607, 1501, 1096, 1235,
	129, 457, 1231, 731, 1590, 992, 1013, 1206, 1092, 708,
	1784, 129, 1720, 1251, 701, 702, 1425, 1109, 722, 697,
	432, 545, 991, 1343, 431, 567, 1340, 694, 916, 541,
	85, 1100, 2128, 102, 911, 474, 1243, 1987, 2985, 1207,
	1645, 2981, 98, 1989, 2976, 2961, 2959, 2941, 2917, 2871,
	82, 2674, 2673, 2244, 927, 1418, 2268, 1371, 1994, 1993,
	2433, 2932, 447, 2596, 441, 452, 435, 2817, 87, 88,
	89, 90, 91, 424, 2903, 2447, 2731, 1753, 36, 2594,
	1990, 1753, 36, 2449, 72, 39, 40, 442, 36, 36,
	2609, 2883, 2791, 2052, 2597, 1996, 59, 1980, 2284, 2659,
	2816, 36, 78, 1981, 2178, 2730, 41, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 2544,
	36, 1135, 72, 39, 40, 1911, 472, 69, 2692, 1619,
	2647, 1852, 2812, 2812, 2387, 910, 913, 1783, 918, 919,
	81, 921, 1912, 1955, 81, 1253, 1954, 1254, 2807, 1956,
	81, 81, 2225, 678, 1082, 684, 686, 685, 682, 683,
	681, 680, 679, 81, 2226, 2227, 2809, 2809, 2772, 1641,
	1421, 2944, 2947, 2943, 2425, 2426, 1441, 72, 39, 40,
	1424, 964, 81, 1642, 1643, 2348, 2349, 2350, 2351, 1041,
	2348, 2349, 2350, 2351, 2031, 1466, 1467, 423, 2452, 41,
	422, 2346, 1998, 1422, 1423, 965, 966, 1677, 1992, 1049,
	1782, 1995, 1812, 1806, 1807, 1010, 1805, 1808, 1809, 464,
	1692, 718, 1683, 1685, 1697, 1684, 1692, 2374, 2372, 426,
	406, 2813, 2813, 1404, 434, 433, 436, 974, 2450, 2451,
	2453, 2454, 2455, 2345, 440, 948, 949, 971, 2551, 952,
	1679, 421, 1815, 471, 43, 74, 46, 45, 48, 80,
	80, 444, 1704, 1679, 129, 448, 1814, 1813, 2082, 2773,
	1462, 1461, 979, 1460, 981, 2530, 980, 1459, 465, 451,
	1458, 950, 951, 1457, 2047, 49, 77, 76, 2595, 1045,
	1046, 2074, 47, 2898, 2463, 2469, 2470, 2471, 2472, 120,
	116, 117, 2466, 118, 2622, 1025, 2779, 2309, 129, 2079,
	2294, 1795, 2836, 2051, 2835, 2781, 2464, 2465, 1078, 2696,
	1056, 2480, 2488, 1057, 1796, 1452, 1086, 2950, 2842, 2049,
	1741, 2686, 2285, 972, 973, 122, 121, 114, 2288, 2289,
	2290, 2291, 2292, 57, 58, 2868, 2774, 2288, 2289, 2290,
	2291, 2292, 1025, 2589, 2478, 2866, 2867, 978, 982, 129,
	66, 2694, 67, 2588, 962, 1346, 963, 965, 966, 2613,
	2587, 2297, 2586, 2585, 2591, 416, 437, 438, 439, 445,
	1431, 449, 450, 453, 407, 915, 914, 68, 108, 2919,
	2583, 2928, 413, 123, 2923, 124, 1355, 1356, 1354, 113,
	917, 2158, 2584, 2853, 2682, 2683, 108, 1144, 2926, 2740,
	1146, 917, 2407, 1991, 1937, 2775, 75, 417, 53, 54,
	61, 2678, 62, 960, 1048, 1735, 1736, 2821, 2822, 2880,
	115, 957, 1811, 1025, 956, 2029, 2901, 1112, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	2267, 1731, 1188, 1593, 1192, 2971, 2688, 2957, 2660, 2030,
	2448, 2671, 2160, 2065, 2066, 1244, 425, 110, 947, 2560,
	1145, 2032, 958, 959, 2325, 2311, 2091, 1075, 1271, 1789,
	1730, 2493, 2494, 2562, 2986, 1405, 1271, 1972, 2913, 975,
	2093, 2810, 2810, 401, 73, 2983, 2050, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 2729, 1205, 1208,
	1208, 1208, 1214, 1208, 1208, 1214, 1208, 1214, 1223, 1224,
	1225, 1226, 119, 1236, 1424, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 73, 1024, 1063, 1032, 409, 1706, 2005, 79,
	1058, 2610, 1988, 79, 2053, 2977, 1035, 1422, 1423, 79,
	79, 1682, 1189, 2962, 1692, 1426, 2693, 129, 129, 129,
	2780, 2592, 79, 414, 2612, 443, 2296, 1535, 414, 414,
	912, 410, 930, 731, 110, 1077, 2503, 2925, 2927, 2234,
	1084, 79, 2687, 1271, 1271, 2698, 1270, 73, 2093, 1230,
	1428, 379, 1021, 1427, 414, 1030, 470, 1750, 2504, 708,
	2561, 2073, 1749, 1239, 708, 2070, 2352, 2055, 2054, 2162,
	1790, 2352, 1265, 1360, 2166, 1972, 2161, 99, 2159, 112,
	111, 2104, 1358, 2164, 976, 1031, 1719, 1027, 2955, 1073,
	1971, 2956, 2068, 2954, 909, 1944, 2163, 2091, 382, 1626,
	1628, 1271, 1943, 1972, 2092, 2093, 1942, 391, 399, 400,
	908, 2165, 2167, 1972, 1972, 551, 1081, 920, 378, 2507,
	1890, 1028, 1029, 1887, 1147, 1148, 2691, 1209, 1211, 1213,
	1215, 1217, 1219, 1220, 1222, 2357, 1256, 2343, 2072, 2071,
	1977, 1257, 388, 1959, 1951, 389, 1847, 1269, 397, 398,
	1835, 1820, 1734, 1732, 1331, 1480, 1264, 1249, 1646, 1210,
	1212, 1242, 1216, 1218, 1115, 1221, 940, 1125, 1135, 1069,
	1135, 2305, 1247, 1637, 1020, 1402, 101, 1128, 1129, 1130,
	1131, 1132, 1125, 2577, 2713, 1135, 112, 111, 2440, 2599,
	1266, 1068, 1064, 1065, 1066, 1067, 1070, 1071, 1072, 1074,
	2438, 2257, 2854, 2855, 2502, 394, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1971, 454,
	1350, 2851, 2852, 2600, 2099, 2091, 395, 1627, 2526, 2096,
	108, 2112, 2095, 2098, 731, 129, 2726, 2725, 454, 1373,
	109, 113, 2578, 929, 457, 457, 1971, 2441, 457, 2103,
	1601, 1473, 1108, 2100, 1106, 129, 1971, 1971, 129, 2439,
	2258, 2108, 2200, 457, 457, 2199, 129, 1508, 1413, 2508,
	103, 1108, 104, 1262, 2180, 129, 129, 129, 129, 129,
	983, 1376, 1506, 1507, 1505, 1147, 1148, 923, 1147, 1148,
	922, 380, 1591, 1591, 1393, 1902, 457, 1349, 2975, 1759,
	2914, 1353, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 946, 1338, 1135, 954, 1885, 2881,
	1884, 454, 1107, 1106, 393, 383, 384, 2479, 404, 2979,
	2473, 2242, 385, 387, 1103, 381, 403, 402, 1107, 1106,
	1108, 1478, 1479, 1416, 2784, 1377, 457, 457, 457, 1400,
	1093, 731, 2972, 1094, 967, 1450, 1108, 2776, 1388, 1389,
	1390, 1391, 932, 933, 934, 935, 936, 937, 938, 80,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 2734, 396,
	1135, 457, 2607, 2777, 1336, 1894, 457, 457, 1399, 1471,
	1352, 1394, 1396, 1335, 1397, 1351, 1760, 1362, 2021, 1768,
	1370, 1434, 1369, 1107, 1106, 2606, 2973, 129, 945, 129,
	2605, 1379, 731, 2642, 955, 1107, 1106, 469, 1498, 100,
	2689, 1108, 1381, 1382, 1107, 1106, 2604, 1107, 1106, 2778,
	129, 2916, 96, 1108, 2865, 2598, 1112, 80, 1886, 2864,
	1456, 2887, 1108, 2886, 1088, 1108, 1107, 1106, 969, 1408,
	1409, 2873, 2864, 1411, 2432, 1087, 1499, 81, 1107, 1106,
	1528, 1529, 1107, 1106, 1108, 2182, 2690, 1464, 1504, 1414,
	2431, 2965, 2947, 2964, 2127, 1429, 1108, 95, 1502, 2020,
	1108, 731, 1433, 1192, 1430, 2018, 1999, 1107, 1106, 1503,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 1107, 1106, 1135, 1108, 691, 692, 731, 731,
	1832, 1833, 1834, 1451, 1016, 94, 1454, 1525, 1432, 1526,
	1108, 1015, 1497, 1491, 1493, 1494, 1957, 1620, 1958, 1492,
	2872, 1629, 989, 2839, 1236, 1189, 1500, 1463, 1236, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 129, 988, 1577, 1580, 1455, 1468,
	2837, 1482, 129, 1592, 129, 2790, 2685, 1650, 1495, 129,
	129, 724, 1097, 129, 129, 129, 2684, 2670, 2614, 1543,
	2582, 1571, 1116, 2540, 1548, 1483, 2476, 2475, 1484, 2474,
	1376, 2442, 2429, 731, 731, 2316, 2250, 2016, 1779, 1754,
	1632, 1410, 2861, 2860, 1634, 1499, 2695, 1239, 708, 2668,
	2631, 1977, 2625, 2500, 1239, 2360, 2339, 2335, 1239, 1583,
	1625, 2327, 2298, 2060, 2059, 1189, 1616, 1594, 1531, 1772,
	1756, 1755, 1539, 1527, 1406, 1403, 1368, 1367, 1339, 1337,
	1011, 1652, 942, 1550, 1551, 580, 579, 582, 583, 584,
	585, 1191, 420, 418, 581, 586, 1563, 2551, 2884, 1088,
	1567, 1747, 1361, 1693, 1694, 1695, 1696, 2416, 2879, 1630,
	1055, 1651, 96, 2624, 1588, 2797, 1088, 129, 2416, 2795,
	1671, 2416, 2793, 129, 129, 457, 457, 457, 2416, 2676,
	129, 2717, 1214, 1663, 2551, 2664, 2551, 2567, 2573, 1331,
	2551, 1088, 2551, 2550, 1204, 1639, 1638, 2572, 1635, 1644,
	2416, 2415, 2277, 1626, 1628, 2397, 1088, 2251, 561, 129,
	129, 129, 1709, 1710, 1711, 1712, 1775, 1660, 1653, 1021,
	1609, 1612, 1613, 1614, 1610, 2623, 1611, 1615, 1745, 1746,
	2203, 2204, 1819, 1088, 1245, 129, 2720, 129, 2265, 2264,
	1245, 731, 2261, 2262, 1705, 731, 2261, 2260, 1713, 1714,
	1817, 1845, 1088, 1604, 1088, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 731, 2720, 1135,
	731, 81, 1088, 1498, 1792, 1791, 1569, 1776, 1947, 1836,
	1569, 1088, 1728, 2345, 1761, 1268, 1267, 1757, 477, 1766,
	1246, 2184, 1248, 1781, 2198, 1947, 1246, 84, 1244, 1603,
	1765, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 1499, 1475, 1135, 1739, 1631, 1773, 1244, 1124, 1123,
	1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125,
	1239, 1627, 1135, 1060, 2198, 1604, 1569, 1678, 1604, 1770,
	1059, 1018, 2648, 1019, 1019, 2391, 2551, 1753, 1774, 2278,
	2263, 1845, 2198, 2212, 1738, 1502, 1780, 2084, 1609, 1612,
	1613, 1614, 1610, 1474, 1611, 1615, 1503, 1961, 1640, 1845,
	1787, 428, 1874, 1873, 1412, 1752, 1476, 1651, 1083, 1453,
	1419, 1913, 1915, 1359, 1357, 1236, 1236, 1236, 1236, 1236,
	1250, 1021, 1794, 719, 2818, 1797, 2794, 2211, 2630, 1816,
	2628, 1620, 2434, 1938, 1679, 1824, 2403, 1708, 2241, 1704,
	1841, 1965, 1236, 1822, 1823, 1838, 1839, 1840, 2203, 2204,
	129, 129, 129, 129, 129, 1801, 1025, 1733, 1699, 1698,
	1332, 1008, 129, 1837, 1919, 1717, 129, 1769, 2936, 459,
	129, 2934, 2906, 2276, 2206, 2184, 2022, 129, 1364, 1061,
	1022, 1918, 1017, 1831, 1941, 81, 1949, 1929, 1950, 2209,
	2208, 1926, 1930, 1925, 1380, 1239, 1239, 1239, 1239, 1239,
	1927, 731, 546, 547, 2857, 1928, 2815, 1879, 1948, 1914,
	1931, 1239, 1613, 1614, 2115, 1398, 1821, 708, 1933, 1486,
	2848, 2394, 1239, 1895, 1896, 1897, 1940, 1829, 1828, 1571,
	1101, 1102, 2541, 1851, 1853, 2499, 2419, 2334, 2333, 1979,
	1976, 1978, 2249, 2248, 2247, 1969, 1865, 1866, 1867, 1868,
	2236, 2700, 2703, 2789, 1901, 2788, 1191, 2618, 2838, 1099,
	2616, 1921, 1922, 731, 1924, 129, 2681, 1920, 2680, 1945,
	1923, 1962, 1932, 419, 1407, 2000, 2001, 2111, 731, 731,
	731, 2110, 2007, 2272, 457, 2601, 2602, 2009, 1263, 454,
	2064, 1090, 2014, 1952, 1256, 1540, 1541, 1006, 129, 457,
	1970, 990, 1975, 1091, 987, 1964, 1960, 986, 1553, 1554,
	1555, 1556, 2058, 943, 1331, 457, 2894, 2635, 2634, 1726,
	2389, 1478, 1479, 1568, 1570, 2514, 2509, 1778, 80, 1574,
	1727, 1363, 2481, 2782, 2649, 2620, 457, 1349, 731, 2482,
	2423, 985, 2113, 2114, 457, 2271, 1101, 1102, 1827, 1718,
	96, 2017, 2057, 1469, 1488, 1489, 1826, 2019, 2120, 1079,
	1080, 2893, 2892, 2136, 2028, 731, 731, 2026, 2027, 2891,
	1498, 129, 2579, 1800, 970, 543, 2841, 2840, 2786, 2718,
	2704, 731, 2048, 2651, 2517, 544, 84, 2062, 2717, 2642,
	1947, 2314, 2008, 2080, 2010, 2011, 2012, 2013, 731, 2034,
	2035, 2036, 2938, 2937, 86, 2078, 2077, 2063, 1499, 1891,
	1888, 1798, 477, 1395, 2061, 1104, 2937, 2938, 2661, 2069,
	2246, 1472, 719, 2189, 80, 2067, 1189, 1597, 466, 2094,
	468, 2105, 2106, 55, 2083, 2109, 1471, 2086, 2097, 2102,
	1191, 2088, 2756, 52, 1575, 1576, 2758, 19, 2214, 1,
	2089, 2757, 18, 2218, 2219, 2220, 2759, 20, 1788, 731,
	1436, 731, 2185, 621, 2760, 21, 2755, 15, 2461, 2122,
	2197, 2460, 1919, 2179, 2130, 2467, 2121, 2754, 14, 2283,
	2126, 2124, 2120, 2286, 731, 2748, 10, 2771, 34, 1918,
	1113, 2046, 2188, 2769, 33, 2768, 32, 2477, 2243, 2217,
	2767, 28, 2224, 2766, 27, 731, 1347, 731, 2075, 731,
	1649, 731, 2150, 2151, 2169, 2168, 2081, 2213, 2765, 26,
	2222, 2590, 2190, 2763, 23, 926, 2170, 2171, 1737, 2172,
	2173, 2762, 22, 2174, 2764, 24, 1771, 1012, 2192, 2787,
	2238, 2753, 13, 2239, 2207, 2240, 2750, 12, 2137, 2749,
	11, 2699, 2140, 2141, 2142, 715, 2215, 2145, 2701, 727,
	2747, 9, 2615, 2484, 2445, 2444, 2039, 2038, 129, 454,
	2293, 1007, 2235, 1417, 2237, 2087, 2228, 2090, 2216, 2229,
	1715, 931, 1748, 1810, 2711, 1799, 1062, 1664, 731, 731,
	731, 1654, 721, 92, 2279, 457, 1758, 2254, 1802, 953,
	129, 457, 386, 1661, 1818, 1985, 2702, 1009, 1984, 2273,
	2274, 2275, 1997, 1676, 129, 1713, 457, 1714, 731, 457,
	1721, 1725, 1983, 457, 457, 1982, 457, 2697, 2245, 1986,
	1276, 1274, 1275, 2295, 1273, 1278, 1277, 390, 1258, 2828,
	2359, 1105, 107, 731, 56, 2501, 2101, 129, 731, 462,
	463, 97, 105, 392, 2300, 731, 2323, 1143, 731, 1825,
	1953, 1843, 2302, 706, 1330, 707, 1846, 699, 2513, 1085,
	2724, 1848, 1849, 2820, 1095, 1900, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 2353, 1203, 1864, 1589, 564, 2385,
	1936, 1869, 1870, 1871, 1872, 2301, 2525, 1490, 1876, 1877,
	1878, 2252, 2253, 578, 2318, 1881, 1882, 1883, 2256, 577,
	2338, 2324, 2317, 1889, 576, 2259, 1892, 1893, 573, 574,
	2811, 1898, 1481, 1910, 1097, 1117, 1904, 2266, 1905, 1906,
	1907, 562, 1908, 1909, 553, 1234, 1227, 1777, 1608, 1606,
	129, 1331, 1605, 1365, 695, 2205, 2201, 1618, 1233, 1237,
	70, 1934, 1935, 968, 408, 2386, 2658, 731, 38, 1919,
	467, 548, 2355, 25, 731, 731, 731, 2411, 2412, 2413,
	17, 2398, 977, 1238, 731, 2409, 1918, 16, 1803, 2370,
	924, 80, 42, 44, 2033, 1729, 2827, 731, 2304, 2921,
	2421, 2308, 993, 2436, 2945, 2312, 2313, 2390, 2315, 2862,
	31, 30, 29, 2761, 2770, 2752, 2399, 2751, 2908, 2907,
	4, 2344, 1076, 71, 2382, 2383, 2384, 1880, 2414, 35,
	717, 126, 129, 2, 731, 0, 0, 2410, 0, 0,
	411, 0, 0, 2457, 2458, 2459, 0, 0, 0, 1903,
	2420, 0, 0, 0, 1962, 0, 0, 2424, 0, 0,
	0, 2437, 0, 0, 0, 2428, 0, 2430, 0, 1236,
	457, 0, 0, 0, 696, 0, 2510, 0, 720, 0,
	0, 0, 0, 0, 2495, 2496, 0, 0, 0, 2435,
	2120, 0, 2422, 2497, 0, 2456, 0, 0, 925, 731,
	0, 0, 731, 0, 129, 2512, 0, 0, 731, 939,
	2485, 0, 2189, 731, 2486, 2189, 2546, 2505, 2487, 2511,
	2490, 0, 0, 0, 0, 0, 0, 2523, 2214, 0,
	0, 0, 0, 2483, 2491, 2515, 0, 0, 2498, 0,
	0, 0, 2235, 0, 2569, 0, 1182, 1183, 0, 1239,
	0, 0, 0, 731, 2506, 0, 0, 0, 0, 731,
	0, 0, 2549, 0, 129, 2427, 129, 2575, 0, 2543,
	0, 0, 731, 2529, 0, 0, 0, 2576, 0, 0,
	0, 2188, 0, 0, 2188, 1713, 0, 2542, 2125, 2574,
	731, 0, 0, 0, 2133, 0, 0, 2552, 0, 0,
	2566, 0, 0, 2553, 2548, 0, 2143, 2144, 0, 2558,
	2564, 2565, 2527, 2528, 2545, 0, 2563, 0, 2580, 2152,
	1625, 0, 2554, 2156, 0, 0, 2531, 2532, 2533, 2534,
	2636, 0, 477, 0, 2538, 0, 2581, 0, 0, 0,
	0, 0, 2489, 0, 2593, 0, 0, 0, 0, 2603,
	0, 2608, 0, 0, 0, 0, 0, 2191, 0, 1113,
	731, 0, 0, 0, 2621, 2189, 0, 80, 0, 0,
	731, 2611, 0, 2639, 0, 0, 2626, 2627, 2629, 2640,
	0, 0, 0, 0, 2638, 2633, 0, 2637, 0, 2221,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 731, 2667, 2650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2662,
	0, 2679, 0, 2666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2188, 0, 2380, 0, 0, 2570,
	0, 2571, 0, 0, 1236, 0, 0, 0, 0, 0,
	2669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2181, 0, 941, 0, 0, 2663, 0, 0, 0, 0,
	2136, 0, 0, 0, 0, 715, 457, 0, 0, 129,
	715, 1259, 0, 2707, 731, 2709, 731, 477, 0, 0,
	2719, 2715, 0, 0, 0, 2677, 0, 0, 0, 2708,
	80, 0, 0, 731, 731, 2223, 1014, 2741, 0, 2739,
	2706, 2714, 0, 0, 0, 2722, 2727, 2723, 2675, 1330,
	2721, 0, 2732, 0, 1239, 0, 0, 129, 0, 2705,
	0, 0, 1919, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0, 1918,
	0, 0, 0, 0, 0, 0, 0, 0, 2800, 2785,
	0, 2803, 2799, 2783, 0, 2354, 0, 0, 0, 731,
	2792, 0, 0, 2823, 0, 0, 2802, 2804, 2814, 2801,
	0, 0, 0, 2710, 0, 0, 0, 0, 2667, 0,
	2819, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 2366, 0, 0, 0, 0, 0, 2832, 0, 0,
	0, 0, 2375, 2376, 0, 0, 0, 0, 2381, 1123,
	1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125,
	731, 0, 1135, 2392, 2393, 0, 2395, 0, 0, 2396,
	0, 2849, 0, 2843, 0, 2847, 2844, 0, 2846, 2845,
	731, 2850, 2859, 0, 0, 0, 2856, 1680, 1681, 2408,
	1686, 1687, 1688, 1689, 1690, 2340, 0, 0, 0, 0,
	477, 0, 454, 2877, 731, 0, 551, 2858, 1700, 1701,
	1702, 0, 1333, 0, 0, 0, 80, 0, 1341, 1344,
	2878, 2869, 80, 0, 0, 0, 0, 0, 457, 2897,
	2885, 0, 0, 2895, 0, 2890, 0, 0, 80, 1341,
	1344, 2888, 731, 80, 0, 0, 0, 0, 2918, 2912,
	2899, 2911, 2931, 2910, 0, 2902, 731, 2915, 454, 2930,
	2909, 2935, 2900, 2933, 80, 0, 0, 80, 80, 2939,
	2388, 0, 80, 0, 0, 2897, 0, 1191, 0, 2948,
	0, 0, 0, 2940, 457, 0, 2942, 2400, 2401, 0,
	0, 2402, 80, 2958, 2404, 80, 0, 0, 2966, 2897,
	0, 0, 1191, 2968, 0, 1229, 0, 1241, 0, 0,
	80, 0, 80, 0, 2963, 0, 80, 2897, 0, 2897,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 1437,
	80, 0, 80, 2123, 2897, 2978, 80, 0, 0, 2897,
	0, 2920, 0, 2897, 0, 0, 0, 0, 0, 2982,
	0, 0, 0, 0, 0, 0, 2535, 2536, 2537, 0,
	2539, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 2929, 2379, 1135, 0, 0, 0, 0,
	0, 0, 0, 2131, 2132, 2555, 2556, 2557, 0, 0,
	727, 0, 2138, 2139, 0, 477, 2568, 0, 0, 0,
	0, 0, 0, 477, 2146, 2147, 2148, 2149, 0, 0,
	2951, 2153, 2154, 2155, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 0, 1532, 1537, 1538, 0, 0,
	0, 1542, 0, 1544, 1545, 1546, 1547, 2516, 1549, 2519,
	0, 1552, 0, 0, 1968, 0, 1557, 1558, 1559, 1560,
	1023, 0, 0, 1564, 1565, 1566, 0, 0, 0, 1530,
	0, 1572, 1573, 0, 0, 0, 1579, 1582, 0, 1587,
	0, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1125, 0, 0, 1135, 1561, 1562, 0, 0,
	0, 1595, 0, 1598, 1599, 0, 0, 0, 0, 0,
	0, 2652, 2653, 0, 0, 2654, 2655, 2656, 2657, 715,
	0, 0, 2378, 0, 0, 0, 0, 36, 0, 72,
	39, 40, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 41, 0, 696, 0, 0, 1366, 0, 0, 0,
	0, 0, 0, 0, 715, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 1384, 1385, 1386, 1387, 727, 0,
	0, 727, 727, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2004, 2006, 0, 0, 0, 0, 0, 551,
	0, 0, 0, 2772, 0, 2645, 0, 0, 2984, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 2728, 0, 0, 0, 0, 2733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2356, 0, 1098, 2377, 0, 0, 0, 0, 2358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2361, 2362,
	0, 0, 0, 0, 0, 2796, 0, 2365, 0, 43,
	74, 46, 45, 48, 0, 1465, 0, 0, 2805, 0,
	0, 0, 0, 0, 2773, 0, 0, 0, 0, 0,
	127, 0, 0, 405, 0, 0, 0, 0, 1487, 127,
	49, 77, 76, 0, 0, 0, 0, 47, 0, 1786,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 1191,
	0, 0, 476, 0, 2233, 0, 0, 0, 0, 0,
	552, 0, 0, 698, 716, 1786, 0, 127, 1786, 0,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 0, 0, 1135, 0, 0, 127, 57, 58,
	0, 2774, 0, 0, 727, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 66, 0, 67, 0, 1844,
	0, 0, 0, 0, 0, 2519, 2645, 1850, 2645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 1863,
	0, 0, 68, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	2775, 75, 0, 53, 54, 61, 1899, 62, 1633, 0,
	2824, 2825, 0, 0, 2322, 0, 0, 0, 0, 0,
	0, 1968, 0, 0, 2329, 2331, 0, 0, 0, 0,
	2364, 0, 0, 0, 2322, 1026, 1033, 1034, 1036, 1037,
	1038, 1039, 1040, 0, 1042, 1043, 1044, 0, 1047, 0,
	1050, 1051, 1052, 1053, 1054, 0, 0, 715, 0, 0,
	0, 0, 0, 2255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2969, 2970, 1124, 1123, 1133,
	1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0,
	0, 1135, 0, 715, 0, 0, 0, 0, 0, 73,
	0, 1842, 2889, 1298, 0, 0, 0, 0, 0, 727,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 1743, 1744, 477, 0, 0, 0, 0, 1751, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 2870, 1135, 2177, 2363, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1014, 0, 2967, 2037, 2041, 2045, 0,
	0, 127, 1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1125, 1285, 2176, 1135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2367, 2368, 0, 2369,
	0, 0, 2371, 0, 2373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 2175, 0, 0, 0, 0, 2076, 0, 2322, 1124,
	1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1125, 0, 0, 1135, 0, 0, 0, 0, 2322, 0,
	0, 0, 0, 727, 727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 476, 0, 0, 727,
	2417, 2418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 0, 0, 0, 0, 2134, 0, 0, 0,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 0, 0, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 477, 0, 477,
	0, 0, 0, 0, 0, 2233, 1124, 1123, 1133, 1134,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 0,
	1135, 0, 0, 2233, 0, 715, 1119, 727, 1122, 2196,
	0, 0, 0, 0, 0, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 0, 1120, 1121, 1118, 0, 0, 0, 0,
	0, 0, 2196, 1124, 1123, 1133, 1134, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1125, 0, 0, 1135, 0, 0,
	0, 0, 0, 727, 0, 727, 0, 727, 0, 2232,
	1312, 1315, 1316, 1317, 1318, 1319, 1320, 0, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 0, 1300, 1301, 1302,
	1303, 1279, 1283, 1313, 1280, 1286, 1282, 1284, 1281, 0,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 0,
	1124, 1123, 1133, 1134, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1125, 0, 2025, 1135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2280, 2281, 2282, 0,
	0, 0, 0, 0, 127, 127, 127, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 2056, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 2307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2332, 0, 0, 0, 0, 2337, 2233, 1314, 2233,
	0, 0, 0, 2341, 0, 0, 2342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2116,
	0, 0, 0, 0, 0, 0, 0, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 41, 0, 0, 1435, 0, 0, 1438, 1439,
	1440, 0, 1442, 1443, 0, 0, 1444, 0, 0, 0,
	0, 0, 1445, 0, 0, 0, 1446, 1447, 0, 1448,
	1449, 0, 715, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 2406, 0, 0, 0, 0,
	0, 0, 2406, 2406, 2406, 0, 0, 0, 0, 0,
	0, 0, 727, 0, 2772, 0, 0, 0, 0, 2980,
	0, 0, 0, 0, 0, 2406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 2233, 0, 0, 0, 1342, 1345, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 127, 0, 0, 1342, 1345,
	0, 0, 0, 1375, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 127, 127, 127, 127, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2773, 2269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 727, 0, 0,
	2406, 49, 77, 76, 0, 0, 2522, 0, 47, 0,
	0, 727, 0, 0, 0, 0, 0, 0, 2299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2547, 0, 0, 0, 0, 0, 2406, 0, 57,
	58, 0, 2774, 0, 0, 2336, 0, 0, 0, 0,
	2232, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2232, 0,
	0, 0, 0, 0, 127, 0, 476, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1375, 0,
	0, 2775, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2406, 0,
	1536, 1536, 1536, 0, 0, 0, 1536, 1536, 1536, 1536,
	1536, 1536, 1536, 1536, 0, 0, 1536, 0, 0, 0,
	0, 1536, 1536, 1536, 1536, 0, 0, 0, 1536, 1536,
	1536, 0, 0, 0, 0, 2665, 1536, 1536, 0, 0,
	0, 1536, 1536, 0, 1536, 0, 0, 0, 716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 1536, 1536, 1536, 1536,
	2443, 127, 1793, 0, 0, 0, 0, 0, 0, 127,
	0, 476, 0, 0, 0, 0, 127, 127, 0, 0,
	127, 1636, 1375, 716, 0, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1375, 0, 79,
	0, 0, 2232, 0, 2232, 0, 2326, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 2522, 2522, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 2798, 0, 0,
	127, 127, 0, 0, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 539, 0, 1762, 1763, 127, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 497, 480, 0, 0, 0, 0, 0, 727, 0,
	0, 501, 127, 0, 476, 0, 0, 0, 0, 0,
	526, 0, 0, 492, 0, 487, 0, 0, 2232, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	504, 502, 0, 1375, 0, 505, 0, 0, 0, 0,
	0, 513, 481, 0, 517, 0, 0, 0, 0, 0,
	2882, 0, 479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 727, 0, 495, 519, 0, 0,
	0, 0, 0, 0, 493, 494, 496, 523, 0, 525,
	531, 0, 0, 0, 1536, 0, 0, 0, 0, 0,
	0, 0, 1536, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 1536, 1536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1536, 2319, 0, 0,
	1536, 2321, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1536, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 482, 0, 0, 716, 127, 127, 127,
	127, 127, 503, 0, 499, 0, 0, 0, 0, 476,
	0, 0, 0, 127, 0, 2735, 0, 476, 0, 0,
	0, 0, 1536, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 533, 0, 0, 0, 0, 483,
	484, 485, 486, 488, 506, 507, 511, 512, 529, 528,
	527, 530, 534, 537, 536, 538, 489, 490, 498, 508,
	509, 510, 514, 515, 524, 520, 522, 0, 0, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 127, 0, 0, 526, 0, 0, 492, 0,
	487, 0, 0, 521, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 516, 518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 513, 481, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 519, 0, 0, 0, 0, 0, 0, 493,
	494, 496, 523, 0, 525, 531, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1536,
	0, 0, 0, 0, 0, 0, 0, 0, 1536, 0,
	1375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 1966, 0, 0, 503, 0, 0,
	0, 0, 0, 540, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 532, 533,
	0, 0, 0, 0, 483, 484, 485, 486, 488, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 489, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 539, 0, 0, 127, 0, 0, 521, 0,
	0, 1271, 0, 0, 0, 0, 0, 0, 0, 497,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 516, 518, 0, 0, 0, 0, 127, 526, 0,
	0, 492, 0, 487, 0, 0, 0, 0, 0, 0,
	500, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 127, 0, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 0, 0, 0, 0, 513,
	481, 552, 517, 0, 0, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 519, 0, 0, 0, 0,
	0, 0, 493, 494, 496, 523, 0, 525, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 476, 0, 0,
	0, 716, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 532, 533, 1299, 0, 0, 0, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1378,
	0, 476, 0, 476, 0, 0, 0, 0, 1312, 1315,
	1316, 1317, 1318, 1319, 1320, 0, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 0, 1300, 1301, 1302, 1303, 1279,
	1283, 1313, 1280, 1286, 1282, 1284, 1281, 0, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 0,
	0, 0, 0, 0, 552, 887, 862, 339, 807, 890,
	764, 790, 905, 795, 799, 842, 748, 820, 265, 786,
	749, 0, 768, 738, 778, 739, 765, 809, 182, 763,
	864, 823, 889, 221, 837, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 888, 815, 1314, 897, 224, 0,
	832, 898, 326, 249, 0, 0, 811, 874, 818, 860,
	806, 844, 757, 831, 892, 787, 839, 893, 0, 0,
	0, 0, 2826, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 835, 886, 781, 838, 841, 736, 834,
	0, 743, 750, 904, 881, 771, 772, 773, 0, 0,
	0, 0, 0, 0, 0, 810, 819, 854, 803, 359,
	276, 293, 314, 797, 284, 784, 127, 0, 0, 0,
	0, 0, 0, 0, 769, 0, 829, 0, 0, 0,
	751, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 756, 735,
	770, 856, 0, 733, 250, 148, 861, 880, 805, 212,
	902, 884, 802, 801, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 853, 308, 783, 734, 865,
	766, 779, 172, 775, 300, 269, 358, 788, 826, 299,
	225, 348, 849, 885, 357, 792, 868, 367, 372, 774,
	816, 754, 323, 184, 180, 183, 0, 137, 785, 283,
	177, 217, 804, 843, 767, 168, 851, 830, 867, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 2829, 2830, 2831, 798, 789, 0, 0,
	363, 800, 311, 310, 794, 207, 859, 833, 740, 292,
	846, 213, 136, 336, 375, 154, 219, 341, 732, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 780, 848, 858, 290, 313, 343, 156, 330,
	776, 777, 782, 855, 302, 866, 878, 891, 232, 187,
	190, 201, 208, 840, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 741,
	0, 328, 361, 377, 158, 762, 316, 342, 791, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 760, 761,
	758, 0, 759, 821, 822, 894, 895, 896, 857, 753,
	0, 875, 876, 0, 0, 0, 0, 0, 863, 882,
	883, 845, 906, 796, 169, 742, 745, 746, 747, 755,
	812, 813, 825, 828, 871, 870, 869, 872, 877, 900,
	899, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 133, 144, 223, 907, 291, 193,
	362, 737, 179, 0, 814, 817, 827, 852, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 850,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 879, 0, 793, 135,
	873, 903, 836, 847, 887, 862, 339, 807, 890, 764,
	790, 905, 795, 799, 842, 748, 820, 265, 786, 749,
	0, 768, 738, 778, 739, 765, 809, 182, 763, 864,
	823, 889, 221, 837, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 888, 815, 0, 897, 224, 0, 832,
	898, 326, 249, 0, 0, 811, 874, 818, 860, 806,
	844, 757, 831, 892, 787, 839, 893, 0, 0, 0,
	0, 730, 0, 1658, 1659, 0, 0, 0, 0, 0,
	752, 0, 835, 886, 781, 838, 841, 736, 834, 0,
	743, 750, 904, 881, 771, 772, 773, 1963, 0, 0,
	0, 0, 0, 0, 810, 819, 854, 803, 359, 276,
	293, 314, 797, 284, 784, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 829, 0, 0, 0, 751,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 0, 756, 735, 770,
	856, 0, 733, 250, 148, 861, 880, 805, 212, 902,
	884, 802, 801, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 853, 308, 783, 734, 865, 766,
	779, 172, 775, 300, 269, 358, 788, 826, 299, 225,
	348, 849, 885, 357, 792, 868, 367, 372, 774, 816,
	754, 323, 184, 180, 183, 0, 137, 785, 283, 177,
	217, 804, 843, 767, 168, 851, 830, 867, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 798, 789, 0, 0, 363,
	800, 311, 310, 794, 207, 859, 833, 740, 292, 846,
	213, 136, 336, 375, 154, 219, 341, 732, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 780, 848, 858, 290, 313, 343, 156, 330, 776,
	777, 782, 855, 302, 866, 878, 891, 232, 187, 190,
	201, 208, 840, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 741, 0,
	328, 361, 377, 158, 762, 316, 342, 791, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 760, 761, 758,
	0, 759, 821, 822, 894, 895, 896, 857, 753, 0,
	875, 876, 0, 0, 0, 0, 0, 863, 882, 883,
	845, 906, 796, 169, 742, 745, 746, 747, 755, 812,
	813, 825, 828, 871, 870, 869, 872, 877, 900, 899,
	901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 133, 144, 223, 907, 291, 193, 362,
	737, 179, 0, 814, 817, 827, 852, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 850, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 879, 0, 793, 135, 873,
	903, 836, 847, 887, 862, 339, 807, 890, 764, 790,
	905, 795, 799, 842, 748, 820, 265, 786, 749, 0,
	768, 738, 778, 739, 765, 809, 182, 763, 864, 823,
	889, 221, 837, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 888, 815, 0, 897, 224, 0, 832, 898,
	326, 249, 0, 0, 811, 874, 818, 860, 806, 844,
	757, 831, 892, 787, 839, 893, 0, 0, 0, 0,
	730, 0, 1658, 1659, 0, 0, 0, 0, 0, 752,
	0, 835, 886, 781, 838, 841, 736, 834, 0, 743,
	750, 904, 881, 771, 772, 773, 0, 0, 0, 0,
	0, 0, 0, 810, 819, 854, 803, 359, 276, 293,
	314, 797, 284, 784, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 0, 829, 0, 0, 0, 751, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 756, 735, 770, 856,
	0, 733, 250, 148, 861, 880, 805, 212, 902, 884,
	802, 801, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 853, 308, 783, 734, 865, 766, 779,
	172, 775, 300, 269, 358, 788, 826, 299, 225, 348,
	849, 885, 357, 792, 868, 367, 372, 774, 816, 754,
	323, 184, 180, 183, 0, 137, 785, 283, 177, 217,
	804, 843, 767, 168, 851, 830, 867, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 798, 789, 0, 0, 363, 800,
	311, 310, 794, 207, 859, 833, 740, 292, 846, 213,
	136, 336, 375, 154, 219, 341, 732, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	780, 848, 858, 290, 313, 343, 156, 330, 776, 777,
	782, 855, 302, 866, 878, 891, 232, 187, 190, 201,
	208, 840, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 741, 0, 328,
	361, 377, 158, 762, 316, 342, 791, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 760, 761, 758, 0,
	759, 821, 822, 894, 895, 896, 857, 753, 0, 875,
	876, 0, 0, 0, 0, 0, 863, 882, 883, 845,
	906, 796, 169, 742, 745, 746, 747, 755, 812, 813,
	825, 828, 871, 870, 869, 872, 877, 900, 899, 901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 133, 144, 223, 907, 291, 193, 362, 737,
	179, 0, 814, 817, 827, 852, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 850, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 879, 0, 793, 135, 873, 903,
	836, 847, 887, 2193, 339, 807, 890, 764, 790, 905,
	795, 799, 842, 748, 820, 265, 786, 749, 0, 768,
	738, 778, 739, 765, 809, 182, 763, 864, 823, 889,
	221, 837, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 888, 815, 0, 897, 224, 0, 832, 898, 326,
	249, 0, 0, 811, 874, 818, 860, 806, 844, 757,
	831, 892, 787, 839, 893, 81, 0, 1088, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 0,
	835, 886, 781, 838, 841, 736, 834, 0, 743, 750,
	904, 881, 771, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 810, 819, 854, 803, 359, 276, 293, 314,
	797, 284, 784, 0, 0, 0, 0, 0, 0, 0,
	0, 769, 0, 829, 0, 0, 0, 751, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 756, 735, 770, 856, 0,
	733, 250, 148, 861, 880, 805, 212, 902, 884, 802,
	801, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 853, 308, 783, 734, 865, 766, 779, 172,
	775, 300, 269, 358, 788, 826, 299, 225, 348, 849,
	885, 357, 792, 868, 367, 372, 774, 816, 754, 323,
	184, 180, 183, 0, 137, 785, 283, 177, 217, 804,
	843, 767, 168, 851, 830, 867, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 798, 789, 0, 0, 363, 800, 311,
	310, 794, 207, 859, 833, 740, 292, 846, 213, 136,
	336, 375, 154, 219, 341, 732, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 780,
	848, 858, 290, 313, 343, 156, 330, 776, 777, 782,
	855, 302, 866, 878, 891, 232, 187, 190, 201, 208,
	840, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 741, 0, 328, 361,
	377, 158, 762, 316, 342, 791, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 760, 761, 758, 0, 759,
	821, 822, 894, 895, 896, 857, 753, 0, 875, 876,
	0, 0, 0, 0, 0, 863, 882, 883, 845, 906,
	796, 169, 742, 745, 746, 747, 755, 812, 813, 825,
	828, 871, 870, 869, 872, 877, 900, 899, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	824, 133, 144, 223, 2194, 291, 193, 362, 737, 179,
	0, 814, 817, 827, 852, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 850, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 879, 0, 793, 135, 873, 903, 836,
	847, 887, 862, 339, 807, 890, 764, 790, 905, 795,
	799, 842, 748, 820, 265, 786, 749, 0, 768, 738,
	778, 739, 765, 809, 182, 763, 864, 823, 889, 221,
	837, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	888, 815, 0, 897, 224, 0, 832, 898, 326, 249,
	0, 0, 811, 874, 818, 860, 806, 844, 757, 831,
	892, 787, 839, 893, 0, 0, 0, 0, 730, 0,
	0, 0, 0, 0, 0, 0, 0, 752, 0, 835,
	886, 781, 838, 841, 736, 834, 0, 743, 750, 904,
	881, 771, 772, 773, 0, 0, 0, 0, 0, 0,
	0, 810, 819, 854, 803, 359, 276, 293, 314, 797,
	284, 784, 0, 0, 0, 0, 0, 0, 2524, 0,
	769, 0, 829, 0, 0, 0, 751, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	808, 0, 0, 0, 756, 735, 770, 856, 0, 733,
	250, 148, 861, 880, 805, 212, 902, 884, 802, 801,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 853, 308, 783, 734, 865, 766, 779, 172, 775,
	300, 269, 358, 788, 826, 299, 225, 348, 849, 885,
	357, 792, 868, 367, 372, 774, 816, 754, 323, 184,
	180, 183, 0, 137, 785, 283, 177, 217, 804, 843,
	767, 168, 851, 830, 867, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 798, 789, 0, 0, 363, 800, 311, 310,
	794, 207, 859, 833, 740, 292, 846, 213, 136, 336,
	375, 154, 219, 341, 732, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 780, 848,
	858, 290, 313, 343, 156, 330, 776, 777, 782, 855,
	302, 866, 878, 891, 232, 187, 190, 201, 208, 840,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 741, 0, 328, 361, 377,
	158, 762, 316, 342, 791, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 760, 761, 758, 0, 759, 821,
	822, 894, 895, 896, 857, 753, 0, 875, 876, 0,
	0, 0, 0, 0, 863, 882, 883, 845, 906, 796,
	169, 742, 745, 746, 747, 755, 812, 813, 825, 828,
	871, 870, 869, 872, 877, 900, 899, 901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	133, 144, 223, 907, 291, 193, 362, 737, 179, 0,
	814, 817, 827, 852, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 850, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 879, 0, 793, 135, 873, 903, 836, 847,
	887, 862, 339, 807, 890, 764, 790, 905, 795, 799,
	842, 748, 820, 265, 786, 749, 0, 768, 738, 778,
	739, 765, 809, 182, 763, 864, 823, 889, 221, 837,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 888,
	815, 0, 897, 224, 0, 832, 898, 326, 249, 0,
	0, 811, 874, 818, 860, 806, 844, 757, 831, 892,
	787, 839, 893, 0, 0, 0, 0, 557, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 835, 886,
	781, 838, 841, 736, 834, 0, 743, 750, 904, 881,
	771, 772, 773, 0, 0, 0, 0, 0, 0, 0,
	810, 819, 854, 803, 359, 276, 293, 314, 797, 284,
	784, 0, 0, 0, 0, 0, 0, 2129, 0, 769,
	0, 829, 0, 0, 0, 751, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 756, 735, 770, 856, 0, 733, 250,
	148, 861, 880, 805, 212, 902, 884, 802, 801, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	853, 308, 783, 734, 865, 766, 779, 172, 775, 300,
	269, 358, 788, 826, 299, 225, 348, 849, 885, 357,
	792, 868, 367, 372, 774, 816, 754, 323, 184, 180,
	183, 0, 137, 785, 283, 177, 217, 804, 843, 767,
	168, 851, 830, 867, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 798, 789, 0, 0, 363, 800, 311, 310, 794,
	207, 859, 833, 740, 292, 846, 213, 136, 336, 375,
	154, 219, 341, 732, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 780, 848, 858,
	290, 313, 343, 156, 330, 776, 777, 782, 855, 302,
	866, 878, 891, 232, 187, 190, 201, 208, 840, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 741, 0, 328, 361, 377, 158,
	762, 316, 342, 791, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 760, 761, 758, 0, 759, 821, 822,
	894, 895, 896, 857, 753, 0, 875, 876, 0, 0,
	0, 0, 0, 863, 882, 883, 845, 906, 796, 169,
	742, 745, 746, 747, 755, 812, 813, 825, 828, 871,
	870, 869, 872, 877, 900, 899, 901, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 824, 133,
	144, 223, 907, 291, 193, 362, 737, 179, 0, 814,
	817, 827, 852, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 850, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 879, 0, 793, 135, 873, 903, 836, 847, 887,
	862, 339, 807, 890, 764, 790, 905, 795, 799, 842,
	748, 820, 265, 786, 749, 0, 768, 738, 778, 739,
	765, 809, 182, 763, 864, 823, 889, 221, 837, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 888, 815,
	0, 897, 224, 0, 832, 898, 326, 249, 0, 0,
	811, 874, 818, 860, 806, 844, 757, 831, 892, 787,
	839, 893, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 0, 0, 0, 0, 752, 0, 835, 886, 781,
	838, 841, 736, 834, 0, 743, 750, 904, 881, 771,
	772, 773, 0, 0, 0, 0, 0, 0, 0, 810,
	819, 854, 803, 359, 276, 293, 314, 797, 284, 784,
	0, 0, 0, 0, 0, 0, 2119, 0, 769, 0,
	829, 0, 0, 0, 751, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 808, 0,
	0, 0, 756, 735, 770, 856, 0, 733, 250, 148,
	861, 880, 805, 212, 902, 884, 802, 801, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 853,
	308, 783, 734, 865, 766, 779, 172, 775, 300, 269,
	358, 788, 826, 299, 225, 348, 849, 885, 357, 792,
	868, 367, 372, 774, 816, 754, 323, 184, 180, 183,
	0, 137, 785, 283, 177, 217, 804, 843, 767, 168,
	851, 830, 867, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	798, 789, 0, 0, 363, 800, 311, 310, 794, 207,
	859, 833, 740, 292, 846, 213, 136, 336, 375, 154,
	219, 341, 732, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 780, 848, 858, 290,
	313, 343, 156, 330, 776, 777, 782, 855, 302, 866,
	878, 891, 232, 187, 190, 201, 208, 840, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 741, 0, 328, 361, 377, 158, 762,
	316, 342, 791, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 760, 761, 758, 0, 759, 821, 822, 894,
	895, 896, 857, 753, 0, 875, 876, 0, 0, 0,
	0, 0, 863, 882, 883, 845, 906, 796, 169, 742,
	745, 746, 747, 755, 812, 813, 825, 828, 871, 870,
	869, 872, 877, 900, 899, 901, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 824, 133, 144,
	223, 907, 291, 193, 362, 737, 179, 0, 814, 817,
	827, 852, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 850, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	879, 0, 793, 135, 873, 903, 836, 847, 887, 862,
	339, 807, 890, 764, 790, 905, 795, 799, 842, 748,
	820, 265, 786, 749, 0, 768, 738, 778, 739, 765,
	809, 182, 763, 864, 823, 889, 221, 837, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 888, 815, 0,
	897, 224, 0, 832, 898, 326, 249, 0, 0, 811,
	874, 818, 860, 806, 844, 757, 831, 892, 787, 839,
	893, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 0, 835, 886, 781, 838,
	841, 736, 834, 0, 743, 750, 904, 881, 771, 772,
	773, 0, 0, 0, 0, 0, 0, 0, 810, 819,
	854, 803, 359, 276, 293, 314, 797, 284, 784, 0,
	0, 0, 0, 0, 0, 1637, 0, 769, 0, 829,
	0, 0, 0, 751, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 808, 0, 0,
	0, 756, 735, 770, 856, 0, 733, 250, 148, 861,
	880, 805, 212, 902, 884, 802, 801, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 853, 308,
	783, 734, 865, 766, 779, 172, 775, 300, 269, 358,
	788, 826, 299, 225, 348, 849, 885, 357, 792, 868,
	367, 372, 774, 816, 754, 323, 184, 180, 183, 0,
	137, 785, 283, 177, 217, 804, 843, 767, 168, 851,
	830, 867, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 798,
	789, 0, 0, 363, 800, 311, 310, 794, 207, 859,
	833, 740, 292, 846, 213, 136, 336, 375, 154, 219,
	341, 732, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 780, 848, 858, 290, 313,
	343, 156, 330, 776, 777, 782, 855, 302, 866, 878,
	891, 232, 187, 190, 201, 208, 840, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 741, 0, 328, 361, 377, 158, 762, 316,
	342, 791, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 760, 761, 758, 0, 759, 821, 822, 894, 895,
	896, 857, 753, 0, 875, 876, 0, 0, 0, 0,
	0, 863, 882, 883, 845, 906, 796, 169, 742, 745,
	746, 747, 755, 812, 813, 825, 828, 871, 870, 869,
	872, 877, 900, 899, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 133, 144, 223,
	907, 291, 193, 362, 737, 179, 0, 814, 817, 827,
	852, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 850, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 879,
	0, 793, 135, 873, 903, 836, 847, 887, 862, 339,
	807, 890, 764, 790, 905, 795, 799, 842, 748, 820,
	265, 786, 749, 0, 768, 738, 778, 739, 765, 809,
	182, 763, 864, 823, 889, 221, 837, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 888, 815, 0, 897,
	224, 0, 832, 898, 326, 249, 0, 0, 811, 874,
	818, 860, 806, 844, 757, 831, 892, 787, 839, 893,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 752, 0, 835, 886, 781, 838, 841,
	736, 834, 0, 743, 750, 904, 881, 771, 772, 773,
	0, 0, 0, 0, 0, 0, 0, 810, 819, 854,
	803, 359, 276, 293, 314, 797, 284, 784, 0, 0,
	0, 0, 0, 0, 1496, 0, 769, 0, 829, 0,
	0, 0, 751, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	756, 735, 770, 856, 0, 733, 250, 148, 861, 880,
	805, 212, 902, 884, 802, 801, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 853, 308, 783,
	734, 865, 766, 779, 172, 775, 300, 269, 358, 788,
	826, 299, 225, 348, 849, 885, 357, 792, 868, 367,
	372, 774, 816, 754, 323, 184, 180, 183, 0, 137,
	785, 283, 177, 217, 804, 843, 767, 168, 851, 830,
	867, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 798, 789,
	0, 0, 363, 800, 311, 310, 794, 207, 859, 833,
	740, 292, 846, 213, 136, 336, 375, 154, 219, 341,
	732, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 780, 848, 858, 290, 313, 343,
	156, 330, 776, 777, 782, 855, 302, 866, 878, 891,
	232, 187, 190, 201, 208, 840, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 741, 0, 328, 361, 377, 158, 762, 316, 342,
	791, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	760, 761, 758, 0, 759, 821, 822, 894, 895, 896,
	857, 753, 0, 875, 876, 0, 0, 0, 0, 0,
	863, 882, 883, 845, 906, 796, 169, 742, 745, 746,
	747, 755, 812, 813, 825, 828, 871, 870, 869, 872,
	877, 900, 899, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 824, 133, 144, 223, 907,
	291, 193, 362, 737, 179, 0, 814, 817, 827, 852,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 850, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 879, 0,
	793, 135, 873, 903, 836, 847, 887, 862, 339, 807,
	890, 764, 790, 905, 795, 799, 842, 748, 820, 265,
	786, 749, 0, 768, 738, 778, 739, 765, 809, 182,
	763, 864, 823, 889, 221, 837, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 888, 815, 0, 897, 224,
	0, 832, 898, 326, 249, 0, 0, 811, 874, 818,
	860, 806, 844, 757, 831, 892, 787, 839, 893, 0,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 0, 835, 886, 781, 838, 841, 736,
	834, 0, 743, 750, 904, 881, 771, 772, 773, 0,
	0, 0, 0, 0, 0, 0, 810, 819, 854, 803,
	359, 276, 293, 314, 797, 284, 784, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 829, 0, 0,
	0, 751, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 756,
	735, 770, 856, 0, 733, 250, 148, 861, 880, 805,
	212, 902, 884, 802, 801, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 853, 308, 783, 734,
	865, 766, 779, 172, 775, 300, 269, 358, 788, 826,
	299, 225, 348, 849, 885, 357, 792, 868, 367, 372,
	774, 816, 754, 323, 184, 180, 183, 0, 137, 785,
	283, 177, 217, 804, 843, 767, 168, 851, 830, 867,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 798, 789, 0,
	0, 363, 800, 311, 310, 794, 207, 859, 833, 740,
	292, 846, 213, 136, 336, 375, 154, 219, 341, 732,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 780, 848, 858, 290, 313, 343, 156,
	330, 776, 777, 782, 855, 302, 866, 878, 891, 232,
	187, 190, 201, 208, 840, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	741, 0, 328, 361, 377, 158, 762, 316, 342, 791,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 760,
	761, 758, 0, 759, 821, 822, 894, 895, 896, 857,
	753, 0, 875, 876, 0, 0, 0, 0, 0, 863,
	882, 883, 845, 906, 796, 169, 742, 745, 746, 747,
	755, 812, 813, 825, 828, 871, 870, 869, 872, 877,
	900, 899, 901, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 824, 133, 144, 223, 907, 291,
	193, 362, 737, 179, 0, 814, 817, 827, 852, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	850, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 879, 0, 793,
	135, 873, 903, 836, 847, 887, 862, 339, 807, 890,
	764, 790, 905, 795, 799, 842, 748, 820, 265, 786,
	749, 0, 768, 738, 778, 739, 765, 809, 182, 763,
	864, 823, 889, 221, 837, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 888, 815, 0, 897, 224, 0,
	832, 898, 326, 249, 0, 0, 811, 874, 818, 860,
	806, 844, 757, 831, 892, 787, 839, 893, 0, 0,
	0, 0, 557, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 835, 886, 781, 838, 841, 736, 834,
	0, 743, 750, 904, 881, 771, 772, 773, 0, 0,
	0, 0, 0, 0, 0, 810, 819, 854, 803, 359,
	276, 293, 314, 797, 284, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 0, 829, 0, 0, 0,
	751, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 0, 756, 735,
	770, 856, 0, 733, 250, 148, 861, 880, 805, 212,
	902, 884, 802, 801, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 853, 308, 783, 734, 865,
	766, 779, 172, 775, 300, 269, 358, 788, 826, 299,
	225, 348, 849, 885, 357, 792, 868, 367, 372, 774,
	816, 754, 323, 184, 180, 183, 0, 137, 785, 283,
	177, 217, 804, 843, 767, 168, 851, 830, 867, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 798, 789, 0, 0,
	363, 800, 311, 310, 794, 207, 859, 833, 740, 292,
	846, 213, 136, 336, 375, 154, 219, 341, 732, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 780, 848, 858, 290, 313, 343, 156, 330,
	776, 777, 782, 855, 302, 866, 878, 891, 232, 187,
	190, 201, 208, 840, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 741,
	0, 328, 361, 377, 158, 762, 316, 342, 791, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 760, 761,
	758, 0, 759, 821, 822, 894, 895, 896, 857, 753,
	0, 875, 876, 0, 0, 0, 0, 0, 863, 882,
	883, 845, 906, 796, 169, 742, 745, 746, 747, 755,
	812, 813, 825, 828, 871, 870, 869, 872, 877, 900,
	899, 901, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 824, 133, 144, 223, 907, 291, 193,
	362, 737, 179, 0, 814, 817, 827, 852, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 850,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 879, 0, 793, 135,
	873, 903, 836, 847, 887, 862, 339, 807, 890, 764,
	790, 905, 795, 799, 842, 748, 820, 265, 786, 749,
	0, 768, 738, 778, 739, 765, 809, 182, 763, 864,
	823, 889, 221, 837, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 1670, 1674, 0, 897, 224, 0, 832,
	898, 326, 249, 0, 0, 811, 874, 818, 860, 806,
	844, 757, 831, 892, 787, 839, 893, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	752, 0, 835, 886, 781, 838, 841, 736, 834, 0,
	743, 750, 904, 881, 771, 772, 773, 0, 0, 0,
	0, 0, 0, 0, 810, 819, 854, 803, 359, 276,
	293, 314, 797, 284, 784, 0, 0, 0, 0, 0,
	0, 0, 0, 769, 0, 829, 0, 0, 0, 751,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 0, 756, 735, 770,
	856, 0, 733, 250, 148, 861, 880, 1673, 212, 902,
	884, 802, 801, 1667, 0, 1668, 1669, 222, 729, 130,
	146, 1665, 1672, 261, 853, 308, 783, 734, 865, 766,
	779, 172, 775, 300, 269, 358, 788, 826, 299, 225,
	348, 849, 885, 357, 792, 868, 367, 372, 774, 816,
	754, 323, 184, 180, 183, 0, 137, 785, 283, 177,
	217, 804, 843, 767, 168, 851, 830, 867, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 798, 789, 0, 0, 363,
	800, 311, 310, 794, 207, 859, 833, 740, 292, 846,
	213, 136, 336, 375, 154, 219, 341, 732, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 780, 848, 858, 290, 313, 343, 156, 330, 776,
	777, 782, 855, 302, 866, 878, 891, 232, 187, 190,
	201, 208, 840, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 741, 0,
	328, 361, 377, 158, 762, 316, 342, 791, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 760, 761, 758,
	0, 759, 821, 822, 894, 895, 896, 857, 753, 0,
	875, 876, 0, 0, 0, 0, 0, 863, 882, 883,
	845, 906, 796, 169, 742, 745, 746, 747, 755, 812,
	813, 825, 828, 871, 870, 869, 872, 877, 900, 899,
	901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 824, 133, 144, 223, 907, 291, 193, 362,
	737, 179, 0, 814, 817, 827, 852, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 850, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 879, 0, 793, 135, 873,
	903, 836, 847, 887, 862, 339, 807, 890, 764, 790,
	905, 795, 799, 842, 748, 820, 265, 786, 749, 0,
	768, 738, 778, 739, 765, 809, 182, 763, 864, 823,
	889, 221, 837, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 888, 815, 0, 897, 224, 0, 832, 898,
	326, 249, 0, 0, 811, 874, 818, 860, 806, 844,
	757, 831, 892, 787, 839, 893, 0, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 752,
	0, 835, 886, 781, 838, 841, 736, 834, 0, 743,
	750, 904, 881, 771, 772, 773, 0, 0, 0, 0,
	0, 0, 0, 810, 819, 854, 803, 359, 276, 293,
	314, 797, 284, 784, 0, 0, 0, 0, 0, 0,
	0, 0, 769, 0, 829, 0, 0, 0, 751, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 0, 0, 0, 756, 735, 770, 856,
	0, 733, 250, 148, 861, 880, 805, 212, 902, 884,
	802, 801, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 853, 308, 783, 734, 865, 766, 779,
	172, 775, 300, 269, 358, 788, 826, 299, 225, 348,
	849, 885, 357, 792, 868, 367, 372, 774, 816, 754,
	323, 184, 180, 183, 0, 137, 785, 283, 177, 217,
	804, 843, 767, 168, 851, 830, 867, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 798, 789, 0, 0, 363, 800,
	311, 310, 794, 207, 859, 833, 740, 292, 846, 213,
	136, 336, 375, 154, 219, 341, 732, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	780, 848, 858, 290, 313, 343, 156, 330, 776, 777,
	782, 855, 302, 866, 878, 891, 232, 187, 190, 201,
	208, 840, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 741, 0, 328,
	361, 377, 158, 762, 316, 342, 791, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 760, 761, 758, 0,
	759, 821, 822, 894, 895, 896, 857, 753, 0, 875,
	876, 0, 0, 0, 0, 0, 863, 882, 883, 845,
	906, 796, 169, 742, 745, 746, 747, 755, 812, 813,
	825, 828, 871, 870, 869, 872, 877, 900, 899, 901,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 824, 133, 144, 223, 907, 291, 193, 362, 737,
	179, 0, 814, 817, 827, 852, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 850, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 879, 0, 793, 135, 873, 903,
	836, 847, 887, 862, 339, 807, 890, 764, 790, 905,
	795, 799, 842, 748, 820, 265, 786, 749, 0, 768,
	738, 778, 739, 765, 809, 182, 763, 864, 823, 889,
	221, 837, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 888, 815, 0, 897, 224, 0, 832, 898, 326,
	249, 0, 0, 811, 874, 818, 860, 806, 844, 757,
	831, 892, 787, 839, 893, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 0,
	835, 886, 781, 838, 841, 736, 834, 0, 743, 750,
	904, 881, 771, 772, 773, 0, 0, 0, 0, 0,
	0, 0, 810, 819, 854, 803, 359, 276, 293, 314,
	797, 284, 784, 0, 0, 0, 0, 0, 0, 0,
	0, 769, 0, 829, 0, 0, 0, 751, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 756, 735, 770, 856, 0,
	733, 250, 148, 861, 880, 805, 212, 902, 884, 802,
	801, 286, 0, 333, 200, 222, 729, 130, 146, 725,
	199, 261, 853, 308, 783, 734, 865, 766, 779, 172,
	775, 300, 269, 358, 788, 826, 299, 225, 348, 849,
	885, 357, 792, 868, 367, 372, 774, 816, 754, 323,
	184, 180, 183, 0, 137, 785, 283, 177, 217, 804,
	843, 767, 168, 851, 830, 867, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 798, 789, 0, 0, 363, 800, 311,
	310, 794, 207, 859, 833, 740, 292, 846, 213, 136,
	336, 375, 154, 219, 341, 732, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 780,
	848, 858, 290, 313, 343, 156, 330, 776, 777, 782,
	855, 302, 866, 878, 891, 232, 187, 190, 201, 208,
	840, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 741, 0, 328, 361,
	377, 158, 762, 316, 342, 791, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 760, 761, 758, 0, 759,
	821, 822, 894, 895, 896, 857, 753, 0, 875, 876,
	0, 0, 0, 0, 0, 863, 882, 883, 845, 906,
	796, 169, 742, 745, 746, 747, 755, 812, 813, 825,
	828, 871, 870, 869, 872, 877, 900, 899, 901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	824, 133, 144, 223, 907, 291, 193, 362, 737, 179,
	0, 814, 817, 827, 852, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 850, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 879, 339, 793, 135, 873, 903, 836,
	847, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 1647, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 1648, 0, 0, 554, 571, 0, 676,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 689, 0, 570, 0, 0, 566, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 668, 0, 0, 212, 539, 0, 0,
	687, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 594, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 596, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 678, 688, 684, 686, 685,
	682, 683, 681, 680, 679, 690, 669, 670, 671, 672,
	673, 0, 0, 0, 675, 0, 613, 614, 0, 0,
	0, 169, 587, 588, 589, 590, 591, 597, 598, 602,
	603, 611, 610, 609, 612, 615, 617, 616, 618, 592,
	593, 595, 599, 600, 601, 604, 605, 608, 606, 607,
	674, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 36, 339, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 559, 0, 0, 0, 182, 556, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 554, 571, 0, 676,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 689, 0, 570, 0, 0, 566, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 668, 0, 0, 212, 539, 0, 0,
	687, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 594, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 596, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 678, 688, 684, 686, 685,
	682, 683, 681, 680, 679, 690, 669, 670, 671, 672,
	673, 0, 0, 0, 675, 0, 613, 614, 0, 0,
	0, 169, 587, 588, 589, 590, 591, 597, 598, 602,
	603, 611, 610, 609, 612, 615, 617, 616, 618, 592,
	593, 595, 599, 600, 601, 604, 605, 608, 606, 607,
	674, 133, 144, 223, 79, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	559, 0, 0, 0, 182, 556, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 677, 224, 0, 0, 535, 326, 249,
	0, 0, 0, 0, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 557, 580,
	579, 582, 583, 584, 585, 0, 0, 540, 581, 586,
	619, 620, 0, 0, 0, 554, 571, 0, 676, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 499, 0, 0, 0, 0, 568, 569, 550, 0,
	0, 0, 689, 0, 570, 0, 0, 566, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 668, 0, 0, 212, 539, 0, 0, 687,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 594, 480, 0, 0, 0, 172, 0,
	300, 269, 358, 596, 0, 299, 225, 348, 0, 0,
	357, 0, 526, 367, 372, 492, 0, 487, 323, 184,
	180, 183, 0, 137, 500, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 363, 505, 311, 310,
	0, 207, 0, 513, 481, 292, 517, 213, 136, 336,
	375, 154, 219, 341, 479, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 495, 519,
	0, 290, 313, 343, 156, 330, 493, 494, 496, 523,
	302, 525, 531, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 482, 0, 328, 361, 377,
	158, 0, 316, 342, 503, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 678, 688, 684, 686, 685, 682,
	683, 681, 680, 679, 690, 669, 670, 671, 672, 673,
	0, 0, 0, 675, 0, 613, 614, 0, 0, 0,
	169, 587, 588, 589, 590, 591, 597, 598, 602, 603,
	611, 610, 609, 612, 615, 617, 616, 618, 592, 593,
	595, 599, 600, 601, 604, 605, 608, 606, 607, 674,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 521, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 559,
	0, 0, 0, 182, 556, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 677, 224, 0, 0, 535, 326, 249, 0,
	0, 0, 0, 666, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 1088, 0, 557, 580, 579,
	582, 583, 584, 585, 0, 0, 540, 581, 586, 619,
	620, 0, 0, 0, 554, 571, 0, 676, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	499, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 689, 0, 570, 0, 0, 566, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 668, 0, 0, 212, 539, 0, 0, 687, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 594, 480, 0, 0, 0, 172, 0, 300,
	269, 358, 596, 0, 299, 225, 348, 0, 0, 357,
	0, 526, 367, 372, 492, 0, 487, 323, 184, 180,
	183, 0, 137, 500, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 363, 505, 311, 310, 0,
	207, 0, 513, 481, 292, 517, 213, 136, 336, 375,
	154, 219, 341, 479, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 495, 519, 0,
	290, 313, 343, 156, 330, 493, 494, 496, 523, 302,
	525, 531, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 482, 0, 328, 361, 377, 158,
	0, 316, 342, 503, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 678, 688, 684, 686, 685, 682, 683,
	681, 680, 679, 690, 669, 670, 671, 672, 673, 0,
	0, 0, 675, 0, 613, 614, 0, 0, 0, 169,
	587, 588, 589, 590, 591, 597, 598, 602, 603, 611,
	610, 609, 612, 615, 617, 616, 618, 592, 593, 595,
	599, 600, 601, 604, 605, 608, 606, 607, 674, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 521, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 559, 0,
	0, 0, 182, 556, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 677, 224, 0, 0, 535, 326, 249, 0, 0,
	0, 0, 666, 667, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 557, 580, 579, 582,
	583, 584, 585, 0, 0, 540, 581, 586, 619, 620,
	0, 0, 0, 554, 571, 0, 676, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 499,
	0, 0, 0, 0, 568, 569, 1534, 0, 0, 0,
	689, 0, 570, 0, 0, 566, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	668, 0, 0, 212, 539, 0, 0, 687, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 594, 480, 0, 0, 0, 172, 0, 300, 269,
	358, 596, 0, 299, 225, 348, 0, 0, 357, 0,
	526, 367, 372, 492, 0, 487, 323, 184, 180, 183,
	0, 137, 500, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 363, 505, 311, 310, 0, 207,
	0, 513, 481, 292, 517, 213, 136, 336, 375, 154,
	219, 341, 479, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 495, 519, 0, 290,
	313, 343, 156, 330, 493, 494, 496, 523, 302, 525,
	531, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 482, 0, 328, 361, 377, 158, 0,
	316, 342, 503, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 678, 688, 684, 686, 685, 682, 683, 681,
	680, 679, 690, 669, 670, 671, 672, 673, 0, 0,
	0, 675, 0, 613, 614, 0, 0, 0, 169, 587,
	588, 589, 590, 591, 597, 598, 602, 603, 611, 610,
	609, 612, 615, 617, 616, 618, 592, 593, 595, 599,
	600, 601, 604, 605, 608, 606, 607, 674, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 521, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 559, 0, 0,
	0, 182, 556, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	677, 224, 0, 0, 535, 326, 249, 0, 0, 0,
	0, 666, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 557, 580, 1581, 582, 583,
	584, 585, 0, 0, 540, 581, 586, 619, 620, 0,
	0, 0, 554, 571, 0, 676, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 499, 0,
	0, 0, 0, 568, 569, 1534, 0, 0, 0, 689,
	0, 570, 0, 0, 566, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 664, 665, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 668,
	0, 0, 212, 539, 0, 0, 687, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	594, 480, 0, 0, 0, 172, 0, 300, 269, 358,
	596, 0, 299, 225, 348, 0, 0, 357, 0, 526,
	367, 372, 492, 0, 487, 323, 184, 180, 183, 0,
	137, 500, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 363, 505, 311, 310, 0, 207, 0,
	513, 481, 292, 517, 213, 136, 336, 375, 154, 219,
	341, 479, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 495, 519, 0, 290, 313,
	343, 156, 330, 493, 494, 496, 523, 302, 525, 531,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 482, 0, 328, 361, 377, 158, 0, 316,
	342, 503, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 678, 688, 684, 686, 685, 682, 683, 681, 680,
	679, 690, 669, 670, 671, 672, 673, 0, 0, 0,
	675, 0, 613, 614, 0, 0, 0, 169, 587, 588,
	589, 590, 591, 597, 598, 602, 603, 611, 610, 609,
	612, 615, 617, 616, 618, 592, 593, 595, 599, 600,
	601, 604, 605, 608, 606, 607, 674, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 521, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 559, 0, 0, 0,
	182, 556, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 677,
	224, 0, 0, 535, 326, 249, 0, 0, 0, 0,
	666, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 557, 580, 1578, 582, 583, 584,
	585, 0, 0, 540, 581, 586, 619, 620, 0, 0,
	0, 554, 571, 0, 676, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 499, 0, 0,
	0, 0, 568, 569, 1534, 0, 0, 0, 689, 0,
	570, 0, 0, 566, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 668, 0,
	0, 212, 539, 0, 0, 687, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 594,
	480, 0, 0, 0, 172, 0, 300, 269, 358, 596,
	0, 299, 225, 348, 0, 0, 357, 0, 526, 367,
	372, 492, 0, 487, 323, 184, 180, 183, 0, 137,
	500, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 363, 505, 311, 310, 0, 207, 0, 513,
	481, 292, 517, 213, 136, 336, 375, 154, 219, 341,
	479, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 495, 519, 0, 290, 313, 343,
	156, 330, 493, 494, 496, 523, 302, 525, 531, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 482, 0, 328, 361, 377, 158, 0, 316, 342,
	503, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	678, 688, 684, 686, 685, 682, 683, 681, 680, 679,
	690, 669, 670, 671, 672, 673, 0, 0, 0, 675,
	0, 613, 614, 0, 0, 0, 169, 587, 588, 589,
	590, 591, 597, 598, 602, 603, 611, 610, 609, 612,
	615, 617, 616, 618, 592, 593, 595, 599, 600, 601,
	604, 605, 608, 606, 607, 674, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 521, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 516, 518, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 559, 0, 0, 0, 182,
	556, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 677, 224,
	0, 0, 535, 326, 249, 0, 0, 0, 0, 666,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 1415, 0, 557, 580, 579, 582, 583, 584, 585,
	0, 0, 540, 581, 586, 619, 620, 0, 0, 0,
	554, 571, 0, 676, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 499, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 689, 0, 570,
	0, 0, 566, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 668, 0, 0,
	212, 539, 0, 0, 687, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 594, 480,
	0, 0, 0, 172, 0, 300, 269, 358, 596, 0,
	299, 225, 348, 0, 0, 357, 0, 526, 367, 372,
	492, 0, 487, 323, 184, 180, 183, 0, 137, 500,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 363, 505, 311, 310, 0, 207, 0, 513, 481,
	292, 517, 213, 136, 336, 375, 154, 219, 341, 479,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 495, 519, 0, 290, 313, 343, 156,
	330, 493, 494, 496, 523, 302, 525, 531, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	482, 0, 328, 361, 377, 158, 0, 316, 342, 503,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 678,
	688, 684, 686, 685, 682, 683, 681, 680, 679, 690,
	669, 670, 671, 672, 673, 0, 0, 0, 675, 0,
	613, 614, 0, 0, 0, 169, 587, 588, 589, 590,
	591, 597, 598, 602, 603, 611, 610, 609, 612, 615,
	617, 616, 618, 592, 593, 595, 599, 600, 601, 604,
	605, 608, 606, 607, 674, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	521, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 182, 556,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 677, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 666, 667,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 557, 580, 579, 582, 583, 584, 585, 0,
	0, 540, 581, 586, 619, 620, 0, 0, 0, 554,
	571, 0, 676, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 499, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 689, 0, 570, 0,
	0, 566, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 668, 0, 0, 212,
	539, 0, 0, 687, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 594, 480, 0,
	0, 0, 172, 0, 300, 269, 358, 596, 0, 299,
	225, 348, 0, 0, 357, 0, 526, 367, 372, 492,
	0, 487, 323, 184, 180, 183, 0, 137, 500, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	363, 505, 311, 310, 0, 207, 0, 513, 481, 292,
	517, 213, 136, 336, 375, 154, 219, 341, 479, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 495, 519, 0, 290, 313, 343, 156, 330,
	493, 494, 496, 523, 302, 525, 531, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 482,
	0, 328, 361, 377, 158, 0, 316, 342, 503, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 678, 688,
	684, 686, 685, 682, 683, 681, 680, 679, 690, 669,
	670, 671, 672, 673, 0, 0, 0, 675, 0, 613,
	614, 0, 0, 0, 169, 587, 588, 589, 590, 591,
	597, 598, 602, 603, 611, 610, 609, 612, 615, 617,
	616, 618, 592, 593, 595, 599, 600, 601, 604, 605,
	608, 606, 607, 674, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 521,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 677, 224, 0, 0,
	535, 326, 249, 0, 0, 0, 0, 666, 667, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 557, 580, 579, 582, 583, 584, 585, 0, 0,
	540, 581, 586, 619, 620, 0, 0, 0, 0, 571,
	0, 676, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 499, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 689, 0, 570, 0, 0,
	566, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 668, 0, 0, 212, 539,
	0, 0, 687, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 594, 480, 0, 0,
	0, 172, 0, 300, 269, 358, 596, 0, 299, 225,
	348, 0, 0, 357, 0, 526, 367, 372, 492, 0,
	487, 323, 184, 180, 183, 0, 137, 500, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 363,
	505, 311, 310, 0, 207, 0, 513, 481, 292, 517,
	213, 136, 336, 375, 154, 219, 341, 479, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 495, 519, 0, 290, 313, 343, 156, 330, 493,
	494, 496, 523, 302, 525, 531, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 482, 0,
	328, 361, 377, 158, 0, 316, 342, 503, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 678, 688, 684,
	686, 685, 682, 683, 681, 680, 679, 690, 669, 670,
	671, 672, 673, 1584, 1585, 1586, 675, 0, 613, 614,
	0, 0, 0, 169, 587, 588, 589, 590, 591, 597,
	598, 602, 603, 611, 610, 609, 612, 615, 617, 616,
	618, 592, 593, 595, 599, 600, 601, 604, 605, 608,
	606, 607, 674, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 521, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 677, 224, 0, 0, 535,
	326, 249, 0, 0, 0, 0, 666, 667, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	557, 580, 579, 582, 583, 584, 585, 0, 0, 540,
	581, 586, 619, 620, 0, 0, 0, 0, 571, 0,
	676, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 689, 0, 570, 0, 0, 566,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 668, 0, 0, 212, 539, 0,
	0, 687, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 594, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 596, 2952, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 678, 688, 684, 686,
	685, 682, 683, 681, 680, 679, 690, 669, 670, 671,
	672, 673, 0, 0, 0, 675, 0, 613, 614, 0,
	0, 0, 169, 587, 588, 589, 590, 591, 597, 598,
	602, 603, 611, 610, 609, 612, 615, 617, 616, 618,
	592, 593, 595, 599, 600, 601, 604, 605, 608, 606,
	607, 674, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	516, 518, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 677, 224, 0, 0, 535, 326,
	249, 0, 0, 0, 0, 666, 667, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 1088, 0, 557,
	580, 579, 582, 583, 584, 585, 0, 0, 540, 581,
	586, 619, 620, 0, 0, 0, 0, 571, 0, 676,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 499, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 689, 0, 570, 0, 0, 566, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 668, 0, 0, 212, 539, 0, 0,
	687, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 594, 480, 0, 0, 0, 172,
	0, 300, 269, 358, 596, 0, 299, 225, 348, 0,
	0, 357, 0, 526, 367, 372, 492, 0, 487, 323,
	184, 180, 183, 0, 137, 500, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 504, 502, 0, 0, 363, 505, 311,
	310, 0, 207, 0, 513, 481, 292, 517, 213, 136,
	336, 375, 154, 219, 341, 479, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 495,
	519, 0, 290, 313, 343, 156, 330, 493, 494, 496,
	523, 302, 525, 531, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 482, 0, 328, 361,
	377, 158, 0, 316, 342, 503, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 678, 688, 684, 686, 685,
	682, 683, 681, 680, 679, 690, 669, 670, 671, 672,
	673, 0, 0, 0, 675, 0, 613, 614, 0, 0,
	0, 169, 587, 588, 589, 590, 591, 597, 598, 602,
	603, 611, 610, 609, 612, 615, 617, 616, 618, 592,
	593, 595, 599, 600, 601, 604, 605, 608, 606, 607,
	674, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 521, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 516,
	518, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 677, 224, 0, 0, 535, 326, 249,
	0, 0, 0, 0, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 0, 0, 0, 557, 580,
	579, 582, 583, 584, 585, 0, 0, 540, 581, 586,
	619, 620, 0, 0, 0, 0, 571, 0, 676, 0,
	0, 0, 0, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 499, 0, 0, 0, 0, 568, 569, 0, 0,
	0, 0, 689, 0, 570, 0, 0, 566, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 668, 0, 0, 212, 539, 0, 0, 687,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 594, 480, 0, 0, 0, 172, 0,
	300, 269, 358, 596, 0, 299, 225, 348, 0, 0,
	357, 0, 526, 367, 372, 492, 0, 487, 323, 184,
	180, 183, 0, 137, 500, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 504, 502, 0, 0, 363, 505, 311, 310,
	0, 207, 0, 513, 481, 292, 517, 213, 136, 336,
	375, 154, 219, 341, 479, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 495, 519,
	0, 290, 313, 343, 156, 330, 493, 494, 496, 523,
	302, 525, 531, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 482, 0, 328, 361, 377,
	158, 0, 316, 342, 503, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 678, 688, 684, 686, 685, 682,
	683, 681, 680, 679, 690, 669, 670, 671, 672, 673,
	0, 0, 0, 675, 0, 613, 614, 0, 0, 0,
	169, 587, 588, 589, 590, 591, 597, 598, 602, 603,
	611, 610, 609, 612, 615, 617, 616, 618, 592, 593,
	595, 599, 600, 601, 604, 605, 608, 606, 607, 674,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 521, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 516, 518,
	0, 0, 0, 265, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 535, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1626,
	1628, 0, 0, 0, 0, 0, 0, 128, 0, 478,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	499, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 539, 0, 1627, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 497, 480, 0, 0, 0, 172, 0, 300,
	269, 358, 501, 0, 299, 225, 348, 0, 0, 357,
	0, 526, 367, 372, 492, 0, 487, 323, 184, 180,
	183, 0, 137, 500, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 504, 502, 0, 0, 363, 505, 311, 310, 0,
	207, 0, 513, 481, 292, 517, 213, 136, 336, 375,
	154, 219, 341, 479, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 495, 519, 0,
	290, 313, 343, 156, 330, 493, 494, 496, 523, 302,
	525, 531, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 482, 0, 328, 361, 377, 158,
	0, 316, 342, 503, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 0, 0, 0, 169,
	483, 484, 485, 486, 488, 506, 507, 511, 512, 529,
	528, 527, 530, 534, 537, 536, 538, 489, 490, 498,
	508, 509, 510, 514, 515, 524, 520, 522, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 521, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 516, 518, 0,
	0, 0, 265, 0, 0, 0, 0, 1624, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 535, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1626, 1628,
	0, 0, 0, 0, 0, 0, 128, 0, 478, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 1622, 293, 314, 0, 284, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 539, 0, 1627, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 497, 480, 0, 0, 0, 172, 0, 300, 269,
	358, 501, 0, 299, 225, 348, 0, 0, 357, 0,
	526, 367, 372, 492, 0, 487, 323, 184, 180, 183,
	0, 137, 500, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	504, 502, 0, 0, 363, 505, 311, 310, 0, 207,
	0, 513, 481, 292, 517, 213, 136, 336, 375, 154,
	219, 341, 479, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 495, 519, 0, 290,
	313, 343, 156, 330, 493, 494, 496, 523, 302, 525,
	531, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 482, 0, 328, 361, 377, 158, 0,
	316, 342, 503, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 532, 533, 0, 0, 0, 169, 483,
	484, 485, 486, 488, 506, 507, 511, 512, 529, 528,
	527, 530, 534, 537, 536, 538, 489, 490, 498, 508,
	509, 510, 514, 515, 524, 520, 522, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 521, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 516, 518, 0, 0,
	0, 265, 0, 0, 0, 0, 1110, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 535, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1111, 0, 1114, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	1107, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 0, 0, 0, 0, 1108, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 539, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	497, 480, 0, 0, 0, 172, 0, 300, 269, 358,
	501, 0, 299, 225, 348, 0, 0, 357, 0, 526,
	367, 372, 492, 0, 487, 323, 184, 180, 183, 0,
	137, 500, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 504,
	502, 0, 0, 363, 505, 311, 310, 0, 207, 0,
	513, 481, 292, 517, 213, 136, 336, 375, 154, 219,
	341, 479, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 495, 519, 0, 290, 313,
	343, 156, 330, 493, 494, 496, 523, 302, 525, 531,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 482, 0, 328, 361, 377, 158, 0, 316,
	342, 503, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 532, 533, 0, 0, 0, 169, 483, 484,
	485, 486, 488, 506, 507, 511, 512, 529, 528, 527,
	530, 534, 537, 536, 538, 489, 490, 498, 508, 509,
	510, 514, 515, 524, 520, 522, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 521, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 516, 518, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 535, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 478, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 539, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 497,
	480, 0, 0, 0, 172, 0, 300, 269, 358, 501,
	0, 299, 225, 348, 0, 0, 357, 0, 526, 367,
	372, 492, 0, 487, 323, 184, 180, 183, 0, 137,
	500, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 363, 505, 311, 310, 0, 207, 0, 513,
	481, 292, 517, 213, 136, 336, 375, 154, 219, 341,
	479, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 495, 519, 0, 290, 313, 343,
	156, 330, 493, 494, 496, 523, 302, 525, 531, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 482, 0, 328, 361, 377, 158, 0, 316, 342,
	503, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 533, 0, 0, 0, 169, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 473,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 521, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 516, 518, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 1939, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 535, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 478, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 539, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 497, 480,
	0, 0, 0, 172, 0, 300, 269, 358, 501, 0,
	299, 225, 348, 0, 0, 357, 0, 526, 367, 372,
	492, 0, 487, 323, 184, 180, 183, 0, 137, 500,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 504, 502, 0,
	0, 363, 505, 311, 310, 0, 207, 0, 513, 481,
	292, 517, 213, 136, 336, 375, 154, 219, 341, 479,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 495, 519, 0, 290, 313, 343, 156,
	330, 493, 494, 496, 523, 302, 525, 531, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	482, 0, 328, 361, 377, 158, 0, 316, 342, 503,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	532, 533, 0, 0, 0, 169, 483, 484, 485, 486,
	488, 506, 507, 511, 512, 529, 528, 527, 530, 534,
	537, 536, 538, 489, 490, 498, 508, 509, 510, 514,
	515, 524, 520, 522, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	521, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 516, 518, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 0, 224, 0,
	0, 535, 326, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 0, 478, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 0, 0, 0, 212,
	539, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 497, 480, 0,
	0, 0, 172, 0, 300, 269, 358, 501, 0, 299,
	225, 348, 0, 0, 357, 0, 526, 367, 372, 492,
	0, 487, 323, 184, 180, 183, 0, 137, 500, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 504, 502, 0, 0,
	363, 505, 311, 310, 0, 207, 0, 513, 481, 292,
	517, 213, 136, 336, 375, 154, 219, 341, 479, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 495, 519, 0, 290, 313, 343, 156, 330,
	493, 494, 496, 523, 302, 525, 531, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 482,
	0, 328, 361, 377, 158, 0, 316, 342, 503, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 532,
	533, 0, 0, 0, 169, 483, 484, 485, 486, 488,
	506, 507, 511, 512, 529, 528, 527, 530, 534, 537,
	536, 538, 489, 490, 498, 508, 509, 510, 514, 515,
	524, 520, 522, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 521,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 516, 518, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	535, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1111, 0, 1114, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 499, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 539,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 497, 480, 0, 0,
	0, 172, 0, 300, 269, 358, 501, 0, 299, 225,
	348, 0, 0, 357, 0, 526, 367, 372, 492, 0,
	487, 323, 184, 180, 183, 0, 137, 500, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 363,
	505, 311, 310, 0, 207, 0, 513, 481, 292, 517,
	213, 136, 336, 375, 154, 219, 341, 479, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 495, 519, 0, 290, 313, 343, 156, 330, 493,
	494, 496, 523, 302, 525, 531, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 482, 0,
	328, 361, 377, 158, 0, 316, 342, 503, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 533,
	0, 0, 0, 169, 483, 484, 485, 486, 488, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 489, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 521, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 516, 518, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 535,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 539, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 497, 480, 0, 0, 0,
	172, 0, 300, 269, 358, 501, 0, 299, 225, 348,
	0, 0, 357, 0, 526, 367, 372, 492, 0, 487,
	323, 184, 180, 183, 0, 137, 500, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 504, 502, 0, 0, 363, 505,
	311, 310, 0, 207, 0, 513, 481, 292, 517, 213,
	136, 336, 375, 154, 219, 341, 479, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	495, 519, 0, 290, 313, 343, 156, 330, 493, 494,
	496, 523, 302, 525, 531, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 482, 0, 328,
	361, 377, 158, 0, 316, 342, 503, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 532, 533, 0,
	0, 0, 169, 483, 484, 485, 486, 488, 506, 507,
	511, 512, 529, 528, 527, 530, 534, 537, 536, 538,
	489, 490, 498, 508, 509, 510, 514, 515, 524, 520,
	522, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 521, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 0, 0, 0, 135, 0, 0,
	516, 518, 447, 339, 441, 452, 435, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 442, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 456, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 434, 433, 436, 0, 0, 0,
	250, 148, 0, 0, 440, 212, 0, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 444, 308, 0, 0, 448, 0, 0, 172, 0,
	300, 269, 358, 0, 0, 299, 225, 348, 0, 451,
	357, 0, 0, 367, 372, 0, 0, 0, 323, 184,
	180, 183, 0, 137, 0, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 311, 310,
	0, 207, 0, 0, 0, 292, 0, 213, 136, 336,
	375, 154, 219, 341, 0, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 0, 0,
	0, 461, 313, 343, 156, 330, 437, 438, 439, 445,
	446, 449, 450, 453, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 0, 0, 328, 361, 377,
	158, 0, 316, 342, 0, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 443, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 0, 0, 0, 135, 447, 339, 441, 452,
	435, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 427, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 442, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 0, 224, 0,
	0, 0, 326, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 456, 0, 455, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 434, 433,
	436, 0, 0, 0, 250, 148, 0, 0, 440, 212,
	0, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 444, 308, 0, 0, 448,
	0, 0, 172, 0, 300, 269, 358, 0, 0, 299,
	225, 348, 0, 451, 357, 0, 0, 367, 372, 0,
	0, 0, 323, 184, 180, 183, 0, 137, 0, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 311, 310, 0, 207, 0, 0, 0, 292,
	0, 213, 136, 336, 375, 154, 219, 341, 0, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 0, 0, 0, 430, 313, 343, 156, 330,
	437, 438, 439, 445, 446, 449, 450, 453, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 0,
	0, 328, 361, 377, 158, 0, 316, 342, 0, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 443,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 0, 1124, 1123, 1133, 1134, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1125, 0, 0, 1135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 0,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 0, 0, 0, 0,
	0, 172, 0, 300, 269, 358, 0, 0, 299, 225,
	348, 0, 0, 357, 0, 0, 367, 372, 0, 0,
	0, 323, 184, 180, 183, 0, 137, 0, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 311, 310, 0, 207, 0, 0, 0, 292, 0,
	213, 136, 336, 375, 154, 219, 341, 0, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 0, 0, 0, 290, 313, 343, 156, 330, 0,
	0, 0, 0, 302, 0, 0, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 0, 0,
	328, 361, 377, 158, 0, 316, 342, 0, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 0, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 2876,
	0, 0, 0, 0, 0, 0, 182, 2874, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 0,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	456, 0, 455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 0, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 0, 0, 0, 0, 0,
	172, 0, 300, 269, 358, 0, 0, 299, 225, 348,
	0, 0, 357, 0, 0, 367, 372, 0, 0, 0,
	323, 184, 180, 183, 0, 137, 0, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	311, 310, 0, 207, 0, 2875, 0, 292, 0, 213,
	136, 336, 375, 154, 219, 341, 0, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	0, 0, 0, 290, 313, 343, 156, 330, 0, 0,
	0, 0, 302, 0, 0, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 0, 0, 328,
	361, 377, 158, 0, 316, 342, 0, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 0, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 36, 339, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 1619, 224, 0, 0, 0,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 0, 0, 0,
	1240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 0, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 0, 0, 0, 0, 0,
	172, 0, 300, 269, 358, 0, 0, 299, 225, 348,
	0, 0, 357, 0, 0, 367, 372, 0, 0, 0,
	323, 184, 180, 183, 0, 137, 0, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	311, 310, 0, 207, 0, 0, 0, 292, 0, 213,
	136, 336, 375, 154, 219, 341, 0, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	0, 0, 0, 290, 313, 343, 156, 330, 0, 0,
	0, 0, 302, 0, 0, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 0, 0, 328,
	361, 377, 158, 0, 316, 342, 0, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 223, 79, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 0, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 0, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 359, 276, 293, 314,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 0, 0, 212, 0, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 0, 0, 0, 0, 0, 172,
	0, 300, 269, 358, 0, 0, 299, 225, 348, 0,
	0, 357, 0, 0, 367, 372, 0, 0, 0, 323,
	184, 180, 183, 0, 137, 0, 283, 177, 217, 2043,
	2044, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 311,
	310, 0, 207, 0, 0, 0, 292, 0, 213, 136,
	336, 375, 154, 219, 341, 0, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 0,
	0, 0, 290, 313, 343, 156, 330, 0, 0, 0,
	0, 302, 0, 0, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 0, 0, 328, 361,
	377, 158, 0, 316, 342, 0, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 0, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 456, 0,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 0, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 0, 0, 0, 0, 0, 172, 0,
	300, 269, 358, 0, 0, 299, 225, 348, 0, 0,
	357, 0, 0, 367, 372, 0, 0, 0, 323, 184,
	180, 183, 0, 137, 0, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 311, 310,
	0, 207, 0, 0, 0, 292, 0, 213, 136, 336,
	375, 154, 219, 341, 0, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 0, 0,
	0, 290, 313, 343, 156, 330, 0, 0, 0, 0,
	302, 0, 0, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 0, 0, 328, 361, 377,
	158, 0, 316, 342, 0, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 0, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 1261, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 0, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 0, 1260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 0, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 0, 0, 0, 0, 0, 172, 0, 300,
	269, 358, 0, 0, 299, 225, 348, 0, 0, 357,
	0, 0, 367, 372, 0, 0, 0, 323, 184, 180,
	183, 0, 137, 0, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 311, 310, 0,
	207, 0, 0, 0, 292, 0, 213, 136, 336, 375,
	154, 219, 341, 0, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 0, 0, 0,
	290, 313, 343, 156, 330, 0, 0, 0, 0, 302,
	0, 0, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 0, 0, 328, 361, 377, 158,
	0, 316, 342, 0, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 0, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 0, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 456, 0, 455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 0, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 0, 0, 0, 0, 0, 172, 0, 300, 269,
	358, 0, 0, 299, 225, 348, 0, 0, 357, 0,
	0, 367, 372, 0, 0, 0, 323, 184, 180, 183,
	0, 137, 0, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 311, 310, 0, 207,
	0, 0, 0, 292, 0, 213, 136, 336, 375, 154,
	219, 341, 0, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 0, 0, 0, 290,
	313, 343, 156, 330, 0, 0, 0, 0, 302, 0,
	0, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 0, 0, 328, 361, 377, 158, 0,
	316, 342, 0, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 0, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 0, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 151, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 230,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 255, 152, 206,
	325, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 278,
	279, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 2306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 356, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 730, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 0, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 0, 0,
	0, 0, 0, 172, 0, 300, 269, 358, 0, 0,
	299, 225, 348, 0, 0, 357, 0, 0, 367, 372,
	0, 0, 0, 323, 184, 180, 183, 0, 137, 0,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 311, 310, 0, 207, 0, 0, 0,
	292, 0, 213, 136, 336, 375, 154, 219, 341, 0,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 0, 0, 0, 290, 313, 343, 156,
	330, 0, 0, 0, 0, 302, 0, 0, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 356, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 151, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 230, 235, 0,
	0, 0, 328, 361, 377, 158, 0, 316, 342, 0,
	289, 159, 195, 188, 280, 255, 152, 206, 325, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 0, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 278, 279, 287,
	0, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 339, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 221, 0, 0, 171, 229, 227, 0,
	0, 0, 272, 338, 0, 0, 0, 0, 224, 0,
	0, 0, 326, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	276, 293, 314, 0, 284, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 148, 0, 0, 0, 212,
	0, 0, 0, 0, 286, 0, 333, 200, 222, 153,
	130, 146, 164, 199, 261, 0, 308, 0, 0, 0,
	0, 0, 172, 0, 300, 269, 358, 0, 0, 299,
	225, 348, 0, 0, 357, 0, 0, 367, 372, 0,
	0, 0, 323, 184, 180, 183, 0, 137, 0, 283,
	177, 217, 0, 0, 0, 168, 0, 0, 0, 322,
	345, 134, 247, 346, 371, 155, 340, 248, 254, 165,
	167, 166, 147, 317, 344, 160, 170, 327, 304, 334,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 311, 310, 0, 207, 0, 0, 0, 292,
	0, 213, 136, 336, 375, 154, 219, 341, 0, 194,
	260, 174, 270, 271, 191, 132, 288, 241, 242, 240,
	243, 198, 0, 0, 0, 290, 313, 343, 156, 330,
	0, 0, 0, 0, 302, 0, 0, 0, 232, 187,
	190, 201, 208, 0, 297, 331, 364, 0, 149, 138,
	337, 356, 161, 312, 315, 373, 298, 141, 354, 332,
	245, 214, 215, 139, 0, 140, 295, 181, 197, 175,
	264, 0, 196, 285, 351, 352, 173, 376, 150, 366,
	143, 151, 365, 257, 0, 256, 368, 347, 355, 246,
	234, 0, 142, 353, 244, 233, 220, 189, 203, 281,
	228, 282, 204, 252, 251, 253, 230, 235, 0, 0,
	0, 328, 361, 377, 158, 0, 316, 342, 0, 289,
	159, 195, 188, 280, 255, 152, 206, 325, 218, 226,
	294, 374, 268, 301, 162, 360, 324, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 133, 144, 223, 0, 291, 193,
	362, 0, 179, 0, 0, 0, 0, 0, 131, 145,
	157, 163, 178, 186, 192, 202, 205, 209, 210, 211,
	216, 231, 236, 237, 238, 239, 258, 259, 262, 263,
	266, 267, 273, 274, 275, 277, 278, 279, 287, 0,
	296, 303, 305, 306, 307, 309, 318, 319, 320, 321,
	329, 335, 349, 350, 369, 370, 339, 0, 0, 135,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 1228, 182, 0, 0,
	0, 0, 221, 0, 0, 171, 229, 227, 0, 0,
	0, 272, 338, 0, 0, 0, 0, 224, 0, 0,
	0, 326, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 276,
	293, 314, 0, 284, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 148, 0, 0, 0, 212, 0,
	0, 0, 0, 286, 0, 333, 200, 222, 153, 130,
	146, 164, 199, 261, 0, 308, 0, 0, 0, 0,
	0, 172, 0, 300, 269, 358, 0, 0, 299, 225,
	348, 0, 0, 357, 0, 0, 367, 372, 0, 0,
	0, 323, 184, 180, 183, 0, 137, 0, 283, 177,
	217, 0, 0, 0, 168, 0, 0, 0, 322, 345,
	134, 247, 346, 371, 155, 340, 248, 254, 165, 167,
	166, 147, 317, 344, 160, 170, 327, 304, 334, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 311, 310, 0, 207, 0, 0, 0, 292, 0,
	213, 136, 336, 375, 154, 219, 341, 0, 194, 260,
	174, 270, 271, 191, 132, 288, 241, 242, 240, 243,
	198, 0, 0, 0, 290, 313, 343, 156, 330, 0,
	0, 0, 0, 302, 0, 0, 0, 232, 187, 190,
	201, 208, 0, 297, 331, 364, 0, 149, 138, 337,
	356, 161, 312, 315, 373, 298, 141, 354, 332, 245,
	214, 215, 139, 0, 140, 295, 181, 197, 175, 264,
	0, 196, 285, 351, 352, 173, 376, 150, 366, 143,
	151, 365, 257, 0, 256, 368, 347, 355, 246, 234,
	0, 142, 353, 244, 233, 220, 189, 203, 281, 228,
	282, 204, 252, 251, 253, 230, 235, 0, 0, 0,
	328, 361, 377, 158, 0, 316, 342, 0, 289, 159,
	195, 188, 280, 255, 152, 206, 325, 218, 226, 294,
	374, 268, 301, 162, 360, 324, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 144, 223, 0, 291, 193, 362,
	0, 179, 0, 0, 0, 0, 0, 131, 145, 157,
	163, 178, 186, 192, 202, 205, 209, 210, 211, 216,
	231, 236, 237, 238, 239, 258, 259, 262, 263, 266,
	267, 273, 274, 275, 277, 278, 279, 287, 0, 296,
	303, 305, 306, 307, 309, 318, 319, 320, 321, 329,
	335, 349, 350, 369, 370, 339, 0, 0, 135, 693,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 221, 0, 0, 171, 229, 227, 0, 0, 0,
	272, 338, 0, 0, 0, 0, 224, 0, 0, 0,
	326, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 276, 293,
	314, 0, 284, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 250, 148, 0, 0, 0, 212, 0, 0,
	0, 0, 286, 0, 333, 200, 222, 153, 130, 146,
	164, 199, 261, 0, 308, 0, 0, 0, 0, 0,
	172, 0, 300, 269, 358, 0, 0, 299, 225, 348,
	0, 0, 357, 0, 0, 367, 372, 0, 0, 0,
	323, 184, 180, 183, 0, 137, 0, 283, 177, 217,
	0, 0, 0, 168, 0, 0, 0, 322, 345, 134,
	247, 346, 371, 155, 340, 248, 254, 165, 167, 166,
	147, 317, 344, 160, 170, 327, 304, 334, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	311, 310, 0, 207, 0, 0, 0, 292, 0, 213,
	136, 336, 375, 154, 219, 341, 0, 194, 260, 174,
	270, 271, 191, 132, 288, 241, 242, 240, 243, 198,
	0, 0, 0, 290, 313, 343, 156, 330, 0, 0,
	0, 0, 302, 0, 0, 0, 232, 187, 190, 201,
	208, 0, 297, 331, 364, 0, 149, 138, 337, 356,
	161, 312, 315, 373, 298, 141, 354, 332, 245, 214,
	215, 139, 0, 140, 295, 181, 197, 175, 264, 0,
	196, 285, 351, 352, 173, 376, 150, 366, 143, 151,
	365, 257, 0, 256, 368, 347, 355, 246, 234, 0,
	142, 353, 244, 233, 220, 189, 203, 281, 228, 282,
	204, 252, 251, 253, 230, 235, 0, 0, 0, 328,
	361, 377, 158, 0, 316, 342, 0, 289, 159, 195,
	188, 280, 255, 152, 206, 325, 218, 226, 294, 374,
	268, 301, 162, 360, 324, 185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 144, 223, 0, 291, 193, 362, 0,
	179, 0, 0, 0, 0, 0, 131, 145, 157, 163,
	178, 186, 192, 202, 205, 209, 210, 211, 216, 231,
	236, 237, 238, 239, 258, 259, 262, 263, 266, 267,
	273, 274, 275, 277, 278, 279, 287, 0, 296, 303,
	305, 306, 307, 309, 318, 319, 320, 321, 329, 335,
	349, 350, 369, 370, 339, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	221, 0, 0, 171, 229, 227, 0, 0, 0, 272,
	338, 0, 0, 0, 0, 224, 0, 0, 0, 326,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 276, 293, 314,
	0, 284, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 250, 148, 0, 125, 0, 212, 0, 0, 0,
	0, 286, 0, 333, 200, 222, 153, 130, 146, 164,
	199, 261, 0, 308, 0, 0, 0, 0, 0, 172,
	0, 300, 269, 358, 0, 0, 299, 225, 348, 0,
	0, 357, 0, 0, 367, 372, 0, 0, 0, 323,
	184, 180, 183, 0, 137, 0, 283, 177, 217, 0,
	0, 0, 168, 0, 0, 0, 322, 345, 134, 247,
	346, 371, 155, 340, 248, 254, 165, 167, 166, 147,
	317, 344, 160, 170, 327, 304, 334, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 311,
	310, 0, 207, 0, 0, 0, 292, 0, 213, 136,
	336, 375, 154, 219, 341, 0, 194, 260, 174, 270,
	271, 191, 132, 288, 241, 242, 240, 243, 198, 0,
	0, 0, 290, 313, 343, 156, 330, 0, 0, 0,
	0, 302, 0, 0, 0, 232, 187, 190, 201, 208,
	0, 297, 331, 364, 0, 149, 138, 337, 356, 161,
	312, 315, 373, 298, 141, 354, 332, 245, 214, 215,
	139, 0, 140, 295, 181, 197, 175, 264, 0, 196,
	285, 351, 352, 173, 376, 150, 366, 143, 151, 365,
	257, 0, 256, 368, 347, 355, 246, 234, 0, 142,
	353, 244, 233, 220, 189, 203, 281, 228, 282, 204,
	252, 251, 253, 230, 235, 0, 0, 0, 328, 361,
	377, 158, 0, 316, 342, 0, 289, 159, 195, 188,
	280, 255, 152, 206, 325, 218, 226, 294, 374, 268,
	301, 162, 360, 324, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 133, 144, 223, 0, 291, 193, 362, 0, 179,
	0, 0, 0, 0, 0, 131, 145, 157, 163, 178,
	186, 192, 202, 205, 209, 210, 211, 216, 231, 236,
	237, 238, 239, 258, 259, 262, 263, 266, 267, 273,
	274, 275, 277, 278, 279, 287, 0, 296, 303, 305,
	306, 307, 309, 318, 319, 320, 321, 329, 335, 349,
	350, 369, 370, 339, 0, 0, 135, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 221,
	0, 0, 171, 229, 227, 0, 0, 0, 272, 338,
	0, 0, 0, 0, 224, 0, 0, 0, 326, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 276, 293, 314, 0,
	284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	250, 148, 0, 0, 0, 212, 0, 0, 0, 0,
	286, 0, 333, 200, 222, 153, 130, 146, 164, 199,
	261, 0, 308, 0, 0, 0, 0, 0, 172, 0,
	300, 269, 358, 0, 0, 299, 225, 348, 0, 0,
	357, 0, 0, 367, 372, 0, 0, 0, 323, 184,
	180, 183, 0, 137, 0, 283, 177, 217, 0, 0,
	0, 168, 0, 0, 0, 322, 345, 134, 247, 346,
	371, 155, 340, 248, 254, 165, 167, 166, 147, 317,
	344, 160, 170, 327, 304, 334, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 311, 310,
	0, 207, 0, 0, 0, 292, 0, 213, 136, 336,
	375, 154, 219, 341, 0, 194, 260, 174, 270, 271,
	191, 132, 288, 241, 242, 240, 243, 198, 0, 0,
	0, 290, 313, 343, 156, 330, 0, 0, 0, 0,
	302, 0, 0, 0, 232, 187, 190, 201, 208, 0,
	297, 331, 364, 0, 149, 138, 337, 356, 161, 312,
	315, 373, 298, 141, 354, 332, 245, 214, 215, 139,
	0, 140, 295, 181, 197, 175, 264, 0, 196, 285,
	351, 352, 173, 376, 150, 366, 143, 151, 365, 257,
	0, 256, 368, 347, 355, 246, 234, 0, 142, 353,
	244, 233, 220, 189, 203, 281, 228, 282, 204, 252,
	251, 253, 230, 235, 0, 0, 0, 328, 361, 377,
	158, 0, 316, 342, 0, 289, 159, 195, 188, 280,
	255, 152, 206, 325, 218, 226, 294, 374, 268, 301,
	162, 360, 324, 185, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	133, 144, 223, 0, 291, 193, 362, 0, 179, 0,
	0, 0, 0, 0, 131, 145, 157, 163, 178, 186,
	192, 202, 205, 209, 210, 211, 216, 231, 236, 237,
	238, 239, 258, 259, 262, 263, 266, 267, 273, 274,
	275, 277, 278, 279, 287, 0, 296, 303, 305, 306,
	307, 309, 318, 319, 320, 321, 329, 335, 349, 350,
	369, 370, 339, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 221, 0,
	0, 171, 229, 227, 0, 0, 0, 272, 338, 0,
	0, 0, 0, 224, 0, 0, 0, 326, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 276, 293, 314, 0, 284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	148, 0, 0, 0, 212, 0, 0, 0, 0, 286,
	0, 333, 200, 222, 153, 130, 146, 164, 199, 261,
	0, 308, 0, 0, 0, 0, 0, 172, 0, 300,
	269, 358, 0, 0, 299, 225, 348, 0, 0, 357,
	0, 0, 367, 372, 0, 0, 0, 323, 184, 180,
	183, 0, 137, 0, 283, 177, 217, 0, 0, 0,
	168, 0, 0, 0, 322, 345, 134, 247, 346, 371,
	155, 340, 248, 254, 165, 167, 166, 147, 317, 344,
	160, 170, 327, 304, 334, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 311, 310, 0,
	207, 0, 0, 0, 292, 0, 213, 136, 336, 375,
	154, 219, 341, 0, 194, 260, 174, 270, 271, 191,
	132, 288, 241, 242, 240, 243, 198, 0, 0, 0,
	290, 313, 343, 156, 330, 0, 0, 0, 0, 302,
	0, 0, 0, 232, 187, 190, 201, 208, 0, 297,
	331, 364, 0, 149, 138, 337, 356, 161, 312, 315,
	373, 298, 141, 354, 332, 245, 214, 215, 139, 0,
	140, 295, 181, 197, 175, 264, 0, 196, 285, 351,
	352, 173, 376, 150, 366, 143, 151, 365, 257, 0,
	256, 368, 347, 355, 246, 234, 0, 142, 353, 244,
	233, 220, 189, 203, 281, 228, 282, 204, 252, 251,
	253, 230, 235, 0, 0, 0, 328, 361, 377, 158,
	0, 316, 342, 0, 289, 159, 195, 188, 280, 255,
	152, 206, 325, 218, 226, 294, 374, 268, 301, 162,
	360, 324, 185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	144, 223, 0, 291, 193, 362, 0, 179, 0, 0,
	0, 0, 0, 131, 145, 157, 163, 178, 186, 192,
	202, 205, 209, 210, 211, 216, 231, 236, 237, 238,
	239, 258, 259, 262, 263, 266, 267, 273, 274, 275,
	277, 278, 279, 287, 0, 296, 303, 305, 306, 307,
	309, 318, 319, 320, 321, 329, 335, 349, 350, 369,
	370, 339, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 221, 0, 0,
	171, 229, 227, 0, 0, 0, 272, 338, 0, 0,
	0, 0, 224, 0, 0, 0, 326, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 276, 293, 314, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 148,
	0, 0, 0, 212, 0, 0, 0, 0, 286, 0,
	333, 200, 222, 153, 130, 146, 164, 199, 261, 0,
	308, 0, 0, 0, 0, 0, 172, 0, 300, 269,
	358, 0, 0, 299, 225, 348, 0, 0, 357, 0,
	0, 367, 372, 0, 0, 0, 323, 184, 180, 183,
	0, 137, 0, 283, 177, 217, 0, 0, 0, 168,
	0, 0, 0, 322, 345, 134, 247, 346, 371, 155,
	340, 248, 254, 165, 167, 166, 147, 317, 344, 160,
	170, 327, 304, 334, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 311, 310, 0, 207,
	0, 0, 0, 292, 0, 213, 136, 336, 375, 154,
	219, 341, 0, 194, 260, 174, 270, 271, 191, 132,
	288, 241, 242, 240, 243, 198, 0, 0, 0, 290,
	313, 343, 156, 330, 0, 0, 0, 0, 302, 0,
	0, 0, 232, 187, 190, 201, 208, 0, 297, 331,
	364, 0, 149, 138, 337, 356, 161, 312, 315, 373,
	298, 141, 354, 332, 245, 214, 215, 139, 0, 140,
	295, 181, 197, 175, 264, 0, 196, 285, 351, 352,
	173, 376, 150, 366, 143, 151, 365, 257, 0, 256,
	368, 347, 355, 246, 234, 0, 142, 353, 244, 233,
	220, 189, 203, 281, 228, 282, 204, 252, 251, 253,
	230, 235, 0, 0, 0, 328, 361, 377, 158, 0,
	316, 342, 0, 289, 159, 195, 188, 280, 255, 152,
	206, 325, 218, 226, 294, 374, 268, 301, 162, 360,
	324, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 144,
	223, 0, 291, 193, 362, 0, 179, 0, 0, 0,
	0, 0, 131, 145, 157, 163, 178, 186, 192, 202,
	205, 209, 210, 211, 216, 231, 236, 237, 238, 239,
	258, 259, 262, 263, 266, 267, 273, 274, 275, 277,
	278, 279, 287, 0, 296, 303, 305, 306, 307, 309,
	318, 319, 320, 321, 329, 335, 349, 350, 369, 370,
	339, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 221, 0, 0, 171,
	229, 227, 0, 0, 0, 272, 338, 0, 0, 0,
	0, 224, 0, 0, 0, 326, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 276, 293, 314, 0, 284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 148, 0,
	0, 0, 212, 0, 0, 0, 0, 286, 0, 333,
	200, 222, 153, 130, 146, 164, 199, 261, 0, 308,
	0, 0, 0, 0, 0, 172, 0, 300, 269, 358,
	0, 0, 299, 225, 348, 0, 0, 357, 0, 0,
	367, 372, 0, 0, 0, 323, 184, 180, 183, 0,
	137, 0, 283, 177, 217, 0, 0, 0, 168, 0,
	0, 0, 322, 345, 134, 247, 346, 371, 155, 340,
	248, 254, 165, 167, 166, 147, 317, 344, 160, 170,
	327, 304, 334, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 311, 310, 0, 207, 0,
	0, 0, 292, 0, 213, 136, 336, 375, 154, 219,
	341, 0, 194, 260, 174, 270, 271, 191, 132, 288,
	241, 242, 240, 243, 198, 0, 0, 0, 290, 313,
	343, 156, 330, 0, 0, 0, 0, 302, 0, 0,
	0, 232, 187, 190, 201, 208, 0, 297, 331, 364,
	0, 149, 138, 337, 356, 161, 312, 315, 373, 298,
	141, 354, 332, 245, 214, 215, 139, 0, 140, 295,
	181, 197, 175, 264, 0, 196, 285, 351, 352, 173,
	376, 150, 366, 143, 713, 365, 257, 0, 256, 368,
	347, 355, 246, 234, 0, 142, 353, 244, 233, 220,
	189, 203, 281, 228, 282, 204, 252, 251, 253, 709,
	235, 0, 0, 0, 328, 361, 377, 158, 0, 316,
	342, 0, 289, 159, 195, 188, 280, 714, 712, 703,
	704, 218, 226, 294, 374, 268, 301, 162, 360, 324,
	185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 144, 223,
	0, 291, 193, 362, 0, 179, 0, 0, 0, 0,
	0, 131, 145, 157, 163, 178, 186, 192, 202, 205,
	209, 210, 211, 216, 231, 236, 237, 238, 239, 258,
	259, 262, 263, 266, 267, 273, 274, 275, 277, 710,
	711, 287, 0, 296, 303, 305, 306, 307, 309, 318,
	319, 320, 321, 329, 335, 349, 350, 369, 370, 339,
	0, 0, 135, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 221, 0, 0, 171, 229,
	227, 0, 0, 0, 272, 338, 0, 0, 0, 0,
	224, 0, 0, 0, 326, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 276, 293, 314, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 250, 148, 0, 0,
	0, 212, 0, 0, 0, 0, 286, 0, 333, 200,
	222, 153, 130, 146, 164, 199, 261, 0, 308, 0,
	0, 0, 0, 0, 172, 0, 300, 269, 358, 0,
	0, 299, 225, 348, 0, 0, 357, 0, 0, 367,
	372, 0, 0, 0, 323, 184, 180, 183, 0, 137,
	0, 283, 177, 217, 0, 0, 0, 168, 0, 0,
	0, 322, 345, 134, 247, 346, 371, 155, 340, 248,
	254, 165, 167, 166, 147, 317, 344, 160, 170, 327,
	304, 334, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 311, 310, 0, 207, 0, 0,
	0, 292, 0, 213, 136, 336, 375, 154, 219, 341,
	0, 194, 260, 174, 270, 271, 191, 132, 288, 241,
	242, 240, 243, 198, 0, 0, 0, 290, 313, 343,
	156, 330, 0, 0, 0, 0, 302, 0, 0, 0,
	232, 187, 190, 201, 208, 0, 297, 331, 364, 0,
	149, 138, 337, 1255, 161, 312, 315, 373, 298, 141,
	354, 332, 245, 214, 215, 139, 0, 140, 295, 181,
	197, 175, 264, 0, 196, 285, 351, 352, 173, 376,
	150, 366, 143, 151, 365, 257, 0, 256, 368, 347,
	355, 246, 234, 0, 142, 353, 244, 233, 220, 189,
	203, 281, 228, 282, 204, 252, 251, 253, 230, 235,
	0, 0, 0, 328, 361, 377, 158, 0, 316, 342,
	0, 289, 159, 195, 188, 280, 255, 152, 206, 325,
	218, 226, 294, 374, 268, 301, 162, 360, 324, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 144, 223, 0,
	291, 193, 362, 0, 179, 0, 0, 0, 0, 0,
	131, 145, 157, 163, 178, 186, 192, 202, 205, 209,
	210, 211, 216, 231, 236, 237, 238, 239, 258, 259,
	262, 263, 266, 267, 273, 274, 275, 277, 278, 279,
	287, 0, 296, 303, 305, 306, 307, 309, 318, 319,
	320, 321, 329, 335, 349, 350, 369, 370, 339, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 221, 0, 0, 171, 229, 227,
	0, 0, 0, 272, 338, 0, 0, 0, 0, 224,
	0, 0, 0, 326, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 276, 293, 314, 0, 284, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 148, 0, 0, 0,
	212, 0, 0, 0, 0, 286, 0, 333, 200, 222,
	153, 130, 146, 164, 199, 261, 0, 308, 0, 0,
	0, 0, 0, 172, 0, 300, 269, 358, 0, 0,
	299, 225, 348, 0, 0, 357, 0, 0, 367, 372,
	0, 0, 0, 323, 184, 180, 183, 0, 137, 0,
	283, 177, 217, 0, 0, 0, 168, 0, 0, 0,
	322, 345, 134, 247, 346, 371, 155, 340, 248, 254,
	165, 167, 166, 147, 317, 344, 160, 170, 327, 304,
	334, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 311, 310, 0, 207, 0, 0, 0,
	292, 0, 213, 136, 336, 375, 154, 219, 341, 0,
	194, 260, 174, 270, 271, 191, 132, 288, 241, 242,
	240, 243, 198, 0, 0, 0, 290, 313, 343, 156,
	330, 0, 0, 0, 0, 302, 0, 0, 0, 232,
	187, 190, 201, 208, 0, 297, 331, 364, 0, 149,
	138, 337, 700, 161, 312, 315, 373, 298, 141, 354,
	332, 245, 214, 215, 139, 0, 140, 295, 181, 197,
	175, 264, 0, 196, 285, 351, 352, 173, 376, 150,
	366, 143, 713, 365, 257, 0, 256, 368, 347, 355,
	246, 234, 0, 142, 353, 244, 233, 220, 189, 203,
	281, 228, 282, 204, 252, 251, 253, 709, 235, 0,
	0, 0, 328, 361, 377, 158, 0, 316, 342, 0,
	289, 159, 195, 188, 280, 714, 712, 703, 704, 218,
	226, 294, 374, 268, 301, 162, 360, 324, 185, 0,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1329, 0, 0, 0, 169, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 144, 223, 0, 291,
	193, 362, 0, 179, 499, 0, 0, 0, 0, 131,
	145, 157, 163, 178, 186, 192, 202, 205, 209, 210,
	211, 216, 231, 236, 237, 238, 239, 258, 259, 262,
	263, 266, 267, 273, 274, 275, 277, 710, 711, 287,
	0, 296, 303, 305, 306, 307, 309, 318, 319, 320,
	321, 329, 335, 349, 350, 369, 370, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 497, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 492, 0,
	487, 0, 0, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 0,
	505, 0, 0, 0, 2321, 0, 513, 481, 0, 517,
	0, 0, 0, 540, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 495, 519, 0, 0, 0, 0, 0, 0, 493,
	494, 496, 523, 0, 525, 531, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2330, 0, 0, 0, 0, 0, 0, 482, 0,
	540, 0, 539, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 497,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 499, 0, 0, 0, 526, 0,
	0, 492, 0, 487, 0, 0, 0, 0, 532, 533,
	500, 0, 0, 0, 483, 484, 485, 486, 488, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 489, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 0, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 0, 0, 0, 0, 513,
	481, 0, 517, 0, 0, 0, 0, 0, 0, 539,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 519, 497, 480, 521, 0,
	0, 0, 493, 494, 496, 523, 501, 525, 531, 0,
	0, 0, 0, 0, 0, 526, 0, 0, 492, 0,
	487, 516, 518, 0, 0, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 502, 0, 0, 0,
	505, 0, 0, 0, 2328, 0, 513, 481, 0, 517,
	0, 482, 0, 540, 0, 0, 0, 479, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	0, 495, 519, 0, 0, 0, 0, 0, 0, 493,
	494, 496, 523, 0, 525, 531, 0, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 532, 533, 0, 0, 0, 0, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 539, 0, 0, 0, 0, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	480, 521, 0, 0, 0, 0, 0, 0, 0, 501,
	0, 0, 0, 0, 0, 0, 0, 0, 526, 0,
	0, 492, 0, 487, 516, 518, 0, 0, 532, 533,
	500, 0, 0, 0, 483, 484, 485, 486, 488, 506,
	507, 511, 512, 529, 528, 527, 530, 534, 537, 536,
	538, 489, 490, 498, 508, 509, 510, 514, 515, 524,
	520, 522, 0, 0, 0, 0, 0, 0, 504, 502,
	0, 0, 0, 505, 0, 0, 0, 0, 0, 513,
	481, 0, 517, 0, 0, 0, 0, 0, 0, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 495, 519, 0, 0, 521, 0,
	0, 0, 493, 494, 496, 523, 0, 525, 531, 36,
	37, 72, 39, 40, 0, 0, 0, 0, 0, 0,
	0, 516, 518, 59, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 41, 63, 64, 0, 0, 0, 0,
	60, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 36, 0, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	41, 532, 533, 0, 0, 0, 0, 483, 484, 485,
	486, 488, 506, 507, 511, 512, 529, 528, 527, 530,
	534, 537, 536, 538, 489, 490, 498, 508, 509, 510,
	514, 515, 524, 520, 522, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 43, 74, 46, 45, 48, 36, 0, 72, 39,
	40, 0, 2772, 0, 0, 0, 0, 2974, 0, 0,
	59, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	41, 521, 49, 77, 76, 0, 0, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 65, 516, 518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	57, 58, 2772, 0, 0, 0, 0, 2960, 43, 74,
	46, 45, 48, 0, 0, 0, 0, 66, 0, 67,
	0, 0, 0, 2773, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 72, 39, 40, 0, 0, 0, 49,
	77, 76, 0, 0, 68, 59, 47, 0, 0, 0,
	0, 78, 0, 0, 0, 41, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 75, 0, 53, 54, 61, 0, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 43, 74,
	46, 45, 48, 81, 2949, 0, 0, 57, 58, 0,
	2774, 0, 0, 2773, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 66, 0, 67, 2772, 0, 49,
	77, 76, 0, 0, 0, 0, 47, 0, 36, 0,
	72, 39, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 68, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 41, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2775,
	75, 73, 53, 54, 61, 0, 62, 57, 58, 0,
	2774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 66, 0, 67, 0, 0, 0,
	0, 0, 0, 43, 74, 46, 45, 48, 36, 0,
	72, 39, 40, 0, 2772, 0, 0, 0, 2773, 2896,
	79, 68, 59, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 41, 0, 49, 77, 76, 0, 0, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 2775,
	75, 0, 53, 54, 61, 0, 62, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 58, 2772, 2774, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 66,
	0, 67, 0, 0, 0, 2773, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 77, 76, 0, 0, 68, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2775, 75, 0, 53, 54, 61,
	0, 62, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 74, 46, 45, 48, 0, 0, 0, 0, 57,
	58, 0, 2774, 0, 0, 2773, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 49, 77, 76, 0, 0, 0, 0, 47, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2775, 75, 73, 53, 54, 61, 0, 62, 57,
	58, 0, 2774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 66, 0, 67, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2775, 75, 0, 53, 54, 61, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
}

var yyPact = [...]int{
	37383, -1000, -354, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1861, -1000, -1000, -1000, -1000,
	-1000, -1000, 1119, 700, -1000, 300, 263, 32917, 641, 630,
	33995, -1000, -1000, -1000, 189, 524, 33995, 470, 495, 1291,
	1727, 1290, 57, -57, -60, 148, 25370, 24826, 32, -1000,
	1912, 1915, -1000, -1000, 574, 62, -1000, -1000, -1000, 22122,
	233, -1000, -1000, 1848, 1859, 1638, -1000, 14576, 574, 574,
	32378, 36151, -1000, 1906, 33995, 12957, -1000, 632, 614, -153,
	547, 547, 313, 547, 547, 640, -1000, 316, 902, -1000,
	-1000, -1000, -1000, 899, 33995, 29144, 549, 33456, 549, 549,
	549, 549, 549, 549, 549, 33995, -1000, 701, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33995, 1280,
	1773, 1012, 209, -1000, -1000, -1000, 1016, -1000, 358, 355,
	416, 347, 107, 1052, 1845, -1000, 1423, 1848, 1848, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 315, 603, 264, 233,
	892, 1808, 1767, 1764, 1191, 1761, 661, 1757, 1583, -31,
	-1000, 1278, 33995, -1000, -1000, 1156, 1149, 1606, 1495, 693,
	1604, -1000, -1000, 387, 515, 1578, 434, 1578, 1578, 1578,
	1578, 1578, -68, 1578, 1578, 1578, 121, 1578, 169, 1578,
	1578, 1578, 1578, 1578, 1309, -1000, -1000, -1000, 404, 1494,
	1542, 1603, 573, -1000, -1000, -1000, -1000, 1607, 1828, 639,
	-1000, -116, 1529, 23200, -1000, 1423, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1299, 1762, 985, 17810, 1699, -1000, -1000, 964, 1894,
	-1000, 21583, 699, -1000, 17810, 3777, 1423, -1000, -1000, 1423,
	-1000, -1000, -1000, 658, -1000, -1000, 19966, 19966, 19966, 19966,
	19966, 19966, 19966, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1423, 1423, 1423,
	1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423,
	1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423,
	1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, -1000,
	-1000, 1423, -1000, 14037, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1423, 1423, 1423, 1423,
	1423, 1423, 1423, 1423, 1423, 1423, 17810, 1423, 1423, 1423,
	1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423, 1423,
	1423, 31839, 29683, 33995, 1449, 1443, -1000, -1000, 692, 1541,
	-123, 35612, -1000, -1000, -1000, -1000, 34534, 28605, 885, -1000,
	-1000, -1000, -1000, 1748, -1000, -1000, 691, -1000, 1861, -1000,
	-1000, 1436, 554, -1000, 5381, 36529, -1000, -1000, -1000, 1582,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33456, 33995,
	298, 1277, 936, 1276, 34534, 34534, -1000, 266, 29144, 29144,
	547, 302, 29144, 294, 1535, 601, 1534, 592, 1301, 33995,
	1797, 1602, 33995, 1275, 1274, 34534, 34534, 29144, 29144, -1000,
	12408, -1000, -1000, 1012, -1000, 5645, 17810, 547, 547, 33995,
	33995, 33995, 33995, 33995, -1000, -1000, 1012, 1012, 1012, 1012,
	993, 1892, 993, -1000, 993, -1000, -1000, 17810, -1000, 19966,
	28066, 763, -1000, -1000, -1000, 1273, 311, -1000, -1000, -1000,
	-1000, -1000, -1000, 1272, -1000, 1730, 661, 661, -1000, 1237,
	661, 1525, -1000, 880, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 661, -1000, 17271, -342,
	-1000, -1000, 1531, -1000, 297, -1000, -1000, 538, 538, 206,
	29144, 29144, 29144, -1000, 1578, 33456, -1000, 1578, 1578, 1578,
	-81, 1578, 1578, -1000, -1000, 1578, -1000, -1000, -1000, -1000,
	-1000, 1578, -1000, -1000, -1000, 1578, 1578, -1000, 1578, 1578,
	-1000, -1000, -1000, -1000, -1000, 29144, 538, 191, 1530, 538,
	29144, 29144, -1000, 105, 102, 99, 95, -1000, -1000, -1000,
	-1000, 93, 92, -1000, -1000, 1638, -1000, -1000, 233, -1000,
	-1000, 33995, -76, 23200, 1529, 1820, 10761, -1000, -1000, -1000,
	1902, 853, 1514, -1000, -1000, 1527, -1000, 1026, 690, 1220,
	1660, -1000, -1000, -1000, 33995, -1000, 17810, 17810, 1150, -1000,
	23739, -1000, -1000, -1000, -1000, 10212, 857, 19966, 1099, 886,
	19966, 19966, 19966, 19966, 19966, 19966, 19966, 19966, 19966, 19966,
	19966, 19966, 19966, 19966, 19966, 1155, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1271, -1000, 233, 1282, 1282, 748,
	748, 748, 748, 748, 748, 25909, 1815, 15654, 15654, 15654,
	1815, 1299, 1299, 15654, 15654, 15654, 15654, 15654, 15654, 15654,
	15654, 1815, 1815, 15654, 1299, 1299, 1299, 1299, 15654, 15654,
	15654, 15654, 33456, 33456, 1815, 15654, 15654, 15654, 1815, 1299,
	1431, 1085, 14037, 15654, 15654, 1299, 17810, 17810, 16732, 16193,
	18349, 15654, 1815, 909, 1085, 34534, -1000, -1000, 19427, -1000,
	-1000, -1000, -1000, -1000, 1299, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 15654, 15654, 15654, 15654, 850, 33995, -1000,
	1489, 1522, -1000, -1000, -1000, 1817, 26988, -1000, 21044, -1000,
	1423, 850, 1468, 29683, 33995, -1000, -1000, 29683, 33995, 9663,
	35073, 1519, -1000, -100, -88, -123, -1000, -1000, 738, -1000,
	-1000, -1000, 13497, -1000, 11310, 1848, 1638, 6918, 11859, -1000,
	36529, 1582, -1000, -45, -1000, -1000, -1000, 1556, -1000, 1556,
	345, 4, 1556, 1556, 1556, 1556, 1556, -1, -1, -1,
	-1, 5, -1000, -1000, -1000, -1000, -1000, 1581, 1580, -1000,
	1556, 1556, 1556, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1561, 344, 1559, 1559, 1559, 1559, 1559, 449,
	449, -1000, 17810, 1588, 1816, 606, 302, 1780, 1796, 1780,
	413, -1000, 688, 1579, -1000, 687, 335, 1505, -1000, 199,
	1370, 33995, -1000, -1000, -1000, -1000, -1000, 33995, 33995, 29144,
	29144, 29144, 566, -1000, 33995, 1526, -1000, -1000, -1000, -1000,
	-1000, 1498, -1000, 1370, -1000, -1000, -1000, -1000, -1000, 1235,
	1085, 1269, 1268, 1808, -1000, -1000, -1000, 998, -1000, -1000,
	-1000, -1000, 1012, 33995, 33995, 33995, 1808, 1012, 1085, 896,
	1590, 1423, 1299, -1000, -1000, 1267, -1000, 19966, 1525, 1525,
	-1000, 1525, 661, 1282, 1525, -1000, 1427, 1790, 1234, 33995,
	-1000, 23200, -36, -1000, -134, 31300, -1000, -1000, -1000, 31300,
	-1000, 121, 162, -1000, 589, -1000, 1425, -1000, -1000, -1000,
	-1000, 1578, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 31300, 159, 190, 31300, 1498, 1890, -1000, -1000, -1000,
	-1000, 1844, -1000, 1815, 1299, 183, -1000, -1000, -1000, 1423,
	1383, 686, -1000, 1654, 985, 985, 17810, -1000, -1000, -1000,
	11310, 1827, -1000, 1671, 1670, 1616, -1000, -1000, 857, 876,
	-1000, -1000, 1137, -1000, -1000, -1000, -1000, 685, 1423, -1000,
	3854, -1000, -1000, -1000, -1000, 1099, 19966, 19966, 19966, 896,
	3854, 3513, 1403, 2682, 748, 765, 765, 750, 750, 750,
	750, 750, 960, 960, -1000, -1000, -1000, 1299, -1000, -1000,
	-1000, 15654, 1402, -1000, -1000, 1085, 681, 1402, 1402, 15654,
	-170, -170, 1402, 1299, 1402, 1402, 1402, 1402, 1299, 1402,
	15654, 15654, 1402, -170, -170, -170, -170, 1402, 1402, 1402,
	1402, 1524, 1523, 15654, 1402, 1402, 1402, 15654, -1000, 17810,
	-1000, 1299, 1402, 1402, -1000, 961, 1125, 822, 1889, 1402,
	819, 1888, 1402, 1084, 19966, 19966, 19966, 1402, 15654, 910,
	-1000, 17810, 1299, -1000, 1422, 1402, 1299, 1520, 1402, 1402,
	245, 1423, -1000, 11310, 29683, 29683, 29683, 29683, 29683, -1000,
	1627, 1625, -1000, 1634, 1621, 1644, 23200, 1404, 1299, 328,
	26988, -1000, 1423, -1000, 22661, 745, 628, 624, 617, 15654,
	1868, 29683, 1486, -1000, 1486, -1000, 679, -1000, -1000, 34534,
	-123, -127, -1000, -1000, 1519, -1000, 1164, -1000, -1000, 1085,
	-1000, 678, 1762, 1815, 1518, 6369, -1000, -1000, -1000, -1000,
	554, -1000, -1000, -1000, 1563, 5142, -1000, 1690, 779, 779,
	778, 1249, 1684, -1000, -1000, 164, -51, -1000, -1000, 1121,
	-1, -1, 1556, 1556, 332, 1556, -1000, -1, -1000, -1000,
	-1000, 738, 1747, 738, 738, 738, 738, -1, 1233, 1233,
	-1000, -1000, -1000, -1000, 1120, -1000, 1561, -1000, 1114, -1000,
	-1000, -1000, -1000, -1000, -1000, 1038, 1600, 33456, -1000, 33995,
	-1000, 1780, -1000, -1000, -1000, 214, -1000, -1000, -1000, 1881,
	-1000, -1000, 33456, 27527, 33456, -1000, -1000, 120, 29144, 197,
	375, 227, -1000, 587, -1000, 586, -1000, -1000, -1000, -1000,
	-1000, -1000, 33995, 29144, -1000, -1000, -1000, -1000, 1868, 1262,
	1261, -1000, -1000, -1000, 993, 1012, -1000, -1000, 19966, 29144,
	-1000, 405, -1000, 3854, -1000, -1000, -1000, 850, 615, -1000,
	-1000, -67, -1000, -1000, 584, 674, 673, 580, -1000, 136,
	29144, -1000, 33456, -1000, 1885, 1884, 157, 1872, 29144, -1000,
	80, 1660, -1000, 1508, -1000, 612, 740, 768, 451, 451,
	-1000, 873, 451, 1738, 1734, 831, -1000, 232, -1000, 10761,
	10761, 1651, -1000, -1000, -1000, 33995, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 9114, 15654, -1000, 896, 3854,
	2895, -1000, 19966, -1000, 1402, 15654, -170, 8565, -170, -170,
	1402, -1000, 30761, -1000, -1000, -170, -1000, -170, -170, -170,
	-170, -170, 1402, 1402, -170, -1000, -1000, -1000, -1000, -170,
	-170, -170, -170, 19966, 19966, 1402, -170, -170, -170, 1299,
	1085, -1000, -1000, -1000, 420, 1155, 420, 19966, 19966, -1000,
	19966, 19966, -1000, -1000, 19966, 3730, 3694, 3633, -230, 1502,
	887, -1000, 17810, 1081, -1000, -1000, -1000, -1000, -1000, -1000,
	1599, 11310, 1423, 7467, -1000, 33456, 1503, -1000, 877, 874,
	1522, 1572, 1598, 1384, -1000, -1000, -1000, -1000, 1624, -1000,
	1623, -1000, -1000, 1549, -1000, -1000, 1504, 1423, 33456, 19966,
	745, -1000, 1423, 1423, 1423, 1299, 1861, 17810, 1486, -1000,
	-1000, 761, -1000, -1000, -118, -110, -1000, -1000, -1000, 10761,
	-1000, 6918, -1000, 6918, -1000, 24278, 555, 1696, 457, -1000,
	1249, -1000, -1000, 1249, -1000, 1249, -1000, -1000, -1000, 1560,
	-1000, 958, -1000, -1000, -1000, -1000, -1000, 1423, -346, 19966,
	1901, -1000, 1689, -1000, 1688, 1687, 1232, -1000, -1000, 1357,
	738, 738, -1, -1000, -1000, 1556, -1000, 738, -1000, 839,
	-1000, -1000, -1000, -1000, 738, 1397, -1000, 1393, 1501, -1000,
	1389, 117, 33995, -1000, -1000, 1812, -1000, -1000, -1000, 1743,
	873, 873, 873, 1597, -1000, -1000, -1000, -1000, 1352, 1500,
	-1000, 5381, 33456, 33456, 33456, -1000, -239, 195, -1000, 29144,
	168, 199, 447, 1260, 33995, 29144, -1000, -1000, -1000, -1000,
	-1000, 1808, -1000, 3854, 1370, -1000, -1000, -1, 33995, -1000,
	29144, 759, 30222, 29144, 155, 158, -1000, 29144, 29144, 1870,
	29144, 1498, 1231, 1616, 183, 4809, 1249, 593, -1000, -1000,
	450, -1000, 4514, 1684, 1259, 37062, 36849, 33456, 1683, 1682,
	1255, 33995, 33456, -1000, -1000, 36742, 1254, 17810, -1000, 33456,
	-1000, -1000, 33456, 672, -1000, -1000, -1000, 324, 14576, -1000,
	-1000, 1299, -1000, 19966, 3854, -170, -1000, -1000, -1000, -1000,
	670, -1000, -1000, -170, -1000, -1000, 1253, -1000, -1000, -1000,
	-1000, -1000, -1000, -170, -170, -1000, -1000, -1000, -1000, -1000,
	3576, 3461, -170, -1000, -1000, -1000, -1000, 1299, 1556, 1556,
	-1000, 1556, 1559, -1000, 1556, 26, 1556, 25, 1299, 1299,
	3294, 3143, 3005, 2597, 1422, 19966, 19966, 19966, 1423, -164,
	-1000, 1085, 17810, -1000, 1782, 1445, 1496, -1000, -1000, 15115,
	1299, 1664, 1383, -1000, 22122, 1356, -1000, 1861, 11310, 17810,
	17810, -1000, -1000, 17810, 1558, -1000, 17810, -1000, -1000, -1000,
	-1000, 33456, 326, -1000, 17810, 1356, 1359, -1000, 33456, 33456,
	33456, -1000, 1848, 1085, -1000, -1000, -1000, -1000, 6369, -1000,
	1351, -1000, 1556, 1556, 1681, -1000, 779, -1000, -1000, -1000,
	-1000, 33456, -1000, 19966, 1807, 3854, -125, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 738, -1000, -1000, -1000, -1000, -1000,
	-1, 1228, -1, 1105, -1000, 1089, -1000, -1000, -293, 1554,
	233, -1000, 873, 838, 826, 1227, 33995, 144, 27527, -1000,
	5381, 5381, 5381, 154, 138, -1000, 952, -1000, -1000, -1000,
	1225, 1223, 1222, 1370, 223, 949, 181, -1000, 1806, -1000,
	-1000, 1012, -55, -1000, 158, -1000, -1000, -1000, 158, -1000,
	-1000, 188, 1498, 1498, 29144, 1498, -1000, -1000, -1000, 36742,
	444, 5381, 5381, 1588, 779, 1680, 457, -1000, -1000, -1000,
	-1000, -1000, -1000, 1251, -1000, 723, -1000, 577, 444, 36742,
	1085, 799, 1789, 10761, -1000, -1000, 33456, 1788, 29683, 17810,
	1858, 17810, 33456, -1000, -1000, 3854, -1000, 8016, -1000, 828,
	-1000, -1000, -1000, 19966, 19966, -1000, -1000, -1000, 353, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19966, 19966, 19966,
	19966, -1000, 1422, 1422, 1422, 19966, 1299, 1219, 1085, 1677,
	-1000, 1423, -1000, -1000, 1423, 222, -1000, 33456, 1848, -1000,
	1085, 1085, 1085, 33456, 1085, 1343, -1000, 1423, 20505, -1000,
	23200, 1341, 1341, 1341, -1000, 572, 24278, 1786, 1786, -1000,
	1249, 1337, 1422, 1423, -1000, 1423, 1423, -1000, 738, -1000,
	738, 1347, 1338, -1000, 24278, -1000, -1000, 821, -1000, -1000,
	-1000, -1000, -1000, 1843, -1000, 144, -1000, 1216, 292, 308,
	-1000, 275, 274, 272, 265, 254, -1000, -1000, -1000, -1000,
	443, 154, -1000, -70, 1070, 824, 1744, 138, -1000, 1061,
	1045, 1040, 1017, 204, -1000, -1000, -1000, -1000, 224, 199,
	-1000, 445, 1214, -1000, 1712, 1708, 1802, 1802, 152, 1498,
	1434, 1313, -1000, -1000, 1250, -1000, -1000, 1552, 1249, 1550,
	-1000, 1248, -1000, -1000, 33456, -1000, 444, 1779, 1778, 1423,
	-1000, 14576, 329, -1000, 33456, 1486, 1110, 17810, -172, 1085,
	1493, -1000, 1801, -1000, -1000, 1861, 1857, 1422, 1422, -1000,
	-1000, 1422, 1422, 1422, 1422, -1000, -1000, -1000, 141, -1000,
	-1000, 1899, -1000, 1496, 1423, -1000, 233, -1000, -1000, 1335,
	-1000, 33456, -1000, -1000, 745, -1000, -1000, -1000, 572, -1000,
	1247, 873, 1213, -1000, -1000, -1000, -1000, 426, -349, 19966,
	-1000, -1000, -1000, -1000, 1329, -1000, 233, -1000, -1000, 336,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1722, 1720, 314,
	-1000, 1212, 1202, -1000, 452, 1101, 662, -176, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 437,
	1244, -1000, 179, -1000, -1000, 563, 1698, 1700, 1854, -1000,
	29144, -1000, -1000, 29683, -1000, -1000, 164, 164, 24278, 1588,
	24278, -1000, -1000, -1000, 19966, -1000, 784, -1000, -1000, 1497,
	1866, 1864, 1853, 1387, -1000, 1085, -1000, 33456, 33456, 1423,
	835, 17810, -1000, -1000, -1000, -1000, -1000, -1000, 1299, 192,
	-262, 11310, 1496, 1299, -1000, -1000, -1000, -1000, -1000, 1013,
	-1000, 33995, -1000, -1000, -1000, 1422, 572, -1000, 323, 37852,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 992, -1000,
	-1000, 1064, 427, 175, -1000, 1800, -1000, 1549, 979, 1708,
	1852, 1705, 1702, -1000, 1201, -245, 1486, 1322, 1548, 1319,
	3854, 1316, -1000, 33456, -1000, 1864, -172, 17810, 17810, -172,
	17810, 1493, -1000, -1000, 1299, 207, 207, 1487, -1000, 1643,
	-236, -272, 1485, -1000, -1000, 1546, -349, -1000, 572, -1000,
	339, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17810, 17810, 5820, 37852, 163, -1000, 161, -1000,
	-1000, -1000, 1196, -1000, 1710, -1000, 1169, -1000, 1851, 1850,
	-1000, 196, 1866, 572, 24278, 572, -1000, 784, 1663, -172,
	-1000, -1000, 1419, -1000, -1000, -1000, -1000, 208, -1000, 817,
	317, 798, -1000, 1282, -1000, -1000, 1641, -1000, 33456, -1000,
	-1000, 1241, 1240, -1000, 1069, 1050, 234, 219, 3573, -1000,
	-1000, -1000, -1000, -355, -1000, -1000, -1000, -1000, -1000, -1000,
	1166, 1087, 26448, 1864, -1000, 1308, -1000, -1000, 359, -1000,
	941, -1000, -1000, -1000, -1000, -1000, 33456, -246, 1298, -1000,
	-1000, -1000, 1056, -1000, 17810, 37852, 1840, 1833, 1832, 1777,
	10761, 37772, -1000, -1000, -1000, -1000, 139, 1370, -172, 572,
	365, 208, -1000, -264, 1596, 319, 918, 37852, -1000, 1047,
	-356, 464, 233, 469, 19966, -1000, -1000, -1000, 29144, -1000,
	-1000, 1423, -1000, -278, 1595, 1592, 1883, -1000, -1000, -1000,
	-1000, -1000, -1000, 37852, -1000, -357, 37852, 226, -1000, -1000,
	-1000, 37675, -1000, -1000, -1000, -1000, 200, -1000, -1000, 3854,
	1370, 18888, -1000, -1000, 1898, -1000, 1896, 597, 597, -1000,
	-358, 37560, -359, 530, 37852, 1086, -1000, 17810, -1000, 469,
	-1000, 1422, 1299, -1000, -1000, -1000, 425, 1033, -1000, 37480,
	916, 37852, -1000, -360, 522, 37852, -1000, 945, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 4092, -1000, -363, 37852,
	472, 3161, -366, -1000, 461, 37852, -1000,
}

var yyPgo = [...]int{
	0, 2313, 2310, 98, 2309, 277, 2303, 2302, 2301, 51,
	2300, 17, 15, 13, 24, 2299, 2050, 2039, 2036, 2031,
	2024, 2298, 7, 2297, 2295, 2021, 2294, 2293, 2013, 2008,
	1993, 1990, 2292, 2291, 2290, 1985, 1983, 1977, 19, 2289,
	28, 2284, 2, 155, 172, 2282, 3, 2279, 2276, 6,
	2275, 2274, 1975, 2273, 2272, 2270, 109, 2268, 1967, 1956,
	2267, 1954, 1946, 2262, 2260, 1941, 1936, 1932, 2253, 180,
	2251, 2250, 2248, 181, 118, 171, 2246, 2245, 2244, 120,
	82, 1917, 129, 55, 124, 737, 2243, 36, 66, 276,
	2240, 152, 2239, 145, 2238, 185, 2237, 149, 80, 110,
	2236, 2235, 177, 2234, 2233, 2232, 146, 2229, 2228, 176,
	2263, 2227, 2226, 169, 2225, 74, 173, 48, 43, 2224,
	2221, 2217, 2215, 2213, 22, 128, 2212, 123, 158, 2210,
	2209, 90, 2208, 2204, 189, 2199, 2193, 2187, 147, 44,
	37, 2186, 54, 2180, 69, 75, 2178, 67, 2177, 154,
	2175, 2165, 30, 26, 41, 63, 2164, 58, 2163, 148,
	182, 1184, 52, 21, 46, 47, 2160, 31, 23, 11,
	53, 20, 72, 85, 143, 114, 2159, 38, 45, 2158,
	137, 107, 101, 40, 2157, 163, 2155, 97, 165, 144,
	142, 164, 2153, 2150, 2149, 1127, 2147, 139, 87, 2143,
	111, 953, 184, 122, 2142, 113, 2141, 2140, 2139, 2136,
	2135, 100, 112, 2134, 2132, 183, 178, 192, 50, 35,
	1428, 1953, 12, 167, 2131, 49, 2130, 2129, 2128, 3312,
	116, 91, 119, 175, 2127, 117, 42, 60, 2126, 2125,
	2124, 2122, 2121, 2120, 1557, 2119, 2117, 2115, 2112, 84,
	190, 2111, 136, 135, 132, 2110, 162, 33, 2103, 2102,
	140, 106, 2098, 2097, 2096, 2095, 141, 94, 168, 2093,
	125, 134, 121, 2092, 93, 2089, 2086, 59, 68, 2083,
	2082, 2081, 104, 105, 2077, 79, 34, 29, 73, 32,
	2076, 2075, 95, 138, 2074, 27, 2073, 4, 5, 8,
	2072, 2067, 2065, 2063, 2061, 2057, 2056, 96, 2055, 2054,
	70, 2053, 2052, 2048, 39, 2041, 2029, 2027, 156, 127,
	88, 170, 207, 10, 2018, 2015, 9, 2011, 133, 1996,
	71, 1987, 57, 1981, 1973, 61, 1969, 1965, 62, 1961,
	1958, 174, 1591, 3100, 1950, 166, 160, 56, 89, 1948,
	1939, 0, 623, 186, 157, 1923, 1894,
}

var yyR1 = [...]int{
	0, 350, 350, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 68, 3, 3, 10,
	4, 4, 4, 5, 8, 8, 8, 8, 9, 9,
	9, 9, 9, 179, 179, 90, 90, 89, 89, 95,
	6, 6, 7, 7, 11, 11, 72, 72, 12, 13,
	13, 13, 13, 353, 353, 104, 104, 102, 102, 103,
	103, 180, 180, 14, 14, 14, 185, 185, 190, 190,
	190, 193, 193, 193, 193, 169, 170, 171, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	324, 324, 333, 333, 333, 334, 334, 332, 332, 332,
	332, 332, 336, 336, 337, 337, 335, 335, 335, 335,
	339, 339, 340, 340, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 327, 327,
	327, 35, 35, 35, 35, 36, 36, 36, 36, 36,
	36, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 342, 342, 343, 343, 344, 344, 345, 345,
	345, 345, 346, 346, 346, 346, 346, 347, 347, 347,
	347, 347, 347, 347, 348, 348, 349, 349, 2, 305,
	305, 306, 306, 307, 307, 307, 307, 308, 308, 309,
	309, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 26, 217, 217, 214, 214, 214, 215, 215, 216,
	216, 216, 326, 326, 326, 320, 320, 320, 322, 322,
	321, 321, 321, 323, 323, 328, 328, 328, 328, 328,
	330, 330, 330, 330, 330, 330, 331, 331, 331, 329,
	329, 50, 50, 51, 51, 51, 158, 158, 158, 15,
	15, 15, 15, 15, 21, 23, 23, 39, 39, 40,
	24, 24, 24, 24, 41, 41, 42, 27, 27, 27,
	27, 27, 27, 48, 48, 48, 47, 47, 46, 46,
	46, 46, 46, 46, 25, 25, 25, 25, 49, 49,
	44, 44, 43, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 28, 28, 28, 28, 28,
	28, 20, 304, 304, 304, 38, 38, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 54, 279, 280,
	280, 280, 280, 280, 280, 280, 280, 267, 267, 268,
	257, 257, 257, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 236, 236, 236, 236, 240, 240, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 239,
	239, 239, 239, 239, 239, 239, 239, 241, 241, 241,
	241, 241, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 243, 243, 243,
	243, 243, 243, 243, 243, 266, 266, 244, 244, 260,
	260, 261, 261, 261, 258, 258, 259, 259, 247, 248,
	262, 249, 249, 249, 250, 250, 250, 251, 251, 256,
	256, 255, 255, 255, 255, 255, 255, 252, 252, 252,
	252, 253, 253, 254, 265, 265, 265, 265, 265, 245,
	37, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 291, 291, 207, 207, 208, 208, 269,
	269, 289, 289, 288, 288, 287, 287, 287, 278, 278,
	284, 284, 284, 284, 284, 284, 284, 284, 273, 273,
	273, 272, 272, 274, 274, 277, 277, 286, 286, 285,
	285, 270, 270, 270, 292, 292, 292, 292, 292, 271,
	271, 271, 271, 293, 275, 275, 276, 276, 276, 298,
	299, 297, 297, 297, 297, 297, 121, 121, 121, 281,
	281, 281, 282, 282, 282, 283, 283, 283, 302, 302,
	301, 301, 52, 53, 57, 57, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 157, 157, 157, 212, 212, 296, 294, 294,
	295, 295, 17, 17, 55, 55, 325, 325, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 300, 300, 300,
	19, 19, 58, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 86, 199,
	199, 198, 198, 197, 197, 197, 200, 200, 200, 200,
	234, 234, 234, 60, 60, 64, 64, 67, 67, 67,
	65, 66, 29, 30, 30, 30, 30, 31, 213, 213,
	62, 62, 63, 63, 63, 63, 78, 78, 355, 355,
	61, 356, 69, 70, 70, 71, 71, 71, 203, 203,
	75, 75, 75, 73, 73, 73, 74, 74, 80, 80,
	84, 84, 84, 84, 83, 83, 83, 83, 160, 160,
	165, 226, 226, 141, 141, 161, 161, 166, 166, 166,
	167, 167, 168, 168, 168, 168, 168, 163, 163, 162,
	162, 164, 129, 129, 224, 224, 224, 223, 223, 223,
	223, 88, 88, 91, 91, 93, 93, 93, 93, 93,
	96, 143, 143, 114, 114, 115, 115, 115, 115, 115,
	127, 127, 178, 178, 177, 177, 181, 181, 92, 94,
	94, 94, 94, 99, 99, 100, 100, 101, 101, 211,
	211, 231, 231, 231, 105, 105, 105, 107, 106, 106,
	106, 106, 108, 108, 109, 109, 111, 112, 112, 110,
	110, 116, 116, 113, 117, 117, 117, 117, 118, 118,
	85, 85, 85, 85, 85, 85, 85, 196, 196, 120,
	120, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 137, 137, 137, 137, 137, 137, 122, 122, 122,
	122, 122, 122, 122, 79, 79, 138, 138, 138, 98,
	97, 97, 82, 82, 81, 81, 139, 139, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 132, 132, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	354, 354, 134, 133, 133, 133, 133, 133, 133, 76,
	76, 76, 76, 76, 232, 232, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 150, 150, 77, 77, 148, 148, 149, 151, 151,
	147, 147, 147, 124, 124, 124, 124, 124, 124, 124,
	124, 126, 126, 126, 152, 152, 140, 140, 87, 153,
	153, 154, 155, 155, 156, 156, 159, 172, 172, 172,
	173, 173, 173, 173, 128, 128, 174, 174, 174, 123,
	123, 123, 123, 123, 123, 123, 176, 176, 175, 175,
	175, 175, 182, 182, 142, 142, 145, 145, 144, 146,
	183, 183, 187, 187, 184, 184, 188, 188, 188, 188,
	191, 191, 192, 192, 192, 189, 189, 189, 186, 186,
	186, 228, 228, 228, 194, 194, 204, 204, 201, 201,
	202, 202, 195, 195, 246, 246, 210, 210, 209, 209,
	209, 205, 205, 205, 206, 206, 225, 225, 221, 221,
	227, 227, 222, 222, 229, 229, 230, 230, 303, 303,
	263, 263, 313, 313, 264, 264, 314, 314, 316, 316,
	311, 311, 312, 312, 315, 315, 32, 317, 317, 318,
	318, 319, 319, 319, 319, 33, 34, 34, 34, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 219, 219,
	219, 219, 219, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 351, 352,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 4, 7, 5,
	1, 14, 3, 8, 0, 2, 3, 2, 6, 5,
	5, 3, 2, 0, 2, 2, 3, 1, 3, 4,
	1, 3, 1, 3, 7, 8, 1, 1, 9, 8,
	7, 6, 6, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 4, 5, 1, 3, 3, 2,
	2, 2, 2, 2, 1, 0, 0, 0, 2, 3,
	3, 11, 9, 11, 5, 5, 16, 12, 9, 4,
	0, 3, 0, 2, 2, 1, 3, 1, 1, 2,
	2, 2, 0, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 2, 3, 3, 5, 3, 3, 4,
	5, 4, 4, 2, 2, 2, 2, 2, 0, 2,
	2, 9, 9, 5, 7, 7, 7, 7, 8, 4,
	6, 2, 3, 2, 3, 3, 3, 4, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 2,
	2, 2, 3, 3, 2, 3, 3, 2, 2, 2,
	2, 2, 1, 3, 0, 3, 1, 3, 0, 1,
	1, 1, 1, 3, 1, 3, 3, 0, 2, 5,
	5, 5, 7, 5, 0, 3, 0, 3, 4, 0,
	1, 1, 3, 2, 3, 3, 3, 0, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 3, 3,
	3, 4, 2, 3, 3, 3, 3, 0, 3, 0,
	3, 3, 1, 1, 1, 3, 2, 1, 1, 3,
	3, 2, 1, 1, 3, 1, 2, 5, 4, 6,
	4, 3, 3, 6, 5, 5, 4, 3, 5, 1,
	3, 1, 1, 1, 1, 1, 0, 2, 2, 1,
	1, 1, 1, 1, 4, 5, 8, 1, 2, 5,
	7, 10, 8, 11, 1, 2, 5, 5, 5, 5,
	6, 3, 5, 1, 1, 1, 1, 3, 1, 1,
	1, 2, 1, 1, 2, 4, 2, 4, 2, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 4, 3, 2,
	4, 3, 0, 2, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 5, 4, 1,
	1, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	0, 1, 1, 0, 2, 3, 2, 2, 2, 2,
	2, 6, 8, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 3, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 3, 3, 2, 4, 5, 2,
	3, 4, 2, 2, 3, 3, 3, 3, 3, 4,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 2, 3,
	1, 0, 3, 3, 0, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 4,
	4, 4, 4, 4, 2, 1, 2, 1, 2, 2,
	3, 2, 2, 2, 2, 1, 1, 1, 1, 3,
	2, 1, 1, 0, 3, 1, 1, 0, 1, 5,
	4, 0, 1, 1, 2, 2, 3, 2, 0, 1,
	2, 4, 3, 3, 5, 3, 2, 2, 1, 1,
	1, 1, 1, 0, 1, 0, 1, 1, 3, 3,
	3, 3, 3, 1, 10, 11, 11, 12, 12, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 0, 2,
	0, 2, 1, 5, 1, 3, 5, 4, 3, 5,
	3, 8, 10, 3, 3, 3, 3, 3, 5, 4,
	5, 1, 2, 2, 4, 3, 6, 5, 3, 8,
	2, 2, 0, 1, 2, 0, 1, 7, 1, 3,
	8, 8, 3, 3, 3, 5, 3, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 0, 1, 1,
	3, 2, 3, 3, 4, 3, 5, 5, 5, 4,
	4, 4, 2, 2, 2, 6, 2, 4, 4, 4,
	5, 8, 6, 3, 5, 4, 2, 4, 3, 2,
	4, 5, 6, 2, 6, 6, 3, 3, 3, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 3, 2,
	0, 1, 1, 2, 1, 1, 1, 2, 4, 4,
	1, 1, 2, 3, 4, 4, 5, 3, 1, 1,
	3, 3, 1, 1, 1, 1, 0, 3, 1, 1,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	0, 1, 1, 0, 1, 1, 0, 1, 3, 5,
	1, 1, 3, 5, 1, 2, 3, 5, 2, 2,
	6, 0, 1, 0, 3, 0, 1, 0, 2, 2,
	4, 1, 2, 2, 2, 2, 2, 0, 2, 1,
	3, 3, 1, 3, 0, 1, 2, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 4, 1, 3, 1,
	2, 2, 4, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 1, 3, 3, 2, 1, 1,
	3, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 3, 6, 6, 6, 8,
	8, 8, 8, 4, 6, 7, 7, 7, 9, 4,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 1, 3, 1, 0,
	2, 1, 0, 3, 1, 3, 2, 0, 1, 1,
	0, 2, 4, 4, 1, 1, 0, 2, 4, 2,
	4, 1, 3, 5, 4, 6, 0, 3, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 1, 3, 1, 2, 2, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 3, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 1, 0, 4, 0, 1, 0, 3, 0, 3,
	0, 4, 0, 3, 0, 3, 3, 1, 3, 2,
	4, 1, 2, 1, 2, 2, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -350, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -58, -59, -60, -64, -65, -66,
	-62, -61, -25, -28, -20, -68, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -4, 6, 7, -72, 9,
	10, 30, -54, 178, -53, 181, 180, 216, 182, 209,
	64, 339, -67, 342, 343, -355, -213, 267, 268, 20,
	37, 344, 346, 31, 32, 230, 284, 286, 311, -5,
	-90, -6, 8, 438, 179, 340, 211, 210, 26, 487,
	-351, 68, 554, -155, 15, -69, -356, -69, -69, -69,
	-69, -69, -279, -211, 106, 68, 23, -206, -217, 87,
	429, 186, -215, 280, 282, -204, -205, -214, 240, 250,
	44, 197, 196, 251, 187, 280, 187, 188, 190, 429,
	186, 223, 222, 280, 282, 187, -110, -229, 72, -219,
	200, 498, 305, 484, 251, 549, 292, 237, 339, 353,
	355, 347, 382, 370, 485, 499, 201, 262, 185, 338,
	368, 371, 415, 199, 295, 255, 318, 500, 404, 410,
	265, 342, 424, 501, 202, 259, 261, 260, 245, 454,
	266, 36, 212, 366, 301, 359, 270, 240, 502, 492,
	234, 357, 28, 235, 233, 427, 503, 329, 412, 387,
	330, 304, 504, 489, 299, 411, 362, 358, 311, 203,
	197, 331, 505, 388, 392, 506, 416, 285, 332, 507,
	508, 509, 189, 291, 351, 352, 510, 241, 418, 296,
	386, 33, 198, 486, 48, 220, 419, 38, 390, 37,
	396, 511, 328, 385, 380, 397, 512, 513, 514, 515,
	309, 307, 308, 310, 384, 350, 379, 252, 257, 53,
	184, 394, 393, 395, 258, 414, 375, 373, 516, 517,
	300, 204, 518, 519, 360, 18, 520, 521, 422, 215,
	302, 303, 42, 522, 523, 524, 110, 525, 526, 527,
	413, 389, 391, 239, 114, 363, 194, 528, 306, 409,
	315, 488, 289, 111, 420, 356, 530, 334, 346, 219,
	214, 423, 324, 531, 268, 532, 533, 534, 206, 535,
	283, 282, 343, 316, 112, 344, 406, 263, 536, 537,
	538, 539, 249, 232, 426, 417, 52, 267, 401, 540,
	319, 335, 349, 196, 269, 541, 293, 340, 43, 7,
	256, 297, 407, 317, 264, 250, 253, 377, 221, 542,
	543, 364, 365, 383, 348, 378, 341, 224, 216, 109,
	425, 402, 490, 280, 336, 372, 369, 227, 376, 544,
	545, 254, 228, 345, 421, 294, 367, 403, 187, 131,
	371, 415, 178, 405, 406, 412, -273, 413, 222, 225,
	-234, 187, -199, 404, 285, 306, 459, 228, 229, 188,
	189, 33, 417, 416, 408, -229, 191, 345, -78, 182,
	217, -110, -49, 72, 269, -49, 30, 72, 72, 36,
	72, 344, 407, 407, 75, 488, 231, 21, -342, -323,
	315, -341, -321, 179, 178, 10, 180, 320, 321, 322,
	188, 8, 31, 529, 205, 323, 324, 6, 209, 325,
	326, 223, 9, 327, -326, 74, 72, -219, 21, -342,
	-323, 315, -208, -207, 337, 396, 6, -71, 5, -195,
	192, 341, -89, 497, -95, -231, -229, -220, 74, 298,
	208, 288, 399, 455, 456, 457, 458, 231, 459, 472,
	473, 97, 229, 320, 321, 312, 322, 207, 474, 115,
	238, 217, 277, 408, 276, 281, 460, 461, 475, 476,
	477, 462, 463, 287, 478, 479, 552, 290, 553, 313,
	481, 529, 482, 323, 480, 325, 226, 466, 465, 464,
	467, 326, 449, 450, 468, 51, 470, 469, 471, 190,
	81, -3, -173, 17, 16, -75, 54, 55, -70, -83,
	122, -85, -229, -119, 89, -125, 29, 72, -219, 24,
	-124, -220, -120, -147, -146, -98, 131, -233, 120, 121,
	128, 90, 174, -132, -130, -131, -133, -135, -136, 74,
	73, 82, 75, 76, 77, 78, 83, 455, 456, 457,
	458, 459, 472, 473, 207, 474, 217, 460, 461, 475,
	476, 477, 462, 463, 478, 479, 481, 482, 480, 466,
	465, 464, 467, 449, 450, 468, 470, 469, 471, 84,
	85, -221, -144, -351, 132, 133, 134, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
	148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 58, 59, 186, 439,
	440, 441, 442, 443, 483, 447, 92, 47, 428, 437,
	436, 435, 433, 434, 430, 432, 431, 193, 429, 126,
	438, -195, -195, 11, -102, -103, -110, -113, -229, -184,
	341, -191, -188, 416, 417, -189, -192, -186, -147, 396,
	526, 527, 415, 371, 414, -221, -229, -2, -5, 6,
	-110, -280, -268, -271, -222, 202, -293, -221, -218, 199,
	72, -219, 298, 183, 208, 179, 88, 491, 23, 25,
	288, 399, 455, 91, 131, 456, 457, 458, 16, 20,
	92, 130, 81, 439, 231, 459, 178, 62, 430, 432,
	428, 429, 405, 29, 10, 26, 210, 244, 22, 124,
	180, 95, 96, 97, 229, 213, 320, 321, 24, 211,
	312, 85, 322, 207, 115, 238, 19, 65, 217, 277,
	11, 408, 225, 548, 284, 13, 453, 113, 276, 14,
	281, 193, 192, 108, 242, 188, 60, 8, 174, 27,
	105, 56, 460, 461, 494, 45, 230, 495, 58, 106,
	17, 433, 434, 31, 483, 462, 218, 496, 463, 126,
	247, 63, 50, 287, 89, 83, 552, 34, 86, 66,
	333, 87, 15, 243, 61, 451, 290, 553, 313, 222,
	529, 246, 497, 205, 107, 323, 181, 438, 314, 286,
	59, 186, 6, 448, 30, 209, 325, 248, 226, 466,
	465, 464, 467, 550, 57, 441, 442, 468, 326, 546,
	187, 94, 449, 450, 191, 223, 84, 5, 44, 32,
	9, 327, 64, 67, 435, 436, 437, 47, 51, 470,
	469, 471, 190, 551, 93, 12, 452, 487, 188, 190,
	438, -202, 193, -202, 223, 222, -216, 248, -202, -202,
	187, -215, 98, 98, -55, -110, -325, -320, -326, -201,
	193, -221, -201, -201, -201, -201, -201, -201, -201, -110,
	175, -110, 72, 30, -200, 106, 12, 429, 186, 187,
	222, 223, 190, -275, 11, 108, 226, 226, 226, 227,
	226, -198, 407, 409, 224, 410, 411, 12, -86, 106,
	19, -351, -173, -173, 72, 344, 191, -63, -3, -13,
	-11, -12, -3, 98, -127, 23, 30, 30, 74, 51,
	30, -44, -43, -45, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 30, -304, 68, -263,
	396, 72, -317, -318, -110, 75, 75, 66, 66, 69,
	191, 69, 66, -343, 316, 68, -343, 282, 316, 317,
	250, 280, 190, -343, -343, 282, -343, -343, -343, -343,
	-343, 407, -343, -343, -343, 318, 319, -343, 405, 190,
	-343, -343, -343, -343, -343, 71, 66, 69, 306, 66,
	11, 66, -290, 131, 329, 330, 331, 332, 328, 306,
	333, 334, 335, 226, 336, -69, -7, -5, -351, 21,
	22, 187, 420, 69, -89, -176, -351, -352, 70, -174,
	19, 31, -128, 75, 78, -156, -159, -85, -229, 50,
	-73, 21, 22, 80, 11, -224, 88, 87, 105, -223,
	23, 72, -219, -220, 74, 175, -85, -122, 108, 89,
	106, 107, 91, 117, 116, 127, 120, 121, 122, 123,
	124, 125, 126, 118, 119, 130, 98, 99, 100, 101,
	102, 103, 104, -196, -351, -98, -351, 176, 177, -125,
	-125, -125, -125, -125, -125, -125, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -351, -351, -351, -351, -351, -351, -3,
	-139, -85, -351, -351, -351, -351, -351, -351, -351, -351,
	-351, -351, -351, -150, -85, -351, -354, -134, -351, -354,
	-134, -354, -134, -354, -351, -354, -134, -354, -134, -354,
	-354, -134, -354, -351, -351, -351, -351, -112, 27, -110,
	-88, -91, -93, -94, -114, -97, -351, -92, -110, -98,
	72, -110, -102, -353, 69, 11, 67, -353, 69, 175,
	69, -185, -190, 418, 420, 341, -189, -189, -228, -221,
	74, 29, 98, 30, 175, -155, -69, 70, 69, -271,
	202, 199, -236, -240, -242, -241, -243, -238, -239, 368,
	371, 375, 373, 369, 374, 131, 372, 377, 378, 379,
	380, 381, 382, 383, 384, 385, 386, 387, 30, 212,
	364, 365, 366, 367, 388, 389, 390, 391, 392, 393,
	394, 395, 347, 370, 485, 348, 349, 350, 351, 352,
	353, 355, 356, 357, 358, 359, 360, 361, 362, 72,
	-220, -293, 68, -221, -110, -217, -215, 72, 89, 72,
	-109, -221, -229, -116, -221, -229, 249, -329, -328, -320,
	-323, -202, -216, -320, 254, 252, 253, 69, 191, 69,
	191, 71, -102, 24, 66, -104, -110, 72, 72, -109,
	-116, -322, -320, -323, -230, -229, -218, -200, 74, -233,
	-85, -202, -202, -110, -110, -110, -110, -110, -200, -200,
	-200, -200, -197, 11, 108, 11, -197, -197, -85, -125,
	-320, 431, 122, 72, 72, 344, 72, 34, -44, -44,
	74, -44, 69, 98, -44, 70, -139, -303, 547, 69,
	-319, 23, 420, 421, 397, -345, 187, 225, 222, -345,
	-341, 324, -322, -321, -320, -343, -344, -221, -343, -343,
	-343, 407, -343, -343, -343, -343, -343, -343, -343, -343,
	-326, -345, 284, 69, -345, -322, -320, 328, 328, 328,
	328, 328, 328, -75, -3, -110, 421, 422, -95, 23,
	-175, -222, 9, 108, 69, 18, 69, -172, 25, 26,
	175, -126, 51, 75, 78, -203, 49, -110, -85, -85,
	-137, 83, 89, 84, 85, -223, 122, -230, -222, -218,
	-125, -138, -144, -98, 79, 108, 106, 107, 91, -125,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -125, -232, 72, 74, 72, -124, -124,
	-221, -73, -81, -84, 122, -85, -229, -81, -81, -73,
	-352, -352, -81, -84, -81, -81, -81, -81, -84, -81,
	-73, -73, -81, -352, -352, -352, -352, -81, -81, -81,
	-81, -221, -221, -73, -81, -81, -81, -73, -352, 69,
	-352, -3, -81, -81, -352, -85, -85, -147, 74, -81,
	-147, 74, -81, -125, 444, 445, 446, -81, -73, -148,
	-149, 93, -147, -352, -125, -81, -82, -81, -81, -81,
	-180, 110, -110, 30, 69, -105, -107, -106, -108, 56,
	60, 62, 57, 58, 59, 63, -211, -88, -96, 47,
	-351, -115, 110, -117, 23, -231, 64, 192, 65, -351,
	-180, 67, -88, -110, -88, -113, -229, 122, -188, -191,
	69, 419, 421, 422, -185, -250, 130, 66, 86, -85,
	-222, -230, -173, -75, -281, -282, -283, -222, 74, 75,
	-268, -269, -270, -271, -284, 202, -292, 194, 196, 197,
	44, -272, 203, 188, 45, -237, -258, 402, -244, 68,
	-244, -244, 376, 368, 371, 369, -244, -244, -244, -244,
	-244, -249, 371, -249, -249, -249, -249, 369, 68, 68,
	-244, -244, -244, -260, 68, -260, 363, -261, 68, -261,
	-261, -261, -261, -293, -293, -85, -225, 67, 23, 190,
	-256, -255, -252, -253, -254, -251, 29, 24, -256, -50,
	237, 208, 175, 68, 175, 240, 241, -324, 69, 29,
	-330, 281, -110, -110, -110, -320, -320, -326, -300, 206,
	201, -110, 69, 69, 74, 72, 72, -127, -276, 11,
	108, -200, -229, -229, -110, -127, -200, -79, 213, 67,
	-354, -352, 72, -125, -43, -124, 70, -111, 27, 74,
	-318, -231, 396, 421, -346, 122, -221, -346, -349, 487,
	191, 70, 69, -343, -346, 302, 284, -346, 11, -291,
	19, -73, -352, -57, -56, 183, 180, 181, 184, 185,
	-296, 399, 179, 234, 233, 219, -97, -351, -352, 69,
	175, 52, -128, -128, -159, -194, 19, 11, 47, 47,
	-74, 57, 83, 84, 85, 175, -351, -138, -125, -125,
	-125, -79, 88, -352, -81, 69, -352, 175, -352, -352,
	-81, -160, 451, -160, -352, -352, -352, -352, -352, -352,
	-352, -352, -81, -81, -352, -160, -160, -160, -160, -352,
	-352, -352, -352, 69, 69, -81, -352, -352, -352, -82,
	-85, -352, -352, -352, 69, 67, 23, 11, 11, -352,
	11, 11, -352, -352, 11, -125, -125, -125, -352, -81,
	-151, -149, 95, -85, -352, -352, -352, -352, -352, -352,
	-123, 30, 47, -351, -3, -351, -183, -187, -147, -218,
	-91, -93, -93, -91, -93, 56, 56, 56, 61, 56,
	61, 56, -106, -231, -352, -352, -143, 236, -351, 34,
	-231, -117, 188, 188, 188, -82, -118, 12, -88, -118,
	-118, 175, -190, -193, 423, 420, 426, 72, 74, 175,
	-174, 69, -283, 98, -271, 68, 72, -277, -220, 45,
	-272, 188, 45, -274, -272, -272, -277, 72, -277, 45,
	83, 89, -247, -248, -262, -265, -245, 23, 548, 29,
	66, 399, 194, 45, 44, 197, 81, -259, 403, 75,
	-249, -249, -244, -244, -244, 376, -244, -249, -250, 30,
	-250, -250, -250, -250, -249, -266, 74, -266, 75, -260,
	75, 70, 66, -221, -169, -110, -253, -252, -254, 371,
	415, 130, 427, -51, 8, 9, 10, -221, -305, -306,
	-307, -221, 108, 242, 243, -221, -333, 314, -328, 282,
	291, 88, 16, 487, 191, 191, -110, -320, -118, 72,
	72, -197, -200, -125, -323, 228, 229, -180, 187, -319,
	191, 175, 175, 191, 305, -322, -221, 11, 11, 302,
	11, -322, 338, -203, 69, -212, -272, -302, -270, -271,
	-301, 195, 202, 203, -212, 202, 199, -272, 203, 194,
	195, -209, -272, 191, 23, -212, -212, -278, 98, -212,
	33, 33, 110, -222, -222, 53, -110, -80, -170, 122,
	-222, -82, -79, 88, -125, -352, -84, -161, -160, 122,
	-230, -161, -161, -352, -221, -165, -351, -160, -161, -161,
	-160, -160, -160, -352, -352, -160, -161, -161, -161, -161,
	-125, -125, -352, -161, -161, -161, -352, -235, 131, 368,
	212, 366, 359, 386, 373, 401, 364, 402, -232, -235,
	-125, -125, -125, -125, -125, 11, 11, 11, 484, -155,
	97, -85, 94, -182, 66, -183, -142, -145, -144, -351,
	-3, -352, -175, 6, 487, -181, -221, -118, 69, 98,
	98, -100, -99, 66, 67, -101, 66, -99, 56, 56,
	-178, 68, 69, -144, -351, -181, -125, -117, -351, -351,
	-351, -352, -155, -85, -118, 420, 424, 425, -282, -283,
	-286, -285, -221, -220, 194, -292, 44, -292, -277, -277,
	-277, 68, 83, -351, 549, -125, 9, 45, 45, 45,
	74, 70, -250, -250, -249, -244, -250, 72, 131, -250,
	70, 69, 70, 69, 70, 69, -121, 503, 89, -110,
	-171, 23, 30, -278, -278, -278, 66, 70, 69, -236,
	-221, -221, -221, -336, 487, 287, -334, -332, 293, 294,
	295, 296, 297, -323, 292, -330, 289, 74, 72, -110,
	-320, -127, -249, -110, -322, 122, 122, -221, -322, 302,
	-348, 487, -322, -322, 11, -322, 74, -74, -56, 68,
	-267, 72, -220, -277, -205, 194, 72, 72, 72, -220,
	72, -220, -221, 45, 45, 72, -110, -221, -267, 72,
	-85, -221, -221, 175, -8, 69, 27, -9, 11, 12,
	13, 14, 452, -83, -352, -125, -161, 175, -161, -226,
	72, -161, -161, 69, 69, -161, -352, -244, -244, -244,
	-261, -244, 352, -244, 352, -352, -352, 19, 19, 19,
	19, -352, -125, -125, -125, -351, -77, 448, -85, 28,
	-182, 69, -352, -352, 47, -352, -352, 69, -155, -187,
	-85, -85, -85, 68, -85, -177, -221, 236, -352, -117,
	-211, -177, -177, -177, -173, 70, 69, -244, -244, 45,
	-274, -177, -125, 23, -131, 449, 450, -250, -249, 74,
	-249, 75, 75, 503, 68, -3, -169, -278, 72, 131,
	72, 131, 74, -110, -308, -309, -310, 81, 486, 89,
	244, 245, 204, 246, 247, 248, -307, -236, -236, -236,
	-339, -340, -338, 290, 312, 313, 298, -337, -335, 307,
	308, 309, 310, 88, 74, 74, 74, -331, 281, 88,
	290, 16, 23, -200, -311, -198, -348, -348, 284, -322,
	-80, -267, -157, 207, 208, -236, -236, -225, -274, 45,
	72, -210, 191, 23, 191, -157, -267, 30, 180, 27,
	-222, -170, -177, -179, 27, -88, -85, 16, -154, -85,
	-162, -164, -221, -170, 122, -141, 110, -125, -125, -249,
	72, -125, -125, -125, -125, -352, -352, -352, -125, -352,
	74, 45, -145, -142, 47, -3, -351, -221, -173, -177,
	70, 69, -144, -115, -231, -352, -352, -352, -288, -287,
	67, 198, 81, -285, -172, -172, -277, 70, -352, -351,
	-250, -250, 70, 70, -286, -169, -171, 72, 131, 19,
	-170, -310, 74, 248, 244, 248, 248, 248, 248, 249,
	-327, 81, 288, -338, 299, 508, 283, 314, 75, 75,
	109, 31, 32, -335, 75, 75, 75, 75, -332, 16,
	487, -330, 289, 74, 74, -312, 38, -314, 39, -347,
	23, -347, 302, 11, 70, 72, -237, -237, 68, -277,
	68, 72, -221, -157, 29, 29, -351, -83, -9, -177,
	-118, -152, 13, -140, -87, -85, -163, 452, 69, 23,
	-155, 16, -352, -352, -352, -352, -352, -352, -76, 108,
	487, 9, -142, -3, 70, -221, -117, -287, 72, -278,
	74, 205, -257, 551, 550, -125, 70, -3, 235, -171,
	36, 36, 240, 241, 74, 74, 29, 300, 174, 29,
	75, 174, 454, 289, 74, 72, 290, -246, 192, -315,
	43, -313, -264, 42, 16, -320, -88, -286, -225, -286,
	-125, -294, -295, 110, -170, -152, -153, 14, 16, -153,
	69, -162, -164, -165, -166, 112, 111, -139, -352, 485,
	63, 488, -183, -352, 75, -110, -352, -289, -288, -169,
	236, -22, -3, -11, -12, -13, -14, -16, -52, -17,
	-18, -23, -24, -19, -58, -59, -67, -65, -66, -62,
	-61, -27, -25, -28, -20, -29, -30, -31, -35, -36,
	-26, -37, 92, 193, 270, 339, 75, 29, 75, 29,
	303, 290, 23, -178, 75, -314, 16, -316, 40, 41,
	74, 487, -118, 70, 68, 70, -352, 69, -221, -153,
	-163, -154, -140, -163, -87, -352, -167, 91, -168, 109,
	454, -129, 75, 174, -167, 53, 486, 489, 68, -257,
	-158, 238, 239, -169, -85, -85, 72, -48, -227, 273,
	274, 275, -222, -38, -22, 301, 301, 74, 38, 74,
	16, 16, 282, -152, -289, -286, -289, -295, 47, -163,
	-168, 114, 115, 236, 114, 115, -124, 53, -177, -169,
	72, 72, -39, -40, 93, 94, 271, 272, 276, -236,
	69, 554, 74, 74, 29, 287, 21, -323, -153, 70,
	220, 88, -221, 487, 70, -171, 97, 95, -40, -85,
	-38, 19, 19, 19, 29, -222, 97, -22, 304, -163,
	-289, 221, -168, 488, -298, -299, 66, -15, -21, -14,
	-11, -12, -13, 339, 92, -38, 94, 554, -49, 75,
	-3, -47, -46, 75, -49, 278, 89, 279, 72, -125,
	-323, -351, 489, -299, 66, -298, 66, 10, 9, -169,
	-38, 554, -38, 97, 95, -41, -42, 96, -22, 69,
	277, -125, 218, -297, 206, 201, 204, 30, -297, 554,
	97, 554, 193, -38, 97, 95, -42, -85, -46, -352,
	-352, 200, 29, 83, 97, 92, 554, 193, -38, 94,
	97, 554, -38, 193, 97, 554, 193,
}

var yyDef = [...]int{
	35, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, -2, 751, 751, 751, 751,
	751, 751, 849, -2, 612, 0, 0, 0, 0, -2,
	724, 725, 726, 730, 731, 746, 748, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 40,
	0, 0, 66, 67, 1202, 0, 749, 738, 739, 0,
	0, 1745, 2, 1140, 0, 760, 753, 0, 1202, 1202,
	0, 0, 98, 0, 0, 0, 850, 0, 0, 0,
	1200, 1200, 249, 1200, 1200, 0, 1215, 247, 0, 1197,
	1211, 1212, 1213, 0, 0, 0, 1198, 0, 1198, 1198,
	1198, 1198, 1198, 1198, 1198, 0, 671, 869, 1224, 1225,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 0, 0,
	0, 716, 0, 682, 683, 684, 0, 686, 0, 0,
	0, 0, 0, 696, 699, 703, 0, 1140, 1140, 558,
	559, 560, 721, 722, 710, 723, 0, 0, 0, 0,
	0, 830, 324, 326, 0, 346, 0, 349, 352, 1230,
	732, 0, 0, 1255, 1256, 0, 0, 0, 0, 0,
	1595, 192, 263, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 0, 194, 194, 194, 1607, 194, 0, 194,
	194, 194, 194, 194, 262, 252, 253, 254, 0, 0,
	0, 1595, 0, 538, 535, 536, 751, 0, 755, 0,
	1203, 727, 55, 0, 57, 1156, 851, 852, 853, 1683,
	1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693,
	1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743,
	1744, 0, 1146, 0, 0, 763, 761, 762, 752, 0,
	774, 804, 0, 880, 0, 885, 887, -2, -2, 0,
	928, 929, 930, 931, 932, 933, 0, 0, 0, 0,
	0, 0, 0, 956, 957, 958, 959, 960, 961, 1113,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1687, 1688, 1689,
	1690, 1692, 1693, 1694, 1701, 1702, 1705, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 1718, 1719, 1724, 1726, 1728, 1731,
	1732, 1733, 1734, 1736, 1737, 1738, 1740, 1741, 1742, 889,
	890, 1110, 1169, 0, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1101, 0, 1030, 1030,
	1030, 1030, 1030, 1030, 1030, 1030, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 79, 869, 83,
	1661, 0, 1174, -2, -2, 1176, 0, 0, 0, -2,
	-2, -2, -2, 1456, -2, 1110, 0, 99, 1132, 751,
	100, 0, 389, 390, 0, 1469, 582, 1222, 1223, 1458,
	1218, 1219, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 0, 0,
	247, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	1200, 249, 0, 0, 652, 0, 653, 0, 257, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 672, 673, 716, 675, 0, 0, 1200, 1200, 0,
	0, 0, 0, 0, 584, 585, 716, 716, 716, 716,
	713, 0, 713, 693, 713, 711, 712, 0, 698, 0,
	0, 0, 706, 707, 733, 0, 0, 740, 742, 743,
	744, 745, 741, 0, 750, 0, 0, 0, 328, 0,
	0, 348, 330, 0, 333, 334, 335, 336, 337, 338,
	339, 340, 341, 342, 343, 344, 0, 351, 0, 1228,
	1231, 737, 1246, 1247, 0, 1257, 1258, 198, 198, 0,
	0, 0, 0, 161, 194, 0, 163, 194, 194, 194,
	0, 194, 194, 170, 171, 194, 173, 174, 175, 176,
	177, 194, 179, 180, 181, 194, 194, 184, 194, 194,
	187, 188, 189, 190, 191, 261, 198, 0, 0, 198,
	0, 0, 520, 0, 0, 0, 0, 525, 526, 527,
	528, 0, 0, 531, 532, 760, 42, 62, 0, 756,
	757, 0, 0, 0, 56, 0, 0, 61, 1746, 37,
	0, 0, 1141, 1144, 1145, 1133, 1134, 1137, 0, 0,
	758, 764, 765, 754, 0, 775, 0, 0, 0, 805,
	0, 807, 808, 809, 810, 0, 883, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 907, 908, 909, 910,
	911, 912, 913, 886, 0, 900, 0, 0, 0, 949,
	950, 951, 952, 953, 954, 0, 763, 0, 0, 0,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 763, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 763, 0,
	0, 926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 1102, 0, 1013, 1022, 0, 1014,
	1023, 1015, 1024, 1016, 0, 1017, 1025, 1018, 1026, 1019,
	1020, 1027, 1021, 0, 922, 0, 0, 81, 0, 868,
	0, 811, 813, 814, 815, -2, 0, 819, 874, 920,
	1224, -2, 0, 0, 0, 73, 74, 0, 0, 0,
	0, 84, 86, 0, 0, 1661, 1177, 1178, 494, 1191,
	1192, 1193, 0, 1189, 0, 1140, 760, 599, 0, 391,
	0, 0, 403, 484, 414, 415, 416, 477, 418, 477,
	477, 0, 477, 477, 477, 477, 477, 491, 491, 491,
	491, 491, 460, 461, 462, 463, 464, 0, 0, 437,
	477, 477, 477, 441, 467, 468, 469, 470, 471, 472,
	473, 474, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 479, 479, 481, 481, 481, 481, 481, 0,
	0, 581, 0, 1216, 0, 0, 249, -2, 0, -2,
	0, 864, 0, 0, 871, 0, 0, 110, 279, 265,
	109, 0, 243, 248, 244, 245, 246, 0, 0, 0,
	0, 256, 667, 1199, 0, 660, 75, 661, 662, 663,
	664, 665, 258, 666, 870, 1226, 1227, 674, 717, 0,
	719, 0, 0, 830, 679, 680, 681, 586, 687, 688,
	689, 695, 716, 0, 0, 0, 830, 716, 697, 914,
	700, 1030, 0, 735, 734, 0, 747, 0, 325, 327,
	329, 347, 0, 0, 350, 353, 0, 0, 0, 0,
	1249, 0, 1251, 1253, 0, 0, 199, 200, 201, 0,
	193, 0, 216, 264, 0, 162, 0, 196, 164, 165,
	166, 194, 168, 169, 172, 178, 182, 183, 185, 186,
	260, 0, 0, 0, 0, 159, 0, 521, 522, 523,
	524, 533, 530, 763, 0, 0, 728, 729, 58, 0,
	0, 1158, 1147, 0, 0, 0, 0, 1136, 1138, 1139,
	0, 0, 1121, 0, 0, 766, 759, 39, 881, 882,
	884, 901, 0, 903, 905, 806, 776, 0, 1111, -2,
	891, 892, 916, 917, 918, 0, 0, 0, 0, 914,
	896, 0, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 948, 1044, 1045, 0, 946, 947,
	955, 0, 0, 924, 770, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 922, 919, 0,
	1168, 0, 0, 0, 995, 0, 0, 931, 1113, 0,
	931, 1113, 0, 0, 0, 0, 0, 0, 0, 1108,
	1105, 0, 0, 1031, 0, 0, 0, 923, 0, 0,
	0, 0, 867, 0, 0, 0, 0, 0, 0, 854,
	0, 0, 857, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 1581, 825, 0, 874, 0, 0, 0, 922,
	878, 0, 878, 78, 878, 80, 0, 873, 1175, 0,
	0, 0, 89, 90, 85, 1179, 0, 1185, 1186, 1187,
	1111, 0, 1146, 763, 388, 600, 602, 605, 606, 607,
	392, 394, 395, 396, 0, -2, 573, 1591, 1638, -2,
	-2, 565, 1504, -2, -2, 399, 486, 485, 417, 0,
	491, 491, 477, 477, 477, 477, 446, 491, 449, 452,
	453, 494, 0, 494, 494, 494, 494, 491, 0, 0,
	438, 439, 440, 429, 0, 430, 479, 432, 0, 433,
	434, 435, 436, 579, 580, 0, 0, 0, 95, 0,
	104, -2, 501, 502, 503, 0, 498, 1201, 105, 0,
	281, 282, 0, 219, 0, 250, 251, 112, 0, 0,
	266, 0, 387, 0, 654, 0, 656, 255, 658, 668,
	669, 659, 0, 0, 718, 676, 677, 678, 878, 0,
	0, 690, 714, 715, 713, 716, 694, 708, 0, 0,
	701, 0, 736, 831, 331, 332, 354, 81, 0, 1229,
	1248, 0, 1252, 1254, 0, 202, 204, 0, 153, 0,
	0, 195, 0, 167, 0, 0, 0, 0, 0, 529,
	0, 758, 63, 613, 614, -2, 645, 1208, 645, 645,
	631, 548, 645, 0, 0, 0, 59, 0, 1157, 0,
	0, 0, 1142, 1143, 1135, 0, 1194, 1195, 1122, 1123,
	96, 767, 902, 904, 906, 0, 922, 893, 914, 897,
	0, 894, 0, 888, 0, 0, 785, 0, 785, 785,
	0, 981, 0, 982, 1009, 0, 994, 785, 785, 0,
	0, 0, 0, 0, 0, 988, 989, 990, 991, 785,
	785, 785, 785, 0, 0, 0, 785, 785, 785, 0,
	927, -2, 992, 993, 0, 0, 0, 0, 0, 1037,
	0, 0, 1038, 1003, 0, 0, 0, 0, 0, 1132,
	0, 1106, 0, 0, 1012, 1032, 1033, 1034, 1035, 1036,
	1162, 0, 0, 0, 1151, 0, 878, 1170, 0, 0,
	812, 845, 847, 0, 842, 855, 856, 858, 0, 860,
	0, 862, 863, 832, 818, 921, 820, 0, 0, 0,
	874, 829, 0, 0, 0, 0, 1132, 0, 878, 71,
	72, 0, 87, 88, 0, 0, 94, 495, 496, 0,
	218, 0, 603, 0, 393, 0, 566, 0, 0, 550,
	565, 561, 562, 565, 564, 565, 556, 566, 557, 0,
	404, 0, 406, 407, 408, 409, 410, 0, 0, 0,
	0, 490, 0, 515, 517, 0, 0, 413, 487, 0,
	494, 494, 491, 444, 445, 477, 450, 494, 454, 0,
	455, 456, 457, 458, 494, 0, 475, 0, 0, 431,
	0, 596, 0, 1217, 97, 0, 504, 505, 506, 0,
	548, 548, 548, 0, 283, 284, 285, 865, 0, 220,
	221, 0, 0, 0, 0, 872, 122, 0, 280, 0,
	0, 0, 0, 0, 0, 0, 76, 259, 685, 587,
	588, 830, 692, 915, 702, 704, 705, 491, 0, 1250,
	0, 0, 0, 0, 0, 214, 197, 0, 0, 0,
	0, 160, 0, 766, 0, 0, 565, 0, 632, 633,
	0, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1209, 1210, 0, 0, 0, 549, 0,
	640, 641, 0, 1160, 1159, 1148, 38, 44, 0, 777,
	1112, 0, 895, 0, 898, 785, 925, 966, 786, 772,
	0, 967, 968, 785, 778, 779, 781, 983, 970, 971,
	984, 985, 986, 785, 785, 987, 975, 974, 973, 976,
	0, 0, 785, 979, 978, 980, 962, 0, 477, 477,
	1091, 477, 481, 1094, 477, 1096, 477, 1099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1103,
	1011, 1109, 0, 64, 0, 1162, 1149, 1164, 1166, 0,
	0, 0, 0, -2, 1434, 0, 836, 1132, 0, 0,
	0, 839, 846, 0, 0, 840, 0, 841, 859, 861,
	816, 0, 0, 821, 0, 0, -2, 828, 0, 0,
	0, 838, 1140, 879, 70, 91, 92, 93, 601, 604,
	0, 567, 477, 477, 0, 571, 563, 572, 552, 553,
	555, 0, 405, 0, 0, 488, 0, 514, 516, 518,
	519, 478, 442, 443, 494, 451, 447, 492, 493, 459,
	491, 0, 491, 0, 482, 0, 583, 597, 0, 0,
	0, 95, 548, 0, 0, 0, 0, 227, 0, 223,
	0, 0, 0, 130, 0, 113, 114, 115, 117, 118,
	0, 0, 0, 111, 0, 268, 0, 271, 272, 655,
	657, 716, 1240, 866, 214, 203, 205, 206, 214, 217,
	154, 0, 155, 157, 0, 156, 534, 96, 615, 0,
	642, 0, 0, 1216, 563, 0, -2, 618, 623, 624,
	625, 626, 627, 0, 638, 0, 620, 0, 642, 0,
	635, 0, 0, 0, 43, 96, 0, 53, 0, 0,
	0, 0, 0, 96, 963, 899, 965, 0, 969, 783,
	782, 964, 972, 0, 0, 977, 996, 1088, 491, 1092,
	1093, 1095, 1097, 1098, 1100, 998, 997, 0, 0, 0,
	0, 1004, 0, 0, 0, 0, 0, 0, 1107, 0,
	65, 0, 1167, -2, 0, 0, 82, 0, 1140, 1171,
	1172, 1173, 843, 0, 848, 0, 834, 0, 874, 826,
	0, 0, 0, 0, 69, 540, 0, 1137, 1137, 551,
	565, 0, 0, 0, 489, 0, 0, 448, 494, 476,
	494, 0, 0, 598, 0, 95, 97, 0, 509, 510,
	511, 512, 513, 0, 96, 228, 229, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 222, 224, 225, 226,
	148, 131, 132, 0, 0, 0, 0, 123, 124, 0,
	0, 0, 0, 0, 119, 120, 121, 267, 0, 0,
	270, 0, 0, 691, 1242, 1236, 207, 207, 0, 158,
	0, 0, 617, 643, 0, 403, 403, 0, 565, 0,
	634, 0, 1206, 1207, 0, 629, 642, 0, 0, 0,
	1161, 0, 45, 47, 0, 878, 1124, 0, 797, 1131,
	52, 799, 0, 768, 773, 1132, 0, 0, 0, 1089,
	1090, 0, 0, 0, 0, 1005, 1006, 1007, 1039, 1010,
	1104, 0, 1165, 1150, 0, 1154, 0, 837, 68, 0,
	833, 0, 822, 824, 874, 875, 876, 877, 539, 543,
	0, 548, 0, 568, 569, 570, 554, 0, 400, 0,
	465, 466, 480, 483, 0, 102, 0, 507, 508, 0,
	97, 230, 231, 232, 233, 235, 236, 0, 0, 0,
	108, 0, 0, 133, 0, 0, 0, 0, 143, 144,
	145, 146, 147, 125, 126, 127, 128, 129, 116, 0,
	0, 269, 0, 274, 275, 1204, 1244, -2, 0, 151,
	0, 152, 215, 0, 616, 644, 397, 398, 0, 1216,
	0, 619, 628, 630, 0, 637, 0, 96, 46, 54,
	1124, 1129, 0, 1129, 1126, 1128, 51, 0, 0, 0,
	787, 0, 1028, 1029, 999, 1001, 1000, 1002, 0, 0,
	0, 0, 1153, 0, 844, 835, 827, 544, 545, 0,
	547, 0, 411, 401, 402, 0, 541, 95, 0, 0,
	237, 238, 239, 240, 149, 150, 134, 135, 0, 137,
	138, 0, 0, 0, 277, 0, 273, 832, 0, 1236,
	0, 1238, 0, 1235, 0, 208, 878, 0, 0, 0,
	636, 0, 648, 0, 769, 1129, 797, 0, 0, 797,
	0, 798, 800, 801, 0, 0, 0, 784, 1008, 0,
	0, 0, 1163, -2, 546, 0, 400, 101, 542, 103,
	286, 95, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 367, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 384,
	385, 386, 0, 0, 0, 0, 0, 139, 0, 141,
	142, 276, 0, 36, 0, 1243, 0, 1241, 0, 0,
	1237, 0, 1124, 541, 0, 541, 647, 0, 0, 797,
	49, 1130, 1125, 50, 1127, 780, 788, 0, 791, 0,
	0, 0, 802, 0, 789, 1040, 0, 1043, 0, 412,
	95, 0, 0, 107, 0, 0, 1218, 0, 0, 313,
	314, 315, 1220, 0, 355, 136, 140, 278, 1205, 1245,
	0, 0, 0, 1129, 621, 0, 639, 649, 0, 48,
	0, 792, 793, 794, 795, 796, 0, 1041, 0, 97,
	287, 288, 0, 297, 0, 0, 0, 0, 0, 311,
	0, 0, 1239, 1233, 209, 210, 211, 213, 797, 541,
	0, 0, 803, 0, 574, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 1221, 241, 356, 0, 41,
	622, 0, 790, 0, 575, 576, 0, 95, 289, 290,
	291, 292, 293, 0, 295, 0, 0, 0, 307, 308,
	309, 0, 316, 318, 319, 320, 0, 322, 323, 312,
	212, 0, 1042, 577, 0, 578, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 304, 0, 310, 0,
	321, 0, 0, 589, 591, 592, 0, 0, 590, 0,
	0, 299, 300, 0, 0, 0, 305, 0, 317, 650,
	651, 593, 594, 595, 294, 296, 0, 302, 0, 0,
	0, 0, 0, 301, 0, 306, 303,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 125, 117, 3,
	68, 70, 122, 120, 69, 121, 175, 123, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 554,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 116, 3, 128,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 118, 119, 124, 126,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:515
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:522
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:557
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:563
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:569
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:576
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:582
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 41:
		yyDollar = yyS[yypt-14 : yypt+1]
//line sql.y:593
		{
			yyVAL.selStmt = &Select{With: yyDollar[1].with, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr), Window: yyDollar[14].window}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:606
		{
			yyDollar[8].selStmt.(*Select).Comments = Comments(yyDollar[2].bytes2)
			yyDollar[8].selStmt.(*Select).Cache = yyDollar[3].str
			yyDollar[8].selStmt.(*Select).Distinct = yyDollar[4].str
			yyDollar[8].selStmt.(*Select).Hints = yyDollar[6].str
			yyDollar[8].selStmt.(*Select).SelectExprs = yyDollar[7].selectExprs
			yyVAL.selStmt = yyDollar[8].selStmt
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:619
		{
			yyVAL.selStmt = &Select{From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: nil, GroupBy: nil, Having: nil, Window: nil, Into: nil}
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:623
		{
			yyVAL.selStmt = &Select{From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: nil, GroupBy: nil, Having: nil, Window: nil, Into: yyDollar[2].columns}
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			yyDollar[3].selStmt.(*Select).Into = yyDollar[2].columns
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:632
		{
			yyDollar[1].selStmt.(*Select).Into = yyDollar[2].columns
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:639
		{
			yyVAL.selStmt = &Select{From: yyDollar[2].tableExprs, Where: NewWhere(WhereStr, yyDollar[3].expr), GroupBy: GroupBy(yyDollar[4].exprs), Having: NewWhere(HavingStr, yyDollar[5].expr), Window: yyDollar[6].window}
		}
	case 49:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:643
		{
			yyVAL.selStmt = &Select{From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[2].expr), GroupBy: GroupBy(yyDollar[3].exprs), Having: NewWhere(HavingStr, yyDollar[4].expr), Window: yyDollar[5].window}
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:647
		{
			yyVAL.selStmt = &Select{From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, GroupBy: GroupBy(yyDollar[3].exprs), Having: NewWhere(HavingStr, yyDollar[4].expr), Window: yyDollar[5].window}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:651
		{
			yyVAL.selStmt = &Select{From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Having: NewWhere(HavingStr, yyDollar[2].expr), Window: yyDollar[3].window}
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyVAL.selStmt = &Select{From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Window: yyDollar[2].window}
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:660
		{
			yyVAL.columns = nil
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:670
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: false}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			yyVAL.with = &With{Ctes: yyDollar[3].tableExprs, Recursive: true}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:680
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:690
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:696
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:716
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 65:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:728
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.str = InsertStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.str = ReplaceStr
		}
	case 68:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:750
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:756
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:760
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 71:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:764
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:768
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:778
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:782
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:792
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:802
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:807
		{
			yyVAL.partitions = nil
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:811
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:817
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:821
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:828
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:851
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:855
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:861
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:865
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:869
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:873
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:878
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:883
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:888
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:894
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:908
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:913
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 102:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:917
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:923
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 104:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:929
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 105:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:937
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 106:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:945
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 107:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:949
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 108:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:953
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:972
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:981
		{
			yyVAL.accountNames = nil
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:990
		{
			yyVAL.tlsOptionItems = nil
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:994
		{
			yyVAL.tlsOptionItems = nil
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1022
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1026
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1030
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1035
		{
			yyVAL.accountLimitItems = nil
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1045
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1072
		{
			yyVAL.passLockItems = nil
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1082
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1100
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1112
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1116
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1120
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1124
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1149
		{
			yyVAL.str = ""
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1164
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1169
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1173
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1177
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 155:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1183
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 156:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1188
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1192
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 158:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1196
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1204
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1210
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1218
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1234
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1242
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1282
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1286
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1294
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1306
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1322
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1326
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1345
		{
			yyVAL.strs = nil
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1355
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1364
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1368
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1372
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1376
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1386
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1390
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1394
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1403
		{
			yyVAL.grantAssumption = nil
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1407
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 209:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1411
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1415
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1419
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1423
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1427
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1432
		{
			yyVAL.boolean = false
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.boolean = true
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1441
		{
			yyVAL.boolean = false
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1445
		{
			yyVAL.boolean = true
		}
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1452
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1460
		{
			yyVAL.procedureParams = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1480
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1484
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1488
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1492
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1497
		{
			yyVAL.characteristics = nil
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1511
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1517
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1521
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1529
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1537
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1559
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1565
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1569
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 247:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = ""
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = ""
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1625
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1633
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1647
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1693
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1697
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1705
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1711
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1723
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1727
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1731
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1737
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1745
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = BeforeStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = AfterStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = InsertStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = UpdateStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = DeleteStr
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1784
		{
			yyVAL.triggerOrder = nil
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1788
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1808
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 296:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1828
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1834
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1840
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 301:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1845
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 302:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1850
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 303:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1856
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1874
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1880
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1884
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1888
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1892
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1896
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1900
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1931
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1975
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Resignal{}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2077
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2082
		{
			yyVAL.exprs = nil
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.exprs = nil
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2090
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2141
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2157
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2174
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2184
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2203
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2230
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2243
		{
			yyVAL.columnType = ColumnType{}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2247
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2283
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 411:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2310
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2319
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2330
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2341
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2466
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2470
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2518
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.sqlVal = nil
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2622
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2626
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2634
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2644
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2652
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2677
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2688
		{
			yyVAL.str = ""
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2714
		{
			yyVAL.boolean = false
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2718
		{
			yyVAL.boolean = true
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2723
		{
			yyVAL.charsetCollates = nil
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2745
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2749
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2753
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2759
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2763
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2767
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2771
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2777
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2781
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2787
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2793
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2797
		{
			yyVAL.colKeyOpt = colKey
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2801
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2809
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2827
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2859
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2863
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = ""
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2887
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = yyDollar[1].str
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2893
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2897
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2902
		{
			yyVAL.indexOptions = nil
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2926
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2951
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2959
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2963
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3004
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = yyDollar[1].str
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3018
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3032
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3038
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3042
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3052
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 574:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3062
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 575:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3066
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 576:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3070
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 577:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3074
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 578:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3078
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3092
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3096
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3102
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3117
		{
			yyVAL.str = ""
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3121
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3151
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3164
		{
			yyVAL.boolean = true
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3168
		{
			yyVAL.boolean = true
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3172
		{
			yyVAL.boolean = false
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = ""
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = yyDollar[1].str
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3201
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3211
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3220
		{
			yyVAL.str = ""
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = string("")
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3242
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3259
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3265
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3272
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3283
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3292
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 622:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3296
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3300
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3305
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3315
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3320
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3324
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3328
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3335
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3341
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3345
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3357
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3362
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3366
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3370
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 639:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3378
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3384
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3388
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.columnOrder = nil
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3401
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3406
		{
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3408
		{
		}
	case 647:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3412
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 650:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3428
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3432
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3448
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3452
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3464
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3470
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 659:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3478
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3482
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3490
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3498
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3506
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3514
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3522
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3530
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3539
		{

		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3553
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3573
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3581
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3585
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3589
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3594
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3598
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3602
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3614
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3618
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3622
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3626
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3630
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3634
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3638
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 691:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3642
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3647
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3652
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3656
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3660
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3664
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3668
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3686
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 701:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3691
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 702:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3695
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3704
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3708
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3712
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3728
		{
			yyVAL.boolean = false
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3732
		{
			yyVAL.boolean = true
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3742
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3762
		{
			yyVAL.showFilter = nil
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3766
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3770
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3774
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = SessionStr
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.str = GlobalStr
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3794
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3798
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.statement = &Begin{}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3814
		{
			yyVAL.statement = &Begin{}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3818
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3822
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3828
		{
			yyVAL.statement = &Commit{}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.statement = &Rollback{}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3846
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3850
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3854
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3858
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3864
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3874
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = ""
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3913
		{
			setAllowComments(yylex, true)
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3917
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3923
		{
			yyVAL.bytes2 = nil
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3927
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = UnionStr
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3937
		{
			yyVAL.str = UnionAllStr
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = UnionDistinctStr
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.byt = 0
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.byt = 1
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3955
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = SQLCacheStr
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = DistinctStr
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3981
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.str = StraightJoinHint
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3991
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3999
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4010
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4018
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4022
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4032
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4036
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4040
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4056
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4069
		{
			yyVAL.exprs = nil
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4073
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4078
		{
			yyVAL.over = nil
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.over = yyDollar[1].over
		}
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.frame = nil
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4091
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4095
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4102
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4148
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4167
		{
			yyVAL.window = nil
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4170
		{
			yyVAL.window = yyDollar[2].window
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4185
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4198
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4203
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4211
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4253
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4269
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4286
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4292
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 824:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4297
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4312
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4316
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4320
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4324
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4335
		{
			yyVAL.expr = nil
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4344
		{
			yyVAL.columns = nil
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4358
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4368
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4374
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4387
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4391
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4395
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4399
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4407
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4411
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4417
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4433
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = JoinStr
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = JoinStr
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = JoinStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = StraightJoinStr
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = LeftJoinStr
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = LeftJoinStr
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = RightJoinStr
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = RightJoinStr
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = NaturalJoinStr
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4481
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4507
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4521
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4542
		{
			yyVAL.indexHints = nil
		}
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4546
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4550
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 877:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4554
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4559
		{
			yyVAL.expr = nil
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4563
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4569
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4581
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4585
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4589
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4593
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4609
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4613
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4619
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4623
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4627
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4631
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4635
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4639
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4643
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4647
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4651
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4661
		{
			yyVAL.str = IsNullStr
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = IsNotNullStr
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = IsTrueStr
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4673
		{
			yyVAL.str = IsNotTrueStr
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.str = IsFalseStr
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4681
		{
			yyVAL.str = IsNotFalseStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4687
		{
			yyVAL.str = EqualStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = LessThanStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = GreaterThanStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = LessEqualStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = GreaterEqualStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = NotEqualStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4716
		{
			yyVAL.expr = nil
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4720
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4740
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4746
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4750
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4756
		{
			yyVAL.selectExprs = nil
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4763
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4767
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4773
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4799
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4811
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4819
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4827
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4831
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4835
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4859
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4867
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4871
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4875
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4883
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4897
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4905
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4925
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4929
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4939
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4955
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4959
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 970:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4963
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4967
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 973:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4975
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4983
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4987
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4991
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 978:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4999
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5003
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5012
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5016
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 985:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5032
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 987:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5036
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5040
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5044
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5048
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5052
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 992:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5079
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5083
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 998:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5087
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 999:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5091
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1000:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5095
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5099
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1002:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5103
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1003:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5107
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5111
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1005:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5115
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1006:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5119
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1007:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5123
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1008:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5127
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5131
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1010:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5135
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5139
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5143
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5153
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5157
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5161
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5166
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5176
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5182
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5187
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5191
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5196
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5200
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5204
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5209
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5214
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5219
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1028:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5223
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1029:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5227
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5238
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5248
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5252
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5256
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5260
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5264
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5268
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5274
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5278
		{
			yyVAL.str = BooleanModeStr
		}
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5282
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1042:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5286
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5296
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5300
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5306
		{
			yyVAL.str = Armscii8Str
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = AsciiStr
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = Big5Str
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = UBinaryStr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.str = Cp1250Str
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5326
		{
			yyVAL.str = Cp1251Str
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5330
		{
			yyVAL.str = Cp1256Str
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5334
		{
			yyVAL.str = Cp1257Str
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = Cp850Str
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5342
		{
			yyVAL.str = Cp852Str
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.str = Cp866Str
		}
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5350
		{
			yyVAL.str = Cp932Str
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5354
		{
			yyVAL.str = Dec8Str
		}
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5358
		{
			yyVAL.str = EucjpmsStr
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5362
		{
			yyVAL.str = EuckrStr
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5366
		{
			yyVAL.str = Gb18030Str
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5370
		{
			yyVAL.str = Gb2312Str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.str = GbkStr
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = Geostd8Str
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5382
		{
			yyVAL.str = GreekStr
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = HebrewStr
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = Hp8Str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5394
		{
			yyVAL.str = Keybcs2Str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = Koi8rStr
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = Koi8uStr
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = Latin1Str
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5410
		{
			yyVAL.str = Latin2Str
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = Latin5Str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5418
		{
			yyVAL.str = Latin7Str
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5422
		{
			yyVAL.str = MacceStr
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = MacromanStr
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = SjisStr
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5434
		{
			yyVAL.str = Swe7Str
		}
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5438
		{
			yyVAL.str = Tis620Str
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5442
		{
			yyVAL.str = Ucs2Str
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.str = UjisStr
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5450
		{
			yyVAL.str = Utf16Str
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.str = Utf16leStr
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5458
		{
			yyVAL.str = Utf32Str
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5466
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5470
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5476
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5480
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5484
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5488
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5492
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5496
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5502
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5506
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5510
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5514
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5518
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5522
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5526
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5531
		{
			yyVAL.expr = nil
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5540
		{
			yyVAL.str = string("")
		}
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5544
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5554
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5560
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5565
		{
			yyVAL.expr = nil
		}
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5569
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5575
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5579
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5583
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5597
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5601
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5605
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5609
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5613
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5617
		{
			yyVAL.expr = &NullVal{}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5623
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5627
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5631
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5636
		{
			yyVAL.exprs = nil
		}
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5640
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5646
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5650
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5656
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5661
		{
			yyVAL.expr = nil
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5665
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5671
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5676
		{
			yyVAL.orderBy = nil
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5680
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5686
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5690
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5696
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = AscScr
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = AscScr
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5709
		{
			yyVAL.str = DescScr
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5714
		{
			yyVAL.limit = nil
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5718
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5722
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5726
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5732
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5736
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = ""
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = ForUpdateStr
		}
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5749
		{
			yyVAL.str = ShareModeStr
		}
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5762
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5766
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5770
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5774
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5779
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5783
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1155:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5787
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5793
		{
			yyVAL.columns = nil
		}
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5797
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5803
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5807
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5811
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1161:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5815
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5820
		{
			yyVAL.assignExprs = nil
		}
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5824
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5830
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5834
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5840
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5844
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5850
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5856
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5866
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5870
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5876
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5879
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5885
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5889
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5895
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5906
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5919
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5932
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5938
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5942
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5948
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5952
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5956
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5962
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5966
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5970
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5977
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5988
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5992
		{
			yyVAL.expr = &Default{}
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6001
		{
			yyVAL.byt = 0
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6003
		{
			yyVAL.byt = 1
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6006
		{
			yyVAL.byt = 0
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6008
		{
			yyVAL.byt = 1
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6011
		{
			yyVAL.byt = 0
		}
	case 1201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6013
		{
			yyVAL.byt = 1
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6016
		{
			yyVAL.str = ""
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6018
		{
			yyVAL.str = IgnoreStr
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6021
		{
			yyVAL.sqlVal = nil
		}
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6023
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6027
		{
			yyVAL.empty = struct{}{}
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6029
		{
			yyVAL.empty = struct{}{}
		}
	case 1208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6032
		{
			yyVAL.empty = struct{}{}
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6034
		{
			yyVAL.empty = struct{}{}
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6036
		{
			yyVAL.empty = struct{}{}
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6040
		{
			yyVAL.str = UniqueStr
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = FulltextStr
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6044
		{
			yyVAL.str = SpatialStr
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6049
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6052
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6054
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6058
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6062
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6068
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6072
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6079
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6085
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6089
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6096
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6101
		{
			yyVAL.str = string("")
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6103
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6106
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6108
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6111
		{
			yyVAL.EnclosedBy = nil
		}
	case 1233:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6115
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6120
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6124
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6129
		{
			yyVAL.sqlVal = nil
		}
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6133
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6138
		{
			yyVAL.sqlVal = nil
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6147
		{
			yyVAL.Fields = nil
		}
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6151
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6156
		{
			yyVAL.Lines = nil
		}
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6160
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6165
		{
			yyVAL.sqlVal = nil
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6169
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6181
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6185
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6191
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6195
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6201
		{
			yyVAL.lockType = LockRead
		}
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6205
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6209
		{
			yyVAL.lockType = LockWrite
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6213
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6219
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6225
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6229
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6233
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6756
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6765
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
