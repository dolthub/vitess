// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:69
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	tableName                TableName
	tableNames               TableNames
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	showFilter               *ShowFilter
	over                     *Over
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptions               TLSOptions
	accountLimits            AccountLimits
	passwordOptions          PasswordOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const OF = 57376
const OUTFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const OR = 57425
const AND = 57426
const NOT = 57427
const BETWEEN = 57428
const CASE = 57429
const WHEN = 57430
const THEN = 57431
const ELSE = 57432
const ELSEIF = 57433
const END = 57434
const LE = 57435
const GE = 57436
const NE = 57437
const NULL_SAFE_EQUAL = 57438
const IS = 57439
const LIKE = 57440
const REGEXP = 57441
const IN = 57442
const SHIFT_LEFT = 57443
const SHIFT_RIGHT = 57444
const DIV = 57445
const MOD = 57446
const UNARY = 57447
const COLLATE = 57448
const BINARY = 57449
const UNDERSCORE_BINARY = 57450
const UNDERSCORE_UTF8MB4 = 57451
const INTERVAL = 57452
const JSON_EXTRACT_OP = 57453
const JSON_UNQUOTE_EXTRACT_OP = 57454
const CREATE = 57455
const ALTER = 57456
const DROP = 57457
const RENAME = 57458
const ANALYZE = 57459
const ADD = 57460
const FLUSH = 57461
const MODIFY = 57462
const CHANGE = 57463
const SCHEMA = 57464
const TABLE = 57465
const INDEX = 57466
const INDEXES = 57467
const VIEW = 57468
const TO = 57469
const IGNORE = 57470
const IF = 57471
const PRIMARY = 57472
const COLUMN = 57473
const SPATIAL = 57474
const FULLTEXT = 57475
const KEY_BLOCK_SIZE = 57476
const CHECK = 57477
const ACTION = 57478
const CASCADE = 57479
const CONSTRAINT = 57480
const FOREIGN = 57481
const NO = 57482
const REFERENCES = 57483
const RESTRICT = 57484
const FIRST = 57485
const AFTER = 57486
const SHOW = 57487
const DESCRIBE = 57488
const EXPLAIN = 57489
const DATE = 57490
const ESCAPE = 57491
const REPAIR = 57492
const OPTIMIZE = 57493
const TRUNCATE = 57494
const FORMAT = 57495
const MAXVALUE = 57496
const PARTITION = 57497
const REORGANIZE = 57498
const LESS = 57499
const THAN = 57500
const PROCEDURE = 57501
const TRIGGER = 57502
const TRIGGERS = 57503
const FUNCTION = 57504
const STATUS = 57505
const VARIABLES = 57506
const WARNINGS = 57507
const ERRORS = 57508
const SEQUENCE = 57509
const EACH = 57510
const ROW = 57511
const BEFORE = 57512
const FOLLOWS = 57513
const PRECEDES = 57514
const DEFINER = 57515
const INVOKER = 57516
const INOUT = 57517
const OUT = 57518
const DETERMINISTIC = 57519
const CONTAINS = 57520
const READS = 57521
const MODIFIES = 57522
const SQL = 57523
const SECURITY = 57524
const TEMPORARY = 57525
const CLASS_ORIGIN = 57526
const SUBCLASS_ORIGIN = 57527
const MESSAGE_TEXT = 57528
const MYSQL_ERRNO = 57529
const CONSTRAINT_CATALOG = 57530
const CONSTRAINT_SCHEMA = 57531
const CONSTRAINT_NAME = 57532
const CATALOG_NAME = 57533
const SCHEMA_NAME = 57534
const TABLE_NAME = 57535
const COLUMN_NAME = 57536
const CURSOR_NAME = 57537
const SIGNAL = 57538
const RESIGNAL = 57539
const SQLSTATE = 57540
const DECLARE = 57541
const CONDITION = 57542
const CURSOR = 57543
const CONTINUE = 57544
const EXIT = 57545
const UNDO = 57546
const HANDLER = 57547
const FOUND = 57548
const SQLWARNING = 57549
const SQLEXCEPTION = 57550
const USER = 57551
const IDENTIFIED = 57552
const ROLE = 57553
const REUSE = 57554
const GRANT = 57555
const GRANTS = 57556
const REVOKE = 57557
const NONE = 57558
const ATTRIBUTE = 57559
const RANDOM = 57560
const PASSWORD = 57561
const INITIAL = 57562
const AUTHENTICATION = 57563
const SSL = 57564
const X509 = 57565
const CIPHER = 57566
const ISSUER = 57567
const SUBJECT = 57568
const ACCOUNT = 57569
const EXPIRE = 57570
const NEVER = 57571
const DAY = 57572
const OPTIONAL = 57573
const MAX_QUERIES_PER_HOUR = 57574
const MAX_UPDATES_PER_HOUR = 57575
const MAX_CONNECTIONS_PER_HOUR = 57576
const MAX_USER_CONNECTIONS = 57577
const FAILED_LOGIN_ATTEMPTS = 57578
const PASSWORD_LOCK_TIME = 57579
const UNBOUNDED = 57580
const BEGIN = 57581
const START = 57582
const TRANSACTION = 57583
const COMMIT = 57584
const ROLLBACK = 57585
const SAVEPOINT = 57586
const WORK = 57587
const RELEASE = 57588
const BIT = 57589
const TINYINT = 57590
const SMALLINT = 57591
const MEDIUMINT = 57592
const INT = 57593
const INTEGER = 57594
const BIGINT = 57595
const INTNUM = 57596
const REAL = 57597
const DOUBLE = 57598
const FLOAT_TYPE = 57599
const DECIMAL = 57600
const NUMERIC = 57601
const DEC = 57602
const FIXED = 57603
const PRECISION = 57604
const TIME = 57605
const TIMESTAMP = 57606
const DATETIME = 57607
const YEAR = 57608
const CHAR = 57609
const VARCHAR = 57610
const BOOL = 57611
const CHARACTER = 57612
const VARBINARY = 57613
const NCHAR = 57614
const NVARCHAR = 57615
const NATIONAL = 57616
const VARYING = 57617
const TEXT = 57618
const TINYTEXT = 57619
const MEDIUMTEXT = 57620
const LONGTEXT = 57621
const LONG = 57622
const BLOB = 57623
const TINYBLOB = 57624
const MEDIUMBLOB = 57625
const LONGBLOB = 57626
const JSON = 57627
const ENUM = 57628
const GEOMETRY = 57629
const POINT = 57630
const LINESTRING = 57631
const POLYGON = 57632
const GEOMETRYCOLLECTION = 57633
const MULTIPOINT = 57634
const MULTILINESTRING = 57635
const MULTIPOLYGON = 57636
const LOCAL = 57637
const LOW_PRIORITY = 57638
const NULLX = 57639
const AUTO_INCREMENT = 57640
const APPROXNUM = 57641
const SIGNED = 57642
const UNSIGNED = 57643
const ZEROFILL = 57644
const COLLATION = 57645
const DATABASES = 57646
const SCHEMAS = 57647
const TABLES = 57648
const FULL = 57649
const PROCESSLIST = 57650
const COLUMNS = 57651
const FIELDS = 57652
const ENGINES = 57653
const PLUGINS = 57654
const NAMES = 57655
const CHARSET = 57656
const GLOBAL = 57657
const SESSION = 57658
const ISOLATION = 57659
const LEVEL = 57660
const READ = 57661
const WRITE = 57662
const ONLY = 57663
const REPEATABLE = 57664
const COMMITTED = 57665
const UNCOMMITTED = 57666
const SERIALIZABLE = 57667
const CURRENT_TIMESTAMP = 57668
const DATABASE = 57669
const CURRENT_DATE = 57670
const CURRENT_USER = 57671
const CURRENT_TIME = 57672
const LOCALTIME = 57673
const LOCALTIMESTAMP = 57674
const UTC_DATE = 57675
const UTC_TIME = 57676
const UTC_TIMESTAMP = 57677
const REPLACE = 57678
const CONVERT = 57679
const CAST = 57680
const SUBSTR = 57681
const SUBSTRING = 57682
const TRIM = 57683
const LEADING = 57684
const TRAILING = 57685
const BOTH = 57686
const GROUP_CONCAT = 57687
const SEPARATOR = 57688
const TIMESTAMPADD = 57689
const TIMESTAMPDIFF = 57690
const OVER = 57691
const WINDOW = 57692
const GROUPING = 57693
const GROUPS = 57694
const AVG = 57695
const BIT_AND = 57696
const BIT_OR = 57697
const BIT_XOR = 57698
const COUNT = 57699
const JSON_ARRAYAGG = 57700
const JSON_OBJECTAGG = 57701
const MAX = 57702
const MIN = 57703
const STDDEV_POP = 57704
const STDDEV = 57705
const STD = 57706
const STDDEV_SAMP = 57707
const SUM = 57708
const VAR_POP = 57709
const VARIANCE = 57710
const VAR_SAMP = 57711
const CUME_DIST = 57712
const DENSE_RANK = 57713
const FIRST_VALUE = 57714
const LAG = 57715
const LAST_VALUE = 57716
const LEAD = 57717
const NTH_VALUE = 57718
const NTILE = 57719
const ROW_NUMBER = 57720
const PERCENT_RANK = 57721
const RANK = 57722
const MATCH = 57723
const AGAINST = 57724
const BOOLEAN = 57725
const LANGUAGE = 57726
const WITH = 57727
const QUERY = 57728
const EXPANSION = 57729
const UNUSED = 57730
const ARRAY = 57731
const DESCRIPTION = 57732
const EMPTY = 57733
const EXCEPT = 57734
const JSON_TABLE = 57735
const LATERAL = 57736
const MEMBER = 57737
const RECURSIVE = 57738
const ACTIVE = 57739
const ADMIN = 57740
const BUCKETS = 57741
const CLONE = 57742
const COMPONENT = 57743
const DEFINITION = 57744
const ENFORCED = 57745
const EXCLUDE = 57746
const FOLLOWING = 57747
const GEOMCOLLECTION = 57748
const GET_MASTER_PUBLIC_KEY = 57749
const HISTOGRAM = 57750
const HISTORY = 57751
const INACTIVE = 57752
const INVISIBLE = 57753
const LOCKED = 57754
const MASTER_COMPRESSION_ALGORITHMS = 57755
const MASTER_PUBLIC_KEY_PATH = 57756
const MASTER_TLS_CIPHERSUITES = 57757
const MASTER_ZSTD_COMPRESSION_LEVEL = 57758
const NESTED = 57759
const NETWORK_NAMESPACE = 57760
const NOWAIT = 57761
const NULLS = 57762
const OJ = 57763
const OLD = 57764
const ORDINALITY = 57765
const ORGANIZATION = 57766
const OTHERS = 57767
const PATH = 57768
const PERSIST = 57769
const PERSIST_ONLY = 57770
const PRECEDING = 57771
const PRIVILEGE_CHECKS_USER = 57772
const PROCESS = 57773
const REFERENCE = 57774
const REQUIRE_ROW_FORMAT = 57775
const RESOURCE = 57776
const RESPECT = 57777
const RESTART = 57778
const RETAIN = 57779
const SECONDARY = 57780
const SECONDARY_ENGINE = 57781
const SECONDARY_LOAD = 57782
const SECONDARY_UNLOAD = 57783
const SKIP = 57784
const SRID = 57785
const THREAD_PRIORITY = 57786
const TIES = 57787
const VCPU = 57788
const VISIBLE = 57789
const SYSTEM = 57790
const INFILE = 57791

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"SEQUENCE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTIONAL",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"GROUPS",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"DESCRIPTION",
	"EMPTY",
	"EXCEPT",
	"JSON_TABLE",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 33,
	5, 48,
	-2, 901,
	-1, 41,
	141, 963,
	142, 989,
	-2, 123,
	-1, 48,
	181, 553,
	182, 553,
	-2, 543,
	-1, 55,
	1, 1434,
	468, 1434,
	-2, 581,
	-1, 467,
	128, 999,
	-2, 993,
	-1, 468,
	128, 1000,
	-2, 994,
	-1, 572,
	98, 1240,
	128, 1240,
	-2, 947,
	-1, 573,
	98, 1353,
	128, 1353,
	-2, 948,
	-1, 578,
	98, 1263,
	128, 1263,
	-2, 949,
	-1, 579,
	98, 1311,
	128, 1311,
	-2, 950,
	-1, 580,
	98, 1312,
	128, 1312,
	-2, 951,
	-1, 581,
	98, 1191,
	128, 1191,
	-2, 955,
	-1, 583,
	98, 1286,
	128, 1286,
	-2, 957,
	-1, 1013,
	1, 633,
	5, 633,
	12, 633,
	13, 633,
	14, 633,
	15, 633,
	17, 633,
	19, 633,
	30, 633,
	31, 633,
	56, 633,
	57, 633,
	58, 633,
	59, 633,
	60, 633,
	62, 633,
	63, 633,
	66, 633,
	67, 633,
	69, 633,
	70, 633,
	468, 633,
	-2, 663,
	-1, 1017,
	67, 65,
	69, 65,
	-2, 69,
	-1, 1231,
	128, 1002,
	-2, 998,
	-1, 1400,
	68, 392,
	-2, 1152,
	-1, 1403,
	68, 388,
	72, 388,
	-2, 1086,
	-1, 1404,
	68, 389,
	72, 389,
	-2, 1096,
	-1, 1509,
	44, 435,
	148, 437,
	150, 435,
	151, 435,
	-2, 475,
	-1, 1585,
	5, 49,
	-2, 729,
	-1, 1879,
	69, 1131,
	70, 1131,
	128, 1131,
	-2, 588,
	-1, 1902,
	1, 684,
	5, 684,
	12, 684,
	13, 684,
	14, 684,
	15, 684,
	17, 684,
	19, 684,
	30, 684,
	31, 684,
	56, 684,
	57, 684,
	58, 684,
	59, 684,
	60, 684,
	62, 684,
	63, 684,
	66, 684,
	67, 684,
	69, 684,
	70, 684,
	468, 684,
	-2, 663,
	-1, 1983,
	148, 438,
	-2, 436,
	-1, 2046,
	5, 49,
	-2, 921,
	-1, 2205,
	41, 1009,
	-2, 1007,
	-1, 2318,
	5, 49,
	-2, 924,
}

const yyPrivate = 57344

const yyLast = 28826

var yyAct = [...]int{

	530, 78, 2470, 2424, 2445, 2335, 2435, 2321, 2426, 2436,
	2221, 1448, 2308, 2250, 3, 2253, 7, 2303, 2252, 6,
	2251, 5, 2364, 2334, 2132, 1915, 2254, 8, 2172, 1896,
	1653, 2058, 2205, 1805, 1624, 1795, 1872, 473, 1048, 964,
	597, 459, 81, 1446, 529, 1405, 1460, 2088, 1209, 1355,
	2112, 1916, 1349, 1353, 2322, 1873, 1976, 1804, 799, 1397,
	486, 452, 1734, 789, 1625, 392, 1387, 1869, 396, 399,
	1681, 1013, 91, 1507, 756, 1376, 1538, 104, 1119, 78,
	1118, 1437, 776, 595, 1386, 1888, 1202, 1401, 1141, 1881,
	417, 1841, 451, 1256, 1488, 1265, 1217, 1328, 592, 1393,
	1188, 1771, 1332, 1120, 787, 1161, 1433, 866, 574, 1323,
	1717, 1117, 1028, 1421, 1233, 1339, 1010, 873, 850, 1770,
	869, 1009, 393, 394, 395, 1320, 470, 577, 829, 475,
	455, 591, 1027, 570, 571, 886, 1019, 566, 416, 2492,
	563, 828, 2488, 2478, 2460, 982, 2458, 2440, 743, 2419,
	2372, 80, 1186, 1950, 2082, 67, 2451, 593, 83, 983,
	2232, 901, 900, 910, 911, 903, 904, 905, 906, 907,
	908, 909, 902, 34, 34, 912, 877, 2089, 2358, 34,
	35, 70, 37, 38, 34, 2091, 2434, 34, 2316, 2407,
	465, 2357, 755, 61, 85, 86, 87, 88, 89, 76,
	2197, 1743, 1862, 39, 65, 66, 1560, 2038, 1619, 742,
	62, 1911, 1912, 1503, 2157, 34, 781, 70, 37, 38,
	1373, 1374, 70, 37, 38, 1620, 2315, 1662, 1351, 1910,
	1661, 1197, 1198, 1663, 860, 79, 79, 49, 1029, 407,
	1030, 79, 1815, 1372, 39, 1192, 79, 587, 745, 79,
	748, 749, 802, 545, 2094, 551, 553, 552, 549, 550,
	548, 547, 546, 116, 112, 113, 406, 114, 1190, 1191,
	803, 804, 1700, 1407, 554, 555, 1502, 79, 1189, 847,
	1413, 1415, 1422, 1414, 780, 784, 2025, 1427, 786, 1422,
	2023, 2092, 2093, 2095, 2096, 2097, 386, 1173, 813, 405,
	118, 117, 414, 1409, 41, 72, 45, 44, 47, 1962,
	58, 1674, 1742, 2336, 2141, 2288, 2105, 1692, 447, 2286,
	2201, 782, 785, 1740, 783, 1461, 2103, 110, 1965, 2449,
	2369, 2421, 1697, 1696, 2367, 2368, 48, 75, 74, 1673,
	2196, 56, 57, 46, 2195, 2194, 2193, 1409, 397, 2192,
	119, 2190, 120, 2191, 1693, 1735, 2283, 2284, 2361, 2362,
	1455, 1434, 2323, 2060, 788, 788, 1645, 2433, 2248, 1698,
	2406, 1685, 1762, 1763, 796, 797, 809, 1686, 798, 788,
	400, 795, 794, 747, 746, 2304, 1454, 59, 60, 78,
	78, 1736, 1798, 1333, 2113, 2114, 389, 800, 2246, 801,
	803, 804, 817, 821, 818, 1020, 1919, 820, 1982, 819,
	855, 1047, 1047, 111, 387, 1921, 82, 1047, 863, 2484,
	1047, 1921, 401, 1047, 1777, 2493, 1046, 2490, 2479, 2461,
	50, 73, 390, 52, 53, 63, 1695, 64, 810, 811,
	2290, 2430, 744, 762, 2425, 412, 413, 413, 441, 2125,
	1748, 1747, 2474, 2124, 1127, 2233, 1125, 815, 2428, 1110,
	1652, 1651, 1741, 1650, 1792, 740, 1765, 921, 115, 790,
	923, 2415, 398, 858, 750, 358, 1737, 1738, 924, 925,
	2010, 2285, 2200, 812, 1074, 1949, 1679, 1174, 814, 779,
	1964, 1472, 398, 2002, 1679, 1666, 1471, 1595, 2090, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 71, 1707, 962,
	1422, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 963, 981, 984, 984, 984, 990,
	984, 984, 990, 984, 990, 999, 1000, 1001, 1002, 1003,
	1004, 864, 1014, 71, 2314, 854, 398, 852, 71, 1192,
	77, 77, 1412, 1436, 2013, 2123, 77, 2472, 1061, 107,
	2473, 77, 2471, 1678, 77, 398, 1791, 2198, 1744, 1658,
	1788, 1678, 1190, 1191, 2427, 2429, 2173, 1787, 1777, 922,
	1358, 1360, 1784, 1679, 1694, 1783, 1786, 1555, 577, 1543,
	2175, 2128, 77, 577, 1008, 924, 925, 1528, 1212, 1040,
	1075, 1025, 1779, 905, 906, 907, 908, 909, 902, 892,
	1041, 912, 772, 902, 1377, 1939, 912, 912, 421, 422,
	423, 424, 425, 429, 430, 434, 435, 444, 443, 442,
	445, 446, 449, 448, 450, 426, 427, 428, 431, 432,
	433, 436, 437, 440, 438, 439, 1368, 926, 927, 928,
	929, 930, 931, 932, 933, 1679, 1171, 1592, 1106, 1032,
	1205, 2174, 1359, 1162, 1033, 109, 108, 1940, 1479, 885,
	1045, 1016, 985, 987, 989, 991, 993, 995, 996, 998,
	1678, 1023, 1682, 1018, 1267, 1591, 986, 988, 1796, 992,
	994, 1886, 997, 1885, 2129, 2464, 2446, 2463, 1864, 1088,
	1091, 1092, 1093, 1094, 1095, 1096, 792, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 107, 1076, 1077, 1078, 1079, 1055,
	1059, 1089, 1056, 1062, 1058, 1060, 1057, 1042, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 778, 805, 884,
	883, 883, 1678, 1181, 1038, 788, 1240, 97, 822, 751,
	1163, 94, 788, 788, 788, 1480, 1520, 885, 885, 1321,
	461, 1238, 1239, 1237, 1842, 924, 925, 788, 2477, 2416,
	1519, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 1143, 1679, 903, 904, 905, 906, 907,
	908, 909, 902, 793, 1121, 912, 93, 1590, 1408, 1589,
	99, 2104, 1210, 1211, 96, 2365, 1844, 2391, 2485, 2390,
	109, 108, 1321, 1524, 1608, 1121, 1112, 884, 883, 1140,
	1139, 411, 1518, 884, 883, 1090, 78, 1927, 1145, 2365,
	788, 777, 807, 1201, 92, 885, 884, 883, 2339, 1194,
	880, 885, 79, 2481, 2319, 884, 883, 1157, 1158, 1144,
	1160, 105, 2418, 1236, 885, 1184, 1150, 1151, 1152, 1169,
	2081, 106, 2486, 885, 884, 883, 2080, 884, 883, 1122,
	1722, 1159, 1129, 1516, 1510, 1511, 1165, 1509, 1166, 1512,
	1513, 1678, 885, 884, 883, 885, 1720, 101, 1777, 102,
	2366, 1257, 1047, 1258, 78, 1780, 1778, 1203, 1148, 1149,
	1701, 885, 870, 1231, 1200, 871, 2403, 963, 560, 561,
	1234, 1723, 1779, 2402, 1522, 1525, 1846, 2375, 1223, 1225,
	1226, 1850, 2373, 1845, 1224, 1843, 1230, 2345, 884, 883,
	1848, 884, 883, 1214, 1196, 1176, 1177, 966, 1866, 1179,
	1540, 1541, 1542, 1847, 826, 1664, 885, 1665, 2245, 885,
	1299, 1229, 2202, 1193, 2189, 1182, 2389, 1215, 1849, 1851,
	1216, 2151, 1016, 2078, 1932, 1718, 1499, 825, 1168, 1178,
	1199, 910, 911, 903, 904, 905, 906, 907, 908, 909,
	902, 1306, 1309, 912, 1146, 1352, 2388, 2287, 2243, 1322,
	1014, 2215, 1682, 1227, 1014, 1235, 2209, 2121, 963, 491,
	490, 493, 494, 495, 496, 98, 1997, 1274, 492, 497,
	1993, 1278, 1984, 1966, 1960, 1959, 1958, 1756, 1755, 1272,
	1273, 1260, 1261, 1493, 1477, 1476, 1259, 1175, 1172, 1517,
	1283, 1284, 1285, 1286, 577, 1137, 1143, 1136, 1135, 1134,
	1123, 1115, 1363, 1296, 1298, 761, 1365, 1114, 1113, 1111,
	1303, 1231, 848, 774, 404, 1232, 1348, 1515, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1383, 1381, 402, 1357, 1388, 593, 2164,
	2408, 1263, 788, 1463, 788, 1271, 2069, 2405, 2351, 865,
	1361, 2069, 2349, 865, 1280, 1281, 1521, 2069, 2347, 1382,
	1106, 2069, 2247, 2164, 2239, 1291, 2164, 2179, 2208, 1295,
	2164, 865, 2183, 1394, 1016, 2164, 2163, 2069, 2068, 1016,
	2050, 865, 82, 1016, 1128, 1318, 1527, 865, 2182, 874,
	1370, 1369, 1366, 1955, 1375, 1933, 1312, 1870, 94, 893,
	1884, 990, 1362, 1384, 1020, 1324, 1391, 1523, 1423, 1424,
	1425, 1426, 1439, 1440, 1441, 1442, 1947, 1946, 1443, 1444,
	764, 765, 766, 767, 768, 769, 770, 1943, 1944, 1814,
	1943, 1942, 78, 1469, 1884, 1435, 1297, 1467, 1468, 1358,
	1360, 2004, 1654, 1553, 865, 963, 1450, 1654, 1452, 901,
	900, 910, 911, 903, 904, 905, 906, 907, 908, 909,
	902, 1544, 1021, 912, 2207, 965, 1341, 1344, 1345, 1346,
	1342, 1021, 1343, 1347, 1481, 1654, 1889, 1890, 980, 1487,
	1336, 865, 1207, 1231, 901, 900, 910, 911, 903, 904,
	905, 906, 907, 908, 909, 902, 1297, 1496, 912, 2005,
	1297, 865, 1044, 1043, 1336, 82, 1230, 1489, 1459, 2353,
	1501, 1492, 1234, 1335, 2044, 1462, 1956, 1945, 1022, 1898,
	1024, 1359, 2005, 1768, 1668, 1371, 1553, 1022, 1613, 1020,
	1612, 1382, 1884, 1206, 1505, 1180, 1500, 1475, 1495, 1494,
	1474, 1208, 1526, 1187, 1126, 1124, 1491, 1026, 1458, 861,
	588, 1447, 1336, 862, 79, 2359, 1532, 1530, 1531, 1553,
	2348, 1897, 2214, 1621, 1623, 2212, 1549, 1014, 1014, 1014,
	1014, 1014, 2083, 1409, 2056, 1438, 1622, 1926, 1889, 1890,
	2455, 1434, 1545, 1352, 1672, 1646, 1456, 1429, 1341, 1344,
	1345, 1346, 1342, 1014, 1343, 1347, 1299, 1235, 79, 1551,
	1504, 1428, 1107, 1626, 1554, 845, 1627, 1490, 2453, 1556,
	1557, 2437, 79, 1954, 1562, 1563, 1564, 1565, 1566, 1567,
	1892, 1870, 1570, 1583, 1656, 1724, 1657, 1575, 1576, 1577,
	1578, 1131, 1580, 1581, 1582, 1539, 1895, 1649, 577, 1585,
	1586, 1587, 1588, 1894, 1637, 1655, 1634, 1633, 1594, 1638,
	1635, 1597, 1598, 456, 457, 1636, 1603, 1604, 2385, 1546,
	1547, 1548, 1610, 1639, 1611, 1345, 1346, 1614, 1615, 1641,
	1616, 1617, 2356, 1802, 1529, 1607, 1218, 1648, 2383, 78,
	1388, 2047, 1537, 1669, 1629, 1630, 1536, 1632, 1628, 1642,
	1643, 1631, 1726, 1640, 878, 879, 1016, 1016, 1016, 1016,
	1016, 2154, 1683, 2120, 788, 1684, 2072, 788, 788, 1032,
	1106, 1992, 1016, 1147, 1659, 1991, 1931, 1677, 1680, 1930,
	1671, 1667, 1016, 876, 1676, 2292, 2295, 1710, 2344, 1712,
	1713, 1714, 1715, 2343, 1600, 1601, 1602, 2206, 2374, 1754,
	1167, 2204, 2282, 2281, 403, 1559, 1561, 468, 1759, 1711,
	867, 1039, 843, 827, 1702, 1703, 1571, 1572, 1573, 1574,
	824, 1709, 868, 823, 775, 2398, 2219, 1121, 1746, 2218,
	1719, 1716, 2042, 1721, 1210, 1211, 2106, 2130, 1498, 1451,
	965, 1130, 2337, 2107, 1799, 1727, 1751, 878, 879, 453,
	1486, 1822, 94, 1109, 125, 1121, 1745, 125, 1758, 1761,
	1739, 856, 857, 125, 1769, 1535, 2397, 2396, 1749, 2395,
	2186, 1752, 1753, 1534, 808, 2377, 2376, 2341, 1220, 1221,
	1757, 1800, 1801, 2296, 2223, 125, 1231, 1772, 1785, 1790,
	1764, 1767, 1766, 2139, 454, 82, 125, 1807, 1775, 1774,
	125, 600, 1782, 2222, 125, 2133, 1654, 2457, 2456, 1230,
	1596, 1875, 78, 1729, 1730, 1731, 2457, 1593, 125, 759,
	1781, 600, 1793, 1794, 1164, 1876, 1797, 881, 2456, 125,
	2236, 1809, 1808, 1929, 1817, 1204, 1900, 588, 1863, 1813,
	408, 1904, 1905, 1906, 1871, 1883, 410, 1626, 2264, 51,
	1627, 84, 1812, 2266, 19, 1874, 2265, 18, 1820, 2267,
	20, 965, 2268, 21, 2263, 15, 1304, 1305, 1829, 1830,
	1760, 2262, 14, 1853, 1852, 1203, 1909, 2256, 10, 1836,
	1899, 2275, 30, 1840, 2274, 29, 1907, 54, 1903, 2273,
	28, 2271, 25, 2270, 24, 2272, 26, 1, 1878, 2261,
	13, 2258, 12, 2257, 11, 2255, 9, 1893, 2102, 1116,
	754, 1457, 1138, 849, 2342, 2291, 2293, 2203, 2108, 2087,
	1807, 1877, 1388, 1920, 1388, 1923, 1901, 1914, 1952, 1953,
	2086, 1811, 1733, 1380, 1732, 844, 1185, 1773, 1924, 1776,
	1470, 1925, 1514, 1913, 2302, 1395, 1385, 1443, 590, 1444,
	90, 1478, 1922, 900, 910, 911, 903, 904, 905, 906,
	907, 908, 909, 902, 1957, 791, 912, 2118, 1934, 1935,
	366, 1392, 1690, 1854, 1855, 1938, 1856, 1857, 2294, 1963,
	1858, 846, 1941, 1689, 1699, 1406, 1688, 1687, 2289, 1691,
	1201, 1052, 1050, 1867, 1868, 1823, 1051, 1049, 1826, 1827,
	1828, 1054, 1445, 1831, 1053, 1121, 370, 1034, 1936, 1961,
	2329, 882, 100, 55, 2122, 1789, 1508, 95, 103, 1968,
	372, 920, 1533, 1660, 575, 2003, 576, 1979, 1902, 568,
	1969, 2360, 1974, 1980, 1973, 872, 2305, 2006, 1985, 1606,
	1996, 1981, 979, 1319, 474, 1644, 2307, 1222, 489, 488,
	487, 484, 485, 2036, 1106, 2012, 1485, 1213, 1618, 894,
	1948, 2001, 472, 463, 1012, 1005, 125, 471, 1971, 1497,
	1340, 600, 600, 1928, 1410, 1411, 1338, 1416, 1417, 1418,
	1419, 1420, 1337, 1132, 564, 1891, 600, 1887, 1350, 1011,
	415, 68, 806, 388, 2037, 1430, 1431, 1432, 2231, 36,
	409, 458, 27, 874, 17, 816, 22, 16, 2007, 528,
	1506, 752, 1626, 40, 125, 1627, 2051, 43, 2021, 1016,
	125, 42, 1728, 1453, 2328, 2423, 2064, 2065, 2066, 2043,
	830, 2444, 2363, 32, 31, 2269, 2276, 2260, 2259, 2052,
	1970, 2017, 2062, 2410, 78, 419, 23, 2409, 2074, 4,
	853, 69, 2026, 2027, 33, 586, 2, 2084, 2032, 2067,
	0, 0, 0, 0, 0, 2063, 0, 1388, 0, 889,
	1669, 0, 0, 0, 0, 2045, 2046, 0, 2048, 760,
	2075, 2049, 0, 2073, 0, 0, 0, 2099, 2100, 2101,
	0, 2008, 1584, 0, 0, 1014, 0, 0, 0, 584,
	0, 2061, 2076, 596, 0, 0, 2115, 2116, 0, 2098,
	0, 0, 0, 0, 2117, 0, 1609, 0, 0, 0,
	2109, 2110, 2111, 763, 0, 0, 0, 0, 0, 2135,
	2136, 0, 0, 1920, 0, 1875, 0, 2126, 1875, 2159,
	2033, 2034, 2035, 0, 2127, 0, 2077, 2134, 2079, 0,
	0, 1900, 2158, 0, 0, 0, 2131, 1443, 0, 2119,
	0, 0, 0, 0, 1807, 0, 0, 0, 125, 125,
	125, 0, 0, 0, 2156, 0, 0, 0, 2162, 1874,
	0, 0, 1874, 0, 600, 0, 2185, 0, 2187, 0,
	2155, 0, 0, 0, 0, 2165, 0, 0, 0, 2184,
	0, 0, 0, 2161, 0, 2166, 0, 0, 0, 2177,
	2178, 2176, 2138, 2171, 0, 0, 0, 0, 0, 0,
	0, 2220, 0, 2140, 1016, 2188, 0, 0, 1329, 0,
	0, 0, 0, 2146, 2147, 2148, 0, 2150, 0, 0,
	0, 2199, 1357, 2180, 2167, 2181, 0, 0, 1875, 0,
	78, 2210, 2211, 0, 0, 2224, 0, 0, 0, 0,
	0, 0, 0, 2238, 2168, 2169, 2170, 2225, 2217, 2226,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 2213,
	0, 0, 0, 2249, 2237, 0, 0, 0, 0, 0,
	2242, 0, 1874, 0, 0, 0, 0, 0, 1014, 0,
	2244, 0, 0, 0, 0, 0, 0, 2241, 0, 2142,
	2143, 2144, 2145, 0, 0, 0, 0, 2149, 0, 0,
	0, 2152, 2153, 0, 0, 0, 0, 0, 2298, 0,
	2300, 1704, 1705, 1706, 1708, 0, 0, 0, 0, 2310,
	0, 0, 2227, 2228, 2229, 2230, 0, 2299, 600, 2311,
	2297, 2324, 2234, 2235, 0, 0, 759, 759, 0, 2312,
	0, 2317, 0, 0, 1626, 0, 0, 1627, 0, 125,
	0, 78, 125, 596, 596, 0, 0, 759, 759, 0,
	125, 0, 600, 0, 0, 0, 0, 0, 596, 600,
	600, 600, 125, 125, 125, 0, 0, 0, 0, 125,
	0, 0, 0, 1865, 600, 0, 0, 0, 0, 2338,
	0, 2354, 0, 0, 2340, 0, 759, 0, 2346, 0,
	0, 0, 0, 0, 0, 0, 0, 1016, 0, 890,
	0, 2313, 0, 2333, 0, 0, 0, 0, 2318, 0,
	0, 2242, 0, 0, 0, 2379, 0, 2381, 0, 1908,
	0, 0, 0, 0, 0, 0, 2384, 78, 2370, 2382,
	0, 2378, 2387, 78, 2380, 0, 125, 600, 2401, 125,
	0, 600, 0, 0, 0, 0, 2392, 0, 0, 2404,
	2394, 2386, 78, 0, 0, 0, 0, 78, 0, 125,
	0, 0, 0, 2414, 2420, 889, 2413, 0, 2412, 2301,
	2422, 0, 2350, 2432, 2411, 2417, 78, 0, 0, 78,
	78, 2438, 2355, 0, 78, 2401, 0, 0, 0, 2447,
	0, 0, 0, 0, 2450, 2399, 0, 0, 0, 2439,
	0, 78, 2441, 2454, 78, 2452, 2401, 1599, 0, 2465,
	0, 600, 2467, 0, 0, 0, 0, 0, 0, 78,
	2475, 78, 0, 0, 2401, 78, 2401, 2462, 0, 0,
	0, 0, 1105, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 78, 0, 2401, 0, 0, 0, 2480, 78,
	584, 0, 0, 78, 2401, 584, 1035, 0, 2401, 0,
	1998, 0, 0, 0, 0, 2489, 865, 0, 0, 0,
	461, 0, 0, 0, 0, 0, 0, 600, 600, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 125, 125, 0, 0, 1937, 125, 125, 0,
	0, 125, 125, 125, 0, 901, 900, 910, 911, 903,
	904, 905, 906, 907, 908, 909, 902, 0, 0, 912,
	0, 600, 600, 0, 0, 0, 0, 865, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2482, 2483,
	965, 0, 0, 0, 0, 0, 0, 0, 0, 2431,
	2053, 2054, 0, 0, 2055, 0, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 965, 901, 900, 910, 911,
	903, 904, 905, 906, 907, 908, 909, 902, 0, 0,
	912, 0, 0, 0, 0, 0, 760, 760, 125, 600,
	0, 600, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 2468, 125, 125, 759, 759, 759, 760, 760, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2018, 2019, 0, 2020, 0, 0, 2022, 2041, 2024,
	125, 125, 125, 0, 0, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 596, 0, 0, 0, 0, 0,
	0, 596, 596, 596, 0, 125, 0, 125, 0, 2031,
	0, 0, 0, 0, 0, 0, 596, 0, 901, 900,
	910, 911, 903, 904, 905, 906, 907, 908, 909, 902,
	0, 0, 912, 0, 0, 0, 0, 2030, 0, 419,
	0, 0, 0, 0, 2040, 0, 2070, 2071, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1819, 0, 0,
	0, 0, 0, 1824, 1825, 890, 0, 0, 0, 0,
	1015, 0, 0, 0, 0, 1832, 1833, 1834, 1835, 596,
	1837, 1838, 1839, 596, 901, 900, 910, 911, 903, 904,
	905, 906, 907, 908, 909, 902, 0, 0, 912, 901,
	900, 910, 911, 903, 904, 905, 906, 907, 908, 909,
	902, 0, 596, 912, 0, 0, 0, 122, 0, 0,
	0, 0, 0, 0, 0, 0, 391, 901, 900, 910,
	911, 903, 904, 905, 906, 907, 908, 909, 902, 2029,
	461, 912, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 0, 0, 1262, 125, 125, 125, 125, 125, 565,
	0, 0, 0, 589, 0, 0, 125, 741, 0, 0,
	125, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	125, 753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 419, 0, 0, 0, 0, 0, 0,
	0, 584, 0, 0, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 381, 1325,
	1326, 0, 0, 0, 1105, 0, 0, 2306, 2309, 901,
	900, 910, 911, 903, 904, 905, 906, 907, 908, 909,
	902, 0, 0, 912, 0, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	596, 0, 0, 596, 596, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 0, 0,
	759, 759, 2325, 2326, 0, 0, 0, 0, 0, 0,
	0, 600, 125, 759, 600, 600, 0, 0, 0, 0,
	0, 0, 0, 0, 760, 760, 760, 0, 759, 359,
	0, 0, 2009, 0, 0, 0, 362, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 371, 379, 380, 2014,
	2015, 596, 0, 596, 0, 0, 2016, 0, 0, 0,
	34, 0, 70, 37, 38, 600, 600, 0, 0, 0,
	0, 125, 0, 0, 61, 0, 0, 0, 2309, 0,
	76, 600, 368, 0, 39, 369, 0, 419, 376, 377,
	2393, 0, 0, 0, 1264, 1269, 1270, 0, 600, 0,
	0, 1275, 1276, 1277, 0, 1279, 0, 0, 1282, 0,
	0, 0, 0, 1287, 1288, 1289, 1290, 0, 1292, 1293,
	1294, 0, 79, 0, 0, 0, 1300, 1301, 1302, 0,
	0, 0, 1308, 1311, 0, 1316, 1317, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 2277, 0, 0, 773,
	0, 2491, 596, 0, 0, 0, 0, 0, 0, 600,
	1327, 600, 1330, 1331, 0, 0, 0, 0, 0, 0,
	0, 2466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 600, 41, 72, 45, 44, 47,
	0, 0, 0, 360, 0, 0, 0, 851, 0, 0,
	0, 2278, 0, 859, 600, 0, 600, 0, 600, 0,
	600, 0, 0, 0, 0, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 0, 373, 363, 364, 0,
	384, 0, 0, 0, 365, 367, 0, 361, 383, 382,
	0, 0, 0, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 875, 0, 419, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 0, 0, 0, 59, 60,
	0, 2279, 0, 0, 0, 584, 0, 1861, 759, 0,
	375, 0, 0, 0, 0, 125, 759, 0, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 0, 123,
	2028, 0, 385, 125, 0, 0, 0, 0, 123, 0,
	584, 2280, 73, 0, 52, 53, 63, 0, 64, 0,
	0, 0, 0, 600, 0, 0, 596, 125, 600, 0,
	418, 0, 0, 0, 0, 600, 600, 0, 462, 0,
	0, 567, 585, 0, 0, 123, 0, 0, 0, 123,
	0, 1007, 0, 1017, 0, 0, 760, 0, 0, 0,
	760, 760, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 123, 901, 900, 910, 911, 903,
	904, 905, 906, 907, 908, 909, 902, 1725, 760, 912,
	901, 900, 910, 911, 903, 904, 905, 906, 907, 908,
	909, 902, 0, 0, 912, 0, 0, 0, 71, 0,
	0, 0, 0, 596, 0, 0, 596, 596, 125, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	1558, 0, 0, 0, 0, 600, 0, 0, 0, 1568,
	1569, 0, 600, 600, 600, 0, 0, 0, 0, 0,
	1579, 600, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 600, 0, 0, 596, 596, 0,
	0, 0, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 0, 0, 596, 0, 0, 0, 0,
	1821, 0, 0, 34, 0, 70, 37, 38, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 61, 0, 0,
	0, 0, 0, 76, 0, 0, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	600, 0, 125, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 565, 0, 0, 1133, 0, 0, 0, 584,
	0, 596, 0, 1882, 0, 79, 2448, 0, 0, 0,
	1918, 0, 0, 0, 0, 1153, 1154, 1155, 0, 0,
	0, 0, 1156, 0, 0, 0, 1882, 0, 600, 2277,
	0, 0, 0, 0, 600, 0, 0, 0, 0, 125,
	0, 125, 0, 0, 0, 0, 596, 600, 596, 0,
	596, 123, 1917, 0, 0, 0, 0, 0, 0, 0,
	0, 600, 0, 0, 0, 0, 0, 0, 41, 72,
	45, 44, 47, 0, 0, 0, 0, 0, 760, 0,
	0, 0, 0, 0, 2278, 0, 760, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	48, 75, 74, 600, 0, 123, 0, 46, 1978, 0,
	0, 0, 1219, 0, 0, 0, 0, 0, 1675, 0,
	0, 1987, 1989, 0, 0, 0, 0, 1860, 0, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 60, 0, 2279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	1995, 0, 0, 0, 0, 0, 0, 1999, 2000, 0,
	0, 0, 0, 0, 0, 125, 447, 0, 0, 0,
	600, 0, 600, 0, 2280, 73, 1859, 52, 53, 63,
	0, 64, 0, 0, 0, 0, 0, 1983, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 125, 901, 900, 910, 911, 903,
	904, 905, 906, 907, 908, 909, 902, 1334, 0, 912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1364, 0, 123, 123, 123, 0, 600, 0, 0,
	0, 0, 0, 585, 584, 0, 0, 0, 585, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 0, 0,
	0, 0, 600, 0, 2059, 2059, 2059, 0, 1047, 0,
	0, 71, 0, 596, 901, 900, 910, 911, 903, 904,
	905, 906, 907, 908, 909, 902, 2059, 0, 912, 0,
	0, 0, 0, 1978, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 600, 0, 0,
	77, 1449, 1810, 0, 0, 0, 0, 0, 0, 600,
	0, 0, 0, 1464, 0, 1465, 1466, 0, 0, 0,
	0, 0, 1473, 901, 900, 910, 911, 903, 904, 905,
	906, 907, 908, 909, 902, 0, 0, 912, 0, 0,
	0, 0, 596, 0, 0, 0, 0, 0, 0, 0,
	596, 0, 0, 0, 0, 1484, 0, 0, 0, 419,
	0, 419, 0, 0, 0, 0, 0, 1918, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	0, 1918, 0, 0, 0, 0, 0, 0, 0, 0,
	2160, 0, 0, 0, 0, 0, 2059, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 0, 0, 1917,
	0, 0, 0, 0, 123, 0, 0, 123, 0, 0,
	0, 0, 1975, 1917, 1550, 1142, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 123, 123,
	0, 0, 0, 0, 123, 901, 900, 910, 911, 903,
	904, 905, 906, 907, 908, 909, 902, 0, 0, 912,
	0, 0, 0, 0, 0, 2216, 421, 422, 423, 424,
	425, 429, 430, 434, 435, 444, 443, 442, 445, 446,
	449, 448, 450, 426, 427, 428, 431, 432, 433, 436,
	437, 440, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2240, 0, 0, 0, 0, 0,
	1918, 123, 1918, 0, 418, 901, 900, 910, 911, 903,
	904, 905, 906, 907, 908, 909, 902, 0, 0, 912,
	0, 0, 0, 0, 123, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1142, 0, 0, 0, 0,
	0, 0, 1917, 0, 1917, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1268,
	1268, 0, 0, 0, 1268, 1268, 1268, 1268, 1268, 1268,
	0, 0, 1268, 0, 0, 0, 0, 1268, 1268, 1268,
	1268, 0, 1268, 1268, 1268, 0, 0, 0, 0, 596,
	1268, 1268, 1268, 1074, 0, 0, 1268, 1268, 0, 1268,
	1268, 0, 0, 0, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2352, 0, 1918, 0, 0, 0,
	0, 0, 0, 0, 1268, 1268, 1268, 1268, 0, 123,
	0, 0, 2371, 0, 0, 1750, 0, 123, 418, 0,
	0, 0, 123, 123, 0, 0, 123, 1367, 1142, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 1917, 0,
	0, 0, 0, 1142, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 1061, 0, 0,
	0, 0, 0, 0, 1803, 421, 422, 423, 424, 425,
	429, 430, 434, 435, 444, 443, 442, 445, 446, 449,
	448, 450, 426, 427, 428, 431, 432, 433, 436, 437,
	440, 438, 439, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 123, 123, 896,
	0, 899, 0, 0, 123, 0, 0, 0, 913, 914,
	915, 916, 917, 918, 919, 0, 897, 898, 895, 901,
	900, 910, 911, 903, 904, 905, 906, 907, 908, 909,
	902, 0, 0, 912, 0, 1482, 1483, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1088, 1091,
	1092, 1093, 1094, 1095, 1096, 1142, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 0, 1076, 1077, 1078, 1079, 1055, 1059,
	1089, 1056, 1062, 1058, 1060, 1057, 0, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1951, 1268, 34, 0, 70,
	37, 38, 0, 0, 1268, 34, 0, 70, 37, 38,
	0, 61, 0, 1268, 1268, 0, 0, 76, 1967, 61,
	0, 39, 0, 0, 1268, 76, 0, 0, 1268, 39,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 79,
	1994, 0, 0, 0, 0, 0, 0, 79, 585, 123,
	123, 123, 123, 123, 1090, 0, 0, 0, 0, 0,
	0, 418, 0, 2277, 0, 123, 2443, 2446, 2442, 418,
	0, 2277, 0, 0, 0, 123, 2487, 0, 0, 0,
	0, 0, 0, 585, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 41, 72, 45, 44, 47, 0, 0, 0,
	41, 72, 45, 44, 47, 0, 0, 0, 2278, 0,
	0, 0, 0, 0, 0, 0, 2278, 0, 0, 0,
	0, 0, 0, 0, 48, 75, 74, 0, 0, 0,
	0, 46, 48, 75, 74, 0, 0, 0, 0, 46,
	0, 0, 0, 0, 0, 0, 34, 0, 70, 37,
	38, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	61, 0, 0, 0, 0, 0, 76, 0, 0, 0,
	39, 0, 0, 0, 0, 59, 60, 123, 2279, 0,
	0, 0, 0, 59, 60, 0, 2279, 0, 0, 0,
	0, 0, 0, 0, 0, 2085, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2280, 73,
	0, 52, 53, 63, 0, 64, 2280, 73, 0, 52,
	53, 63, 2277, 64, 0, 0, 123, 2476, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 1142, 0,
	0, 0, 34, 0, 70, 37, 38, 0, 0, 0,
	0, 41, 72, 45, 44, 47, 61, 0, 0, 0,
	0, 0, 76, 0, 0, 0, 39, 2278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 48, 75, 74, 0, 0, 0, 0,
	46, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 585, 71, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2277, 0,
	0, 0, 0, 2459, 59, 60, 0, 2279, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 41, 72, 45,
	44, 47, 0, 0, 0, 0, 447, 2280, 73, 0,
	52, 53, 63, 2278, 64, 0, 0, 0, 0, 0,
	34, 0, 70, 37, 38, 0, 0, 1104, 0, 48,
	75, 74, 0, 0, 61, 0, 46, 123, 0, 0,
	76, 0, 0, 0, 39, 34, 0, 70, 37, 38,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 61,
	123, 0, 0, 0, 0, 76, 0, 0, 0, 39,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	59, 60, 79, 2279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2320, 0, 0,
	0, 0, 123, 0, 71, 0, 2277, 79, 1047, 0,
	0, 2400, 0, 0, 0, 0, 0, 0, 462, 0,
	0, 0, 0, 2280, 73, 0, 52, 53, 63, 0,
	64, 2277, 0, 0, 0, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 41, 72, 45, 44, 47,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 2278, 0, 0, 0, 0, 0, 0, 0, 0,
	41, 72, 45, 44, 47, 0, 0, 48, 75, 74,
	0, 0, 0, 0, 46, 0, 2278, 0, 0, 0,
	0, 0, 0, 418, 0, 0, 0, 585, 0, 0,
	0, 0, 48, 75, 74, 0, 0, 0, 0, 46,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 59, 60,
	0, 2279, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 60, 0, 2279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 77,
	0, 2280, 73, 0, 52, 53, 63, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2280, 73, 0, 52,
	53, 63, 0, 64, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 422, 423, 424,
	425, 429, 430, 434, 435, 444, 443, 442, 445, 446,
	449, 448, 450, 426, 427, 428, 431, 432, 433, 436,
	437, 440, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 418, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 0, 0, 0, 462, 0,
	721, 701, 321, 658, 724, 628, 645, 736, 647, 650,
	689, 614, 670, 253, 643, 615, 0, 632, 605, 639,
	606, 629, 660, 175, 627, 703, 673, 723, 210, 685,
	0, 165, 218, 216, 0, 0, 0, 259, 320, 722,
	666, 0, 730, 213, 0, 682, 731, 310, 236, 0,
	0, 662, 710, 668, 698, 657, 691, 621, 681, 725,
	644, 687, 726, 0, 0, 0, 0, 2327, 0, 0,
	123, 0, 0, 0, 0, 0, 155, 0, 684, 720,
	641, 686, 688, 603, 683, 0, 609, 616, 735, 716,
	635, 636, 637, 0, 0, 0, 0, 0, 0, 585,
	661, 669, 695, 654, 0, 0, 0, 0, 0, 123,
	0, 0, 633, 0, 679, 0, 0, 0, 617, 610,
	0, 0, 659, 0, 0, 0, 620, 131, 634, 696,
	0, 601, 187, 237, 144, 700, 715, 656, 201, 350,
	719, 653, 652, 275, 0, 315, 190, 211, 148, 128,
	142, 159, 189, 248, 284, 294, 642, 602, 704, 630,
	640, 166, 638, 287, 257, 339, 0, 676, 263, 286,
	214, 328, 277, 337, 338, 191, 739, 347, 352, 0,
	307, 176, 0, 134, 0, 272, 171, 206, 655, 690,
	631, 163, 693, 680, 709, 306, 326, 150, 322, 235,
	241, 160, 162, 161, 143, 301, 325, 154, 164, 311,
	290, 316, 170, 0, 0, 2330, 2331, 2332, 0, 0,
	0, 0, 344, 651, 297, 296, 646, 197, 699, 249,
	132, 280, 264, 202, 133, 318, 355, 149, 208, 323,
	127, 182, 247, 168, 258, 229, 230, 228, 231, 183,
	265, 340, 135, 319, 336, 156, 298, 299, 353, 285,
	137, 334, 314, 233, 203, 204, 136, 0, 282, 174,
	186, 169, 252, 0, 185, 274, 331, 332, 167, 356,
	145, 346, 139, 146, 345, 244, 0, 243, 348, 327,
	335, 234, 222, 0, 138, 333, 232, 221, 209, 179,
	193, 270, 217, 271, 194, 239, 238, 240, 219, 223,
	0, 607, 0, 312, 342, 357, 152, 626, 300, 324,
	0, 0, 153, 184, 178, 269, 242, 147, 196, 309,
	207, 215, 281, 354, 256, 288, 157, 341, 308, 624,
	625, 622, 0, 623, 671, 672, 727, 728, 729, 697,
	618, 0, 711, 712, 0, 0, 0, 0, 0, 702,
	717, 718, 692, 737, 648, 649, 608, 611, 612, 613,
	619, 663, 664, 675, 678, 707, 706, 705, 708, 713,
	733, 732, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 126, 140, 212, 738, 279,
	181, 343, 604, 173, 0, 0, 665, 667, 677, 694,
	129, 130, 141, 151, 158, 172, 177, 180, 188, 192,
	195, 198, 199, 200, 205, 220, 224, 225, 226, 227,
	245, 246, 250, 251, 254, 255, 260, 261, 262, 266,
	267, 268, 273, 276, 278, 283, 289, 291, 292, 293,
	295, 302, 303, 304, 305, 313, 317, 329, 330, 349,
	351, 714, 721, 701, 321, 658, 724, 628, 645, 736,
	647, 650, 689, 614, 670, 253, 643, 615, 0, 632,
	605, 639, 606, 629, 660, 175, 627, 703, 673, 723,
	210, 685, 0, 165, 218, 216, 0, 0, 0, 259,
	320, 722, 666, 0, 730, 213, 0, 682, 731, 310,
	236, 0, 0, 662, 710, 668, 698, 657, 691, 621,
	681, 725, 644, 687, 726, 0, 0, 0, 0, 599,
	0, 1389, 1390, 0, 0, 0, 0, 0, 155, 0,
	684, 720, 641, 686, 688, 603, 683, 0, 609, 616,
	735, 716, 635, 636, 637, 1670, 0, 0, 0, 0,
	0, 0, 661, 669, 695, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 679, 0, 0, 0,
	617, 610, 0, 0, 659, 0, 0, 0, 620, 131,
	634, 696, 0, 601, 187, 237, 144, 700, 715, 656,
	201, 350, 719, 653, 652, 275, 0, 315, 190, 211,
	148, 128, 142, 159, 189, 248, 284, 294, 642, 602,
	704, 630, 640, 166, 638, 287, 257, 339, 0, 676,
	263, 286, 214, 328, 277, 337, 338, 191, 739, 347,
	352, 0, 307, 176, 0, 134, 0, 272, 171, 206,
	655, 690, 631, 163, 693, 680, 709, 306, 326, 150,
	322, 235, 241, 160, 162, 161, 143, 301, 325, 154,
	164, 311, 290, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 651, 297, 296, 646, 197,
	699, 249, 132, 280, 264, 202, 133, 318, 355, 149,
	208, 323, 127, 182, 247, 168, 258, 229, 230, 228,
	231, 183, 265, 340, 135, 319, 336, 156, 298, 299,
	353, 285, 137, 334, 314, 233, 203, 204, 136, 0,
	282, 174, 186, 169, 252, 0, 185, 274, 331, 332,
	167, 356, 145, 346, 139, 146, 345, 244, 0, 243,
	348, 327, 335, 234, 222, 0, 138, 333, 232, 221,
	209, 179, 193, 270, 217, 271, 194, 239, 238, 240,
	219, 223, 0, 607, 0, 312, 342, 357, 152, 626,
	300, 324, 0, 0, 153, 184, 178, 269, 242, 147,
	196, 309, 207, 215, 281, 354, 256, 288, 157, 341,
	308, 624, 625, 622, 0, 623, 671, 672, 727, 728,
	729, 697, 618, 0, 711, 712, 0, 0, 0, 0,
	0, 702, 717, 718, 692, 737, 648, 649, 608, 611,
	612, 613, 619, 663, 664, 675, 678, 707, 706, 705,
	708, 713, 733, 732, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 674, 126, 140, 212,
	738, 279, 181, 343, 604, 173, 0, 0, 665, 667,
	677, 694, 129, 130, 141, 151, 158, 172, 177, 180,
	188, 192, 195, 198, 199, 200, 205, 220, 224, 225,
	226, 227, 245, 246, 250, 251, 254, 255, 260, 261,
	262, 266, 267, 268, 273, 276, 278, 283, 289, 291,
	292, 293, 295, 302, 303, 304, 305, 313, 317, 329,
	330, 349, 351, 714, 721, 701, 321, 658, 724, 628,
	645, 736, 647, 650, 689, 614, 670, 253, 643, 615,
	0, 632, 605, 639, 606, 629, 660, 175, 627, 703,
	673, 723, 210, 685, 0, 165, 218, 216, 0, 0,
	0, 259, 320, 722, 666, 0, 730, 213, 0, 682,
	731, 310, 236, 0, 0, 662, 710, 668, 698, 657,
	691, 621, 681, 725, 644, 687, 726, 0, 0, 0,
	0, 599, 0, 1389, 1390, 0, 0, 0, 0, 0,
	155, 0, 684, 720, 641, 686, 688, 603, 683, 0,
	609, 616, 735, 716, 635, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 661, 669, 695, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 679, 0,
	0, 0, 617, 610, 0, 0, 659, 0, 0, 0,
	620, 131, 634, 696, 0, 601, 187, 237, 144, 700,
	715, 656, 201, 350, 719, 653, 652, 275, 0, 315,
	190, 211, 148, 128, 142, 159, 189, 248, 284, 294,
	642, 602, 704, 630, 640, 166, 638, 287, 257, 339,
	0, 676, 263, 286, 214, 328, 277, 337, 338, 191,
	739, 347, 352, 0, 307, 176, 0, 134, 0, 272,
	171, 206, 655, 690, 631, 163, 693, 680, 709, 306,
	326, 150, 322, 235, 241, 160, 162, 161, 143, 301,
	325, 154, 164, 311, 290, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 651, 297, 296,
	646, 197, 699, 249, 132, 280, 264, 202, 133, 318,
	355, 149, 208, 323, 127, 182, 247, 168, 258, 229,
	230, 228, 231, 183, 265, 340, 135, 319, 336, 156,
	298, 299, 353, 285, 137, 334, 314, 233, 203, 204,
	136, 0, 282, 174, 186, 169, 252, 0, 185, 274,
	331, 332, 167, 356, 145, 346, 139, 146, 345, 244,
	0, 243, 348, 327, 335, 234, 222, 0, 138, 333,
	232, 221, 209, 179, 193, 270, 217, 271, 194, 239,
	238, 240, 219, 223, 0, 607, 0, 312, 342, 357,
	152, 626, 300, 324, 0, 0, 153, 184, 178, 269,
	242, 147, 196, 309, 207, 215, 281, 354, 256, 288,
	157, 341, 308, 624, 625, 622, 0, 623, 671, 672,
	727, 728, 729, 697, 618, 0, 711, 712, 0, 0,
	0, 0, 0, 702, 717, 718, 692, 737, 648, 649,
	608, 611, 612, 613, 619, 663, 664, 675, 678, 707,
	706, 705, 708, 713, 733, 732, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 126,
	140, 212, 738, 279, 181, 343, 604, 173, 0, 0,
	665, 667, 677, 694, 129, 130, 141, 151, 158, 172,
	177, 180, 188, 192, 195, 198, 199, 200, 205, 220,
	224, 225, 226, 227, 245, 246, 250, 251, 254, 255,
	260, 261, 262, 266, 267, 268, 273, 276, 278, 283,
	289, 291, 292, 293, 295, 302, 303, 304, 305, 313,
	317, 329, 330, 349, 351, 714, 721, 1879, 321, 658,
	724, 628, 645, 736, 647, 650, 689, 614, 670, 253,
	643, 615, 0, 632, 605, 639, 606, 629, 660, 175,
	627, 703, 673, 723, 210, 685, 0, 165, 218, 216,
	0, 0, 0, 259, 320, 722, 666, 0, 730, 213,
	0, 682, 731, 310, 236, 0, 0, 662, 710, 668,
	698, 657, 691, 621, 681, 725, 644, 687, 726, 79,
	0, 865, 0, 599, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 684, 720, 641, 686, 688, 603,
	683, 0, 609, 616, 735, 716, 635, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 661, 669, 695, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	679, 0, 0, 0, 617, 610, 0, 0, 659, 0,
	0, 0, 620, 131, 634, 696, 0, 601, 187, 237,
	144, 700, 715, 656, 201, 350, 719, 653, 652, 275,
	0, 315, 190, 211, 148, 128, 142, 159, 189, 248,
	284, 294, 642, 602, 704, 630, 640, 166, 638, 287,
	257, 339, 0, 676, 263, 286, 214, 328, 277, 337,
	338, 191, 739, 347, 352, 0, 307, 176, 0, 134,
	0, 272, 171, 206, 655, 690, 631, 163, 693, 680,
	709, 306, 326, 150, 322, 235, 241, 160, 162, 161,
	143, 301, 325, 154, 164, 311, 290, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 651,
	297, 296, 646, 197, 699, 249, 132, 280, 264, 202,
	133, 318, 355, 149, 208, 323, 127, 182, 247, 168,
	258, 229, 230, 228, 231, 183, 265, 340, 135, 319,
	336, 156, 298, 299, 353, 285, 137, 334, 314, 233,
	203, 204, 136, 0, 282, 174, 186, 169, 252, 0,
	185, 274, 331, 332, 167, 356, 145, 346, 139, 146,
	345, 244, 0, 243, 348, 327, 335, 234, 222, 0,
	138, 333, 232, 221, 209, 179, 193, 270, 217, 271,
	194, 239, 238, 240, 219, 223, 0, 607, 0, 312,
	342, 357, 152, 626, 300, 324, 0, 0, 153, 184,
	178, 269, 242, 147, 196, 309, 207, 215, 281, 354,
	256, 288, 157, 341, 308, 624, 625, 622, 0, 623,
	671, 672, 727, 728, 729, 697, 618, 0, 711, 712,
	0, 0, 0, 0, 0, 702, 717, 718, 692, 737,
	648, 649, 608, 611, 612, 613, 619, 663, 664, 675,
	678, 707, 706, 705, 708, 713, 733, 732, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 126, 140, 212, 1880, 279, 181, 343, 604, 173,
	0, 0, 665, 667, 677, 694, 129, 130, 141, 151,
	158, 172, 177, 180, 188, 192, 195, 198, 199, 200,
	205, 220, 224, 225, 226, 227, 245, 246, 250, 251,
	254, 255, 260, 261, 262, 266, 267, 268, 273, 276,
	278, 283, 289, 291, 292, 293, 295, 302, 303, 304,
	305, 313, 317, 329, 330, 349, 351, 714, 721, 701,
	321, 658, 724, 628, 645, 736, 647, 650, 689, 614,
	670, 253, 643, 615, 0, 632, 605, 639, 606, 629,
	660, 175, 627, 703, 673, 723, 210, 685, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 722, 666, 0,
	730, 213, 0, 682, 731, 310, 236, 0, 0, 662,
	710, 668, 698, 657, 691, 621, 681, 725, 644, 687,
	726, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 684, 720, 641, 686,
	688, 603, 683, 0, 609, 616, 735, 716, 635, 636,
	637, 0, 0, 0, 0, 0, 0, 0, 661, 669,
	695, 654, 0, 0, 0, 0, 0, 0, 2137, 0,
	633, 0, 679, 0, 0, 0, 617, 610, 0, 0,
	659, 0, 0, 0, 620, 131, 634, 696, 0, 601,
	187, 237, 144, 700, 715, 656, 201, 350, 719, 653,
	652, 275, 0, 315, 190, 211, 148, 128, 142, 159,
	189, 248, 284, 294, 642, 602, 704, 630, 640, 166,
	638, 287, 257, 339, 0, 676, 263, 286, 214, 328,
	277, 337, 338, 191, 739, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 655, 690, 631, 163,
	693, 680, 709, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 651, 297, 296, 646, 197, 699, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 607,
	0, 312, 342, 357, 152, 626, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 624, 625, 622,
	0, 623, 671, 672, 727, 728, 729, 697, 618, 0,
	711, 712, 0, 0, 0, 0, 0, 702, 717, 718,
	692, 737, 648, 649, 608, 611, 612, 613, 619, 663,
	664, 675, 678, 707, 706, 705, 708, 713, 733, 732,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 126, 140, 212, 738, 279, 181, 343,
	604, 173, 0, 0, 665, 667, 677, 694, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 714,
	721, 701, 321, 658, 724, 628, 645, 736, 647, 650,
	689, 614, 670, 253, 643, 615, 0, 632, 605, 639,
	606, 629, 660, 175, 627, 703, 673, 723, 210, 685,
	0, 165, 218, 216, 0, 0, 0, 259, 320, 722,
	666, 0, 730, 213, 0, 682, 731, 310, 236, 0,
	0, 662, 710, 668, 698, 657, 691, 621, 681, 725,
	644, 687, 726, 0, 0, 0, 0, 467, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 684, 720,
	641, 686, 688, 603, 683, 0, 609, 616, 735, 716,
	635, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	661, 669, 695, 654, 0, 0, 0, 0, 0, 0,
	1816, 0, 633, 0, 679, 0, 0, 0, 617, 610,
	0, 0, 659, 0, 0, 0, 620, 131, 634, 696,
	0, 601, 187, 237, 144, 700, 715, 656, 201, 350,
	719, 653, 652, 275, 0, 315, 190, 211, 148, 128,
	142, 159, 189, 248, 284, 294, 642, 602, 704, 630,
	640, 166, 638, 287, 257, 339, 0, 676, 263, 286,
	214, 328, 277, 337, 338, 191, 739, 347, 352, 0,
	307, 176, 0, 134, 0, 272, 171, 206, 655, 690,
	631, 163, 693, 680, 709, 306, 326, 150, 322, 235,
	241, 160, 162, 161, 143, 301, 325, 154, 164, 311,
	290, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 651, 297, 296, 646, 197, 699, 249,
	132, 280, 264, 202, 133, 318, 355, 149, 208, 323,
	127, 182, 247, 168, 258, 229, 230, 228, 231, 183,
	265, 340, 135, 319, 336, 156, 298, 299, 353, 285,
	137, 334, 314, 233, 203, 204, 136, 0, 282, 174,
	186, 169, 252, 0, 185, 274, 331, 332, 167, 356,
	145, 346, 139, 146, 345, 244, 0, 243, 348, 327,
	335, 234, 222, 0, 138, 333, 232, 221, 209, 179,
	193, 270, 217, 271, 194, 239, 238, 240, 219, 223,
	0, 607, 0, 312, 342, 357, 152, 626, 300, 324,
	0, 0, 153, 184, 178, 269, 242, 147, 196, 309,
	207, 215, 281, 354, 256, 288, 157, 341, 308, 624,
	625, 622, 0, 623, 671, 672, 727, 728, 729, 697,
	618, 0, 711, 712, 0, 0, 0, 0, 0, 702,
	717, 718, 692, 737, 648, 649, 608, 611, 612, 613,
	619, 663, 664, 675, 678, 707, 706, 705, 708, 713,
	733, 732, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 126, 140, 212, 738, 279,
	181, 343, 604, 173, 0, 0, 665, 667, 677, 694,
	129, 130, 141, 151, 158, 172, 177, 180, 188, 192,
	195, 198, 199, 200, 205, 220, 224, 225, 226, 227,
	245, 246, 250, 251, 254, 255, 260, 261, 262, 266,
	267, 268, 273, 276, 278, 283, 289, 291, 292, 293,
	295, 302, 303, 304, 305, 313, 317, 329, 330, 349,
	351, 714, 721, 701, 321, 658, 724, 628, 645, 736,
	647, 650, 689, 614, 670, 253, 643, 615, 0, 632,
	605, 639, 606, 629, 660, 175, 627, 703, 673, 723,
	210, 685, 0, 165, 218, 216, 0, 0, 0, 259,
	320, 722, 666, 0, 730, 213, 0, 682, 731, 310,
	236, 0, 0, 662, 710, 668, 698, 657, 691, 621,
	681, 725, 644, 687, 726, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	684, 720, 641, 686, 688, 603, 683, 0, 609, 616,
	735, 716, 635, 636, 637, 0, 0, 0, 0, 0,
	0, 0, 661, 669, 695, 654, 0, 0, 0, 0,
	0, 0, 1806, 0, 633, 0, 679, 0, 0, 0,
	617, 610, 0, 0, 659, 0, 0, 0, 620, 131,
	634, 696, 0, 601, 187, 237, 144, 700, 715, 656,
	201, 350, 719, 653, 652, 275, 0, 315, 190, 211,
	148, 128, 142, 159, 189, 248, 284, 294, 642, 602,
	704, 630, 640, 166, 638, 287, 257, 339, 0, 676,
	263, 286, 214, 328, 277, 337, 338, 191, 739, 347,
	352, 0, 307, 176, 0, 134, 0, 272, 171, 206,
	655, 690, 631, 163, 693, 680, 709, 306, 326, 150,
	322, 235, 241, 160, 162, 161, 143, 301, 325, 154,
	164, 311, 290, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 651, 297, 296, 646, 197,
	699, 249, 132, 280, 264, 202, 133, 318, 355, 149,
	208, 323, 127, 182, 247, 168, 258, 229, 230, 228,
	231, 183, 265, 340, 135, 319, 336, 156, 298, 299,
	353, 285, 137, 334, 314, 233, 203, 204, 136, 0,
	282, 174, 186, 169, 252, 0, 185, 274, 331, 332,
	167, 356, 145, 346, 139, 146, 345, 244, 0, 243,
	348, 327, 335, 234, 222, 0, 138, 333, 232, 221,
	209, 179, 193, 270, 217, 271, 194, 239, 238, 240,
	219, 223, 0, 607, 0, 312, 342, 357, 152, 626,
	300, 324, 0, 0, 153, 184, 178, 269, 242, 147,
	196, 309, 207, 215, 281, 354, 256, 288, 157, 341,
	308, 624, 625, 622, 0, 623, 671, 672, 727, 728,
	729, 697, 618, 0, 711, 712, 0, 0, 0, 0,
	0, 702, 717, 718, 692, 737, 648, 649, 608, 611,
	612, 613, 619, 663, 664, 675, 678, 707, 706, 705,
	708, 713, 733, 732, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 674, 126, 140, 212,
	738, 279, 181, 343, 604, 173, 0, 0, 665, 667,
	677, 694, 129, 130, 141, 151, 158, 172, 177, 180,
	188, 192, 195, 198, 199, 200, 205, 220, 224, 225,
	226, 227, 245, 246, 250, 251, 254, 255, 260, 261,
	262, 266, 267, 268, 273, 276, 278, 283, 289, 291,
	292, 293, 295, 302, 303, 304, 305, 313, 317, 329,
	330, 349, 351, 714, 721, 701, 321, 658, 724, 628,
	645, 736, 647, 650, 689, 614, 670, 253, 643, 615,
	0, 632, 605, 639, 606, 629, 660, 175, 627, 703,
	673, 723, 210, 685, 0, 165, 218, 216, 0, 0,
	0, 259, 320, 722, 666, 0, 730, 213, 0, 682,
	731, 310, 236, 0, 0, 662, 710, 668, 698, 657,
	691, 621, 681, 725, 644, 687, 726, 79, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 684, 720, 641, 686, 688, 603, 683, 0,
	609, 616, 735, 716, 635, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 661, 669, 695, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 679, 0,
	0, 0, 617, 610, 0, 0, 659, 0, 0, 0,
	620, 131, 634, 696, 0, 601, 187, 237, 144, 700,
	715, 656, 201, 350, 719, 653, 652, 275, 0, 315,
	190, 211, 148, 128, 142, 159, 189, 248, 284, 294,
	642, 602, 704, 630, 640, 166, 638, 287, 257, 339,
	0, 676, 263, 286, 214, 328, 277, 337, 338, 191,
	739, 347, 352, 0, 307, 176, 0, 134, 0, 272,
	171, 206, 655, 690, 631, 163, 693, 680, 709, 306,
	326, 150, 322, 235, 241, 160, 162, 161, 143, 301,
	325, 154, 164, 311, 290, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 651, 297, 296,
	646, 197, 699, 249, 132, 280, 264, 202, 133, 318,
	355, 149, 208, 323, 127, 182, 247, 168, 258, 229,
	230, 228, 231, 183, 265, 340, 135, 319, 336, 156,
	298, 299, 353, 285, 137, 334, 314, 233, 203, 204,
	136, 0, 282, 174, 186, 169, 252, 0, 185, 274,
	331, 332, 167, 356, 145, 346, 139, 146, 345, 244,
	0, 243, 348, 327, 335, 234, 222, 0, 138, 333,
	232, 221, 209, 179, 193, 270, 217, 271, 194, 239,
	238, 240, 219, 223, 0, 607, 0, 312, 342, 357,
	152, 626, 300, 324, 0, 0, 153, 184, 178, 269,
	242, 147, 196, 309, 207, 215, 281, 354, 256, 288,
	157, 341, 308, 624, 625, 622, 0, 623, 671, 672,
	727, 728, 729, 697, 618, 0, 711, 712, 0, 0,
	0, 0, 0, 702, 717, 718, 692, 737, 648, 649,
	608, 611, 612, 613, 619, 663, 664, 675, 678, 707,
	706, 705, 708, 713, 733, 732, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 126,
	140, 212, 738, 279, 181, 343, 604, 173, 0, 0,
	665, 667, 677, 694, 129, 130, 141, 151, 158, 172,
	177, 180, 188, 192, 195, 198, 199, 200, 205, 220,
	224, 225, 226, 227, 245, 246, 250, 251, 254, 255,
	260, 261, 262, 266, 267, 268, 273, 276, 278, 283,
	289, 291, 292, 293, 295, 302, 303, 304, 305, 313,
	317, 329, 330, 349, 351, 714, 721, 701, 321, 658,
	724, 628, 645, 736, 647, 650, 689, 614, 670, 253,
	643, 615, 0, 632, 605, 639, 606, 629, 660, 175,
	627, 703, 673, 723, 210, 685, 0, 165, 218, 216,
	0, 0, 0, 259, 320, 722, 666, 0, 730, 213,
	0, 682, 731, 310, 236, 0, 0, 662, 710, 668,
	698, 657, 691, 621, 681, 725, 644, 687, 726, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 684, 720, 641, 686, 688, 603,
	683, 0, 609, 616, 735, 716, 635, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 661, 669, 695, 654,
	0, 0, 0, 0, 0, 0, 1368, 0, 633, 0,
	679, 0, 0, 0, 617, 610, 0, 0, 659, 0,
	0, 0, 620, 131, 634, 696, 0, 601, 187, 237,
	144, 700, 715, 656, 201, 350, 719, 653, 652, 275,
	0, 315, 190, 211, 148, 128, 142, 159, 189, 248,
	284, 294, 642, 602, 704, 630, 640, 166, 638, 287,
	257, 339, 0, 676, 263, 286, 214, 328, 277, 337,
	338, 191, 739, 347, 352, 0, 307, 176, 0, 134,
	0, 272, 171, 206, 655, 690, 631, 163, 693, 680,
	709, 306, 326, 150, 322, 235, 241, 160, 162, 161,
	143, 301, 325, 154, 164, 311, 290, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 651,
	297, 296, 646, 197, 699, 249, 132, 280, 264, 202,
	133, 318, 355, 149, 208, 323, 127, 182, 247, 168,
	258, 229, 230, 228, 231, 183, 265, 340, 135, 319,
	336, 156, 298, 299, 353, 285, 137, 334, 314, 233,
	203, 204, 136, 0, 282, 174, 186, 169, 252, 0,
	185, 274, 331, 332, 167, 356, 145, 346, 139, 146,
	345, 244, 0, 243, 348, 327, 335, 234, 222, 0,
	138, 333, 232, 221, 209, 179, 193, 270, 217, 271,
	194, 239, 238, 240, 219, 223, 0, 607, 0, 312,
	342, 357, 152, 626, 300, 324, 0, 0, 153, 184,
	178, 269, 242, 147, 196, 309, 207, 215, 281, 354,
	256, 288, 157, 341, 308, 624, 625, 622, 0, 623,
	671, 672, 727, 728, 729, 697, 618, 0, 711, 712,
	0, 0, 0, 0, 0, 702, 717, 718, 692, 737,
	648, 649, 608, 611, 612, 613, 619, 663, 664, 675,
	678, 707, 706, 705, 708, 713, 733, 732, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 126, 140, 212, 738, 279, 181, 343, 604, 173,
	0, 0, 665, 667, 677, 694, 129, 130, 141, 151,
	158, 172, 177, 180, 188, 192, 195, 198, 199, 200,
	205, 220, 224, 225, 226, 227, 245, 246, 250, 251,
	254, 255, 260, 261, 262, 266, 267, 268, 273, 276,
	278, 283, 289, 291, 292, 293, 295, 302, 303, 304,
	305, 313, 317, 329, 330, 349, 351, 714, 721, 701,
	321, 658, 724, 628, 645, 736, 647, 650, 689, 614,
	670, 253, 643, 615, 0, 632, 605, 639, 606, 629,
	660, 175, 627, 703, 673, 723, 210, 685, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 722, 666, 0,
	730, 213, 0, 682, 731, 310, 236, 0, 0, 662,
	710, 668, 698, 657, 691, 621, 681, 725, 644, 687,
	726, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 684, 720, 641, 686,
	688, 603, 683, 0, 609, 616, 735, 716, 635, 636,
	637, 0, 0, 0, 0, 0, 0, 0, 661, 669,
	695, 654, 0, 0, 0, 0, 0, 0, 1228, 0,
	633, 0, 679, 0, 0, 0, 617, 610, 0, 0,
	659, 0, 0, 0, 620, 131, 634, 696, 0, 601,
	187, 237, 144, 700, 715, 656, 201, 350, 719, 653,
	652, 275, 0, 315, 190, 211, 148, 128, 142, 159,
	189, 248, 284, 294, 642, 602, 704, 630, 640, 166,
	638, 287, 257, 339, 0, 676, 263, 286, 214, 328,
	277, 337, 338, 191, 739, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 655, 690, 631, 163,
	693, 680, 709, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 651, 297, 296, 646, 197, 699, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 607,
	0, 312, 342, 357, 152, 626, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 624, 625, 622,
	0, 623, 671, 672, 727, 728, 729, 697, 618, 0,
	711, 712, 0, 0, 0, 0, 0, 702, 717, 718,
	692, 737, 648, 649, 608, 611, 612, 613, 619, 663,
	664, 675, 678, 707, 706, 705, 708, 713, 733, 732,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 126, 140, 212, 738, 279, 181, 343,
	604, 173, 0, 0, 665, 667, 677, 694, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 714,
	721, 701, 321, 658, 724, 628, 645, 736, 647, 650,
	689, 614, 670, 253, 643, 615, 0, 632, 605, 639,
	606, 629, 660, 175, 627, 703, 673, 723, 210, 685,
	0, 165, 218, 216, 0, 0, 0, 259, 320, 722,
	666, 0, 730, 213, 0, 682, 731, 310, 236, 0,
	0, 662, 710, 668, 698, 657, 691, 621, 681, 725,
	644, 687, 726, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 684, 720,
	641, 686, 688, 603, 683, 0, 609, 616, 735, 716,
	635, 636, 637, 0, 0, 0, 0, 0, 0, 0,
	661, 669, 695, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 633, 0, 679, 0, 0, 0, 617, 610,
	0, 0, 659, 0, 0, 0, 620, 131, 634, 696,
	0, 601, 187, 237, 144, 700, 715, 656, 201, 350,
	719, 653, 652, 275, 0, 315, 190, 211, 148, 128,
	142, 159, 189, 248, 284, 294, 642, 602, 704, 630,
	640, 166, 638, 287, 257, 339, 0, 676, 263, 286,
	214, 328, 277, 337, 338, 191, 739, 347, 352, 0,
	307, 176, 0, 134, 0, 272, 171, 206, 655, 690,
	631, 163, 693, 680, 709, 306, 326, 150, 322, 235,
	241, 160, 162, 161, 143, 301, 325, 154, 164, 311,
	290, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 651, 297, 296, 646, 197, 699, 249,
	132, 280, 264, 202, 133, 318, 355, 149, 208, 323,
	127, 182, 247, 168, 258, 229, 230, 228, 231, 183,
	265, 340, 135, 319, 336, 156, 298, 299, 353, 285,
	137, 334, 314, 233, 203, 204, 136, 0, 282, 174,
	186, 169, 252, 0, 185, 274, 331, 332, 167, 356,
	145, 346, 139, 146, 345, 244, 0, 243, 348, 327,
	335, 234, 222, 0, 138, 333, 232, 221, 209, 179,
	193, 270, 217, 271, 194, 239, 238, 240, 219, 223,
	0, 607, 0, 312, 342, 357, 152, 626, 300, 324,
	0, 0, 153, 184, 178, 269, 242, 147, 196, 309,
	207, 215, 281, 354, 256, 288, 157, 341, 308, 624,
	625, 622, 0, 623, 671, 672, 727, 728, 729, 697,
	618, 0, 711, 712, 0, 0, 0, 0, 0, 702,
	717, 718, 692, 737, 648, 649, 608, 611, 612, 613,
	619, 663, 664, 675, 678, 707, 706, 705, 708, 713,
	733, 732, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 674, 126, 140, 212, 738, 279,
	181, 343, 604, 173, 0, 0, 665, 667, 677, 694,
	129, 130, 141, 151, 158, 172, 177, 180, 188, 192,
	195, 198, 199, 200, 205, 220, 224, 225, 226, 227,
	245, 246, 250, 251, 254, 255, 260, 261, 262, 266,
	267, 268, 273, 276, 278, 283, 289, 291, 292, 293,
	295, 302, 303, 304, 305, 313, 317, 329, 330, 349,
	351, 714, 721, 701, 321, 658, 724, 628, 645, 736,
	647, 650, 689, 614, 670, 253, 643, 615, 0, 632,
	605, 639, 606, 629, 660, 175, 627, 703, 673, 723,
	210, 685, 0, 165, 218, 216, 0, 0, 0, 259,
	320, 722, 666, 0, 730, 213, 0, 682, 731, 310,
	236, 0, 0, 662, 710, 668, 698, 657, 691, 621,
	681, 725, 644, 687, 726, 0, 0, 0, 0, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	684, 720, 641, 686, 688, 603, 683, 0, 609, 616,
	735, 716, 635, 636, 637, 0, 0, 0, 0, 0,
	0, 0, 661, 669, 695, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 633, 0, 679, 0, 0, 0,
	617, 610, 0, 0, 659, 0, 0, 0, 620, 131,
	634, 696, 0, 601, 187, 237, 144, 700, 715, 656,
	201, 350, 719, 653, 652, 275, 0, 315, 190, 211,
	148, 128, 142, 159, 189, 248, 284, 294, 642, 602,
	704, 630, 640, 166, 638, 287, 257, 339, 0, 676,
	263, 286, 214, 328, 277, 337, 338, 191, 739, 347,
	352, 0, 307, 176, 0, 134, 0, 272, 171, 206,
	655, 690, 631, 163, 693, 680, 709, 306, 326, 150,
	322, 235, 241, 160, 162, 161, 143, 301, 325, 154,
	164, 311, 290, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 651, 297, 296, 646, 197,
	699, 249, 132, 280, 264, 202, 133, 318, 355, 149,
	208, 323, 127, 182, 247, 168, 258, 229, 230, 228,
	231, 183, 265, 340, 135, 319, 336, 156, 298, 299,
	353, 285, 137, 334, 314, 233, 203, 204, 136, 0,
	282, 174, 186, 169, 252, 0, 185, 274, 331, 332,
	167, 356, 145, 346, 139, 146, 345, 244, 0, 243,
	348, 327, 335, 234, 222, 0, 138, 333, 232, 221,
	209, 179, 193, 270, 217, 271, 194, 239, 238, 240,
	219, 223, 0, 607, 0, 312, 342, 357, 152, 626,
	300, 324, 0, 0, 153, 184, 178, 269, 242, 147,
	196, 309, 207, 215, 281, 354, 256, 288, 157, 341,
	308, 624, 625, 622, 0, 623, 671, 672, 727, 728,
	729, 697, 618, 0, 711, 712, 0, 0, 0, 0,
	0, 702, 717, 718, 692, 737, 648, 649, 608, 611,
	612, 613, 619, 663, 664, 675, 678, 707, 706, 705,
	708, 713, 733, 732, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 674, 126, 140, 212,
	738, 279, 181, 343, 604, 173, 0, 0, 665, 667,
	677, 694, 129, 130, 141, 151, 158, 172, 177, 180,
	188, 192, 195, 198, 199, 200, 205, 220, 224, 225,
	226, 227, 245, 246, 250, 251, 254, 255, 260, 261,
	262, 266, 267, 268, 273, 276, 278, 283, 289, 291,
	292, 293, 295, 302, 303, 304, 305, 313, 317, 329,
	330, 349, 351, 714, 721, 701, 321, 658, 724, 628,
	645, 736, 647, 650, 689, 614, 670, 253, 643, 615,
	0, 632, 605, 639, 606, 629, 660, 175, 627, 703,
	673, 723, 210, 685, 0, 165, 218, 216, 0, 0,
	0, 259, 320, 1400, 1404, 0, 730, 213, 0, 682,
	731, 310, 236, 0, 0, 662, 710, 668, 698, 657,
	691, 621, 681, 725, 644, 687, 726, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 684, 720, 641, 686, 688, 603, 683, 0,
	609, 616, 735, 716, 635, 636, 637, 0, 0, 0,
	0, 0, 0, 0, 661, 669, 695, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 633, 0, 679, 0,
	0, 0, 617, 610, 0, 0, 659, 0, 0, 0,
	620, 131, 634, 696, 0, 601, 187, 237, 144, 700,
	715, 1403, 201, 350, 719, 653, 652, 1398, 0, 1399,
	190, 211, 598, 128, 142, 1396, 1402, 248, 284, 294,
	642, 602, 704, 630, 640, 166, 638, 287, 257, 339,
	0, 676, 263, 286, 214, 328, 277, 337, 338, 191,
	739, 347, 352, 0, 307, 176, 0, 134, 0, 272,
	171, 206, 655, 690, 631, 163, 693, 680, 709, 306,
	326, 150, 322, 235, 241, 160, 162, 161, 143, 301,
	325, 154, 164, 311, 290, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 651, 297, 296,
	646, 197, 699, 249, 132, 280, 264, 202, 133, 318,
	355, 149, 208, 323, 127, 182, 247, 168, 258, 229,
	230, 228, 231, 183, 265, 340, 135, 319, 336, 156,
	298, 299, 353, 285, 137, 334, 314, 233, 203, 204,
	136, 0, 282, 174, 186, 169, 252, 0, 185, 274,
	331, 332, 167, 356, 145, 346, 139, 146, 345, 244,
	0, 243, 348, 327, 335, 234, 222, 0, 138, 333,
	232, 221, 209, 179, 193, 270, 217, 271, 194, 239,
	238, 240, 219, 223, 0, 607, 0, 312, 342, 357,
	152, 626, 300, 324, 0, 0, 153, 184, 178, 269,
	242, 147, 196, 309, 207, 215, 281, 354, 256, 288,
	157, 341, 308, 624, 625, 622, 0, 623, 671, 672,
	727, 728, 729, 697, 618, 0, 711, 712, 0, 0,
	0, 0, 0, 702, 717, 718, 692, 737, 648, 649,
	608, 611, 612, 613, 619, 663, 664, 675, 678, 707,
	706, 705, 708, 713, 733, 732, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 126,
	140, 212, 738, 279, 181, 343, 604, 173, 0, 0,
	665, 667, 677, 694, 129, 130, 141, 151, 158, 172,
	177, 180, 188, 192, 195, 198, 199, 200, 205, 220,
	224, 225, 226, 227, 245, 246, 250, 251, 254, 255,
	260, 261, 262, 266, 267, 268, 273, 276, 278, 283,
	289, 291, 292, 293, 295, 302, 303, 304, 305, 313,
	317, 329, 330, 349, 351, 714, 721, 701, 321, 658,
	724, 628, 645, 736, 647, 650, 689, 614, 670, 253,
	643, 615, 0, 632, 605, 639, 606, 629, 660, 175,
	627, 703, 673, 723, 210, 685, 0, 165, 218, 216,
	0, 0, 0, 259, 320, 722, 666, 0, 730, 213,
	0, 682, 731, 310, 236, 0, 0, 662, 710, 668,
	698, 657, 691, 621, 681, 725, 644, 687, 726, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 684, 720, 641, 686, 688, 603,
	683, 0, 609, 616, 735, 716, 635, 636, 637, 0,
	0, 0, 0, 0, 0, 0, 661, 669, 695, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 633, 0,
	679, 0, 0, 0, 617, 610, 0, 0, 659, 0,
	0, 0, 620, 131, 634, 696, 0, 601, 187, 237,
	144, 700, 715, 656, 201, 350, 719, 653, 652, 275,
	0, 315, 190, 211, 148, 128, 142, 159, 189, 248,
	284, 294, 642, 602, 704, 630, 640, 166, 638, 287,
	257, 339, 0, 676, 263, 286, 214, 328, 277, 337,
	338, 191, 739, 347, 352, 0, 307, 176, 0, 134,
	0, 272, 171, 206, 655, 690, 631, 163, 693, 680,
	709, 306, 326, 150, 322, 235, 241, 160, 162, 161,
	143, 301, 325, 154, 164, 311, 290, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 651,
	297, 296, 646, 197, 699, 249, 132, 280, 264, 202,
	133, 318, 355, 149, 208, 323, 127, 182, 247, 168,
	258, 229, 230, 228, 231, 183, 265, 340, 135, 319,
	336, 156, 298, 299, 353, 285, 137, 334, 314, 233,
	203, 204, 136, 0, 282, 174, 186, 169, 252, 0,
	185, 274, 331, 332, 167, 356, 145, 346, 139, 146,
	345, 244, 0, 243, 348, 327, 335, 234, 222, 0,
	138, 333, 232, 221, 209, 179, 193, 270, 217, 271,
	194, 239, 238, 240, 219, 223, 0, 607, 0, 312,
	342, 357, 152, 626, 300, 324, 0, 0, 153, 184,
	178, 269, 242, 147, 196, 309, 207, 215, 281, 354,
	256, 288, 157, 341, 308, 624, 625, 622, 0, 623,
	671, 672, 727, 728, 729, 697, 618, 0, 711, 712,
	0, 0, 0, 0, 0, 702, 717, 718, 692, 737,
	648, 649, 608, 611, 612, 613, 619, 663, 664, 675,
	678, 707, 706, 705, 708, 713, 733, 732, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	674, 126, 140, 212, 738, 279, 181, 343, 604, 173,
	0, 0, 665, 667, 677, 694, 129, 130, 141, 151,
	158, 172, 177, 180, 188, 192, 195, 198, 199, 200,
	205, 220, 224, 225, 226, 227, 245, 246, 250, 251,
	254, 255, 260, 261, 262, 266, 267, 268, 273, 276,
	278, 283, 289, 291, 292, 293, 295, 302, 303, 304,
	305, 313, 317, 329, 330, 349, 351, 714, 721, 701,
	321, 658, 724, 628, 645, 736, 647, 650, 689, 614,
	670, 253, 643, 615, 0, 632, 605, 639, 606, 629,
	660, 175, 627, 703, 673, 723, 210, 685, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 722, 666, 0,
	730, 213, 0, 682, 731, 310, 236, 0, 0, 662,
	710, 668, 698, 657, 691, 621, 681, 725, 644, 687,
	726, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 684, 720, 641, 686,
	688, 603, 683, 0, 609, 616, 735, 716, 635, 636,
	637, 0, 0, 0, 0, 0, 0, 0, 661, 669,
	695, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	633, 0, 679, 0, 0, 0, 617, 610, 0, 0,
	659, 0, 0, 0, 620, 131, 634, 696, 0, 601,
	187, 237, 144, 700, 715, 656, 201, 350, 719, 653,
	652, 275, 0, 315, 190, 211, 598, 128, 142, 594,
	189, 248, 284, 294, 642, 602, 704, 630, 640, 166,
	638, 287, 257, 339, 0, 676, 263, 286, 214, 328,
	277, 337, 338, 191, 739, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 655, 690, 631, 163,
	693, 680, 709, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 651, 297, 296, 646, 197, 699, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 607,
	0, 312, 342, 357, 152, 626, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 624, 625, 622,
	0, 623, 671, 672, 727, 728, 729, 697, 618, 0,
	711, 712, 0, 0, 0, 0, 0, 702, 717, 718,
	692, 737, 648, 649, 608, 611, 612, 613, 619, 663,
	664, 675, 678, 707, 706, 705, 708, 713, 733, 732,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 674, 126, 140, 212, 738, 279, 181, 343,
	604, 173, 0, 0, 665, 667, 677, 694, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 714,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 175, 466, 0, 0, 0, 210, 0, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 0, 0, 0,
	544, 213, 0, 0, 447, 310, 236, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 0, 0, 1378,
	0, 79, 0, 0, 0, 467, 491, 490, 493, 494,
	495, 496, 0, 0, 155, 492, 497, 526, 527, 1379,
	0, 0, 464, 482, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 480, 0, 0,
	0, 0, 558, 0, 481, 0, 0, 476, 477, 478,
	483, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	187, 237, 144, 534, 0, 0, 201, 350, 0, 0,
	556, 275, 0, 315, 190, 211, 148, 128, 142, 159,
	189, 248, 284, 294, 541, 0, 0, 0, 0, 166,
	0, 287, 257, 339, 533, 0, 263, 286, 214, 328,
	277, 337, 338, 191, 441, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 0, 0, 0, 163,
	0, 0, 0, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 297, 296, 0, 197, 0, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 0,
	0, 312, 342, 357, 152, 0, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 545, 557, 551,
	553, 552, 549, 550, 548, 547, 546, 559, 535, 536,
	537, 538, 539, 0, 0, 0, 542, 0, 554, 555,
	0, 0, 0, 0, 498, 499, 500, 501, 502, 506,
	507, 511, 512, 520, 519, 518, 521, 522, 524, 523,
	525, 503, 504, 505, 508, 509, 510, 513, 514, 517,
	515, 516, 540, 126, 140, 212, 0, 279, 181, 343,
	0, 173, 0, 0, 0, 0, 0, 0, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 34,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 175, 466, 0, 0, 0, 210, 0, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 0, 0, 0,
	544, 213, 0, 0, 447, 310, 236, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 467, 491, 490, 493, 494,
	495, 496, 0, 0, 155, 492, 497, 526, 527, 0,
	0, 0, 464, 482, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 480, 0, 0,
	0, 0, 558, 0, 481, 0, 0, 476, 477, 478,
	483, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	187, 237, 144, 534, 0, 0, 201, 350, 0, 0,
	556, 275, 0, 315, 190, 211, 148, 128, 142, 159,
	189, 248, 284, 294, 541, 0, 0, 0, 0, 166,
	0, 287, 257, 339, 533, 0, 263, 286, 214, 328,
	277, 337, 338, 191, 441, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 0, 0, 0, 163,
	0, 0, 0, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 297, 296, 0, 197, 0, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 0,
	0, 312, 342, 357, 152, 0, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 545, 557, 551,
	553, 552, 549, 550, 548, 547, 546, 559, 535, 536,
	537, 538, 539, 0, 0, 0, 542, 0, 554, 555,
	0, 0, 0, 0, 498, 499, 500, 501, 502, 506,
	507, 511, 512, 520, 519, 518, 521, 522, 524, 523,
	525, 503, 504, 505, 508, 509, 510, 513, 514, 517,
	515, 516, 540, 126, 140, 212, 77, 279, 181, 343,
	0, 173, 0, 0, 0, 0, 0, 0, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 469, 0, 0, 0,
	175, 466, 0, 0, 0, 210, 0, 0, 165, 218,
	216, 0, 0, 0, 259, 320, 0, 0, 0, 544,
	213, 0, 0, 447, 310, 236, 0, 0, 0, 0,
	531, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 467, 491, 490, 493, 494, 495,
	496, 0, 0, 155, 492, 497, 526, 527, 0, 0,
	0, 464, 482, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 480, 460, 0, 0,
	0, 558, 0, 481, 0, 0, 476, 477, 478, 483,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 187,
	237, 144, 534, 0, 0, 201, 350, 0, 0, 556,
	275, 0, 315, 190, 211, 148, 128, 142, 159, 189,
	248, 284, 294, 541, 0, 0, 0, 0, 166, 0,
	287, 257, 339, 533, 0, 263, 286, 214, 328, 277,
	337, 338, 191, 441, 347, 352, 0, 307, 176, 0,
	134, 0, 272, 171, 206, 0, 0, 0, 163, 0,
	0, 0, 306, 326, 150, 322, 235, 241, 160, 162,
	161, 143, 301, 325, 154, 164, 311, 290, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 297, 296, 0, 197, 0, 249, 132, 280, 264,
	202, 133, 318, 355, 149, 208, 323, 127, 182, 247,
	168, 258, 229, 230, 228, 231, 183, 265, 340, 135,
	319, 336, 156, 298, 299, 353, 285, 137, 334, 314,
	233, 203, 204, 136, 0, 282, 174, 186, 169, 252,
	0, 185, 274, 331, 332, 167, 356, 145, 346, 139,
	146, 345, 244, 0, 243, 348, 327, 335, 234, 222,
	0, 138, 333, 232, 221, 209, 179, 193, 270, 217,
	271, 194, 239, 238, 240, 219, 223, 0, 0, 0,
	312, 342, 357, 152, 0, 300, 324, 0, 0, 153,
	184, 178, 269, 242, 147, 196, 309, 207, 215, 281,
	354, 256, 288, 157, 341, 308, 545, 557, 551, 553,
	552, 549, 550, 548, 547, 546, 559, 535, 536, 537,
	538, 539, 0, 0, 0, 542, 0, 554, 555, 0,
	0, 0, 0, 498, 499, 500, 501, 502, 506, 507,
	511, 512, 520, 519, 518, 521, 522, 524, 523, 525,
	503, 504, 505, 508, 509, 510, 513, 514, 517, 515,
	516, 540, 126, 140, 212, 0, 279, 181, 343, 0,
	173, 0, 0, 0, 0, 0, 0, 129, 130, 141,
	151, 158, 172, 177, 180, 188, 192, 195, 198, 199,
	200, 205, 220, 224, 225, 226, 227, 245, 246, 250,
	251, 254, 255, 260, 261, 262, 266, 267, 268, 273,
	276, 278, 283, 289, 291, 292, 293, 295, 302, 303,
	304, 305, 313, 317, 329, 330, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 469, 0, 0, 0, 175,
	466, 0, 0, 0, 210, 0, 0, 165, 218, 216,
	0, 0, 0, 259, 320, 0, 0, 0, 544, 213,
	0, 0, 447, 310, 236, 0, 0, 0, 0, 531,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 865, 0, 467, 491, 490, 493, 494, 495, 496,
	0, 0, 155, 492, 497, 526, 527, 0, 0, 0,
	464, 482, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 480, 0, 0, 0, 0,
	558, 0, 481, 0, 0, 476, 477, 478, 483, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 187, 237,
	144, 534, 0, 0, 201, 350, 0, 0, 556, 275,
	0, 315, 190, 211, 148, 128, 142, 159, 189, 248,
	284, 294, 541, 0, 0, 0, 0, 166, 0, 287,
	257, 339, 533, 0, 263, 286, 214, 328, 277, 337,
	338, 191, 441, 347, 352, 0, 307, 176, 0, 134,
	0, 272, 171, 206, 0, 0, 0, 163, 0, 0,
	0, 306, 326, 150, 322, 235, 241, 160, 162, 161,
	143, 301, 325, 154, 164, 311, 290, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	297, 296, 0, 197, 0, 249, 132, 280, 264, 202,
	133, 318, 355, 149, 208, 323, 127, 182, 247, 168,
	258, 229, 230, 228, 231, 183, 265, 340, 135, 319,
	336, 156, 298, 299, 353, 285, 137, 334, 314, 233,
	203, 204, 136, 0, 282, 174, 186, 169, 252, 0,
	185, 274, 331, 332, 167, 356, 145, 346, 139, 146,
	345, 244, 0, 243, 348, 327, 335, 234, 222, 0,
	138, 333, 232, 221, 209, 179, 193, 270, 217, 271,
	194, 239, 238, 240, 219, 223, 0, 0, 0, 312,
	342, 357, 152, 0, 300, 324, 0, 0, 153, 184,
	178, 269, 242, 147, 196, 309, 207, 215, 281, 354,
	256, 288, 157, 341, 308, 545, 557, 551, 553, 552,
	549, 550, 548, 547, 546, 559, 535, 536, 537, 538,
	539, 0, 0, 0, 542, 0, 554, 555, 0, 0,
	0, 0, 498, 499, 500, 501, 502, 506, 507, 511,
	512, 520, 519, 518, 521, 522, 524, 523, 525, 503,
	504, 505, 508, 509, 510, 513, 514, 517, 515, 516,
	540, 126, 140, 212, 0, 279, 181, 343, 0, 173,
	0, 0, 0, 0, 0, 0, 129, 130, 141, 151,
	158, 172, 177, 180, 188, 192, 195, 198, 199, 200,
	205, 220, 224, 225, 226, 227, 245, 246, 250, 251,
	254, 255, 260, 261, 262, 266, 267, 268, 273, 276,
	278, 283, 289, 291, 292, 293, 295, 302, 303, 304,
	305, 313, 317, 329, 330, 349, 351, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 469, 0, 0, 0, 175, 466,
	0, 0, 0, 210, 0, 0, 165, 218, 216, 0,
	0, 0, 259, 320, 0, 0, 0, 544, 213, 0,
	0, 447, 310, 236, 0, 0, 0, 0, 531, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 467, 491, 490, 493, 494, 495, 496, 0,
	0, 155, 492, 497, 526, 527, 0, 0, 0, 464,
	482, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 479, 480, 1266, 0, 0, 0, 558,
	0, 481, 0, 0, 476, 477, 478, 483, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 187, 237, 144,
	534, 0, 0, 201, 350, 0, 0, 556, 275, 0,
	315, 190, 211, 148, 128, 142, 159, 189, 248, 284,
	294, 541, 0, 0, 0, 0, 166, 0, 287, 257,
	339, 533, 0, 263, 286, 214, 328, 277, 337, 338,
	191, 441, 347, 352, 0, 307, 176, 0, 134, 0,
	272, 171, 206, 0, 0, 0, 163, 0, 0, 0,
	306, 326, 150, 322, 235, 241, 160, 162, 161, 143,
	301, 325, 154, 164, 311, 290, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 297,
	296, 0, 197, 0, 249, 132, 280, 264, 202, 133,
	318, 355, 149, 208, 323, 127, 182, 247, 168, 258,
	229, 230, 228, 231, 183, 265, 340, 135, 319, 336,
	156, 298, 299, 353, 285, 137, 334, 314, 233, 203,
	204, 136, 0, 282, 174, 186, 169, 252, 0, 185,
	274, 331, 332, 167, 356, 145, 346, 139, 146, 345,
	244, 0, 243, 348, 327, 335, 234, 222, 0, 138,
	333, 232, 221, 209, 179, 193, 270, 217, 271, 194,
	239, 238, 240, 219, 223, 0, 0, 0, 312, 342,
	357, 152, 0, 300, 324, 0, 0, 153, 184, 178,
	269, 242, 147, 196, 309, 207, 215, 281, 354, 256,
	288, 157, 341, 308, 545, 557, 551, 553, 552, 549,
	550, 548, 547, 546, 559, 535, 536, 537, 538, 539,
	0, 0, 0, 542, 0, 554, 555, 0, 0, 0,
	0, 498, 499, 500, 501, 502, 506, 507, 511, 512,
	520, 519, 518, 521, 522, 524, 523, 525, 503, 504,
	505, 508, 509, 510, 513, 514, 517, 515, 516, 540,
	126, 140, 212, 0, 279, 181, 343, 0, 173, 0,
	0, 0, 0, 0, 0, 129, 130, 141, 151, 158,
	172, 177, 180, 188, 192, 195, 198, 199, 200, 205,
	220, 224, 225, 226, 227, 245, 246, 250, 251, 254,
	255, 260, 261, 262, 266, 267, 268, 273, 276, 278,
	283, 289, 291, 292, 293, 295, 302, 303, 304, 305,
	313, 317, 329, 330, 349, 351, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 175, 466, 0,
	0, 0, 210, 0, 0, 165, 218, 216, 0, 0,
	0, 259, 320, 0, 0, 0, 544, 213, 0, 0,
	447, 310, 236, 0, 0, 0, 0, 531, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 467, 491, 1310, 493, 494, 495, 496, 0, 0,
	155, 492, 497, 526, 527, 0, 0, 0, 464, 482,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 479, 480, 1266, 0, 0, 0, 558, 0,
	481, 0, 0, 476, 477, 478, 483, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 187, 237, 144, 534,
	0, 0, 201, 350, 0, 0, 556, 275, 0, 315,
	190, 211, 148, 128, 142, 159, 189, 248, 284, 294,
	541, 0, 0, 0, 0, 166, 0, 287, 257, 339,
	533, 0, 263, 286, 214, 328, 277, 337, 338, 191,
	441, 347, 352, 0, 307, 176, 0, 134, 0, 272,
	171, 206, 0, 0, 0, 163, 0, 0, 0, 306,
	326, 150, 322, 235, 241, 160, 162, 161, 143, 301,
	325, 154, 164, 311, 290, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 297, 296,
	0, 197, 0, 249, 132, 280, 264, 202, 133, 318,
	355, 149, 208, 323, 127, 182, 247, 168, 258, 229,
	230, 228, 231, 183, 265, 340, 135, 319, 336, 156,
	298, 299, 353, 285, 137, 334, 314, 233, 203, 204,
	136, 0, 282, 174, 186, 169, 252, 0, 185, 274,
	331, 332, 167, 356, 145, 346, 139, 146, 345, 244,
	0, 243, 348, 327, 335, 234, 222, 0, 138, 333,
	232, 221, 209, 179, 193, 270, 217, 271, 194, 239,
	238, 240, 219, 223, 0, 0, 0, 312, 342, 357,
	152, 0, 300, 324, 0, 0, 153, 184, 178, 269,
	242, 147, 196, 309, 207, 215, 281, 354, 256, 288,
	157, 341, 308, 545, 557, 551, 553, 552, 549, 550,
	548, 547, 546, 559, 535, 536, 537, 538, 539, 0,
	0, 0, 542, 0, 554, 555, 0, 0, 0, 0,
	498, 499, 500, 501, 502, 506, 507, 511, 512, 520,
	519, 518, 521, 522, 524, 523, 525, 503, 504, 505,
	508, 509, 510, 513, 514, 517, 515, 516, 540, 126,
	140, 212, 0, 279, 181, 343, 0, 173, 0, 0,
	0, 0, 0, 0, 129, 130, 141, 151, 158, 172,
	177, 180, 188, 192, 195, 198, 199, 200, 205, 220,
	224, 225, 226, 227, 245, 246, 250, 251, 254, 255,
	260, 261, 262, 266, 267, 268, 273, 276, 278, 283,
	289, 291, 292, 293, 295, 302, 303, 304, 305, 313,
	317, 329, 330, 349, 351, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 175, 466, 0, 0,
	0, 210, 0, 0, 165, 218, 216, 0, 0, 0,
	259, 320, 0, 0, 0, 544, 213, 0, 0, 447,
	310, 236, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	467, 491, 1307, 493, 494, 495, 496, 0, 0, 155,
	492, 497, 526, 527, 0, 0, 0, 464, 482, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 480, 1266, 0, 0, 0, 558, 0, 481,
	0, 0, 476, 477, 478, 483, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 187, 237, 144, 534, 0,
	0, 201, 350, 0, 0, 556, 275, 0, 315, 190,
	211, 148, 128, 142, 159, 189, 248, 284, 294, 541,
	0, 0, 0, 0, 166, 0, 287, 257, 339, 533,
	0, 263, 286, 214, 328, 277, 337, 338, 191, 441,
	347, 352, 0, 307, 176, 0, 134, 0, 272, 171,
	206, 0, 0, 0, 163, 0, 0, 0, 306, 326,
	150, 322, 235, 241, 160, 162, 161, 143, 301, 325,
	154, 164, 311, 290, 316, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 297, 296, 0,
	197, 0, 249, 132, 280, 264, 202, 133, 318, 355,
	149, 208, 323, 127, 182, 247, 168, 258, 229, 230,
	228, 231, 183, 265, 340, 135, 319, 336, 156, 298,
	299, 353, 285, 137, 334, 314, 233, 203, 204, 136,
	0, 282, 174, 186, 169, 252, 0, 185, 274, 331,
	332, 167, 356, 145, 346, 139, 146, 345, 244, 0,
	243, 348, 327, 335, 234, 222, 0, 138, 333, 232,
	221, 209, 179, 193, 270, 217, 271, 194, 239, 238,
	240, 219, 223, 0, 0, 0, 312, 342, 357, 152,
	0, 300, 324, 0, 0, 153, 184, 178, 269, 242,
	147, 196, 309, 207, 215, 281, 354, 256, 288, 157,
	341, 308, 545, 557, 551, 553, 552, 549, 550, 548,
	547, 546, 559, 535, 536, 537, 538, 539, 0, 0,
	0, 542, 0, 554, 555, 0, 0, 0, 0, 498,
	499, 500, 501, 502, 506, 507, 511, 512, 520, 519,
	518, 521, 522, 524, 523, 525, 503, 504, 505, 508,
	509, 510, 513, 514, 517, 515, 516, 540, 126, 140,
	212, 0, 279, 181, 343, 0, 173, 0, 0, 0,
	0, 0, 0, 129, 130, 141, 151, 158, 172, 177,
	180, 188, 192, 195, 198, 199, 200, 205, 220, 224,
	225, 226, 227, 245, 246, 250, 251, 254, 255, 260,
	261, 262, 266, 267, 268, 273, 276, 278, 283, 289,
	291, 292, 293, 295, 302, 303, 304, 305, 313, 317,
	329, 330, 349, 351, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 469, 0, 0, 0, 175, 466, 0, 0, 0,
	210, 0, 0, 165, 218, 216, 0, 0, 0, 259,
	320, 0, 0, 0, 544, 213, 0, 0, 447, 310,
	236, 0, 0, 0, 0, 531, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 1183, 0, 467,
	491, 490, 493, 494, 495, 496, 0, 0, 155, 492,
	497, 526, 527, 0, 0, 0, 464, 482, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 480, 0, 0, 0, 0, 558, 0, 481, 0,
	0, 476, 477, 478, 483, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 187, 237, 144, 534, 0, 0,
	201, 350, 0, 0, 556, 275, 0, 315, 190, 211,
	148, 128, 142, 159, 189, 248, 284, 294, 541, 0,
	0, 0, 0, 166, 0, 287, 257, 339, 533, 0,
	263, 286, 214, 328, 277, 337, 338, 191, 441, 347,
	352, 0, 307, 176, 0, 134, 0, 272, 171, 206,
	0, 0, 0, 163, 0, 0, 0, 306, 326, 150,
	322, 235, 241, 160, 162, 161, 143, 301, 325, 154,
	164, 311, 290, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 297, 296, 0, 197,
	0, 249, 132, 280, 264, 202, 133, 318, 355, 149,
	208, 323, 127, 182, 247, 168, 258, 229, 230, 228,
	231, 183, 265, 340, 135, 319, 336, 156, 298, 299,
	353, 285, 137, 334, 314, 233, 203, 204, 136, 0,
	282, 174, 186, 169, 252, 0, 185, 274, 331, 332,
	167, 356, 145, 346, 139, 146, 345, 244, 0, 243,
	348, 327, 335, 234, 222, 0, 138, 333, 232, 221,
	209, 179, 193, 270, 217, 271, 194, 239, 238, 240,
	219, 223, 0, 0, 0, 312, 342, 357, 152, 0,
	300, 324, 0, 0, 153, 184, 178, 269, 242, 147,
	196, 309, 207, 215, 281, 354, 256, 288, 157, 341,
	308, 545, 557, 551, 553, 552, 549, 550, 548, 547,
	546, 559, 535, 536, 537, 538, 539, 0, 0, 0,
	542, 0, 554, 555, 0, 0, 0, 0, 498, 499,
	500, 501, 502, 506, 507, 511, 512, 520, 519, 518,
	521, 522, 524, 523, 525, 503, 504, 505, 508, 509,
	510, 513, 514, 517, 515, 516, 540, 126, 140, 212,
	0, 279, 181, 343, 0, 173, 0, 0, 0, 0,
	0, 0, 129, 130, 141, 151, 158, 172, 177, 180,
	188, 192, 195, 198, 199, 200, 205, 220, 224, 225,
	226, 227, 245, 246, 250, 251, 254, 255, 260, 261,
	262, 266, 267, 268, 273, 276, 278, 283, 289, 291,
	292, 293, 295, 302, 303, 304, 305, 313, 317, 329,
	330, 349, 351, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	469, 0, 0, 0, 175, 466, 0, 0, 0, 210,
	0, 0, 165, 218, 216, 0, 0, 0, 259, 320,
	0, 0, 0, 544, 213, 0, 0, 447, 310, 236,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 79, 0, 0, 0, 467, 491,
	490, 493, 494, 495, 496, 0, 0, 155, 492, 497,
	526, 527, 0, 0, 0, 464, 482, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	480, 0, 0, 0, 0, 558, 0, 481, 0, 0,
	476, 477, 478, 483, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 187, 237, 144, 534, 0, 0, 201,
	350, 0, 0, 556, 275, 0, 315, 190, 211, 148,
	128, 142, 159, 189, 248, 284, 294, 541, 0, 0,
	0, 0, 166, 0, 287, 257, 339, 533, 0, 263,
	286, 214, 328, 277, 337, 338, 191, 441, 347, 352,
	0, 307, 176, 0, 134, 0, 272, 171, 206, 0,
	0, 0, 163, 0, 0, 0, 306, 326, 150, 322,
	235, 241, 160, 162, 161, 143, 301, 325, 154, 164,
	311, 290, 316, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 297, 296, 0, 197, 0,
	249, 132, 280, 264, 202, 133, 318, 355, 149, 208,
	323, 127, 182, 247, 168, 258, 229, 230, 228, 231,
	183, 265, 340, 135, 319, 336, 156, 298, 299, 353,
	285, 137, 334, 314, 233, 203, 204, 136, 0, 282,
	174, 186, 169, 252, 0, 185, 274, 331, 332, 167,
	356, 145, 346, 139, 146, 345, 244, 0, 243, 348,
	327, 335, 234, 222, 0, 138, 333, 232, 221, 209,
	179, 193, 270, 217, 271, 194, 239, 238, 240, 219,
	223, 0, 0, 0, 312, 342, 357, 152, 0, 300,
	324, 0, 0, 153, 184, 178, 269, 242, 147, 196,
	309, 207, 215, 281, 354, 256, 288, 157, 341, 308,
	545, 557, 551, 553, 552, 549, 550, 548, 547, 546,
	559, 535, 536, 537, 538, 539, 0, 0, 0, 542,
	0, 554, 555, 0, 0, 0, 0, 498, 499, 500,
	501, 502, 506, 507, 511, 512, 520, 519, 518, 521,
	522, 524, 523, 525, 503, 504, 505, 508, 509, 510,
	513, 514, 517, 515, 516, 540, 126, 140, 212, 0,
	279, 181, 343, 0, 173, 0, 0, 0, 0, 0,
	0, 129, 130, 141, 151, 158, 172, 177, 180, 188,
	192, 195, 198, 199, 200, 205, 220, 224, 225, 226,
	227, 245, 246, 250, 251, 254, 255, 260, 261, 262,
	266, 267, 268, 273, 276, 278, 283, 289, 291, 292,
	293, 295, 302, 303, 304, 305, 313, 317, 329, 330,
	349, 351, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 210, 0,
	0, 165, 218, 216, 0, 0, 0, 259, 320, 0,
	0, 0, 544, 213, 0, 0, 447, 310, 236, 0,
	0, 0, 0, 531, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 467, 491, 490,
	493, 494, 495, 496, 0, 0, 155, 492, 497, 526,
	527, 0, 0, 0, 0, 482, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 479, 480,
	0, 0, 0, 0, 558, 0, 481, 0, 0, 476,
	477, 478, 483, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 187, 237, 144, 534, 0, 0, 201, 350,
	0, 0, 556, 275, 0, 315, 190, 211, 148, 128,
	142, 159, 189, 248, 284, 294, 541, 0, 0, 0,
	0, 166, 0, 287, 257, 339, 533, 0, 263, 286,
	214, 328, 277, 337, 338, 191, 441, 347, 352, 0,
	307, 176, 0, 134, 0, 272, 171, 206, 0, 0,
	0, 163, 0, 0, 0, 306, 326, 150, 322, 235,
	241, 160, 162, 161, 143, 301, 325, 154, 164, 311,
	290, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 297, 296, 0, 197, 0, 249,
	132, 280, 264, 202, 133, 318, 355, 149, 208, 323,
	127, 182, 247, 168, 258, 229, 230, 228, 231, 183,
	265, 340, 135, 319, 336, 156, 298, 299, 353, 285,
	137, 334, 314, 233, 203, 204, 136, 0, 282, 174,
	186, 169, 252, 0, 185, 274, 331, 332, 167, 356,
	145, 346, 139, 146, 345, 244, 0, 243, 348, 327,
	335, 234, 222, 0, 138, 333, 232, 221, 209, 179,
	193, 270, 217, 271, 194, 239, 238, 240, 219, 223,
	0, 0, 0, 312, 342, 357, 152, 0, 300, 324,
	0, 0, 153, 184, 178, 269, 242, 147, 196, 309,
	207, 215, 281, 354, 256, 288, 157, 341, 308, 545,
	557, 551, 553, 552, 549, 550, 548, 547, 546, 559,
	535, 536, 537, 538, 539, 1313, 1314, 1315, 542, 0,
	554, 555, 0, 0, 0, 0, 498, 499, 500, 501,
	502, 506, 507, 511, 512, 520, 519, 518, 521, 522,
	524, 523, 525, 503, 504, 505, 508, 509, 510, 513,
	514, 517, 515, 516, 540, 126, 140, 212, 0, 279,
	181, 343, 0, 173, 0, 0, 0, 0, 0, 0,
	129, 130, 141, 151, 158, 172, 177, 180, 188, 192,
	195, 198, 199, 200, 205, 220, 224, 225, 226, 227,
	245, 246, 250, 251, 254, 255, 260, 261, 262, 266,
	267, 268, 273, 276, 278, 283, 289, 291, 292, 293,
	295, 302, 303, 304, 305, 313, 317, 329, 330, 349,
	351, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 210, 0, 0,
	165, 218, 216, 0, 0, 0, 259, 320, 0, 0,
	0, 544, 213, 0, 0, 447, 310, 236, 0, 0,
	0, 0, 531, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 467, 491, 490, 493,
	494, 495, 496, 0, 0, 155, 492, 497, 526, 527,
	0, 0, 0, 0, 482, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 480, 0,
	0, 0, 0, 558, 0, 481, 0, 0, 476, 477,
	478, 483, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 187, 237, 144, 534, 0, 0, 201, 350, 0,
	0, 556, 275, 0, 315, 190, 211, 148, 128, 142,
	159, 189, 248, 284, 294, 541, 0, 0, 0, 0,
	166, 0, 287, 257, 339, 533, 2469, 263, 286, 214,
	328, 277, 337, 338, 191, 441, 347, 352, 0, 307,
	176, 0, 134, 0, 272, 171, 206, 0, 0, 0,
	163, 0, 0, 0, 306, 326, 150, 322, 235, 241,
	160, 162, 161, 143, 301, 325, 154, 164, 311, 290,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 297, 296, 0, 197, 0, 249, 132,
	280, 264, 202, 133, 318, 355, 149, 208, 323, 127,
	182, 247, 168, 258, 229, 230, 228, 231, 183, 265,
	340, 135, 319, 336, 156, 298, 299, 353, 285, 137,
	334, 314, 233, 203, 204, 136, 0, 282, 174, 186,
	169, 252, 0, 185, 274, 331, 332, 167, 356, 145,
	346, 139, 146, 345, 244, 0, 243, 348, 327, 335,
	234, 222, 0, 138, 333, 232, 221, 209, 179, 193,
	270, 217, 271, 194, 239, 238, 240, 219, 223, 0,
	0, 0, 312, 342, 357, 152, 0, 300, 324, 0,
	0, 153, 184, 178, 269, 242, 147, 196, 309, 207,
	215, 281, 354, 256, 288, 157, 341, 308, 545, 557,
	551, 553, 552, 549, 550, 548, 547, 546, 559, 535,
	536, 537, 538, 539, 0, 0, 0, 542, 0, 554,
	555, 0, 0, 0, 0, 498, 499, 500, 501, 502,
	506, 507, 511, 512, 520, 519, 518, 521, 522, 524,
	523, 525, 503, 504, 505, 508, 509, 510, 513, 514,
	517, 515, 516, 540, 126, 140, 212, 0, 279, 181,
	343, 0, 173, 0, 0, 0, 0, 0, 0, 129,
	130, 141, 151, 158, 172, 177, 180, 188, 192, 195,
	198, 199, 200, 205, 220, 224, 225, 226, 227, 245,
	246, 250, 251, 254, 255, 260, 261, 262, 266, 267,
	268, 273, 276, 278, 283, 289, 291, 292, 293, 295,
	302, 303, 304, 305, 313, 317, 329, 330, 349, 351,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 210, 0, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 0, 0, 0,
	544, 213, 0, 0, 447, 310, 236, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 865, 0, 467, 491, 490, 493, 494,
	495, 496, 0, 0, 155, 492, 497, 526, 527, 0,
	0, 0, 0, 482, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 480, 0, 0,
	0, 0, 558, 0, 481, 0, 0, 476, 477, 478,
	483, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	187, 237, 144, 534, 0, 0, 201, 350, 0, 0,
	556, 275, 0, 315, 190, 211, 148, 128, 142, 159,
	189, 248, 284, 294, 541, 0, 0, 0, 0, 166,
	0, 287, 257, 339, 533, 0, 263, 286, 214, 328,
	277, 337, 338, 191, 441, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 0, 0, 0, 163,
	0, 0, 0, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 297, 296, 0, 197, 0, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 0,
	0, 312, 342, 357, 152, 0, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 545, 557, 551,
	553, 552, 549, 550, 548, 547, 546, 559, 535, 536,
	537, 538, 539, 0, 0, 0, 542, 0, 554, 555,
	0, 0, 0, 0, 498, 499, 500, 501, 502, 506,
	507, 511, 512, 520, 519, 518, 521, 522, 524, 523,
	525, 503, 504, 505, 508, 509, 510, 513, 514, 517,
	515, 516, 540, 126, 140, 212, 0, 279, 181, 343,
	0, 173, 0, 0, 0, 0, 0, 0, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 210, 0, 0, 165, 218,
	216, 0, 0, 0, 259, 320, 0, 0, 0, 544,
	213, 0, 0, 447, 310, 236, 0, 0, 0, 0,
	531, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 467, 491, 490, 493, 494, 495,
	496, 0, 0, 155, 492, 497, 526, 527, 0, 0,
	0, 0, 482, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 480, 0, 0, 0,
	0, 558, 0, 481, 0, 0, 476, 477, 478, 483,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 187,
	237, 144, 534, 0, 0, 201, 350, 0, 0, 556,
	275, 0, 315, 190, 211, 148, 128, 142, 159, 189,
	248, 284, 294, 541, 0, 0, 0, 0, 166, 0,
	287, 257, 339, 533, 0, 263, 286, 214, 328, 277,
	337, 338, 191, 441, 347, 352, 0, 307, 176, 0,
	134, 0, 272, 171, 206, 0, 0, 0, 163, 0,
	0, 0, 306, 326, 150, 322, 235, 241, 160, 162,
	161, 143, 301, 325, 154, 164, 311, 290, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 297, 296, 0, 197, 0, 249, 132, 280, 264,
	202, 133, 318, 355, 149, 208, 323, 127, 182, 247,
	168, 258, 229, 230, 228, 231, 183, 265, 340, 135,
	319, 336, 156, 298, 299, 353, 285, 137, 334, 314,
	233, 203, 204, 136, 0, 282, 174, 186, 169, 252,
	0, 185, 274, 331, 332, 167, 356, 145, 346, 139,
	146, 345, 244, 0, 243, 348, 327, 335, 234, 222,
	0, 138, 333, 232, 221, 209, 179, 193, 270, 217,
	271, 194, 239, 238, 240, 219, 223, 0, 0, 0,
	312, 342, 357, 152, 0, 300, 324, 0, 0, 153,
	184, 178, 269, 242, 147, 196, 309, 207, 215, 281,
	354, 256, 288, 157, 341, 308, 545, 557, 551, 553,
	552, 549, 550, 548, 547, 546, 559, 535, 536, 537,
	538, 539, 0, 0, 0, 542, 0, 554, 555, 0,
	0, 0, 0, 498, 499, 500, 501, 502, 506, 507,
	511, 512, 520, 519, 518, 521, 522, 524, 523, 525,
	503, 504, 505, 508, 509, 510, 513, 514, 517, 515,
	516, 540, 126, 140, 212, 0, 279, 181, 343, 0,
	173, 0, 0, 0, 0, 0, 0, 129, 130, 141,
	151, 158, 172, 177, 180, 188, 192, 195, 198, 199,
	200, 205, 220, 224, 225, 226, 227, 245, 246, 250,
	251, 254, 255, 260, 261, 262, 266, 267, 268, 273,
	276, 278, 283, 289, 291, 292, 293, 295, 302, 303,
	304, 305, 313, 317, 329, 330, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 210, 0, 0, 165, 218, 216,
	0, 0, 0, 259, 320, 0, 0, 0, 0, 213,
	0, 0, 447, 310, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 1360, 0, 0, 0,
	0, 0, 0, 124, 0, 420, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 187, 237,
	144, 0, 0, 0, 201, 350, 0, 1359, 0, 275,
	0, 315, 190, 211, 148, 128, 142, 159, 189, 248,
	284, 294, 0, 0, 0, 0, 0, 166, 0, 287,
	257, 339, 0, 0, 263, 286, 214, 328, 277, 337,
	338, 191, 441, 347, 352, 0, 307, 176, 0, 134,
	0, 272, 171, 206, 0, 0, 0, 163, 0, 0,
	0, 306, 326, 150, 322, 235, 241, 160, 162, 161,
	143, 301, 325, 154, 164, 311, 290, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	297, 296, 0, 197, 0, 249, 132, 280, 264, 202,
	133, 318, 355, 149, 208, 323, 127, 182, 247, 168,
	258, 229, 230, 228, 231, 183, 265, 340, 135, 319,
	336, 156, 298, 299, 353, 285, 137, 334, 314, 233,
	203, 204, 136, 0, 282, 174, 186, 169, 252, 0,
	185, 274, 331, 332, 167, 356, 145, 346, 139, 146,
	345, 244, 0, 243, 348, 327, 335, 234, 222, 0,
	138, 333, 232, 221, 209, 179, 193, 270, 217, 271,
	194, 239, 238, 240, 219, 223, 0, 0, 0, 312,
	342, 357, 152, 0, 300, 324, 0, 0, 153, 184,
	178, 269, 242, 147, 196, 309, 207, 215, 281, 354,
	256, 288, 157, 341, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 421, 422, 423, 424, 425, 429, 430, 434,
	435, 444, 443, 442, 445, 446, 449, 448, 450, 426,
	427, 428, 431, 432, 433, 436, 437, 440, 438, 439,
	0, 126, 140, 212, 0, 279, 181, 343, 0, 173,
	0, 0, 0, 0, 0, 0, 129, 130, 141, 151,
	158, 172, 177, 180, 188, 192, 195, 198, 199, 200,
	205, 220, 224, 225, 226, 227, 245, 246, 250, 251,
	254, 255, 260, 261, 262, 266, 267, 268, 273, 276,
	278, 283, 289, 291, 292, 293, 295, 302, 303, 304,
	305, 313, 317, 329, 330, 349, 351, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 210, 0, 0, 165, 218, 216, 0,
	0, 0, 259, 320, 0, 0, 0, 0, 213, 0,
	0, 447, 310, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 1360, 0, 0, 0, 0,
	0, 0, 124, 0, 420, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 187, 237, 144,
	0, 0, 0, 201, 350, 0, 1359, 0, 275, 0,
	315, 190, 211, 148, 128, 142, 159, 189, 248, 284,
	294, 0, 0, 0, 0, 0, 166, 0, 287, 257,
	339, 0, 0, 1354, 286, 214, 328, 277, 337, 338,
	191, 441, 347, 352, 0, 307, 176, 0, 134, 0,
	272, 171, 206, 0, 0, 0, 163, 0, 0, 0,
	306, 326, 150, 322, 235, 241, 160, 162, 161, 143,
	301, 325, 154, 164, 311, 290, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 297,
	296, 0, 197, 0, 249, 132, 280, 264, 202, 133,
	318, 355, 149, 208, 323, 127, 182, 247, 168, 258,
	229, 230, 228, 231, 183, 265, 340, 135, 319, 336,
	156, 298, 299, 353, 285, 137, 334, 314, 233, 203,
	204, 136, 0, 282, 174, 186, 169, 252, 0, 185,
	274, 331, 332, 167, 356, 145, 346, 139, 146, 345,
	244, 0, 243, 348, 327, 335, 234, 222, 0, 138,
	333, 232, 221, 209, 179, 193, 270, 217, 271, 194,
	239, 238, 240, 219, 223, 0, 0, 0, 312, 342,
	357, 152, 0, 300, 324, 0, 0, 153, 184, 178,
	269, 242, 147, 196, 309, 207, 215, 281, 354, 256,
	288, 157, 341, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 421, 422, 423, 424, 425, 429, 430, 434, 435,
	444, 443, 442, 445, 446, 449, 448, 450, 426, 427,
	428, 431, 432, 433, 436, 437, 440, 438, 439, 0,
	126, 140, 212, 0, 279, 181, 343, 0, 173, 0,
	0, 0, 0, 0, 0, 129, 130, 141, 151, 158,
	172, 177, 180, 188, 192, 195, 198, 199, 200, 205,
	220, 224, 225, 226, 227, 245, 246, 250, 251, 254,
	255, 260, 261, 262, 266, 267, 268, 273, 276, 278,
	283, 289, 291, 292, 293, 295, 302, 303, 304, 305,
	313, 317, 329, 330, 349, 351, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 887, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 210, 0, 0, 165, 218, 216, 0, 0,
	0, 259, 320, 0, 0, 0, 0, 213, 0, 0,
	447, 310, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 891, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 884, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 187, 237, 144, 0,
	0, 0, 201, 350, 0, 0, 0, 275, 0, 315,
	190, 211, 148, 128, 142, 159, 189, 248, 284, 294,
	0, 0, 0, 0, 0, 166, 0, 287, 257, 339,
	0, 0, 263, 286, 214, 328, 277, 337, 338, 191,
	441, 347, 352, 0, 307, 176, 0, 134, 0, 272,
	171, 206, 0, 0, 0, 163, 0, 0, 0, 306,
	326, 150, 322, 235, 241, 160, 162, 161, 143, 301,
	325, 154, 164, 311, 290, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 297, 296,
	0, 197, 0, 249, 132, 280, 264, 202, 133, 318,
	355, 149, 208, 323, 127, 182, 247, 168, 258, 229,
	230, 228, 231, 183, 265, 340, 135, 319, 336, 156,
	298, 299, 353, 285, 137, 334, 314, 233, 203, 204,
	136, 0, 282, 174, 186, 169, 252, 0, 185, 274,
	331, 332, 167, 356, 145, 346, 139, 146, 345, 244,
	0, 243, 348, 327, 335, 234, 222, 0, 138, 333,
	232, 221, 209, 179, 193, 270, 217, 271, 194, 239,
	238, 240, 219, 223, 0, 0, 0, 312, 342, 357,
	152, 0, 300, 324, 0, 0, 153, 184, 178, 269,
	242, 147, 196, 309, 207, 215, 281, 354, 256, 288,
	157, 341, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	421, 422, 423, 424, 425, 429, 430, 434, 435, 444,
	443, 442, 445, 446, 449, 448, 450, 426, 427, 428,
	431, 432, 433, 436, 437, 440, 438, 439, 0, 126,
	140, 212, 0, 279, 181, 343, 0, 173, 0, 0,
	0, 0, 0, 0, 129, 130, 141, 151, 158, 172,
	177, 180, 188, 192, 195, 198, 199, 200, 205, 220,
	224, 225, 226, 227, 245, 246, 250, 251, 254, 255,
	260, 261, 262, 266, 267, 268, 273, 276, 278, 283,
	289, 291, 292, 293, 295, 302, 303, 304, 305, 313,
	317, 329, 330, 349, 351, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 0, 0, 0,
	0, 210, 1647, 0, 165, 218, 216, 0, 0, 0,
	259, 320, 0, 0, 0, 0, 213, 0, 0, 447,
	310, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 420, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 187, 237, 144, 0, 0,
	0, 201, 350, 0, 0, 0, 275, 0, 315, 190,
	211, 148, 128, 142, 159, 189, 248, 284, 294, 0,
	0, 0, 0, 0, 166, 0, 287, 257, 339, 0,
	0, 263, 286, 214, 328, 277, 337, 338, 191, 441,
	347, 352, 0, 307, 176, 0, 134, 0, 272, 171,
	206, 0, 0, 0, 163, 0, 0, 0, 306, 326,
	150, 322, 235, 241, 160, 162, 161, 143, 301, 325,
	154, 164, 311, 290, 316, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 297, 296, 0,
	197, 0, 249, 132, 280, 264, 202, 133, 318, 355,
	149, 208, 323, 127, 182, 247, 168, 258, 229, 230,
	228, 231, 183, 265, 340, 135, 319, 336, 156, 298,
	299, 353, 285, 137, 334, 314, 233, 203, 204, 136,
	0, 282, 174, 186, 169, 252, 0, 185, 274, 331,
	332, 167, 356, 145, 346, 139, 146, 345, 244, 0,
	243, 348, 327, 335, 234, 222, 0, 138, 333, 232,
	221, 209, 179, 193, 270, 217, 271, 194, 239, 238,
	240, 219, 223, 0, 0, 0, 312, 342, 357, 152,
	0, 300, 324, 0, 0, 153, 184, 178, 269, 242,
	147, 196, 309, 207, 215, 281, 354, 256, 288, 157,
	341, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 421,
	422, 423, 424, 425, 429, 430, 434, 435, 444, 443,
	442, 445, 446, 449, 448, 450, 426, 427, 428, 431,
	432, 433, 436, 437, 440, 438, 439, 0, 126, 140,
	212, 0, 279, 181, 343, 0, 173, 0, 0, 0,
	0, 0, 0, 129, 130, 141, 151, 158, 172, 177,
	180, 188, 192, 195, 198, 199, 200, 205, 220, 224,
	225, 226, 227, 245, 246, 250, 251, 254, 255, 260,
	261, 262, 266, 267, 268, 273, 276, 278, 283, 289,
	291, 292, 293, 295, 302, 303, 304, 305, 313, 317,
	329, 330, 349, 351, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	210, 0, 0, 165, 218, 216, 0, 0, 0, 259,
	320, 0, 0, 0, 0, 213, 0, 0, 447, 310,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 758,
	0, 757, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 187, 237, 144, 0, 0, 0,
	201, 350, 0, 0, 0, 275, 0, 315, 190, 211,
	148, 128, 142, 159, 189, 248, 284, 294, 0, 0,
	0, 0, 0, 166, 0, 287, 257, 339, 0, 0,
	263, 286, 214, 328, 277, 337, 338, 191, 441, 347,
	352, 0, 307, 176, 0, 134, 0, 272, 171, 206,
	0, 0, 0, 163, 0, 0, 0, 306, 326, 150,
	322, 235, 241, 160, 162, 161, 143, 301, 325, 154,
	164, 311, 290, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 297, 296, 0, 197,
	0, 249, 132, 280, 264, 202, 133, 318, 355, 149,
	208, 323, 127, 182, 247, 168, 258, 229, 230, 228,
	231, 183, 265, 340, 135, 319, 336, 156, 298, 299,
	353, 285, 137, 334, 314, 233, 203, 204, 136, 0,
	282, 174, 186, 169, 252, 0, 185, 274, 331, 332,
	167, 356, 145, 346, 139, 146, 345, 244, 0, 243,
	348, 327, 335, 234, 222, 0, 138, 333, 232, 221,
	209, 179, 193, 270, 217, 271, 194, 239, 238, 240,
	219, 223, 0, 0, 0, 312, 342, 357, 152, 0,
	300, 324, 0, 0, 153, 184, 178, 269, 242, 147,
	196, 309, 207, 215, 281, 354, 256, 288, 157, 341,
	308, 0, 0, 0, 1170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 421, 422,
	423, 424, 425, 429, 430, 434, 435, 444, 443, 442,
	445, 446, 449, 448, 450, 426, 427, 428, 431, 432,
	433, 436, 437, 440, 438, 439, 0, 126, 140, 212,
	0, 279, 181, 343, 0, 173, 0, 0, 0, 0,
	0, 0, 129, 130, 141, 151, 158, 172, 177, 180,
	188, 192, 195, 198, 199, 200, 205, 220, 224, 225,
	226, 227, 245, 246, 250, 251, 254, 255, 260, 261,
	262, 266, 267, 268, 273, 276, 278, 283, 289, 291,
	292, 293, 295, 302, 303, 304, 305, 313, 317, 329,
	330, 349, 351, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 210,
	0, 0, 165, 218, 216, 0, 0, 0, 259, 320,
	0, 0, 0, 0, 213, 0, 0, 447, 310, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	420, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 187, 237, 144, 0, 0, 0, 201,
	350, 0, 0, 0, 275, 0, 315, 190, 211, 148,
	128, 142, 159, 189, 248, 284, 294, 0, 0, 0,
	0, 0, 166, 0, 287, 257, 339, 0, 0, 263,
	286, 214, 328, 277, 337, 338, 191, 441, 347, 352,
	0, 307, 176, 0, 134, 0, 272, 171, 206, 0,
	0, 0, 163, 0, 0, 0, 306, 326, 150, 322,
	235, 241, 160, 162, 161, 143, 301, 325, 154, 164,
	311, 290, 316, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 297, 296, 0, 197, 0,
	249, 132, 280, 264, 202, 133, 318, 355, 149, 208,
	323, 127, 182, 247, 168, 258, 229, 230, 228, 231,
	183, 265, 340, 135, 319, 336, 156, 298, 299, 353,
	285, 137, 334, 314, 233, 203, 204, 136, 0, 282,
	174, 186, 169, 252, 0, 185, 274, 331, 332, 167,
	356, 145, 346, 139, 146, 345, 244, 0, 243, 348,
	327, 335, 234, 222, 0, 138, 333, 232, 221, 209,
	179, 193, 270, 217, 271, 194, 239, 238, 240, 219,
	223, 0, 0, 0, 312, 342, 357, 152, 0, 300,
	324, 0, 0, 153, 184, 178, 269, 242, 147, 196,
	309, 207, 215, 281, 354, 256, 288, 157, 341, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 421, 422, 423,
	424, 425, 429, 430, 434, 435, 444, 443, 442, 445,
	446, 449, 448, 450, 426, 427, 428, 431, 432, 433,
	436, 437, 440, 438, 439, 0, 126, 140, 212, 0,
	279, 181, 343, 0, 173, 0, 0, 0, 0, 0,
	0, 129, 130, 141, 151, 158, 172, 177, 180, 188,
	192, 195, 198, 199, 200, 205, 220, 224, 225, 226,
	227, 245, 246, 250, 251, 254, 255, 260, 261, 262,
	266, 267, 268, 273, 276, 278, 283, 289, 291, 292,
	293, 295, 302, 303, 304, 305, 313, 317, 329, 330,
	349, 351, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 210, 0,
	0, 165, 218, 216, 0, 0, 0, 259, 320, 0,
	0, 0, 0, 213, 0, 0, 447, 310, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 758, 0, 757,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 187, 237, 144, 0, 0, 0, 201, 350,
	0, 0, 0, 275, 0, 315, 190, 211, 148, 128,
	142, 159, 189, 248, 284, 294, 0, 0, 0, 0,
	0, 166, 0, 287, 257, 339, 0, 0, 263, 286,
	214, 328, 277, 337, 338, 191, 441, 347, 352, 0,
	307, 176, 0, 134, 0, 272, 171, 206, 0, 0,
	0, 163, 0, 0, 0, 306, 326, 150, 322, 235,
	241, 160, 162, 161, 143, 301, 325, 154, 164, 311,
	290, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 297, 296, 0, 197, 0, 249,
	132, 280, 264, 202, 133, 318, 355, 149, 208, 323,
	127, 182, 247, 168, 258, 229, 230, 228, 231, 183,
	265, 340, 135, 319, 336, 156, 298, 299, 353, 285,
	137, 334, 314, 233, 203, 204, 136, 0, 282, 174,
	186, 169, 252, 0, 185, 274, 331, 332, 167, 356,
	145, 346, 139, 146, 345, 244, 0, 243, 348, 327,
	335, 234, 222, 0, 138, 333, 232, 221, 209, 179,
	193, 270, 217, 271, 194, 239, 238, 240, 219, 223,
	0, 0, 0, 312, 342, 357, 152, 0, 300, 324,
	0, 0, 153, 184, 178, 269, 242, 147, 196, 309,
	207, 215, 281, 354, 256, 288, 157, 341, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 422, 423, 424,
	425, 429, 430, 434, 435, 444, 443, 442, 445, 446,
	449, 448, 450, 426, 427, 428, 431, 432, 433, 436,
	437, 440, 438, 439, 0, 126, 140, 212, 0, 279,
	181, 343, 0, 173, 0, 0, 0, 0, 0, 0,
	129, 130, 141, 151, 158, 172, 177, 180, 188, 192,
	195, 198, 199, 200, 205, 220, 224, 225, 226, 227,
	245, 246, 250, 251, 254, 255, 260, 261, 262, 266,
	267, 268, 273, 276, 278, 283, 289, 291, 292, 293,
	295, 302, 303, 304, 305, 313, 317, 329, 330, 349,
	351, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 210, 0, 0,
	165, 218, 216, 0, 0, 0, 259, 320, 0, 0,
	0, 0, 213, 0, 0, 447, 310, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 888, 0, 891, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 187, 237, 144, 0, 0, 0, 201, 350, 0,
	0, 0, 275, 0, 315, 190, 211, 148, 128, 142,
	159, 189, 248, 284, 294, 0, 0, 0, 0, 0,
	166, 0, 287, 257, 339, 0, 0, 263, 286, 214,
	328, 277, 337, 338, 191, 441, 347, 352, 0, 307,
	176, 0, 134, 0, 272, 171, 206, 0, 0, 0,
	163, 0, 0, 0, 306, 326, 150, 322, 235, 241,
	160, 162, 161, 143, 301, 325, 154, 164, 311, 290,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 297, 296, 0, 197, 0, 249, 132,
	280, 264, 202, 133, 318, 355, 149, 208, 323, 127,
	182, 247, 168, 258, 229, 230, 228, 231, 183, 265,
	340, 135, 319, 336, 156, 298, 299, 353, 285, 137,
	334, 314, 233, 203, 204, 136, 0, 282, 174, 186,
	169, 252, 0, 185, 274, 331, 332, 167, 356, 145,
	346, 139, 146, 345, 244, 0, 243, 348, 327, 335,
	234, 222, 0, 138, 333, 232, 221, 209, 179, 193,
	270, 217, 271, 194, 239, 238, 240, 219, 223, 0,
	0, 0, 312, 342, 357, 152, 0, 300, 324, 0,
	0, 153, 184, 178, 269, 242, 147, 196, 309, 207,
	215, 281, 354, 256, 288, 157, 341, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 422, 423, 424, 425,
	429, 430, 434, 435, 444, 443, 442, 445, 446, 449,
	448, 450, 426, 427, 428, 431, 432, 433, 436, 437,
	440, 438, 439, 0, 126, 140, 212, 0, 279, 181,
	343, 0, 173, 0, 0, 0, 0, 0, 0, 129,
	130, 141, 151, 158, 172, 177, 180, 188, 192, 195,
	198, 199, 200, 205, 220, 224, 225, 226, 227, 245,
	246, 250, 251, 254, 255, 260, 261, 262, 266, 267,
	268, 273, 276, 278, 283, 289, 291, 292, 293, 295,
	302, 303, 304, 305, 313, 317, 329, 330, 349, 351,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 210, 0, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 0, 0, 0,
	0, 213, 0, 0, 447, 310, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	187, 237, 144, 0, 0, 0, 201, 350, 0, 0,
	0, 275, 0, 315, 190, 211, 148, 128, 142, 159,
	189, 248, 284, 294, 0, 0, 0, 0, 0, 166,
	0, 287, 257, 339, 0, 0, 263, 286, 214, 328,
	277, 337, 338, 191, 441, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 0, 0, 0, 163,
	0, 0, 0, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 297, 296, 0, 197, 0, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 0,
	0, 312, 342, 357, 152, 0, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 422, 423, 424, 425, 429,
	430, 434, 435, 444, 443, 442, 445, 446, 449, 448,
	450, 426, 427, 428, 431, 432, 433, 436, 437, 440,
	438, 439, 0, 126, 140, 212, 0, 279, 181, 343,
	0, 173, 0, 0, 0, 0, 0, 0, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 210, 447, 0, 165, 218,
	216, 0, 0, 0, 259, 320, 0, 0, 0, 0,
	213, 0, 0, 0, 310, 236, 0, 1977, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 901, 900, 910, 911, 903, 904, 905, 906, 907,
	908, 909, 902, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 187,
	237, 144, 0, 0, 0, 201, 350, 0, 0, 0,
	275, 0, 315, 190, 211, 148, 128, 142, 159, 189,
	248, 284, 294, 0, 0, 0, 441, 0, 166, 0,
	287, 257, 339, 0, 0, 263, 286, 214, 328, 277,
	337, 338, 191, 0, 347, 352, 0, 307, 176, 0,
	134, 0, 272, 171, 206, 0, 0, 0, 163, 0,
	0, 0, 306, 326, 150, 322, 235, 241, 160, 162,
	161, 143, 301, 325, 154, 164, 311, 290, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 297, 296, 0, 197, 0, 249, 132, 280, 264,
	202, 133, 318, 355, 149, 208, 323, 127, 182, 247,
	168, 258, 229, 230, 228, 231, 183, 265, 340, 135,
	319, 336, 156, 298, 299, 353, 285, 137, 334, 314,
	233, 203, 204, 136, 0, 282, 174, 186, 169, 252,
	0, 185, 274, 331, 332, 167, 356, 145, 346, 139,
	146, 345, 244, 0, 243, 348, 327, 335, 234, 222,
	0, 138, 333, 232, 221, 209, 179, 193, 270, 217,
	271, 194, 239, 238, 240, 219, 223, 0, 0, 0,
	312, 342, 357, 152, 0, 300, 324, 0, 0, 153,
	184, 178, 269, 242, 147, 196, 309, 207, 215, 281,
	354, 256, 288, 157, 341, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 422, 423, 424,
	425, 429, 430, 434, 435, 444, 443, 442, 445, 446,
	449, 448, 450, 426, 427, 428, 431, 432, 433, 436,
	437, 440, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 140, 212, 0, 279, 181, 343, 0,
	173, 0, 0, 0, 0, 0, 0, 129, 130, 141,
	151, 158, 172, 177, 180, 188, 192, 195, 198, 199,
	200, 205, 220, 224, 225, 226, 227, 245, 246, 250,
	251, 254, 255, 260, 261, 262, 266, 267, 268, 273,
	276, 278, 283, 289, 291, 292, 293, 295, 302, 303,
	304, 305, 313, 317, 329, 330, 349, 351, 34, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 210, 447, 0, 165, 218,
	216, 0, 0, 0, 259, 320, 0, 0, 0, 1351,
	213, 0, 0, 0, 310, 236, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 187,
	237, 144, 0, 0, 0, 201, 350, 0, 0, 0,
	275, 0, 315, 190, 211, 148, 128, 142, 159, 189,
	248, 284, 294, 0, 0, 0, 441, 0, 166, 0,
	287, 257, 339, 0, 0, 263, 286, 214, 328, 277,
	337, 338, 191, 0, 347, 352, 0, 307, 176, 0,
	134, 0, 272, 171, 206, 0, 0, 0, 163, 0,
	0, 0, 306, 326, 150, 322, 235, 241, 160, 162,
	161, 143, 301, 325, 154, 164, 311, 290, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 297, 296, 0, 197, 0, 249, 132, 280, 264,
	202, 133, 318, 355, 149, 208, 323, 127, 182, 247,
	168, 258, 229, 230, 228, 231, 183, 265, 340, 135,
	319, 336, 156, 298, 299, 353, 285, 137, 334, 314,
	233, 203, 204, 136, 0, 282, 174, 186, 169, 252,
	0, 185, 274, 331, 332, 167, 356, 145, 346, 139,
	146, 345, 244, 0, 243, 348, 327, 335, 234, 222,
	0, 138, 333, 232, 221, 209, 179, 193, 270, 217,
	271, 194, 239, 238, 240, 219, 223, 0, 0, 0,
	312, 342, 357, 152, 0, 300, 324, 0, 0, 153,
	184, 178, 269, 242, 147, 196, 309, 207, 215, 281,
	354, 256, 288, 157, 341, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 422, 423, 424,
	425, 429, 430, 434, 435, 444, 443, 442, 445, 446,
	449, 448, 450, 426, 427, 428, 431, 432, 433, 436,
	437, 440, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 140, 212, 77, 279, 181, 343, 0,
	173, 0, 0, 0, 0, 0, 0, 129, 130, 141,
	151, 158, 172, 177, 180, 188, 192, 195, 198, 199,
	200, 205, 220, 224, 225, 226, 227, 245, 246, 250,
	251, 254, 255, 260, 261, 262, 266, 267, 268, 273,
	276, 278, 283, 289, 291, 292, 293, 295, 302, 303,
	304, 305, 313, 317, 329, 330, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	1037, 0, 0, 0, 210, 447, 0, 165, 218, 216,
	0, 0, 0, 259, 320, 0, 0, 0, 0, 213,
	0, 0, 0, 310, 236, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 1036, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 187, 237,
	144, 0, 0, 0, 201, 350, 0, 0, 0, 275,
	0, 315, 190, 211, 148, 128, 142, 159, 189, 248,
	284, 294, 0, 0, 0, 441, 0, 166, 0, 287,
	257, 339, 0, 0, 263, 286, 214, 328, 277, 337,
	338, 191, 0, 347, 352, 0, 307, 176, 0, 134,
	0, 272, 171, 206, 0, 0, 0, 163, 0, 0,
	0, 306, 326, 150, 322, 235, 241, 160, 162, 161,
	143, 301, 325, 154, 164, 311, 290, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	297, 296, 0, 197, 0, 249, 132, 280, 264, 202,
	133, 318, 355, 149, 208, 323, 127, 182, 247, 168,
	258, 229, 230, 228, 231, 183, 265, 340, 135, 319,
	336, 156, 298, 299, 353, 285, 137, 334, 314, 233,
	203, 204, 136, 0, 282, 174, 186, 169, 252, 0,
	185, 274, 331, 332, 167, 356, 145, 346, 139, 146,
	345, 244, 0, 243, 348, 327, 335, 234, 222, 0,
	138, 333, 232, 221, 209, 179, 193, 270, 217, 271,
	194, 239, 238, 240, 219, 223, 0, 0, 0, 312,
	342, 357, 152, 0, 300, 324, 0, 0, 153, 184,
	178, 269, 242, 147, 196, 309, 207, 215, 281, 354,
	256, 288, 157, 341, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 422, 423, 424, 425,
	429, 430, 434, 435, 444, 443, 442, 445, 446, 449,
	448, 450, 426, 427, 428, 431, 432, 433, 436, 437,
	440, 438, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 140, 212, 0, 279, 181, 343, 0, 173,
	0, 0, 0, 0, 0, 0, 129, 130, 141, 151,
	158, 172, 177, 180, 188, 192, 195, 198, 199, 200,
	205, 220, 224, 225, 226, 227, 245, 246, 250, 251,
	254, 255, 260, 261, 262, 266, 267, 268, 273, 276,
	278, 283, 289, 291, 292, 293, 295, 302, 303, 304,
	305, 313, 317, 329, 330, 349, 351, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 210, 0, 0, 165, 218, 216, 0,
	0, 0, 259, 320, 0, 0, 0, 0, 213, 0,
	0, 0, 310, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 187, 237, 144,
	0, 0, 0, 201, 350, 0, 0, 0, 275, 0,
	315, 190, 211, 148, 128, 142, 159, 189, 248, 284,
	294, 0, 0, 0, 0, 0, 166, 0, 287, 257,
	339, 0, 0, 263, 286, 214, 328, 277, 337, 338,
	191, 0, 347, 352, 0, 307, 176, 0, 134, 0,
	272, 171, 206, 0, 0, 0, 163, 0, 0, 0,
	306, 326, 150, 322, 235, 241, 160, 162, 161, 143,
	301, 325, 154, 164, 311, 290, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 297,
	296, 0, 197, 0, 249, 132, 280, 264, 202, 133,
	318, 355, 149, 208, 323, 127, 182, 247, 168, 258,
	229, 230, 228, 231, 183, 265, 340, 135, 319, 336,
	156, 298, 299, 353, 285, 137, 334, 314, 233, 203,
	204, 136, 0, 282, 174, 186, 169, 252, 0, 185,
	274, 331, 332, 167, 356, 145, 346, 139, 146, 345,
	244, 0, 243, 348, 327, 335, 234, 222, 0, 138,
	333, 232, 221, 209, 179, 193, 270, 217, 271, 194,
	239, 238, 240, 219, 223, 0, 0, 0, 312, 342,
	357, 152, 0, 300, 324, 0, 0, 153, 184, 178,
	269, 242, 147, 196, 309, 207, 215, 281, 354, 256,
	288, 157, 341, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 140, 212, 0, 279, 181, 343, 0, 173, 0,
	0, 0, 0, 0, 0, 129, 130, 141, 151, 158,
	172, 177, 180, 188, 192, 195, 198, 199, 200, 205,
	220, 224, 225, 226, 227, 245, 246, 250, 251, 254,
	255, 260, 261, 262, 266, 267, 268, 273, 276, 278,
	283, 289, 291, 292, 293, 295, 302, 303, 304, 305,
	313, 317, 329, 330, 349, 351, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 0, 0,
	0, 0, 210, 0, 0, 165, 218, 216, 0, 0,
	0, 259, 320, 0, 0, 0, 0, 213, 0, 0,
	0, 310, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 599, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 187, 237, 144, 0,
	0, 0, 201, 350, 0, 0, 0, 275, 0, 315,
	190, 211, 148, 128, 142, 159, 189, 248, 284, 294,
	0, 0, 0, 0, 0, 166, 0, 287, 257, 339,
	0, 0, 263, 286, 214, 328, 277, 337, 338, 191,
	0, 347, 352, 0, 307, 176, 0, 134, 0, 272,
	171, 206, 0, 0, 0, 163, 0, 0, 0, 306,
	326, 150, 322, 235, 241, 160, 162, 161, 143, 301,
	325, 154, 164, 311, 290, 316, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 344, 0, 297, 296,
	0, 197, 0, 249, 132, 280, 264, 202, 133, 318,
	355, 149, 208, 323, 127, 182, 247, 168, 258, 229,
	230, 228, 231, 183, 265, 340, 135, 319, 336, 156,
	298, 299, 353, 285, 137, 334, 314, 233, 203, 204,
	136, 0, 282, 174, 186, 169, 252, 0, 185, 274,
	331, 332, 167, 356, 145, 346, 139, 146, 345, 244,
	0, 243, 348, 327, 335, 234, 222, 0, 138, 333,
	232, 221, 209, 179, 193, 270, 217, 271, 194, 239,
	238, 240, 219, 223, 0, 0, 0, 312, 342, 357,
	152, 0, 300, 324, 0, 0, 153, 184, 178, 269,
	242, 147, 196, 309, 207, 215, 281, 354, 256, 288,
	157, 341, 308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	140, 212, 0, 279, 181, 343, 0, 173, 0, 0,
	0, 0, 0, 0, 129, 130, 141, 151, 158, 172,
	177, 180, 188, 192, 195, 198, 199, 200, 205, 220,
	224, 225, 226, 227, 245, 246, 250, 251, 254, 255,
	260, 261, 262, 266, 267, 268, 273, 276, 278, 283,
	289, 291, 292, 293, 295, 302, 303, 304, 305, 313,
	317, 329, 330, 349, 351, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 1006, 175, 0, 0, 0,
	0, 210, 0, 0, 165, 218, 216, 0, 0, 0,
	259, 320, 0, 0, 0, 0, 213, 0, 0, 0,
	310, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 187, 237, 144, 0, 0,
	0, 201, 350, 0, 0, 0, 275, 0, 315, 190,
	211, 148, 128, 142, 159, 189, 248, 284, 294, 0,
	0, 0, 0, 0, 166, 0, 287, 257, 339, 0,
	0, 263, 286, 214, 328, 277, 337, 338, 191, 0,
	347, 352, 0, 307, 176, 0, 134, 0, 272, 171,
	206, 0, 0, 0, 163, 0, 0, 0, 306, 326,
	150, 322, 235, 241, 160, 162, 161, 143, 301, 325,
	154, 164, 311, 290, 316, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 344, 0, 297, 296, 0,
	197, 0, 249, 132, 280, 264, 202, 133, 318, 355,
	149, 208, 323, 127, 182, 247, 168, 258, 229, 230,
	228, 231, 183, 265, 340, 135, 319, 336, 156, 298,
	299, 353, 285, 137, 334, 314, 233, 203, 204, 136,
	0, 282, 174, 186, 169, 252, 0, 185, 274, 331,
	332, 167, 356, 145, 346, 139, 146, 345, 244, 0,
	243, 348, 327, 335, 234, 222, 0, 138, 333, 232,
	221, 209, 179, 193, 270, 217, 271, 194, 239, 238,
	240, 219, 223, 0, 0, 0, 312, 342, 357, 152,
	0, 300, 324, 0, 0, 153, 184, 178, 269, 242,
	147, 196, 309, 207, 215, 281, 354, 256, 288, 157,
	341, 308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 140,
	212, 0, 279, 181, 343, 0, 173, 0, 0, 0,
	0, 0, 0, 129, 130, 141, 151, 158, 172, 177,
	180, 188, 192, 195, 198, 199, 200, 205, 220, 224,
	225, 226, 227, 245, 246, 250, 251, 254, 255, 260,
	261, 262, 266, 267, 268, 273, 276, 278, 283, 289,
	291, 292, 293, 295, 302, 303, 304, 305, 313, 317,
	329, 330, 349, 351, 321, 0, 0, 0, 562, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 0, 0, 0, 0,
	210, 0, 0, 165, 218, 216, 0, 0, 0, 259,
	320, 0, 0, 0, 0, 213, 0, 0, 0, 310,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 187, 237, 144, 0, 0, 0,
	201, 350, 0, 0, 0, 275, 0, 315, 190, 211,
	148, 128, 142, 159, 189, 248, 284, 294, 0, 0,
	0, 0, 0, 166, 0, 287, 257, 339, 0, 0,
	263, 286, 214, 328, 277, 337, 338, 191, 0, 347,
	352, 0, 307, 176, 0, 134, 0, 272, 171, 206,
	0, 0, 0, 163, 0, 0, 0, 306, 326, 150,
	322, 235, 241, 160, 162, 161, 143, 301, 325, 154,
	164, 311, 290, 316, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 0, 297, 296, 0, 197,
	0, 249, 132, 280, 264, 202, 133, 318, 355, 149,
	208, 323, 127, 182, 247, 168, 258, 229, 230, 228,
	231, 183, 265, 340, 135, 319, 336, 156, 298, 299,
	353, 285, 137, 334, 314, 233, 203, 204, 136, 0,
	282, 174, 186, 169, 252, 0, 185, 274, 331, 332,
	167, 356, 145, 346, 139, 146, 345, 244, 0, 243,
	348, 327, 335, 234, 222, 0, 138, 333, 232, 221,
	209, 179, 193, 270, 217, 271, 194, 239, 238, 240,
	219, 223, 0, 0, 0, 312, 342, 357, 152, 0,
	300, 324, 0, 0, 153, 184, 178, 269, 242, 147,
	196, 309, 207, 215, 281, 354, 256, 288, 157, 341,
	308, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 140, 212,
	0, 279, 181, 343, 0, 173, 0, 0, 0, 0,
	0, 0, 129, 130, 141, 151, 158, 172, 177, 180,
	188, 192, 195, 198, 199, 200, 205, 220, 224, 225,
	226, 227, 245, 246, 250, 251, 254, 255, 260, 261,
	262, 266, 267, 268, 273, 276, 278, 283, 289, 291,
	292, 293, 295, 302, 303, 304, 305, 313, 317, 329,
	330, 349, 351, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 0, 0, 0, 0, 210,
	0, 0, 165, 218, 216, 0, 0, 0, 259, 320,
	0, 0, 0, 0, 213, 0, 0, 0, 310, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 187, 237, 144, 0, 121, 0, 201,
	350, 0, 0, 0, 275, 0, 315, 190, 211, 148,
	128, 142, 159, 189, 248, 284, 294, 0, 0, 0,
	0, 0, 166, 0, 287, 257, 339, 0, 0, 263,
	286, 214, 328, 277, 337, 338, 191, 0, 347, 352,
	0, 307, 176, 0, 134, 0, 272, 171, 206, 0,
	0, 0, 163, 0, 0, 0, 306, 326, 150, 322,
	235, 241, 160, 162, 161, 143, 301, 325, 154, 164,
	311, 290, 316, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 344, 0, 297, 296, 0, 197, 0,
	249, 132, 280, 264, 202, 133, 318, 355, 149, 208,
	323, 127, 182, 247, 168, 258, 229, 230, 228, 231,
	183, 265, 340, 135, 319, 336, 156, 298, 299, 353,
	285, 137, 334, 314, 233, 203, 204, 136, 0, 282,
	174, 186, 169, 252, 0, 185, 274, 331, 332, 167,
	356, 145, 346, 139, 146, 345, 244, 0, 243, 348,
	327, 335, 234, 222, 0, 138, 333, 232, 221, 209,
	179, 193, 270, 217, 271, 194, 239, 238, 240, 219,
	223, 0, 0, 0, 312, 342, 357, 152, 0, 300,
	324, 0, 0, 153, 184, 178, 269, 242, 147, 196,
	309, 207, 215, 281, 354, 256, 288, 157, 341, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 140, 212, 0,
	279, 181, 343, 0, 173, 0, 0, 0, 0, 0,
	0, 129, 130, 141, 151, 158, 172, 177, 180, 188,
	192, 195, 198, 199, 200, 205, 220, 224, 225, 226,
	227, 245, 246, 250, 251, 254, 255, 260, 261, 262,
	266, 267, 268, 273, 276, 278, 283, 289, 291, 292,
	293, 295, 302, 303, 304, 305, 313, 317, 329, 330,
	349, 351, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 210, 0,
	0, 165, 218, 216, 0, 0, 0, 259, 320, 0,
	0, 0, 0, 213, 0, 0, 0, 310, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 187, 237, 144, 0, 0, 0, 201, 350,
	0, 0, 0, 275, 0, 315, 190, 211, 148, 128,
	142, 159, 189, 248, 284, 294, 0, 0, 0, 0,
	0, 166, 0, 287, 257, 339, 0, 0, 263, 286,
	214, 328, 277, 337, 338, 191, 0, 347, 352, 0,
	307, 176, 0, 134, 0, 272, 171, 206, 0, 0,
	0, 163, 0, 0, 0, 306, 326, 150, 322, 235,
	241, 160, 162, 161, 143, 301, 325, 154, 164, 311,
	290, 316, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 344, 0, 297, 296, 0, 197, 0, 249,
	132, 280, 264, 202, 133, 318, 355, 149, 208, 323,
	127, 182, 247, 168, 258, 229, 230, 228, 231, 183,
	265, 340, 135, 319, 336, 156, 298, 299, 353, 285,
	137, 334, 314, 233, 203, 204, 136, 0, 282, 174,
	186, 169, 252, 0, 185, 274, 331, 332, 167, 356,
	145, 346, 139, 146, 345, 244, 0, 243, 348, 327,
	335, 234, 222, 0, 138, 333, 232, 221, 209, 179,
	193, 270, 217, 271, 194, 239, 238, 240, 219, 223,
	0, 0, 0, 312, 342, 357, 152, 0, 300, 324,
	0, 0, 153, 184, 178, 269, 242, 147, 196, 309,
	207, 215, 281, 354, 256, 288, 157, 341, 308, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 140, 212, 0, 279,
	181, 343, 0, 173, 0, 0, 0, 0, 0, 0,
	129, 130, 141, 151, 158, 172, 177, 180, 188, 192,
	195, 198, 199, 200, 205, 220, 224, 225, 226, 227,
	245, 246, 250, 251, 254, 255, 260, 261, 262, 266,
	267, 268, 273, 276, 278, 283, 289, 291, 292, 293,
	295, 302, 303, 304, 305, 313, 317, 329, 330, 349,
	351, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 0, 0, 0, 0, 210, 0, 0,
	165, 218, 216, 0, 0, 0, 259, 320, 0, 0,
	0, 0, 213, 0, 0, 0, 310, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 187, 237, 144, 0, 0, 0, 201, 350, 0,
	0, 0, 275, 0, 315, 190, 211, 148, 128, 142,
	159, 189, 248, 284, 294, 0, 0, 0, 0, 0,
	166, 0, 287, 257, 339, 0, 0, 263, 286, 214,
	328, 277, 337, 338, 191, 0, 347, 352, 0, 307,
	176, 0, 134, 0, 272, 171, 206, 0, 0, 0,
	163, 0, 0, 0, 306, 326, 150, 322, 235, 241,
	160, 162, 161, 143, 301, 325, 154, 164, 311, 290,
	316, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 344, 0, 297, 296, 0, 197, 0, 249, 132,
	280, 264, 202, 133, 318, 355, 149, 208, 323, 127,
	182, 247, 168, 258, 229, 230, 228, 231, 183, 265,
	340, 135, 319, 336, 156, 298, 299, 353, 285, 137,
	334, 314, 233, 203, 204, 136, 0, 282, 174, 186,
	169, 252, 0, 185, 274, 331, 332, 167, 356, 145,
	346, 139, 146, 345, 244, 0, 243, 348, 327, 335,
	234, 222, 0, 138, 333, 232, 221, 209, 179, 193,
	270, 217, 271, 194, 239, 238, 240, 219, 223, 0,
	0, 0, 312, 342, 357, 152, 0, 300, 324, 0,
	0, 153, 184, 178, 269, 242, 147, 196, 309, 207,
	215, 281, 354, 256, 288, 157, 341, 308, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 140, 212, 0, 279, 181,
	343, 0, 173, 0, 0, 0, 0, 0, 0, 129,
	130, 141, 151, 158, 172, 177, 180, 188, 192, 195,
	198, 199, 200, 205, 220, 224, 225, 226, 227, 245,
	246, 250, 251, 254, 255, 260, 261, 262, 266, 267,
	268, 273, 276, 278, 283, 289, 291, 292, 293, 295,
	302, 303, 304, 305, 313, 317, 329, 330, 349, 351,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 210, 0, 0, 165,
	218, 216, 0, 0, 0, 259, 320, 0, 0, 0,
	0, 213, 0, 0, 0, 310, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	187, 237, 144, 0, 0, 0, 201, 350, 0, 0,
	0, 275, 0, 315, 190, 211, 148, 128, 142, 159,
	189, 248, 284, 294, 0, 0, 0, 0, 0, 166,
	0, 287, 257, 339, 0, 0, 263, 286, 214, 328,
	277, 337, 338, 191, 0, 347, 352, 0, 307, 176,
	0, 134, 0, 272, 171, 206, 0, 0, 0, 163,
	0, 0, 0, 306, 326, 150, 322, 235, 241, 160,
	162, 161, 143, 301, 325, 154, 164, 311, 290, 316,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	344, 0, 297, 296, 0, 197, 0, 249, 132, 280,
	264, 202, 133, 318, 355, 149, 208, 323, 127, 182,
	247, 168, 258, 229, 230, 228, 231, 183, 265, 340,
	135, 319, 336, 156, 298, 299, 353, 285, 137, 334,
	314, 233, 203, 204, 136, 0, 282, 174, 186, 169,
	252, 0, 185, 274, 331, 332, 167, 356, 145, 346,
	139, 146, 345, 244, 0, 243, 348, 327, 335, 234,
	222, 0, 138, 333, 232, 221, 209, 179, 193, 270,
	217, 271, 194, 239, 238, 240, 219, 223, 0, 0,
	0, 312, 342, 357, 152, 0, 300, 324, 0, 0,
	153, 184, 178, 269, 242, 147, 196, 309, 207, 215,
	281, 354, 256, 288, 157, 341, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 140, 212, 0, 279, 181, 343,
	0, 173, 0, 0, 0, 0, 0, 0, 129, 130,
	141, 151, 158, 172, 177, 180, 188, 192, 195, 198,
	199, 200, 205, 220, 224, 225, 226, 227, 245, 246,
	250, 251, 254, 255, 260, 261, 262, 266, 267, 268,
	273, 276, 278, 283, 289, 291, 292, 293, 295, 302,
	303, 304, 305, 313, 317, 329, 330, 349, 351, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 210, 0, 0, 165, 218,
	216, 0, 0, 0, 259, 320, 0, 0, 0, 0,
	213, 0, 0, 0, 310, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 187,
	237, 144, 0, 0, 0, 201, 350, 0, 0, 0,
	275, 0, 315, 190, 211, 148, 128, 142, 159, 189,
	248, 284, 294, 0, 0, 0, 0, 0, 166, 0,
	287, 257, 339, 0, 0, 263, 286, 214, 328, 277,
	337, 338, 191, 0, 347, 352, 0, 307, 176, 0,
	134, 0, 272, 171, 206, 0, 0, 0, 163, 0,
	0, 0, 306, 326, 150, 322, 235, 241, 160, 162,
	161, 143, 301, 325, 154, 164, 311, 290, 316, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 344,
	0, 297, 296, 0, 197, 0, 249, 132, 280, 264,
	202, 133, 318, 355, 149, 208, 323, 127, 182, 247,
	168, 258, 229, 230, 228, 231, 183, 265, 340, 135,
	319, 336, 156, 298, 299, 353, 285, 137, 334, 314,
	233, 203, 204, 136, 0, 282, 174, 186, 169, 252,
	0, 185, 274, 331, 332, 167, 356, 145, 346, 139,
	582, 345, 244, 0, 243, 348, 327, 335, 234, 222,
	0, 138, 333, 232, 221, 209, 179, 193, 270, 217,
	271, 194, 239, 238, 240, 578, 223, 0, 0, 0,
	312, 342, 357, 152, 0, 300, 324, 0, 0, 153,
	184, 178, 269, 583, 581, 572, 573, 207, 215, 281,
	354, 256, 288, 157, 341, 308, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 140, 212, 0, 279, 181, 343, 0,
	173, 0, 0, 0, 0, 0, 0, 129, 130, 141,
	151, 158, 172, 177, 180, 188, 192, 195, 198, 199,
	200, 205, 220, 224, 225, 226, 227, 245, 246, 250,
	251, 254, 255, 260, 261, 262, 266, 579, 580, 273,
	276, 278, 283, 289, 291, 292, 293, 295, 302, 303,
	304, 305, 313, 317, 329, 330, 349, 351, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 210, 0, 0, 165, 218, 216,
	0, 0, 0, 259, 320, 0, 0, 0, 0, 213,
	0, 0, 0, 310, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 187, 237,
	144, 0, 0, 0, 201, 350, 0, 0, 0, 275,
	0, 315, 190, 211, 148, 128, 142, 159, 189, 248,
	284, 294, 0, 0, 0, 0, 0, 166, 0, 287,
	257, 339, 0, 0, 263, 286, 214, 328, 277, 337,
	338, 191, 0, 347, 352, 0, 307, 176, 0, 134,
	0, 272, 171, 206, 0, 0, 0, 163, 0, 0,
	0, 306, 326, 150, 322, 235, 241, 160, 162, 161,
	143, 301, 325, 154, 164, 311, 290, 316, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 344, 0,
	297, 296, 0, 197, 0, 249, 132, 280, 264, 202,
	133, 318, 355, 149, 208, 323, 127, 182, 247, 168,
	258, 229, 230, 228, 231, 183, 265, 340, 135, 319,
	1031, 156, 298, 299, 353, 285, 137, 334, 314, 233,
	203, 204, 136, 0, 282, 174, 186, 169, 252, 0,
	185, 274, 331, 332, 167, 356, 145, 346, 139, 146,
	345, 244, 0, 243, 348, 327, 335, 234, 222, 0,
	138, 333, 232, 221, 209, 179, 193, 270, 217, 271,
	194, 239, 238, 240, 219, 223, 0, 0, 0, 312,
	342, 357, 152, 0, 300, 324, 0, 0, 153, 184,
	178, 269, 242, 147, 196, 309, 207, 215, 281, 354,
	256, 288, 157, 341, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 140, 212, 0, 279, 181, 343, 0, 173,
	0, 0, 0, 0, 0, 0, 129, 130, 141, 151,
	158, 172, 177, 180, 188, 192, 195, 198, 199, 200,
	205, 220, 224, 225, 226, 227, 245, 246, 250, 251,
	254, 255, 260, 261, 262, 266, 267, 268, 273, 276,
	278, 283, 289, 291, 292, 293, 295, 302, 303, 304,
	305, 313, 317, 329, 330, 349, 351, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	0, 0, 0, 210, 0, 0, 165, 218, 216, 0,
	0, 0, 259, 320, 0, 0, 0, 0, 213, 0,
	0, 0, 310, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 0, 0, 0, 0, 187, 237, 144,
	0, 0, 0, 201, 350, 0, 0, 0, 275, 0,
	315, 190, 211, 148, 128, 142, 159, 189, 248, 284,
	294, 0, 0, 0, 0, 0, 166, 0, 287, 257,
	339, 0, 0, 263, 286, 214, 328, 277, 337, 338,
	191, 0, 347, 352, 0, 307, 176, 0, 134, 0,
	272, 171, 206, 0, 0, 0, 163, 0, 0, 0,
	306, 326, 150, 322, 235, 241, 160, 162, 161, 143,
	301, 325, 154, 164, 311, 290, 316, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 344, 0, 297,
	296, 0, 197, 0, 249, 132, 280, 264, 202, 133,
	318, 355, 149, 208, 323, 127, 182, 247, 168, 258,
	229, 230, 228, 231, 183, 265, 340, 135, 319, 569,
	156, 298, 299, 353, 285, 137, 334, 314, 233, 203,
	204, 136, 0, 282, 174, 186, 169, 252, 0, 185,
	274, 331, 332, 167, 356, 145, 346, 139, 582, 345,
	244, 0, 243, 348, 327, 335, 234, 222, 0, 138,
	333, 232, 221, 209, 179, 193, 270, 217, 271, 194,
	239, 238, 240, 578, 223, 0, 0, 0, 312, 342,
	357, 152, 0, 300, 324, 0, 0, 153, 184, 178,
	269, 583, 581, 572, 573, 207, 215, 281, 354, 256,
	288, 157, 341, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 140, 212, 0, 279, 181, 343, 0, 173, 0,
	0, 0, 0, 0, 0, 129, 130, 141, 151, 158,
	172, 177, 180, 188, 192, 195, 198, 199, 200, 205,
	220, 224, 225, 226, 227, 245, 246, 250, 251, 254,
	255, 260, 261, 262, 266, 579, 580, 273, 276, 278,
	283, 289, 291, 292, 293, 295, 302, 303, 304, 305,
	313, 317, 329, 330, 349, 351,
}
var yyPact = [...]int{

	173, -1000, -317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1590, -1000, -1000, -1000, -1000, -1000, -1000,
	758, 690, -1000, -1000, 186, 123, 25606, 334, 2885, 26524,
	-1000, -1000, -1000, 151, 261, 26524, -1000, -1000, -1000, 276,
	350, 1033, 1478, 1012, 37, -58, -85, -1000, 1644, 1651,
	-1000, -1000, 301, 43, -1000, -1000, -1000, 20556, 168, -1000,
	-1000, 1542, 1588, 1369, -1000, 13212, 300, 300, 25147, 28360,
	-1000, 1641, 26524, 11833, -1000, 323, 26524, -145, 295, 295,
	206, 295, 295, 333, -1000, 681, -1000, -1000, -1000, -1000,
	26524, 21015, 296, 26065, 296, 296, 296, 296, 296, 296,
	296, 26524, -1000, 504, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26524, 1011,
	1504, 755, 144, 8599, 8599, -1000, 715, -1000, 201, 200,
	193, 197, 73, 756, 1565, 1256, 1542, 1542, 8599, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 226, 312, 209, 168,
	680, -1000, -1000, -1000, -1000, -1000, 1503, 1500, 923, 1493,
	599, 1492, 1307, -34, -1000, 1010, 26524, -1000, -1000, 1314,
	1550, 332, 26524, -1000, -103, 1250, -1000, 1300, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1053, 1501, 857, 15966, 1443, -1000, -1000, 790, 1626,
	-1000, 19179, 501, -1000, 15966, 4270, 1256, -1000, -1000, 1256,
	-1000, -1000, -1000, 349, -1000, -1000, 17802, 17802, 17802, 17802,
	17802, 17802, 17802, 17802, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1256, 1256,
	1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256,
	1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256,
	1256, 1256, 1256, 1256, 1256, 1256, -1000, -1000, 1256, -1000,
	12753, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256,
	1256, 1256, 1256, 15966, 1256, 1256, 1256, 1256, 1256, 1256,
	1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256,
	24688, 23770, 26524, 1230, 1221, -1000, -1000, 493, 1248, -97,
	27901, -1000, -1000, -1000, -1000, 26983, 23311, 676, -1000, -1000,
	-1000, -1000, 1491, -1000, -1000, 491, -1000, 1590, -1000, -1000,
	1203, 270, -1000, 454, 4875, -1000, -1000, -1000, 1304, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26065, 1540, 315, 1007, 757, 1006, 1005, 999, 21015, 21015,
	295, 998, 1246, 311, 1245, 309, 1083, -1000, -1000, -1000,
	-1000, 26524, 1527, 1335, 26524, 997, 996, 995, 993, 21015,
	21015, -1000, 11371, -1000, 8599, 755, -1000, 940, 15966, 295,
	295, 8599, 8599, 8599, 26524, 26524, 26524, -1000, -1000, -1000,
	-1000, 26524, -1000, -1000, 755, 755, 8599, 755, 672, 1623,
	672, -1000, 672, -1000, -1000, 15966, -1000, 17802, 20097, 561,
	-1000, -1000, -1000, -1000, 986, 225, -1000, -1000, -1000, -1000,
	-1000, -1000, 985, 599, 599, -1000, 925, 599, 1236, -1000,
	675, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 599, -1000, 15507, -315, -1000, -1000, 1244,
	-1000, 255, 1369, -1000, -1000, 168, -1000, -1000, 26524, 8599,
	-107, 20556, 1256, 9985, -1000, -1000, -1000, 1636, 572, 1234,
	-1000, -1000, 1242, -1000, 807, 490, 912, 1397, -1000, -1000,
	-1000, 26524, -1000, 15966, 15966, 865, -1000, 21474, -1000, -1000,
	-1000, -1000, 9523, 584, 17802, 804, 685, 17802, 17802, 17802,
	17802, 17802, 17802, 17802, 17802, 17802, 17802, 17802, 17802, 17802,
	17802, 17802, 849, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 984, -1000, 168, 956, 956, 514, 514, 514, 514,
	514, 514, 514, 22392, 1536, 14130, 14130, 14130, 1536, 1053,
	1053, 14130, 14130, 14130, 14130, 14130, 14130, 1536, 1536, 14130,
	1053, 1053, 1053, 1053, 14130, 14130, 14130, 14130, 1536, 14130,
	14130, 14130, 1536, 1053, 1201, 810, 12753, 14130, 14130, 14130,
	1053, 15966, 15966, 15048, 14589, 16425, 14130, 14130, 1536, 696,
	810, 26983, -1000, -1000, 17343, -1000, -1000, -1000, -1000, -1000,
	1053, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 26065,
	26065, 14130, 14130, 14130, 14130, 220, 26524, -1000, 1253, 1302,
	-1000, -1000, -1000, 1539, 22852, 18720, -1000, 220, 1105, 23770,
	26524, -1000, -1000, 23770, 26524, 9061, 27442, 1226, -1000, -93,
	-118, -97, -1000, -1000, 511, -1000, -1000, -1000, 12293, -1000,
	10447, 1542, 1369, 6289, 10909, -1000, 4875, 1304, -1000, -46,
	-1000, -1000, -1000, 1275, -1000, 1275, 279, -5, 1275, 1275,
	1275, 1275, 1275, -6, -6, -6, -6, 1, -1000, -1000,
	-1000, -1000, -1000, 1303, 1289, -1000, 1275, 1275, 1275, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1283, 293, 1277,
	1277, 1277, 1277, 1277, 259, 259, -1000, 15966, 1254, -1000,
	26524, 8599, 1525, 8599, 198, 1288, 1249, -1000, 97, 1216,
	-1000, 1042, 26524, -1000, 26524, 26524, 21015, 21015, 21015, 336,
	-1000, 26524, 1241, -1000, -1000, -1000, -1000, -1000, 1238, -1000,
	1216, -1000, -1000, -1000, -1000, -1000, -1000, 810, 983, 982,
	-1000, -1000, -1000, -1000, -1000, -1000, 677, -1000, -1000, -1000,
	-1000, 755, 26524, 26524, 26524, 1537, 755, 810, 1110, 1310,
	1256, 1053, -1000, -1000, 981, -1000, 1236, 1236, -1000, 1236,
	599, 956, 1236, -1000, 1197, 1521, 922, 26524, -1000, 20556,
	-37, -1000, -125, 1536, 1053, 771, -1000, -1000, -1000, -1000,
	-1000, 181, 1087, 489, -1000, 1392, 857, 857, 15966, -1000,
	-1000, -1000, 10447, 1564, -1000, 1409, 1405, 1348, -1000, -1000,
	584, 683, -1000, -1000, 887, -1000, -1000, -1000, -1000, 481,
	1256, -1000, 3986, -1000, -1000, -1000, -1000, 804, 17802, 17802,
	17802, 1110, 3986, 3916, 890, 1653, 514, 508, 508, 513,
	513, 513, 513, 513, 702, 702, -1000, -1000, -1000, 1053,
	-1000, -1000, -1000, 14130, 1144, -1000, -1000, 810, 479, 1144,
	1144, 14130, -161, -161, 1053, 1144, 1144, 1144, 1053, 1144,
	14130, 14130, 1144, -161, -161, -161, -161, 1144, 1144, 1144,
	1144, 14130, 1144, 1144, 1144, 14130, -1000, 15966, -1000, 1053,
	1144, 1144, 1144, -1000, 760, 682, 666, 1616, 1144, 486,
	1609, 1144, 2436, 17802, 17802, 17802, 1144, 1144, 14130, 749,
	-1000, 15966, 1053, -1000, 2497, 1231, 1229, 1144, 1053, 1227,
	1144, 1144, 178, 1256, -1000, 10447, 23770, 23770, 23770, 23770,
	23770, -1000, 1361, 1360, -1000, 1364, 1358, 1377, 20556, 1181,
	1053, 179, 22852, -1000, 1256, -1000, 19638, 536, 321, 319,
	318, 1604, 23770, 1205, -1000, 1205, -1000, 461, -1000, -1000,
	26983, -97, -110, -1000, -1000, 1226, -1000, 903, -1000, -1000,
	810, -1000, 367, 1501, 1536, 1225, 5827, -1000, -1000, -1000,
	-1000, 270, -1000, -1000, -1000, 1286, 267, -1000, 1449, 558,
	630, 950, 1430, -1000, -1000, 288, -48, -1000, -1000, 855,
	-6, -6, 1275, 1275, 235, 1275, -1000, -6, -1000, -1000,
	-1000, 511, 1489, 511, 511, 511, 511, -6, 921, 921,
	-1000, -1000, -1000, -1000, 841, -1000, 1283, -1000, 825, -1000,
	-1000, -1000, -1000, -1000, -1000, 871, 1329, 26065, 168, 1532,
	-1000, -1000, -1000, 1615, -1000, -1000, 283, -1000, 21015, 94,
	224, 185, 21015, 21015, -1000, 306, -1000, 305, -1000, -1000,
	-1000, -1000, -1000, 8599, 26524, 21015, 8599, 8599, 1604, 976,
	975, -1000, -1000, -1000, 672, 755, 1484, -1000, -1000, 17802,
	21015, -1000, 189, -1000, -1000, -1000, -1000, 220, 325, -1000,
	-1000, -69, -1000, -1000, 1397, -1000, 1224, -1000, -1000, 769,
	449, 441, 275, 275, -1000, 610, 275, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 219, 1531, 9985, 9985, 1390,
	-1000, -1000, -1000, 26524, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8137, 14130, -1000, 1110, 3986, 3794, -1000,
	17802, -1000, 1144, 14130, -161, 7675, -161, -161, 1144, -1000,
	24229, -1000, -161, -161, -161, -161, -161, -161, 1144, 1144,
	-161, -1000, -1000, -1000, -1000, -161, -161, -161, -161, 1144,
	-161, -161, -161, 1053, 810, -1000, -1000, -1000, -1000, 670,
	849, 670, 17802, 17802, -1000, 17802, 17802, -1000, -1000, 17802,
	3725, 3656, 3246, -198, -1000, 1260, 621, -1000, 15966, 874,
	-1000, -1000, 17802, 17802, -1000, -1000, -1000, -1000, 1325, 10447,
	1256, 6751, -1000, 26065, 1233, -1000, 615, 613, 1302, 1282,
	1324, 1180, -1000, -1000, -1000, -1000, 1357, -1000, 1350, -1000,
	-1000, 1263, -1000, -1000, 1220, 1256, 26065, 17802, 536, -1000,
	1256, 1256, 1256, 1590, 15966, 1205, -1000, -1000, 551, -1000,
	-1000, -108, -130, -1000, -1000, -1000, 9985, -1000, 6289, -1000,
	6289, -1000, 21933, 258, 558, 264, -1000, 950, -1000, -1000,
	950, -1000, -1000, -1000, 1279, -1000, 774, -1000, -1000, -1000,
	-1000, -1000, 17802, 1634, -1000, 1444, -1000, 1441, 920, -1000,
	-1000, 1095, 511, 511, -6, -1000, -1000, 1275, -1000, 511,
	-1000, 563, -1000, -1000, -1000, -1000, 511, 1131, -1000, 1128,
	1218, -1000, 1117, 64, 26524, -1000, -1000, -1000, 1317, -1000,
	-1000, -1000, 1093, 1217, -1000, 454, 974, 973, 972, -1000,
	21015, 70, 97, 254, 971, -1000, -1000, 26524, 21015, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 755, -1000, 17802,
	3986, 1216, -1000, -1000, -6, 26524, -1000, 1348, 771, -1000,
	3934, -1000, 950, 535, -1000, -1000, 260, -1000, 1430, -1000,
	3675, 970, -1000, 23294, 22835, 26065, 1440, 1436, 968, 26524,
	26065, -1000, -1000, 22375, 964, 15966, -1000, 26065, 26065, 1256,
	365, -1000, -1000, -1000, 1200, 13212, -1000, -1000, 1053, -1000,
	17802, 3986, -161, -1000, -1000, -1000, -1000, 352, -1000, -1000,
	-161, -1000, 401, -1000, -1000, -1000, -1000, -1000, -1000, -161,
	-161, -1000, -1000, -1000, -1000, -1000, -161, -1000, -1000, -1000,
	-1000, 1053, 1275, 1275, -1000, 1275, 1277, -1000, 1275, 20,
	1275, 16, 1053, 1053, 3261, 2820, 2718, 2690, 2497, 17802,
	17802, 17802, 1256, -157, -1000, 810, 15966, 2675, 2609, -1000,
	1514, 1101, 1215, -1000, -1000, 13671, 1053, 1404, 1087, -1000,
	20556, 1081, -1000, 1590, 10447, 15966, 15966, -1000, -1000, 15966,
	1276, -1000, 15966, -1000, -1000, -1000, -1000, 26065, 176, -1000,
	15966, 1081, 1145, -1000, 26065, 26065, 26065, 1542, 810, -1000,
	-1000, -1000, -1000, 5827, -1000, 1078, -1000, 1275, 1275, 1431,
	-1000, 1430, 950, -1000, -1000, -1000, 26065, -1000, 3986, -91,
	-1000, -1000, -1000, -1000, -1000, -1000, 511, -1000, -1000, -1000,
	-1000, -1000, -6, 919, -6, 821, -1000, 815, -1000, -1000,
	-267, 1274, -1000, 168, 26524, 96, 283, -1000, 454, 454,
	454, 1216, 98, 743, 79, -1000, 1530, -1000, -1000, -1000,
	3986, -57, -1000, -1000, -1000, 22375, 233, 454, 454, -1000,
	1254, 558, 1428, 264, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 955, -1000, 430, -1000, 304, 233, 22375, 810, 581,
	1520, -1000, 9985, 1602, 23770, -1000, -1000, -1000, 3986, -1000,
	7213, -1000, 1053, 1587, -1000, -1000, -1000, -1000, -1000, 242,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17802, 17802,
	17802, 17802, -1000, 2497, 2497, 2497, 17802, 1053, 917, 810,
	17802, 17802, 1426, -1000, 1256, -1000, -1000, 1256, 167, -1000,
	26065, 1542, -1000, 810, 810, 810, 26065, 810, 1076, -1000,
	1256, 18261, -1000, 20556, 1071, 1071, 1071, -1000, 529, 21933,
	1519, 1519, -1000, -1000, 1067, -1000, -1000, 511, -1000, 511,
	1088, 1072, -1000, 21933, -1000, 1561, -1000, 96, -1000, 910,
	152, 158, -1000, 150, 147, 146, 145, 140, -1000, -1000,
	-1000, -1000, -1000, 184, 97, -1000, 246, 908, 1473, 1468,
	1223, 1068, -1000, -1000, 954, -1000, -1000, 1267, 950, -1000,
	1264, -1000, 949, -1000, -1000, 26065, -1000, 233, 1510, 1507,
	1256, -1000, 1599, 1578, 1205, 13212, -1000, -1000, -1000, 15966,
	-1000, -1000, 2497, 2497, 2497, 2497, -1000, -1000, -1000, 52,
	-1000, -1000, 2497, 2497, 1631, -1000, 1215, 1256, -1000, 168,
	-1000, -1000, 1064, -1000, 26065, -1000, -1000, 536, -1000, -1000,
	-1000, 529, -1000, 946, 610, 904, -1000, -1000, -1000, 239,
	-1000, -1000, -1000, -1000, 1062, -1000, 182, 4959, -1000, -1000,
	-1000, -1000, -1000, -1000, 1477, 1476, 165, 245, 945, -1000,
	78, -1000, -1000, 294, 1452, 1454, 1577, 23770, -1000, -1000,
	288, 288, 21933, 1254, 21933, -1000, -1000, -1000, 17802, -1000,
	212, -1000, 15966, 15966, 1602, -1000, 1137, -1000, -1000, -1000,
	-1000, 1053, 163, -216, -1000, -1000, 10447, 1215, 1053, -1000,
	-1000, -1000, -1000, -1000, 799, -1000, 26524, 529, 175, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15966, 15966, 5365,
	4959, -1000, -1000, -1000, -1000, 76, -1000, 1529, -1000, 1263,
	793, 1468, 1571, 1463, 1457, -1000, 883, 1205, 1058, 1262,
	1052, 3986, 1049, -1000, 26065, -1000, 810, 1210, -1000, 810,
	1599, -1000, 1053, -1000, 1389, -211, -227, 1135, -1000, -1000,
	1257, -1000, 529, 169, -1000, 766, 826, 116, 107, 4173,
	-1000, -1000, -1000, -1000, -318, -1000, -1000, 878, -1000, 1470,
	-1000, 873, -1000, 1570, 1569, -1000, 1602, 529, 21933, 529,
	-1000, 212, 1401, 15966, -1000, -1000, -1000, 1375, -1000, 26065,
	-1000, 944, 914, 742, -1000, 15966, 4959, 1560, 1558, 1557,
	1506, 9985, 4934, -1000, -1000, -1000, 869, 862, 1599, -1000,
	1047, -1000, -1000, 195, -1000, -214, 1040, 214, -1000, -1000,
	707, 4959, -1000, 788, -319, 256, 168, 369, 17802, -1000,
	-1000, -1000, -1000, -1000, -1000, 529, 191, -218, 1315, -1000,
	-1000, -1000, -1000, -1000, -1000, 4959, -1000, -321, 4959, 4491,
	-1000, -1000, -1000, 3477, -1000, -1000, -1000, -1000, 105, -1000,
	-1000, 3986, -1000, 1256, -249, 1312, 1284, 1608, -1000, -322,
	4786, -324, 282, 4959, 620, -1000, 15966, -1000, 369, -1000,
	16884, -1000, -1000, 1617, -1000, 1628, 422, 422, 4670, 706,
	4959, -1000, -325, 281, 4959, -1000, 779, -1000, 2497, 1053,
	-1000, -1000, -1000, 265, 809, -1000, -1000, -1000, 4499, -1000,
	-326, 4959, -1000, -1000, -1000, -1000, -1000, 280, 3034, -329,
	-1000, 278, 4959, -1000,
}
var yyPgo = [...]int{

	0, 1966, 1965, 13, 1964, 155, 1961, 1960, 1959, 20,
	18, 15, 26, 1957, 1715, 1713, 1711, 1709, 1956, 1705,
	1953, 5, 1948, 1947, 1703, 1946, 1945, 1701, 1699, 1694,
	1691, 1944, 1943, 23, 1942, 22, 1941, 4, 128, 141,
	1940, 3, 1935, 1934, 8, 1933, 1932, 1687, 1931, 1927,
	1923, 1921, 73, 1920, 1681, 1674, 1917, 1916, 1672, 1669,
	1915, 1914, 1666, 1663, 1658, 1912, 158, 1911, 1910, 1909,
	176, 76, 130, 1908, 1904, 1903, 94, 57, 2138, 97,
	41, 95, 704, 1902, 12, 52, 1901, 1900, 121, 116,
	1899, 138, 1898, 71, 129, 85, 1897, 1895, 140, 1894,
	1893, 1892, 115, 1886, 1880, 2770, 1879, 1875, 137, 1874,
	53, 49, 30, 1873, 1872, 1870, 1869, 1868, 126, 190,
	1867, 1866, 120, 1862, 60, 1861, 1860, 159, 1859, 1858,
	1857, 114, 39, 1856, 36, 1855, 44, 55, 1854, 37,
	1853, 125, 1852, 1849, 24, 10, 1846, 42, 1845, 50,
	1841, 117, 242, 1199, 11, 33, 48, 61, 107, 86,
	31, 29, 102, 89, 67, 34, 1839, 132, 1836, 64,
	134, 108, 112, 133, 1834, 1833, 1832, 851, 1831, 105,
	58, 1830, 82, 1075, 148, 96, 1828, 77, 1827, 1826,
	1825, 1824, 72, 119, 1823, 1822, 65, 104, 40, 1517,
	1877, 1919, 63, 135, 1821, 43, 1820, 1817, 3232, 88,
	90, 93, 1816, 91, 38, 45, 1814, 1811, 1807, 1806,
	1802, 1801, 828, 1799, 1798, 1797, 1796, 113, 75, 1795,
	1794, 106, 81, 1793, 1791, 1788, 1782, 110, 56, 131,
	1781, 99, 98, 87, 1780, 1777, 1775, 1761, 70, 35,
	1760, 1758, 1756, 84, 66, 1755, 51, 25, 28, 54,
	7, 59, 83, 1754, 17, 1752, 101, 2, 6, 9,
	1750, 1749, 1747, 1746, 1745, 1744, 1742, 62, 1740, 1729,
	47, 1728, 1727, 1726, 32, 1725, 1724, 1723, 118, 100,
	80, 103, 1722, 78, 1721, 1720, 74, 111, 1719, 46,
	1718, 1707, 0, 109, 136, 145, 1697, 1661,
}
var yyR1 = [...]int{

	0, 301, 301, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 65, 3, 3, 8, 4, 4,
	4, 5, 5, 86, 87, 87, 91, 91, 6, 6,
	7, 7, 9, 9, 69, 69, 10, 11, 11, 11,
	11, 304, 304, 100, 100, 98, 98, 99, 99, 162,
	162, 12, 12, 12, 167, 167, 172, 172, 172, 175,
	175, 175, 175, 154, 155, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 294, 294, 2,
	275, 275, 276, 276, 277, 277, 277, 277, 278, 278,
	279, 279, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 25, 195, 195, 296, 296, 296, 296, 290,
	290, 290, 292, 292, 291, 291, 291, 293, 293, 297,
	297, 297, 297, 297, 299, 299, 299, 299, 299, 299,
	300, 300, 300, 298, 298, 45, 45, 46, 46, 46,
	150, 150, 150, 13, 13, 13, 13, 13, 20, 22,
	22, 34, 34, 35, 23, 23, 23, 23, 36, 36,
	37, 26, 26, 26, 26, 26, 26, 43, 43, 43,
	42, 42, 41, 41, 41, 41, 41, 41, 24, 24,
	24, 24, 44, 44, 39, 39, 38, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 27,
	27, 27, 27, 27, 27, 19, 274, 274, 274, 33,
	33, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 50, 250,
	251, 251, 251, 251, 251, 251, 251, 251, 238, 238,
	239, 215, 215, 215, 215, 215, 215, 215, 215, 214,
	214, 214, 214, 218, 218, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 217, 217, 217, 217, 217, 217,
	217, 217, 219, 219, 219, 219, 219, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 221, 221, 221, 221, 221, 221, 221, 221,
	237, 237, 222, 222, 231, 231, 232, 232, 232, 229,
	229, 230, 230, 225, 226, 233, 227, 227, 227, 228,
	228, 228, 236, 236, 236, 236, 223, 240, 240, 260,
	260, 259, 259, 258, 258, 258, 249, 249, 255, 255,
	255, 255, 255, 255, 255, 244, 244, 244, 243, 243,
	245, 245, 248, 248, 257, 257, 256, 256, 241, 241,
	241, 261, 261, 261, 261, 261, 242, 242, 242, 242,
	262, 246, 246, 247, 247, 247, 268, 269, 267, 267,
	267, 267, 267, 115, 115, 115, 252, 252, 252, 253,
	253, 253, 254, 254, 254, 272, 272, 271, 271, 47,
	47, 48, 53, 53, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 149, 149, 149, 49, 193, 193, 266, 266, 265,
	263, 263, 264, 264, 15, 15, 51, 51, 295, 295,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 270,
	270, 270, 17, 17, 54, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 83, 181, 181, 180, 180, 179, 179, 179,
	182, 182, 182, 212, 212, 212, 56, 56, 61, 61,
	64, 64, 64, 62, 63, 28, 29, 29, 29, 29,
	30, 194, 194, 59, 59, 60, 60, 60, 60, 75,
	75, 306, 306, 58, 58, 57, 57, 18, 307, 66,
	67, 67, 68, 68, 68, 185, 185, 72, 72, 72,
	70, 70, 70, 71, 71, 77, 77, 81, 81, 81,
	81, 80, 80, 80, 80, 152, 152, 152, 153, 153,
	204, 204, 204, 203, 203, 203, 203, 85, 85, 88,
	88, 89, 89, 89, 89, 92, 135, 135, 109, 109,
	110, 110, 110, 110, 110, 121, 121, 161, 161, 160,
	160, 163, 163, 90, 90, 90, 90, 95, 95, 96,
	96, 97, 97, 192, 192, 210, 210, 210, 101, 101,
	101, 103, 102, 102, 102, 102, 104, 104, 106, 107,
	107, 105, 105, 108, 111, 111, 111, 111, 112, 112,
	82, 82, 82, 82, 82, 82, 82, 178, 178, 114,
	114, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 130, 130, 130, 130, 130, 130, 116, 116, 116,
	116, 116, 116, 116, 76, 76, 131, 131, 131, 94,
	93, 93, 79, 79, 78, 78, 132, 132, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 125, 125, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 305, 305, 127, 126, 126, 126, 126, 126, 126,
	73, 73, 73, 73, 73, 211, 211, 213, 213, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	142, 142, 74, 74, 140, 140, 141, 143, 143, 139,
	139, 139, 118, 118, 118, 118, 118, 118, 118, 118,
	120, 120, 120, 144, 144, 133, 133, 84, 145, 145,
	146, 147, 147, 148, 148, 151, 156, 156, 156, 157,
	157, 157, 157, 122, 122, 158, 158, 158, 117, 117,
	117, 117, 117, 117, 117, 159, 159, 159, 159, 164,
	164, 134, 134, 137, 137, 136, 138, 165, 165, 169,
	169, 166, 166, 170, 170, 170, 170, 173, 173, 174,
	174, 174, 171, 171, 171, 168, 168, 168, 207, 207,
	207, 176, 176, 186, 186, 183, 183, 184, 184, 177,
	177, 224, 224, 189, 189, 189, 189, 189, 189, 189,
	189, 191, 191, 190, 190, 190, 187, 187, 187, 188,
	188, 205, 205, 201, 201, 206, 206, 202, 202, 208,
	208, 209, 209, 273, 273, 234, 234, 283, 283, 235,
	235, 284, 284, 286, 286, 281, 281, 282, 282, 285,
	285, 31, 287, 287, 288, 288, 289, 289, 289, 289,
	32, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 302, 303, 196, 197, 197, 197,
}
var yyR2 = [...]int{

	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 11, 4, 7, 5, 1, 13,
	3, 10, 12, 2, 1, 3, 3, 6, 1, 3,
	1, 3, 7, 8, 1, 1, 9, 8, 7, 6,
	6, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 4, 5, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 0, 0, 2, 3, 3, 11, 7,
	9, 5, 5, 15, 11, 5, 4, 0, 3, 4,
	0, 1, 1, 3, 2, 3, 3, 3, 0, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 3, 3,
	3, 3, 4, 0, 3, 1, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 6, 5, 5,
	4, 3, 5, 1, 3, 1, 1, 1, 1, 1,
	0, 2, 2, 1, 1, 1, 1, 1, 4, 5,
	8, 1, 2, 5, 7, 10, 8, 11, 1, 2,
	5, 5, 5, 5, 6, 3, 5, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 1, 1, 2, 4,
	2, 4, 2, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 3, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 5, 4,
	1, 1, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 0, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 3, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 3,
	3, 2, 4, 5, 2, 3, 4, 2, 2, 3,
	3, 3, 3, 3, 4, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 2, 3, 1, 0, 3, 3, 0,
	2, 2, 2, 1, 2, 1, 2, 5, 4, 0,
	1, 1, 2, 2, 3, 2, 0, 1, 2, 4,
	3, 4, 3, 2, 2, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	1, 10, 11, 11, 12, 12, 3, 3, 2, 1,
	5, 1, 1, 0, 2, 2, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 2, 0, 2, 1,
	1, 5, 1, 3, 2, 5, 4, 3, 3, 3,
	5, 3, 8, 10, 3, 3, 3, 3, 3, 5,
	4, 5, 1, 2, 2, 4, 3, 6, 5, 3,
	8, 0, 1, 2, 4, 0, 1, 1, 1, 7,
	1, 3, 8, 8, 3, 3, 3, 5, 3, 5,
	5, 6, 4, 4, 4, 4, 4, 4, 4, 0,
	1, 1, 3, 2, 3, 4, 4, 3, 6, 6,
	4, 4, 4, 4, 4, 4, 3, 3, 2, 6,
	2, 4, 4, 4, 5, 7, 6, 3, 5, 4,
	2, 4, 3, 2, 4, 5, 6, 6, 6, 3,
	3, 3, 3, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 1, 1, 2, 1, 1, 1,
	2, 4, 4, 1, 1, 2, 3, 4, 4, 5,
	3, 1, 1, 3, 3, 1, 1, 1, 1, 0,
	3, 1, 1, 2, 2, 2, 2, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 3, 5, 1, 1, 3,
	5, 1, 2, 3, 5, 2, 4, 7, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 4, 1, 3, 2, 2, 4, 2, 6,
	1, 4, 6, 3, 2, 0, 3, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 3, 2,
	1, 1, 3, 3, 0, 5, 5, 5, 0, 2,
	1, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 5, 6, 6, 6, 5, 5, 5,
	6, 5, 5, 6, 5, 5, 5, 5, 6, 5,
	5, 5, 4, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 6,
	8, 8, 8, 8, 4, 6, 7, 7, 7, 9,
	4, 7, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 8,
	8, 0, 2, 3, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 1, 3, 1, 0, 2,
	1, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 1, 1, 0, 2, 4, 2, 4,
	1, 3, 5, 4, 6, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	3, 1, 3, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 1, 0, 4, 0,
	1, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	3, 3, 1, 3, 2, 4, 1, 2, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -301, -1, -3, -8, -9, -10, -11, -12, -14,
	-47, -15, -16, -17, -54, -55, -56, -61, -62, -63,
	-59, -58, -57, -18, -24, -27, -19, -65, -28, -29,
	-30, -31, -32, -4, 6, 7, -69, 9, 10, 30,
	-50, 131, -48, -49, 134, 133, 170, 135, 163, 64,
	257, -64, 260, 261, -306, -194, 168, 169, 137, 214,
	215, 20, 37, 262, 264, 31, 32, -5, -86, -6,
	8, 354, 132, 258, 165, 164, 26, 403, -302, 68,
	468, -147, 15, -66, -307, -66, -66, -66, -66, -66,
	-250, -192, 106, 68, 23, -188, 144, 87, 345, 140,
	-195, 227, 229, -186, -187, 191, 201, 44, 151, 150,
	141, 227, 141, 142, 144, 345, 140, 178, 177, 227,
	229, 141, -105, -208, 72, -199, 400, 245, 154, 415,
	416, 132, 235, 239, 188, 257, 271, 265, 299, 287,
	401, 417, 155, 209, 139, 285, 288, 332, 153, 242,
	202, 418, 321, 327, 212, 81, 260, 341, 419, 156,
	206, 208, 207, 196, 213, 36, 166, 283, 248, 276,
	217, 191, 420, 408, 274, 28, 186, 421, 329, 304,
	422, 405, 246, 254, 328, 279, 275, 137, 423, 157,
	151, 180, 424, 305, 309, 425, 333, 232, 426, 427,
	428, 143, 238, 269, 270, 429, 192, 335, 243, 303,
	33, 152, 402, 48, 175, 336, 38, 307, 37, 313,
	430, 302, 297, 314, 431, 432, 433, 434, 252, 250,
	251, 253, 301, 268, 296, 204, 53, 138, 311, 310,
	312, 205, 331, 292, 290, 435, 436, 247, 158, 234,
	437, 438, 277, 18, 439, 440, 339, 169, 249, 42,
	441, 442, 443, 173, 237, 255, 444, 445, 446, 330,
	306, 308, 190, 447, 280, 148, 448, 177, 449, 404,
	236, 337, 273, 450, 159, 264, 174, 168, 340, 451,
	215, 452, 453, 454, 160, 455, 230, 229, 261, 262,
	323, 210, 456, 457, 458, 459, 200, 185, 343, 334,
	52, 214, 318, 460, 267, 150, 216, 461, 240, 258,
	43, 7, 203, 244, 324, 211, 201, 294, 176, 462,
	463, 281, 282, 300, 266, 295, 259, 178, 179, 170,
	256, 342, 319, 406, 227, 289, 286, 182, 293, 464,
	144, 465, 183, 263, 338, 241, 284, 320, 141, 124,
	288, 332, 131, 322, 323, 329, -244, 330, 177, 180,
	-212, 141, -181, 321, 232, 375, 183, 184, 72, 142,
	143, 33, 334, 333, 325, -208, 145, 263, -75, 135,
	171, -105, -196, -196, -196, -196, -44, 72, 216, -44,
	30, 72, 72, 36, 72, 262, 324, 324, 6, -68,
	5, -177, 144, 146, 259, -87, -91, -210, -208, -200,
	74, 371, 372, 373, 374, 375, 388, 389, 390, 376,
	377, 391, 392, 393, 378, 379, 394, 395, 397, 398,
	396, 181, 382, 381, 380, 383, 384, 51, 386, 385,
	387, -3, -157, 17, 16, -72, 54, 55, -67, -80,
	115, -82, -208, -113, 89, -119, 29, 72, -199, 24,
	-118, -200, -114, -139, -138, -94, 124, 125, 126, 113,
	114, 121, 90, 127, -125, -123, -124, -126, -128, -129,
	74, 73, 82, 75, 76, 77, 78, 83, 371, 372,
	373, 374, 375, 388, 389, 390, 376, 377, 391, 392,
	393, 378, 379, 394, 395, 397, 398, 396, 382, 381,
	380, 383, 384, 386, 385, 387, 84, 85, -201, -136,
	-302, 58, 59, 171, 140, 355, 356, 357, 358, 359,
	399, 161, 363, 92, 47, 344, 353, 352, 351, 349,
	350, 346, 348, 347, 365, 366, 147, 345, 119, 354,
	-177, -177, 11, -98, -99, -105, -108, -208, -166, 259,
	-173, -170, 333, 334, -171, -174, -168, -139, 313, 445,
	446, 332, 288, 331, -201, -208, -2, -5, 6, -105,
	-251, -239, -242, -202, 156, -262, -201, -198, 153, 72,
	-199, 136, 162, 88, 407, 23, 25, 316, 371, 91,
	124, 372, 373, 374, 16, 20, 92, 123, 355, 375,
	131, 62, 346, 348, 344, 345, 322, 29, 10, 26,
	164, 195, 22, 117, 133, 95, 96, 97, 167, 24,
	165, 85, 161, 19, 65, 11, 231, 13, 369, 370,
	14, 228, 147, 146, 108, 193, 142, 60, 8, 127,
	27, 105, 56, 376, 377, 411, 45, 412, 58, 106,
	17, 349, 350, 31, 399, 378, 172, 413, 379, 119,
	198, 63, 50, 89, 83, 34, 86, 66, 87, 15,
	194, 61, 367, 197, 414, 107, 134, 354, 59, 233,
	140, 6, 364, 30, 163, 382, 381, 380, 383, 199,
	57, 357, 358, 384, 466, 141, 94, 365, 366, 145,
	84, 5, 44, 32, 9, 64, 67, 351, 352, 353,
	47, 51, 386, 385, 387, 93, 12, 368, 403, 181,
	142, -105, 354, -184, 147, -184, 178, 177, -184, -184,
	141, 98, -51, -105, -295, -290, -296, 74, 72, -199,
	-200, -183, 147, -201, -183, -183, -183, -183, -183, -183,
	-183, -105, 128, -105, 72, 30, -182, 106, 12, 345,
	140, 72, 177, 180, 141, 178, 144, -197, -302, -202,
	-197, -246, 11, 108, 181, 181, 181, 182, 181, -180,
	324, 326, 179, 327, 328, 12, -83, 106, 19, -302,
	-157, -157, -197, 72, 262, 145, -60, -3, -11, -9,
	-10, -3, 98, 30, 30, 74, 51, 30, -39, -38,
	-40, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 30, -274, 68, -234, 313, 72, -287,
	-288, -105, -66, -7, -5, -302, 21, 22, 141, -105,
	337, 69, 23, -302, -303, 70, -158, 19, 31, -122,
	75, 78, -148, -151, -82, -208, 50, -70, 21, 22,
	80, 11, -204, 88, 87, 105, -203, 23, 72, -199,
	-200, 74, 128, -82, -116, 108, 89, 106, 107, 91,
	110, 109, 120, 113, 114, 115, 116, 117, 118, 119,
	111, 112, 123, 98, 99, 100, 101, 102, 103, 104,
	-178, -302, -94, -302, 129, 130, -119, -119, -119, -119,
	-119, -119, -119, -119, -302, -302, -302, -302, -302, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, -302,
	-302, -302, -302, -3, -132, -82, -302, -302, -302, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, -142,
	-82, -302, -305, -127, -302, -305, -127, -305, -127, -305,
	-302, -305, -127, -305, -127, -305, -305, -127, -305, -302,
	-302, -302, -302, -302, -302, -107, 27, -105, -85, -88,
	-89, -90, -109, -93, -302, -105, -94, -105, -98, -304,
	69, 11, 67, -304, 69, 128, 69, -167, -172, 335,
	337, 259, -171, -171, -207, -201, 74, 29, 98, 30,
	128, -147, -66, 70, 69, -242, 156, 153, -214, -218,
	-220, -219, -221, -216, -217, 285, 288, 292, 290, 286,
	291, 124, 289, 294, 295, 296, 297, 298, 299, 300,
	301, 302, 303, 304, 30, 166, 281, 282, 283, 284,
	305, 306, 307, 308, 309, 310, 311, 312, 265, 287,
	401, 266, 267, 268, 269, 270, 271, 273, 274, 275,
	276, 277, 278, 279, 72, -200, -262, 68, -201, 23,
	144, 72, 89, 72, 72, 72, -298, -297, -290, -293,
	-291, -296, -184, 72, 69, 145, 69, 145, 71, -98,
	24, 66, -100, -105, 72, 72, 72, 72, -292, -290,
	-293, -209, -208, -198, -197, -182, 74, -82, -184, -184,
	-197, -197, -197, -105, -105, -105, -105, -182, -182, -197,
	-182, -179, 11, 108, 11, -179, -179, -82, -119, -290,
	347, 115, 72, 72, 262, 72, -39, -39, 74, -39,
	69, 98, -39, 70, -132, -273, 467, 69, -289, 23,
	337, 338, 314, -72, -3, -105, -197, 338, 339, -91,
	-93, -302, -159, -202, 9, 108, 69, 18, 69, -156,
	25, 26, 128, -120, 51, 75, 78, -185, 49, -105,
	-82, -82, -130, 83, 89, 84, 85, -203, 115, -209,
	-202, -198, -119, -131, -136, -94, 79, 108, 106, 107,
	91, -119, -119, -119, -119, -119, -119, -119, -119, -119,
	-119, -119, -119, -119, -119, -119, -211, 72, 74, 72,
	-118, -118, -201, -70, -78, -81, 115, -82, -208, -78,
	-78, -70, -303, -303, -81, -78, -78, -78, -81, -78,
	-70, -70, -78, -303, -303, -303, -303, -78, -78, -78,
	-78, -70, -78, -78, -78, -70, -303, 69, -303, -3,
	-78, -78, -78, -303, -82, -82, -139, 74, -78, -139,
	74, -78, -119, 360, 361, 362, -78, -78, -70, -140,
	-141, 93, -139, -303, -119, -201, -201, -78, -79, -78,
	-78, -78, -162, 173, -105, 30, 69, -101, -103, -102,
	-104, 56, 60, 62, 57, 58, 59, 63, -192, -85,
	-92, 47, -302, -110, 173, -111, 23, -210, 64, 146,
	65, -162, 67, -85, -105, -85, -108, -208, 115, -170,
	-173, 69, 336, 338, 339, -167, -228, 123, 66, 86,
	-82, -202, -209, -157, -72, -252, -253, -254, -202, 74,
	75, -239, -240, -241, -242, -255, 156, -261, 148, 150,
	44, -243, 157, 142, 45, -215, -229, 319, -222, 68,
	-222, -222, 293, 285, 288, 286, -222, -222, -222, -222,
	-222, -227, 288, -227, -227, -227, -227, 286, 68, 68,
	-222, -222, -222, -231, 68, -231, 280, -232, 68, -232,
	-232, -232, -232, -262, -262, -82, -205, 67, -154, -105,
	-197, 24, -197, -45, 188, 162, 68, -294, 69, 29,
	-299, 228, 69, 71, -105, -105, -105, -290, -290, -296,
	-270, 160, 155, -105, 69, 69, 72, 72, -247, 11,
	108, -182, -208, -208, -105, -121, 23, -182, -76, 167,
	67, -305, -303, 72, -38, -118, 70, -106, 27, 74,
	-288, -210, 313, 338, -70, -303, -53, -52, -189, 136,
	133, 134, 138, 139, -265, 316, 132, 288, 81, 29,
	15, 355, 173, 406, 72, 174, -303, 69, 128, 52,
	-122, -122, -151, -176, 19, 11, 47, 47, -71, 57,
	83, 84, 85, 128, -302, -131, -119, -119, -119, -76,
	88, -303, -78, 69, -303, 128, -303, -303, -78, -152,
	367, -152, -303, -303, -303, -303, -303, -303, -78, -78,
	-303, -152, -152, -152, -152, -303, -303, -303, -303, -78,
	-303, -303, -303, -79, -82, -303, -303, -303, -303, 69,
	67, 23, 11, 11, -303, 11, 11, -303, -303, 11,
	-119, -119, -119, -303, -303, -78, -143, -141, 95, -82,
	-303, -303, 69, 69, -303, -303, -303, -303, -117, 30,
	47, -302, -3, -302, -165, -169, -139, -198, -88, -89,
	-89, -88, -89, 56, 56, 56, 61, 56, 61, 56,
	-102, -210, -303, -303, -135, 187, -302, 34, -210, -111,
	142, 142, 142, -112, 12, -85, -112, -112, 128, -172,
	-175, 340, 337, 343, 72, 74, 128, -158, 69, -254,
	98, -242, 68, 72, 44, -200, 45, -243, 142, 45,
	-243, -248, 72, -248, 45, 83, 89, -225, -226, -233,
	-236, -223, 29, 66, 316, 148, 45, 44, 81, -230,
	320, 75, -227, -227, -222, -222, -222, 293, -222, -227,
	-228, 30, -228, -228, -228, -228, -227, -237, 74, -237,
	75, -231, 75, 70, 66, -201, -3, 23, -46, 8,
	9, 10, -275, -276, -277, 72, 108, 193, 194, -297,
	229, 238, 88, 16, 403, -291, -296, 145, 145, -197,
	-105, -290, -197, -197, -112, 72, 72, -179, -182, 34,
	-119, -293, 183, 184, -162, 141, -289, -185, 69, -196,
	-193, -266, -243, -272, -241, -242, -271, 149, 157, 173,
	156, -193, -266, 156, 153, -243, 157, 148, 149, -190,
	-243, 145, 23, -193, -193, -249, 98, -193, 173, 23,
	-202, -202, 53, -105, -77, -155, 115, -202, -79, -76,
	88, -119, -303, -81, -153, -152, 115, -209, -153, -153,
	-303, -201, -302, -152, -153, -153, -152, -152, -152, -303,
	-303, -152, -153, -153, -153, -153, -303, -153, -153, -153,
	-303, -213, 124, 285, 166, 283, 276, 303, 290, 318,
	281, 319, -211, -213, -119, -119, -119, -119, -119, 11,
	11, 11, 400, -147, 97, -82, 94, -119, -119, -164,
	66, -165, -134, -137, -136, -302, -3, -303, -159, 6,
	403, -163, -201, -112, 69, 98, 98, -96, -95, 66,
	67, -97, 66, -95, 56, 56, -161, 68, 69, -136,
	-302, -163, -119, -111, -302, -302, -302, -147, -82, -112,
	337, 341, 342, -253, -254, -257, -256, -201, -200, 148,
	-261, 157, -243, -261, -248, -248, 68, 83, -119, 9,
	45, 45, 74, 70, -228, -228, -227, -222, -228, 72,
	124, -228, 70, 69, 70, 69, 70, 69, -115, 421,
	89, -105, -154, -154, 66, 70, 69, -214, 72, 72,
	72, -293, 239, -299, 236, 74, 72, -105, -290, -182,
	-119, -227, -105, -71, -52, 68, -238, 72, -200, -196,
	-248, -187, 148, 72, 72, -196, 72, -200, 72, -200,
	-201, 45, 45, 72, -105, -201, -238, 72, -82, -201,
	-201, -93, 128, -112, 11, 69, -80, -303, -119, -153,
	128, -153, -147, 173, -153, -153, -153, -303, -222, -222,
	-222, -232, -222, 270, -222, 270, -303, -303, 19, 19,
	19, 19, -303, -119, -119, -119, -302, -74, 364, -82,
	69, 69, 28, -164, 69, -303, -303, 47, -303, -303,
	69, -147, -169, -82, -82, -82, 68, -82, -160, -201,
	187, -303, -111, -192, -160, -160, -160, -157, 70, 69,
	-222, -222, 45, -248, -160, -124, -228, -227, 74, -227,
	75, 75, 421, 68, -3, -105, -278, -279, -280, 81,
	402, 89, 195, 196, 158, 197, 198, 199, -277, -214,
	-214, -214, -300, 228, 88, 237, 16, 23, -281, -180,
	-77, -238, -149, 161, 162, -214, -214, -205, -245, -243,
	45, 72, -191, 145, 23, 145, -149, -238, 30, 133,
	27, -202, -144, 13, -85, -155, -155, 115, -303, 16,
	-227, 72, -119, -119, -119, -119, -303, -303, -303, -119,
	-303, 74, -119, -119, 45, -137, -134, 47, -3, -302,
	-201, -157, -160, 70, 69, -136, -110, -210, -303, -303,
	-303, -259, -258, 67, 152, 81, -256, -156, -156, 70,
	-228, -228, 70, 70, -257, -154, 19, -154, -280, 74,
	199, 195, 199, 199, 199, 199, 200, 16, 403, -299,
	236, 74, 74, -282, 38, -284, 39, 11, 70, 72,
	-215, -215, 68, -248, 68, 72, -201, -149, 29, 29,
	-302, -145, 14, 16, -112, -80, -132, -303, -303, -303,
	-303, -73, 108, 403, -303, -303, 9, -134, -3, 70,
	-201, -111, -258, 72, -249, 74, 159, 70, 186, -21,
	-3, -9, -10, -11, -12, -14, -47, -15, -16, -22,
	-23, -17, -54, -55, -64, -62, -63, -59, -58, -26,
	-24, -27, -19, -28, -29, -30, -25, 92, 147, 217,
	257, 36, 36, 191, 192, 236, 74, 72, 237, -224,
	146, -285, 43, -283, -235, 42, 16, -85, -257, -205,
	-257, -119, -263, -264, 173, -146, -82, -133, -84, -82,
	-144, -155, -147, -303, 401, 63, 404, -165, -303, 75,
	-105, -260, -259, 187, -154, -82, -82, 72, -43, -206,
	220, 221, 222, -202, -33, -21, 237, 23, -161, 75,
	-284, 16, -286, 40, 41, 74, -112, 70, 68, 70,
	-303, 69, -201, 69, -145, -303, 53, 402, 405, 68,
	-150, 189, 190, -34, -35, 93, 94, 218, 219, 223,
	-214, 69, 468, 74, 38, 74, 16, 16, -144, -260,
	-257, -260, -264, 47, -84, 53, -160, -154, 72, 72,
	97, 95, -35, -82, -33, 19, 19, 19, 29, -202,
	97, -21, 74, 74, -145, 70, 175, 403, 70, -13,
	-20, -12, -9, -10, -11, 257, 92, -33, 94, 468,
	-44, 75, -3, -42, -41, 75, -44, 225, 89, 226,
	72, -119, -260, 176, 404, -268, -269, 66, -154, -33,
	468, -33, 97, 95, -36, -37, 96, -21, 69, 224,
	-302, 405, -269, 66, -268, 66, 10, 9, 468, 97,
	468, 147, -33, 97, 95, -37, -82, -41, -119, 172,
	-267, 160, 155, 158, 30, -267, 97, 92, 468, 147,
	-33, 94, -303, -303, 154, 29, 83, 97, 468, -33,
	147, 97, 468, 147,
}
var yyDef = [...]int{

	33, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, -2, 588, 588, 588, 588, 588, 588,
	663, -2, 439, 440, 0, 0, 0, 0, -2, 557,
	558, 559, 563, 564, 579, -2, 1434, 1434, 1434, 0,
	219, 0, 0, 0, 0, 0, 0, 38, 0, 0,
	54, 55, 969, 0, 582, 571, 572, 0, 0, 1432,
	2, 909, 0, 597, 590, 0, 969, 969, 0, 0,
	85, 0, 0, 0, 664, 0, 0, 0, 967, 967,
	0, 967, 967, 0, 990, 0, 964, 986, 987, 988,
	0, 0, 965, 0, 965, 965, 965, 965, 965, 965,
	965, 0, 503, 681, 999, 1000, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 0, 0,
	0, 550, 0, 1435, 1435, 518, 0, 520, 0, 0,
	0, 0, 0, 530, 533, 0, 909, 909, 1435, 385,
	386, 387, 554, 555, 544, 556, 0, 0, 0, 0,
	0, 583, 584, 585, 586, 587, 198, 200, 0, 220,
	0, 223, 226, 1005, 565, 0, 0, 1030, 588, 0,
	592, 0, 0, 970, 560, 43, 44, 0, 665, 666,
	667, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 0, 915, 0, 0, 600, 598, 599, 589, 0,
	611, 620, 0, 690, 0, 695, 697, -2, -2, 0,
	738, 739, 740, 741, 742, 743, 0, 0, 0, 0,
	0, 0, 0, 0, 767, 768, 769, 770, 771, 772,
	882, 883, 884, 885, 886, 887, 888, 889, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424,
	1425, 1426, 1427, 1429, 1430, 1431, 699, 700, 879, 936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 870, 0, 841, 841, 841, 841, 841,
	841, 841, 841, 841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 65, 67, 681, 71, 1380,
	0, 941, -2, -2, 943, 0, 0, 0, -2, -2,
	-2, -2, 1190, -2, 879, 0, 86, 901, 588, 87,
	0, 260, 261, 0, 1203, 409, 997, 998, 1192, 993,
	994, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139,
	1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159,
	1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	967, 0, 484, 0, 485, 0, 131, 125, 126, 127,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 502, 0, 504, 1435, 550, 507, 0, 0, 967,
	967, 1435, 1435, 1435, 0, 0, 0, 516, 1436, 1437,
	517, 0, 411, 412, 550, 550, 1435, 550, 547, 0,
	547, 527, 547, 545, 546, 0, 532, 0, 0, 0,
	539, 540, 541, 566, 0, 0, 573, 575, 576, 577,
	578, 574, 0, 0, 0, 202, 0, 0, 222, 204,
	0, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 0, 225, 0, 1003, 1006, 570, 1021,
	1022, 0, 597, 40, 50, 0, 593, 594, 0, 1435,
	0, 0, 0, 0, 49, 1433, 35, 0, 0, 910,
	913, 914, 902, 903, 906, 0, 0, 595, 601, 602,
	591, 0, 612, 0, 0, 0, 621, 0, 623, 624,
	625, 626, 0, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 718, 719, 720, 721, 722, 723,
	696, 0, 710, 0, 0, 0, 759, 760, 761, 762,
	763, 764, 765, 0, 600, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 600, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 600, 0, 0, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 600, 0,
	871, 0, 824, 833, 0, 825, 834, 826, 835, 827,
	0, 828, 836, 829, 837, 830, 831, 838, 832, 0,
	0, 0, 732, 0, 0, 69, 0, 680, 0, 627,
	629, 630, 631, -2, 0, 684, 730, -2, 0, 0,
	0, 61, 62, 0, 0, 0, 0, 72, 74, 0,
	0, 1380, 944, 945, 359, 958, 959, 960, 0, 956,
	0, 909, 597, 426, 0, 262, 0, 0, 271, 349,
	280, 281, 282, 342, 284, 342, 342, 0, 342, 342,
	342, 342, 342, 356, 356, 356, 356, 356, 325, 326,
	327, 328, 329, 0, 0, 302, 342, 342, 342, 306,
	332, 333, 334, 335, 336, 337, 338, 339, 285, 286,
	287, 288, 289, 290, 291, 292, 293, 344, 344, 346,
	346, 346, 346, 346, 0, 0, 408, 0, 991, 83,
	0, 1435, 0, 1435, 0, 0, 97, 153, 139, 96,
	137, 136, 0, 124, 0, 0, 0, 0, 130, 499,
	966, 0, 492, 63, 493, 494, 495, 496, 497, 132,
	498, 682, 1001, 1002, 505, 506, 551, 552, 0, 0,
	510, 511, 512, 513, 514, 515, 413, 521, 522, 523,
	529, 550, 0, 0, 0, 645, 550, 531, 724, 534,
	841, 0, 568, 567, 0, 580, 199, 201, 203, 221,
	0, 0, 224, 227, 0, 0, 0, 0, 1024, 0,
	1026, 1028, 0, 600, 0, 0, 474, 561, 562, 45,
	46, 0, 0, 925, 916, 0, 0, 0, 0, 905,
	907, 908, 0, 0, 890, 0, 0, 603, 596, 37,
	691, 692, 694, 711, 0, 713, 715, 622, 613, 0,
	880, -2, 701, 702, 726, 727, 728, 0, 0, 0,
	0, 724, 706, 0, 744, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 758, 855, 856, 0,
	756, 757, 766, 0, 0, 734, 607, 608, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 732, 729, 0, 935, 0,
	0, 0, 0, 806, 0, 0, 741, 882, 0, 741,
	882, 0, 0, 0, 0, 0, 0, 0, 0, 877,
	874, 0, 0, 842, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 679, 0, 0, 0, 0, 0,
	0, 668, 0, 0, 671, 0, 0, 0, 0, 0,
	0, 0, 0, 638, 1307, 640, 0, 684, 0, 0,
	0, 688, 0, 688, 66, 688, 68, 0, 683, 942,
	0, 0, 0, 77, 78, 73, 946, 0, 952, 953,
	954, 880, 0, 915, 600, 259, 427, 429, 432, 433,
	434, 263, 265, 266, 267, 0, 1203, 400, 1319, 1359,
	-2, 392, 1233, -2, -2, 270, 351, 350, 283, 0,
	356, 356, 342, 342, 342, 342, 311, 356, 314, 317,
	318, 359, 0, 359, 359, 359, 359, 356, 0, 0,
	303, 304, 305, 294, 0, 295, 344, 297, 0, 298,
	299, 300, 301, 406, 407, 0, 0, 0, 0, 0,
	91, 968, 92, 0, 155, 156, 100, 95, 0, 0,
	140, 0, 0, 135, 258, 0, 486, 0, 488, 129,
	490, 500, 501, 1435, 0, 0, 1435, 1435, 688, 0,
	0, 524, 548, 549, 547, 550, 0, 528, 542, 0,
	0, 535, 0, 569, 205, 206, 228, 69, 0, 1004,
	1023, 0, 1027, 1029, 595, 51, 441, 442, 1434, -2,
	475, 983, 475, 475, 462, 376, 475, 973, 974, 975,
	976, 977, 978, 979, 980, 0, 0, 0, 0, 0,
	911, 912, 904, 0, 961, 962, 891, 892, 84, 604,
	712, 714, 716, 0, 732, 703, 724, 707, 0, 704,
	0, 698, 0, 0, 618, 0, 618, 618, 0, 792,
	0, 793, 0, 618, 618, 0, 0, 0, 0, 0,
	0, 799, 800, 801, 802, 618, 618, 618, 618, 0,
	618, 618, 618, 0, 737, -2, 803, 804, 805, 0,
	0, 0, 0, 0, 848, 0, 0, 849, 814, 0,
	0, 0, 0, 0, 820, 901, 0, 875, 0, 0,
	823, 843, 0, 0, 844, 845, 846, 847, 929, 0,
	0, 0, 920, 0, 688, 937, 0, 0, 628, 659,
	661, 0, 656, 669, 670, 672, 0, 674, 0, 676,
	677, 647, 634, 731, 635, 0, 0, 0, 684, 644,
	0, 0, 0, 901, 0, 688, 59, 60, 0, 75,
	76, 0, 0, 82, 360, 361, 0, 99, 0, 430,
	0, 264, 0, 0, 0, 0, 378, 392, 388, 389,
	392, 383, 393, 384, 0, 272, 0, 274, 275, 276,
	277, 278, 0, 0, 355, 0, 363, 365, 0, 279,
	352, 0, 359, 359, 356, 309, 310, 342, 315, 359,
	319, 0, 320, 321, 322, 323, 359, 0, 340, 0,
	0, 296, 0, 423, 0, 992, 83, 83, 0, 157,
	158, 159, 0, 101, 102, 0, 0, 0, 0, 154,
	0, 0, 0, 0, 0, 138, 134, 0, 0, 491,
	64, 133, 508, 509, 519, 414, 415, 550, 526, 0,
	725, 536, 537, 538, 356, 0, 1025, 603, 0, 444,
	0, 1434, 392, 0, 463, 464, 0, 476, 477, 478,
	0, 0, 1434, 0, 0, 0, 477, 0, 0, 0,
	0, 984, 985, 0, 0, 0, 377, 0, 0, 0,
	927, 926, 917, 36, 688, 0, 614, 881, 0, 705,
	0, 708, 618, 735, 777, 619, 609, 0, 778, 779,
	618, 615, 901, 794, 781, 782, 795, 796, 797, 618,
	618, 798, 786, 785, 784, 787, 618, 790, 789, 791,
	773, 0, 342, 342, 860, 342, 346, 863, 342, 865,
	342, 868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 872, 822, 878, 0, 0, 0, 52,
	0, 929, 918, 931, 933, 0, 0, 0, 0, -2,
	1168, 0, 651, 901, 0, 0, 0, 653, 660, 0,
	0, 654, 0, 655, 673, 675, 632, 0, 0, 636,
	0, 0, -2, 643, 0, 0, 0, 909, 689, 58,
	79, 80, 81, 428, 431, 0, 394, 342, 342, 0,
	398, 0, 392, 399, 380, 382, 0, 273, 353, 0,
	362, 364, 366, 343, 307, 308, 359, 316, 312, 357,
	358, 324, 356, 0, 356, 0, 347, 0, 410, 424,
	0, 0, 89, 0, 0, 108, 0, 104, 0, 0,
	0, 98, 0, 142, 0, 145, 146, 487, 489, 525,
	646, 1015, 678, 84, 443, 0, 471, 0, 0, 447,
	991, 390, 0, -2, 448, 449, 454, 455, 456, 457,
	458, 0, 469, 0, 451, 0, 471, 0, 466, 0,
	0, 47, 0, 893, 0, 84, 84, 774, 709, 776,
	0, 780, 0, 0, 775, 783, 788, 807, 857, 356,
	861, 862, 864, 866, 867, 869, 809, 808, 0, 0,
	0, 0, 815, 0, 0, 0, 0, 0, 0, 876,
	0, 0, 0, 53, 0, 934, -2, 0, 0, 70,
	0, 909, 938, 939, 940, 657, 0, 662, 0, 649,
	0, 684, 641, 0, 0, 0, 0, 57, 368, 0,
	906, 906, 379, 381, 0, 354, 313, 359, 341, 359,
	0, 0, 425, 0, 83, 0, 83, 109, 110, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 103, 105,
	106, 107, 141, 0, 0, 144, 0, 0, 1017, 1011,
	0, 0, 446, 472, 0, 271, 271, 0, 392, 391,
	0, 465, 0, 981, 982, 0, 460, 471, 0, 0,
	0, 928, 898, 0, 688, 0, 605, 610, 616, 0,
	858, 859, 0, 0, 0, 0, 816, 817, 818, 850,
	821, 873, 0, 0, 0, 932, 919, 0, 923, 0,
	652, 56, 0, 648, 0, 637, 639, 684, 685, 686,
	687, 367, 371, 0, 376, 0, 395, 396, 397, 0,
	330, 331, 345, 348, 0, 90, 0, 0, 111, 112,
	113, 114, 116, 117, 0, 0, 0, 0, 0, 143,
	0, 148, 149, 971, 1019, -2, 0, 0, 445, 473,
	268, 269, 0, 991, 0, 450, 459, 461, 0, 468,
	0, 41, 0, 0, 893, 84, 901, 810, 812, 811,
	813, 0, 0, 0, 839, 840, 0, 922, 0, 658,
	650, 642, 372, 373, 0, 375, 0, 369, 0, 83,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 0, 0, 0,
	0, 118, 119, 120, 121, 0, 151, 0, 147, 647,
	0, 1011, 0, 1013, 0, 1010, 0, 688, 0, 0,
	0, 467, 0, 480, 0, 899, 900, 894, 895, 897,
	898, 606, 0, 819, 0, 0, 0, 930, -2, 374,
	0, 88, 370, 160, 94, 0, 0, 993, 0, 0,
	187, 188, 189, 995, 0, 229, 150, 0, 34, 0,
	1018, 0, 1016, 0, 0, 1012, 893, 369, 0, 369,
	479, 0, 0, 0, 42, 617, 851, 0, 854, 0,
	83, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	185, 0, 0, 152, 972, 1020, 0, 0, 898, 452,
	0, 470, 481, 0, 896, 852, 0, 0, 161, 162,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 996,
	122, 230, 1014, 1008, 39, 369, 0, 0, 401, 83,
	163, 164, 165, 166, 167, 0, 169, 0, 0, 0,
	181, 182, 183, 0, 190, 192, 193, 194, 0, 196,
	197, 186, 453, 0, 0, 402, 403, 0, 93, 0,
	0, 0, 0, 0, 0, 178, 0, 184, 0, 195,
	0, 853, 404, 0, 405, 0, 0, 0, 0, 0,
	173, 174, 0, 0, 0, 179, 0, 191, 0, 0,
	416, 418, 419, 0, 0, 417, 168, 170, 0, 176,
	0, 0, 482, 483, 420, 421, 422, 0, 0, 0,
	175, 0, 180, 177,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 90, 3, 3, 3, 118, 110, 3,
	68, 70, 115, 113, 69, 114, 128, 116, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 468,
	99, 98, 100, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 121,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 91, 92, 93, 94, 95, 96,
	97, 101, 102, 103, 104, 105, 106, 107, 108, 111,
	112, 117, 119, 122, 123, 124, 125, 126, 127, 129,
	130, 131, 132, 133, 134, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}
var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:451
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:455
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:495
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:501
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:507
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:514
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:520
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 39:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:531
		{
			yyVAL.selStmt = &Select{CommonTableExprs: yyDollar[1].tableExprs, Comments: Comments(yyDollar[3].bytes2), Cache: yyDollar[4].str, Distinct: yyDollar[5].str, Hints: yyDollar[7].str, SelectExprs: yyDollar[8].selectExprs, From: yyDollar[10].tableExprs, Where: NewWhere(WhereStr, yyDollar[11].expr), GroupBy: GroupBy(yyDollar[12].exprs), Having: NewWhere(HavingStr, yyDollar[13].expr)}
			if yyDollar[6].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:538
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 41:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:544
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 42:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr)}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:560
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:576
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[3].simpleTableExpr, As: yyDollar[1].tableIdent}, nil}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:580
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[6].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[3].columns}
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:590
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:606
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].assignExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:618
		{
			cols := make(Columns, 0, len(yyDollar[7].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].assignExprs))
			for _, updateList := range yyDollar[7].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].assignExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.str = InsertStr
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.str = ReplaceStr
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:640
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].assignExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:646
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:650
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:654
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:658
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:663
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:664
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:672
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:678
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:692
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:697
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:701
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:711
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:718
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:731
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:737
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:741
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:745
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:751
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:755
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:763
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:768
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:773
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:788
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:798
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:802
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[3].tableName.ToViewName(), ViewExpr: yyDollar[6].selStmt, SubStatementPositionStart: yyDollar[5].int, SubStatementPositionEnd: yyDollar[7].int - 1}
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:806
		{
			yyVAL.statement = &DDL{Action: CreateStr, View: yyDollar[5].tableName.ToViewName(), ViewExpr: yyDollar[8].selStmt, SubStatementPositionStart: yyDollar[7].int, SubStatementPositionEnd: yyDollar[9].int - 1, OrReplace: true}
		}
	case 91:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:810
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:818
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne}
		}
	case 93:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:826
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes), Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[14].statement}, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[15].int - 1}
		}
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:830
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes), Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[10].statement}, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[11].int - 1}
		}
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:834
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames}
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:842
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:851
		{
			yyVAL.accountNames = nil
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:862
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:870
		{
			yyVAL.procedureParams = nil
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:874
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:884
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:890
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[1].bytes), Type: yyDollar[2].columnType}
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:894
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: string(yyDollar[2].bytes), Type: yyDollar[3].columnType}
		}
	case 108:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:907
		{
			yyVAL.characteristics = nil
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:911
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:917
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:935
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:939
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:943
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:947
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:951
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:969
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:974
		{
			yyVAL.str = ""
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:978
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:984
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1024
		{
			yyVAL.accountNames = append(yyVAL.accountNames, yyDollar[3].accountName)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1030
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yyVAL.accountNames = append(yyVAL.accountNames, yyDollar[3].accountName)
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1074
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1078
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 143:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1082
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1088
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1100
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1104
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1108
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1114
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1122
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1132
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.str = BeforeStr
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.str = AfterStr
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1148
		{
			yyVAL.str = InsertStr
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.str = UpdateStr
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.str = DeleteStr
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1161
		{
			yyVAL.triggerOrder = nil
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1165
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1185
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 169:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1191
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 170:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1195
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1201
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 173:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1211
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 174:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1217
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1222
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 176:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1227
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 177:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1233
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1241
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1251
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1261
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1265
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1269
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1273
		{
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 186:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1277
		{
			yyDollar[3].columnType.Default = yyDollar[5].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1312
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1328
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1338
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1342
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 201:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1346
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1356
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1366
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1386
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1390
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.statement = &Resignal{}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1432
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1436
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1444
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1448
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1459
		{
			yyVAL.exprs = nil
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1463
		{
			yyVAL.exprs = nil
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1477
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1515
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
			setDDL(yylex, yyVAL.ddl)
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1532
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1549
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1559
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1564
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1596
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.columnType = ColumnType{}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1609
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1627
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1654
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1685
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1788
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal, Charset: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 331:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1948
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1953
		{
			yyVAL.sqlVal = nil
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1962
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1966
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1974
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1978
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1984
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1992
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2001
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2028
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2041
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2045
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2059
		{
			yyVAL.colKeyOpt = colKey
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2079
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2083
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2088
		{
			yyVAL.indexOptions = nil
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2117
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = ""
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2133
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2137
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2145
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2149
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2153
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2157
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2181
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2186
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.str = yyDollar[1].str
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2215
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 401:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2239
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 402:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2243
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 403:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2247
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 404:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2251
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 405:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2255
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2279
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2294
		{
			yyVAL.str = ""
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2302
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2341
		{
			yyVAL.boolean = true
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.boolean = true
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2349
		{
			yyVAL.boolean = false
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2358
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = yyDollar[1].str
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2397
		{
			yyVAL.str = ""
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2401
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2406
		{
			yyVAL.str = string("")
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2410
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2420
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2433
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2443
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2447
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2454
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2461
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2465
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2469
		{
			yyVAL.ddl = &DDL{Action: AlterStr}
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2473
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2477
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 452:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2482
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2486
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2490
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2495
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2505
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2514
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2518
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2525
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2547
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2552
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 467:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2556
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2560
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2564
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 470:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2568
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}
			yyVAL.ddl = ddl
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2575
		{
			yyVAL.columnOrder = nil
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2589
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2595
		{
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
		}
	case 479:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2605
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2621
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2625
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2645
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2657
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2663
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 491:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2671
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2675
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2683
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2691
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2699
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2707
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{Name: string(yyDollar[4].bytes)}, IfExists: exists}
		}
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2715
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2732
		{

		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2746
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2755
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2761
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2766
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 508:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2774
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2778
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2783
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2787
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2791
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2795
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2799
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2803
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2807
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2811
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2815
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2819
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2823
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2827
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2831
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2835
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2839
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 525:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2843
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2848
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2857
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2861
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2869
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2875
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2883
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2887
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2892
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2896
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2901
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 538:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2905
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2913
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2923
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2929
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2935
		{
			yyVAL.boolean = false
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.boolean = true
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2955
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2963
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2969
		{
			yyVAL.showFilter = nil
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2973
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2983
		{
			yyVAL.str = ""
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.str = SessionStr
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = GlobalStr
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.statement = &Begin{}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.statement = &Begin{}
		}
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3021
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3025
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.statement = &Commit{}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.statement = &Rollback{}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3053
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3057
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3061
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3073
		{
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3095
		{
			yyVAL.str = ""
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.statement = &Show{Type: "columns", OnTable: yyDollar[2].tableName}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3114
		{
			yyVAL.statement = &OtherRead{}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3120
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3134
		{
			setAllowComments(yylex, true)
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3144
		{
			yyVAL.bytes2 = nil
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3148
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = UnionStr
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3158
		{
			yyVAL.str = UnionAllStr
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3162
		{
			yyVAL.str = UnionDistinctStr
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3167
		{
			yyVAL.byt = 0
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.byt = 1
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = ""
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.str = SQLCacheStr
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = ""
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = ""
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.str = DistinctStr
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3202
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.str = StraightJoinHint
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3220
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3243
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3257
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3261
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3268
		{
			yyVAL.over = &Over{WindowName: yyDollar[2].colIdent}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3272
		{
			yyVAL.over = &Over{OrderBy: yyDollar[3].orderBy}
		}
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3276
		{
			yyVAL.over = &Over{PartitionBy: yyDollar[5].exprs, OrderBy: yyDollar[6].orderBy}
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3281
		{
			yyVAL.over = nil
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.over = yyDollar[1].over
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3290
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3340
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3356
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3368
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3372
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3378
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3383
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3394
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3398
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 642:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3402
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3406
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3410
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = nil
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3425
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3430
		{
			yyVAL.columns = nil
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3434
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3454
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3467
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3471
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3475
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3485
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3487
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3491
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3502
		{
			yyVAL.empty = struct{}{}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.empty = struct{}{}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3513
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.str = JoinStr
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = JoinStr
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = JoinStr
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = StraightJoinStr
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = LeftJoinStr
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = LeftJoinStr
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = RightJoinStr
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = RightJoinStr
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = NaturalJoinStr
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3571
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3577
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3581
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3587
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3591
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3597
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3602
		{
			yyVAL.indexHints = nil
		}
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3606
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3610
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3614
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3619
		{
			yyVAL.expr = nil
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3629
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3641
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3645
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3659
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3691
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3703
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3707
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3711
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = IsNullStr
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = IsNotNullStr
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = IsTrueStr
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = IsNotTrueStr
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = IsFalseStr
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = IsNotFalseStr
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = EqualStr
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = LessThanStr
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = GreaterThanStr
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = LessEqualStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.str = GreaterEqualStr
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.str = NotEqualStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3776
		{
			yyVAL.expr = nil
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3786
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3790
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3794
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3800
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3806
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3810
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3816
		{
			yyVAL.selectExprs = nil
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3827
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3867
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3879
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3883
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3887
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3891
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3895
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3899
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3907
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3911
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3915
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3927
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3931
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3935
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3939
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3947
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3961
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3965
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3969
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3989
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3993
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4003
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 776:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4007
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4011
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4015
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4019
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4023
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4027
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4031
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4035
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4039
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4043
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4047
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4051
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 788:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4059
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 790:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4076
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4080
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4084
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4088
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4092
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4096
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4100
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4104
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4108
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 801:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4112
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4116
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4131
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4135
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4139
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4143
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4147
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4151
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 810:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4155
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 811:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4159
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 812:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4163
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 813:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4167
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4171
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 815:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4175
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 816:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4179
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 817:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4183
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 818:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4187
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 819:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4191
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4195
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 821:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4199
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 822:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4203
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4207
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4217
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4221
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4225
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4230
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4235
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4240
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4246
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4264
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4273
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4283
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 839:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4287
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 840:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4291
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4302
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4312
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4316
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4320
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4324
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4328
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4332
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4338
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yyVAL.str = BooleanModeStr
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 853:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = QueryExpansionStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4370
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4374
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4378
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4390
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4400
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4404
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4408
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4412
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4420
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			yyVAL.expr = nil
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4434
		{
			yyVAL.str = string("")
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4438
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4448
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4454
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.expr = nil
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4463
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4469
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4473
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 881:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4477
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4503
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.expr = &NullVal{}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4521
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4525
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4530
		{
			yyVAL.exprs = nil
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4534
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4540
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4555
		{
			yyVAL.expr = nil
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4559
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4570
		{
			yyVAL.orderBy = nil
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4580
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4584
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4590
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = AscScr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = AscScr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = DescScr
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4608
		{
			yyVAL.limit = nil
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4612
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4616
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4620
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = ForUpdateStr
		}
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = ShareModeStr
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4660
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4668
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4673
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4677
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 924:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4681
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4688
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4692
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4696
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4700
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4705
		{
			yyVAL.assignExprs = nil
		}
	case 930:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4709
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4715
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4725
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4729
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4735
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4741
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4751
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4755
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4770
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4774
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4823
		{
			yyVAL.setScope = SetScope_Global
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4827
		{
			yyVAL.setScope = SetScope_Session
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.setScope = SetScope_Session
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4862
		{
			yyVAL.bytes = []byte("charset")
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4873
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4877
		{
			yyVAL.expr = &Default{}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4886
		{
			yyVAL.byt = 0
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.byt = 1
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4891
		{
			yyVAL.byt = 0
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4893
		{
			yyVAL.byt = 1
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4896
		{
			yyVAL.byt = 0
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4898
		{
			yyVAL.byt = 1
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = ""
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4903
		{
			yyVAL.str = IgnoreStr
		}
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4906
		{
			yyVAL.sqlVal = nil
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4908
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.empty = struct{}{}
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4914
		{
			yyVAL.empty = struct{}{}
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.empty = struct{}{}
		}
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.empty = struct{}{}
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.empty = struct{}{}
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4922
		{
			yyVAL.empty = struct{}{}
		}
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.empty = struct{}{}
		}
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4926
		{
			yyVAL.empty = struct{}{}
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.empty = struct{}{}
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4932
		{
			yyVAL.empty = struct{}{}
		}
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4935
		{
			yyVAL.empty = struct{}{}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4937
		{
			yyVAL.empty = struct{}{}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			yyVAL.empty = struct{}{}
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4943
		{
			yyVAL.str = UniqueStr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = FulltextStr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4947
		{
			yyVAL.str = SpatialStr
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4950
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4952
		{
			yyVAL.str = yyDollar[1].str
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4955
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4957
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4965
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4971
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4975
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4982
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4992
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4999
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5004
		{
			yyVAL.str = string("")
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5006
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5009
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5011
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5014
		{
			yyVAL.EnclosedBy = nil
		}
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5018
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5023
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5027
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5032
		{
			yyVAL.sqlVal = nil
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5036
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5041
		{
			yyVAL.sqlVal = nil
		}
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5045
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5050
		{
			yyVAL.Fields = nil
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5054
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5059
		{
			yyVAL.Lines = nil
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5063
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5068
		{
			yyVAL.sqlVal = nil
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5072
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5078
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5088
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5094
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1025:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5098
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5104
		{
			yyVAL.lockType = LockRead
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5108
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5112
		{
			yyVAL.lockType = LockWrite
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5116
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5122
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5553
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			decNesting(yylex)
		}
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5567
		{
			skipToEnd(yylex)
		}
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5572
		{
			skipToEnd(yylex)
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5576
		{
			skipToEnd(yylex)
		}
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
