// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"
import "strings"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

func tryCastExpr(v interface{}) Expr {
	e, _ := v.(Expr)
	return e
}

func tryCastStatement(v interface{}) Statement {
	e, _ := v.(Statement)
	return e
}

//line sql.y:75
type yySymType struct {
	yys   int
	val   interface{}
	bytes []byte
}

const STRING_TYPE_PREFIX_NON_KEYWORD = 57346
const LEX_ERROR = 57347
const FOR_SYSTEM_TIME = 57348
const FOR_VERSION = 57349
const EXCEPT = 57350
const UNION = 57351
const INTERSECT = 57352
const SELECT = 57353
const STREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const CALL = 57367
const ALL = 57368
const DISTINCT = 57369
const AS = 57370
const EXISTS = 57371
const ASC = 57372
const DESC = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const OF = 57380
const OUTFILE = 57381
const DUMPFILE = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const OPTIONALLY = 57389
const STARTING = 57390
const UNIQUE = 57391
const KEY = 57392
const SYSTEM_TIME = 57393
const CONTAINED = 57394
const VERSION = 57395
const VERSIONS = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const SQL_CALC_FOUND_ROWS = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const STRING = 57418
const ID = 57419
const HEX = 57420
const INTEGRAL = 57421
const FLOAT = 57422
const HEXNUM = 57423
const VALUE_ARG = 57424
const LIST_ARG = 57425
const COMMENT = 57426
const COMMENT_KEYWORD = 57427
const BIT_LITERAL = 57428
const NULL = 57429
const TRUE = 57430
const FALSE = 57431
const OFF = 57432
const INTO = 57433
const OR = 57434
const XOR = 57435
const AND = 57436
const NOT = 57437
const BETWEEN = 57438
const CASE = 57439
const WHEN = 57440
const THEN = 57441
const ELSE = 57442
const ELSEIF = 57443
const END = 57444
const LE = 57445
const GE = 57446
const NE = 57447
const NULL_SAFE_EQUAL = 57448
const IS = 57449
const LIKE = 57450
const REGEXP = 57451
const IN = 57452
const ASSIGNMENT_OP = 57453
const UNBOUNDED = 57454
const PARTITION = 57455
const RANGE = 57456
const ROWS = 57457
const GROUPS = 57458
const PRECEDING = 57459
const FOLLOWING = 57460
const SHIFT_LEFT = 57461
const SHIFT_RIGHT = 57462
const DIV = 57463
const MOD = 57464
const UNARY = 57465
const COLLATE = 57466
const BINARY = 57467
const UNDERSCORE_ARMSCII8 = 57468
const UNDERSCORE_ASCII = 57469
const UNDERSCORE_BIG5 = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_CP1250 = 57472
const UNDERSCORE_CP1251 = 57473
const UNDERSCORE_CP1256 = 57474
const UNDERSCORE_CP1257 = 57475
const UNDERSCORE_CP850 = 57476
const UNDERSCORE_CP852 = 57477
const UNDERSCORE_CP866 = 57478
const UNDERSCORE_CP932 = 57479
const UNDERSCORE_DEC8 = 57480
const UNDERSCORE_EUCJPMS = 57481
const UNDERSCORE_EUCKR = 57482
const UNDERSCORE_GB18030 = 57483
const UNDERSCORE_GB2312 = 57484
const UNDERSCORE_GBK = 57485
const UNDERSCORE_GEOSTD8 = 57486
const UNDERSCORE_GREEK = 57487
const UNDERSCORE_HEBREW = 57488
const UNDERSCORE_HP8 = 57489
const UNDERSCORE_KEYBCS2 = 57490
const UNDERSCORE_KOI8R = 57491
const UNDERSCORE_KOI8U = 57492
const UNDERSCORE_LATIN1 = 57493
const UNDERSCORE_LATIN2 = 57494
const UNDERSCORE_LATIN5 = 57495
const UNDERSCORE_LATIN7 = 57496
const UNDERSCORE_MACCE = 57497
const UNDERSCORE_MACROMAN = 57498
const UNDERSCORE_SJIS = 57499
const UNDERSCORE_SWE7 = 57500
const UNDERSCORE_TIS620 = 57501
const UNDERSCORE_UCS2 = 57502
const UNDERSCORE_UJIS = 57503
const UNDERSCORE_UTF16 = 57504
const UNDERSCORE_UTF16LE = 57505
const UNDERSCORE_UTF32 = 57506
const UNDERSCORE_UTF8 = 57507
const UNDERSCORE_UTF8MB3 = 57508
const UNDERSCORE_UTF8MB4 = 57509
const INTERVAL = 57510
const JSON_EXTRACT_OP = 57511
const JSON_UNQUOTE_EXTRACT_OP = 57512
const CREATE = 57513
const ALTER = 57514
const DROP = 57515
const RENAME = 57516
const ANALYZE = 57517
const ADD = 57518
const MODIFY = 57519
const CHANGE = 57520
const SCHEMA = 57521
const TABLE = 57522
const INDEX = 57523
const INDEXES = 57524
const VIEW = 57525
const TO = 57526
const IGNORE = 57527
const IF = 57528
const PRIMARY = 57529
const COLUMN = 57530
const SPATIAL = 57531
const VECTOR = 57532
const FULLTEXT = 57533
const KEY_BLOCK_SIZE = 57534
const CHECK = 57535
const ACTION = 57536
const CASCADE = 57537
const CONSTRAINT = 57538
const FOREIGN = 57539
const NO = 57540
const REFERENCES = 57541
const RESTRICT = 57542
const FIRST = 57543
const AFTER = 57544
const LAST = 57545
const SHOW = 57546
const DESCRIBE = 57547
const EXPLAIN = 57548
const DATE = 57549
const ESCAPE = 57550
const REPAIR = 57551
const OPTIMIZE = 57552
const TRUNCATE = 57553
const FORMAT = 57554
const EXTENDED = 57555
const MAXVALUE = 57556
const REORGANIZE = 57557
const LESS = 57558
const THAN = 57559
const PROCEDURE = 57560
const TRIGGER = 57561
const TRIGGERS = 57562
const FUNCTION = 57563
const STATUS = 57564
const VARIABLES = 57565
const WARNINGS = 57566
const ERRORS = 57567
const KILL = 57568
const CONNECTION = 57569
const SEQUENCE = 57570
const ENABLE = 57571
const DISABLE = 57572
const EACH = 57573
const ROW = 57574
const BEFORE = 57575
const FOLLOWS = 57576
const PRECEDES = 57577
const DEFINER = 57578
const INVOKER = 57579
const INOUT = 57580
const OUT = 57581
const DETERMINISTIC = 57582
const CONTAINS = 57583
const READS = 57584
const MODIFIES = 57585
const SQL = 57586
const SECURITY = 57587
const TEMPORARY = 57588
const ALGORITHM = 57589
const MERGE = 57590
const TEMPTABLE = 57591
const UNDEFINED = 57592
const EVENT = 57593
const EVENTS = 57594
const SCHEDULE = 57595
const EVERY = 57596
const STARTS = 57597
const ENDS = 57598
const COMPLETION = 57599
const PRESERVE = 57600
const CASCADED = 57601
const INSTANT = 57602
const INPLACE = 57603
const COPY = 57604
const DISCARD = 57605
const IMPORT = 57606
const SHARED = 57607
const EXCLUSIVE = 57608
const WITHOUT = 57609
const VALIDATION = 57610
const COALESCE = 57611
const EXCHANGE = 57612
const REBUILD = 57613
const REMOVE = 57614
const PARTITIONING = 57615
const CLASS_ORIGIN = 57616
const SUBCLASS_ORIGIN = 57617
const MESSAGE_TEXT = 57618
const MYSQL_ERRNO = 57619
const CONSTRAINT_CATALOG = 57620
const CONSTRAINT_SCHEMA = 57621
const CONSTRAINT_NAME = 57622
const CATALOG_NAME = 57623
const SCHEMA_NAME = 57624
const TABLE_NAME = 57625
const COLUMN_NAME = 57626
const CURSOR_NAME = 57627
const SIGNAL = 57628
const RESIGNAL = 57629
const SQLSTATE = 57630
const DECLARE = 57631
const CONDITION = 57632
const CURSOR = 57633
const CONTINUE = 57634
const EXIT = 57635
const UNDO = 57636
const HANDLER = 57637
const FOUND = 57638
const SQLWARNING = 57639
const SQLEXCEPTION = 57640
const FETCH = 57641
const OPEN = 57642
const CLOSE = 57643
const LOOP = 57644
const LEAVE = 57645
const ITERATE = 57646
const REPEAT = 57647
const UNTIL = 57648
const WHILE = 57649
const DO = 57650
const RETURN = 57651
const USER = 57652
const IDENTIFIED = 57653
const ROLE = 57654
const REUSE = 57655
const GRANT = 57656
const GRANTS = 57657
const REVOKE = 57658
const NONE = 57659
const ATTRIBUTE = 57660
const RANDOM = 57661
const PASSWORD = 57662
const INITIAL = 57663
const AUTHENTICATION = 57664
const SSL = 57665
const X509 = 57666
const CIPHER = 57667
const ISSUER = 57668
const SUBJECT = 57669
const ACCOUNT = 57670
const EXPIRE = 57671
const NEVER = 57672
const OPTION = 57673
const OPTIONAL = 57674
const ADMIN = 57675
const PRIVILEGES = 57676
const MAX_QUERIES_PER_HOUR = 57677
const MAX_UPDATES_PER_HOUR = 57678
const MAX_CONNECTIONS_PER_HOUR = 57679
const MAX_USER_CONNECTIONS = 57680
const FLUSH = 57681
const FAILED_LOGIN_ATTEMPTS = 57682
const PASSWORD_LOCK_TIME = 57683
const REQUIRE = 57684
const PROXY = 57685
const ROUTINE = 57686
const TABLESPACE = 57687
const CLIENT = 57688
const SLAVE = 57689
const EXECUTE = 57690
const FILE = 57691
const RELOAD = 57692
const REPLICATION = 57693
const SHUTDOWN = 57694
const SUPER = 57695
const USAGE = 57696
const LOGS = 57697
const ENGINE = 57698
const ERROR = 57699
const GENERAL = 57700
const HOSTS = 57701
const OPTIMIZER_COSTS = 57702
const RELAY = 57703
const SLOW = 57704
const USER_RESOURCES = 57705
const NO_WRITE_TO_BINLOG = 57706
const CHANNEL = 57707
const APPLICATION_PASSWORD_ADMIN = 57708
const AUDIT_ABORT_EXEMPT = 57709
const AUDIT_ADMIN = 57710
const AUTHENTICATION_POLICY_ADMIN = 57711
const BACKUP_ADMIN = 57712
const BINLOG_ADMIN = 57713
const BINLOG_ENCRYPTION_ADMIN = 57714
const CLONE_ADMIN = 57715
const CONNECTION_ADMIN = 57716
const ENCRYPTION_KEY_ADMIN = 57717
const FIREWALL_ADMIN = 57718
const FIREWALL_EXEMPT = 57719
const FIREWALL_USER = 57720
const FLUSH_OPTIMIZER_COSTS = 57721
const FLUSH_STATUS = 57722
const FLUSH_TABLES = 57723
const FLUSH_USER_RESOURCES = 57724
const GROUP_REPLICATION_ADMIN = 57725
const GROUP_REPLICATION_STREAM = 57726
const INNODB_REDO_LOG_ARCHIVE = 57727
const INNODB_REDO_LOG_ENABLE = 57728
const NDB_STORED_USER = 57729
const PASSWORDLESS_USER_ADMIN = 57730
const PERSIST_RO_VARIABLES_ADMIN = 57731
const REPLICATION_APPLIER = 57732
const REPLICATION_SLAVE_ADMIN = 57733
const RESOURCE_GROUP_ADMIN = 57734
const RESOURCE_GROUP_USER = 57735
const ROLE_ADMIN = 57736
const SENSITIVE_VARIABLES_OBSERVER = 57737
const SESSION_VARIABLES_ADMIN = 57738
const SET_USER_ID = 57739
const SHOW_ROUTINE = 57740
const SKIP_QUERY_REWRITE = 57741
const SYSTEM_VARIABLES_ADMIN = 57742
const TABLE_ENCRYPTION_ADMIN = 57743
const TP_CONNECTION_ADMIN = 57744
const VERSION_TOKEN_ADMIN = 57745
const XA_RECOVER_ADMIN = 57746
const REPLICA = 57747
const REPLICAS = 57748
const SOURCE = 57749
const STOP = 57750
const RESET = 57751
const FILTER = 57752
const LOG = 57753
const MASTER = 57754
const SOURCE_HOST = 57755
const SOURCE_USER = 57756
const SOURCE_PASSWORD = 57757
const SOURCE_PORT = 57758
const SOURCE_CONNECT_RETRY = 57759
const SOURCE_RETRY_COUNT = 57760
const SOURCE_AUTO_POSITION = 57761
const REPLICATE_DO_TABLE = 57762
const REPLICATE_IGNORE_TABLE = 57763
const BEGIN = 57764
const START = 57765
const TRANSACTION = 57766
const COMMIT = 57767
const ROLLBACK = 57768
const SAVEPOINT = 57769
const WORK = 57770
const RELEASE = 57771
const CHAIN = 57772
const CONSISTENT = 57773
const SNAPSHOT = 57774
const BIT = 57775
const TINYINT = 57776
const SMALLINT = 57777
const MEDIUMINT = 57778
const INT = 57779
const INTEGER = 57780
const BIGINT = 57781
const INTNUM = 57782
const SERIAL = 57783
const INT1 = 57784
const INT2 = 57785
const INT3 = 57786
const INT4 = 57787
const INT8 = 57788
const REAL = 57789
const DOUBLE = 57790
const FLOAT_TYPE = 57791
const DECIMAL = 57792
const NUMERIC = 57793
const DEC = 57794
const FIXED = 57795
const PRECISION = 57796
const TIME = 57797
const TIMESTAMP = 57798
const DATETIME = 57799
const CHAR = 57800
const VARCHAR = 57801
const BOOL = 57802
const CHARACTER = 57803
const VARBINARY = 57804
const NCHAR = 57805
const NVARCHAR = 57806
const NATIONAL = 57807
const VARYING = 57808
const VARCHARACTER = 57809
const TEXT = 57810
const TINYTEXT = 57811
const MEDIUMTEXT = 57812
const LONGTEXT = 57813
const LONG = 57814
const BLOB = 57815
const TINYBLOB = 57816
const MEDIUMBLOB = 57817
const LONGBLOB = 57818
const JSON = 57819
const ENUM = 57820
const GEOMETRY = 57821
const POINT = 57822
const LINESTRING = 57823
const POLYGON = 57824
const GEOMETRYCOLLECTION = 57825
const MULTIPOINT = 57826
const MULTILINESTRING = 57827
const MULTIPOLYGON = 57828
const LOCAL = 57829
const LOW_PRIORITY = 57830
const SKIP = 57831
const LOCKED = 57832
const NULLX = 57833
const AUTO_INCREMENT = 57834
const APPROXNUM = 57835
const SIGNED = 57836
const UNSIGNED = 57837
const ZEROFILL = 57838
const SRID = 57839
const COLLATION = 57840
const DATABASES = 57841
const SCHEMAS = 57842
const TABLES = 57843
const FULL = 57844
const PROCESSLIST = 57845
const COLUMNS = 57846
const FIELDS = 57847
const ENGINES = 57848
const PLUGINS = 57849
const NAMES = 57850
const CHARSET = 57851
const GLOBAL = 57852
const SESSION = 57853
const ISOLATION = 57854
const LEVEL = 57855
const READ = 57856
const WRITE = 57857
const ONLY = 57858
const REPEATABLE = 57859
const COMMITTED = 57860
const UNCOMMITTED = 57861
const SERIALIZABLE = 57862
const ENCRYPTION = 57863
const CURRENT_TIMESTAMP = 57864
const NOW = 57865
const DATABASE = 57866
const CURRENT_DATE = 57867
const CURRENT_USER = 57868
const CURRENT_TIME = 57869
const LOCALTIME = 57870
const LOCALTIMESTAMP = 57871
const UTC_DATE = 57872
const UTC_TIME = 57873
const UTC_TIMESTAMP = 57874
const REPLACE = 57875
const CONVERT = 57876
const CAST = 57877
const POSITION = 57878
const SUBSTR = 57879
const SUBSTRING = 57880
const TRIM = 57881
const LEADING = 57882
const TRAILING = 57883
const BOTH = 57884
const GROUP_CONCAT = 57885
const SEPARATOR = 57886
const TIMESTAMPADD = 57887
const TIMESTAMPDIFF = 57888
const EXTRACT = 57889
const GET_FORMAT = 57890
const OVER = 57891
const WINDOW = 57892
const GROUPING = 57893
const CURRENT = 57894
const AVG = 57895
const BIT_AND = 57896
const BIT_OR = 57897
const BIT_XOR = 57898
const COUNT = 57899
const JSON_ARRAYAGG = 57900
const JSON_OBJECTAGG = 57901
const MAX = 57902
const MIN = 57903
const STDDEV_POP = 57904
const STDDEV = 57905
const STD = 57906
const STDDEV_SAMP = 57907
const SUM = 57908
const VAR_POP = 57909
const VARIANCE = 57910
const VAR_SAMP = 57911
const CUME_DIST = 57912
const DENSE_RANK = 57913
const FIRST_VALUE = 57914
const LAG = 57915
const LAST_VALUE = 57916
const LEAD = 57917
const NTH_VALUE = 57918
const NTILE = 57919
const ROW_NUMBER = 57920
const PERCENT_RANK = 57921
const RANK = 57922
const DUAL = 57923
const JSON_TABLE = 57924
const PATH = 57925
const AVG_ROW_LENGTH = 57926
const CHECKSUM = 57927
const TABLE_CHECKSUM = 57928
const COMPRESSION = 57929
const DIRECTORY = 57930
const DELAY_KEY_WRITE = 57931
const ENGINE_ATTRIBUTE = 57932
const INSERT_METHOD = 57933
const MAX_ROWS = 57934
const MIN_ROWS = 57935
const PACK_KEYS = 57936
const ROW_FORMAT = 57937
const SECONDARY_ENGINE = 57938
const SECONDARY_ENGINE_ATTRIBUTE = 57939
const STATS_AUTO_RECALC = 57940
const STATS_PERSISTENT = 57941
const STATS_SAMPLE_PAGES = 57942
const STORAGE = 57943
const DISK = 57944
const MEMORY = 57945
const DYNAMIC = 57946
const COMPRESSED = 57947
const REDUNDANT = 57948
const COMPACT = 57949
const LIST = 57950
const HASH = 57951
const PARTITIONS = 57952
const SUBPARTITION = 57953
const SUBPARTITIONS = 57954
const PREPARE = 57955
const DEALLOCATE = 57956
const MATCH = 57957
const AGAINST = 57958
const BOOLEAN = 57959
const LANGUAGE = 57960
const WITH = 57961
const QUERY = 57962
const EXPANSION = 57963
const MICROSECOND = 57964
const SECOND = 57965
const MINUTE = 57966
const HOUR = 57967
const DAY = 57968
const WEEK = 57969
const MONTH = 57970
const QUARTER = 57971
const YEAR = 57972
const SECOND_MICROSECOND = 57973
const MINUTE_MICROSECOND = 57974
const MINUTE_SECOND = 57975
const HOUR_MICROSECOND = 57976
const HOUR_SECOND = 57977
const HOUR_MINUTE = 57978
const DAY_MICROSECOND = 57979
const DAY_SECOND = 57980
const DAY_MINUTE = 57981
const DAY_HOUR = 57982
const YEAR_MONTH = 57983
const NAME = 57984
const SYSTEM = 57985
const ACCESSIBLE = 57986
const ASENSITIVE = 57987
const CUBE = 57988
const DELAYED = 57989
const DISTINCTROW = 57990
const EMPTY = 57991
const FLOAT4 = 57992
const FLOAT8 = 57993
const GET = 57994
const HIGH_PRIORITY = 57995
const INSENSITIVE = 57996
const IO_AFTER_GTIDS = 57997
const IO_BEFORE_GTIDS = 57998
const LINEAR = 57999
const MASTER_BIND = 58000
const MASTER_SSL_VERIFY_SERVER_CERT = 58001
const MIDDLEINT = 58002
const PURGE = 58003
const READ_WRITE = 58004
const RLIKE = 58005
const SENSITIVE = 58006
const SPECIFIC = 58007
const SQL_BIG_RESULT = 58008
const SQL_SMALL_RESULT = 58009
const UNUSED = 58010
const DESCRIPTION = 58011
const LATERAL = 58012
const MEMBER = 58013
const RECURSIVE = 58014
const BUCKETS = 58015
const CLONE = 58016
const COMPONENT = 58017
const DEFINITION = 58018
const ENFORCED = 58019
const NOT_ENFORCED = 58020
const EXCLUDE = 58021
const GEOMCOLLECTION = 58022
const GET_MASTER_PUBLIC_KEY = 58023
const HISTOGRAM = 58024
const HISTORY = 58025
const INACTIVE = 58026
const INVISIBLE = 58027
const MASTER_COMPRESSION_ALGORITHMS = 58028
const MASTER_PUBLIC_KEY_PATH = 58029
const MASTER_TLS_CIPHERSUITES = 58030
const MASTER_ZSTD_COMPRESSION_LEVEL = 58031
const NESTED = 58032
const NETWORK_NAMESPACE = 58033
const NOWAIT = 58034
const NULLS = 58035
const OJ = 58036
const OLD = 58037
const ORDINALITY = 58038
const ORGANIZATION = 58039
const OTHERS = 58040
const PERSIST = 58041
const PERSIST_ONLY = 58042
const PRIVILEGE_CHECKS_USER = 58043
const PROCESS = 58044
const REFERENCE = 58045
const REQUIRE_ROW_FORMAT = 58046
const RESOURCE = 58047
const RESPECT = 58048
const RESTART = 58049
const RETAIN = 58050
const SECONDARY = 58051
const SECONDARY_LOAD = 58052
const SECONDARY_UNLOAD = 58053
const THREAD_PRIORITY = 58054
const TIES = 58055
const VCPU = 58056
const VISIBLE = 58057
const INFILE = 58058
const ACTIVE = 58059
const AGGREGATE = 58060
const ANY = 58061
const ARRAY = 58062
const ASCII = 58063
const AT = 58064
const AUTOEXTEND_SIZE = 58065
const GENERATED = 58066
const ALWAYS = 58067
const STORED = 58068
const VIRTUAL = 58069
const NVAR = 58070
const PASSWORD_LOCK = 58071

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"FOR_SYSTEM_TIME",
	"FOR_VERSION",
	"EXCEPT",
	"UNION",
	"INTERSECT",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"CONTAINED",
	"VERSION",
	"VERSIONS",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"':'",
	"STRING",
	"ID",
	"HEX",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT_OP",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"VECTOR",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"EXTENDED",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"EVENT",
	"EVENTS",
	"SCHEDULE",
	"EVERY",
	"STARTS",
	"ENDS",
	"COMPLETION",
	"PRESERVE",
	"CASCADED",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISCARD",
	"IMPORT",
	"SHARED",
	"EXCLUSIVE",
	"WITHOUT",
	"VALIDATION",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"REMOVE",
	"PARTITIONING",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"FETCH",
	"OPEN",
	"CLOSE",
	"LOOP",
	"LEAVE",
	"ITERATE",
	"REPEAT",
	"UNTIL",
	"WHILE",
	"DO",
	"RETURN",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"OPTION",
	"OPTIONAL",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"APPLICATION_PASSWORD_ADMIN",
	"AUDIT_ABORT_EXEMPT",
	"AUDIT_ADMIN",
	"AUTHENTICATION_POLICY_ADMIN",
	"BACKUP_ADMIN",
	"BINLOG_ADMIN",
	"BINLOG_ENCRYPTION_ADMIN",
	"CLONE_ADMIN",
	"CONNECTION_ADMIN",
	"ENCRYPTION_KEY_ADMIN",
	"FIREWALL_ADMIN",
	"FIREWALL_EXEMPT",
	"FIREWALL_USER",
	"FLUSH_OPTIMIZER_COSTS",
	"FLUSH_STATUS",
	"FLUSH_TABLES",
	"FLUSH_USER_RESOURCES",
	"GROUP_REPLICATION_ADMIN",
	"GROUP_REPLICATION_STREAM",
	"INNODB_REDO_LOG_ARCHIVE",
	"INNODB_REDO_LOG_ENABLE",
	"NDB_STORED_USER",
	"PASSWORDLESS_USER_ADMIN",
	"PERSIST_RO_VARIABLES_ADMIN",
	"REPLICATION_APPLIER",
	"REPLICATION_SLAVE_ADMIN",
	"RESOURCE_GROUP_ADMIN",
	"RESOURCE_GROUP_USER",
	"ROLE_ADMIN",
	"SENSITIVE_VARIABLES_OBSERVER",
	"SESSION_VARIABLES_ADMIN",
	"SET_USER_ID",
	"SHOW_ROUTINE",
	"SKIP_QUERY_REWRITE",
	"SYSTEM_VARIABLES_ADMIN",
	"TABLE_ENCRYPTION_ADMIN",
	"TP_CONNECTION_ADMIN",
	"VERSION_TOKEN_ADMIN",
	"XA_RECOVER_ADMIN",
	"REPLICA",
	"REPLICAS",
	"SOURCE",
	"STOP",
	"RESET",
	"FILTER",
	"LOG",
	"MASTER",
	"SOURCE_HOST",
	"SOURCE_USER",
	"SOURCE_PASSWORD",
	"SOURCE_PORT",
	"SOURCE_CONNECT_RETRY",
	"SOURCE_RETRY_COUNT",
	"SOURCE_AUTO_POSITION",
	"REPLICATE_DO_TABLE",
	"REPLICATE_IGNORE_TABLE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"VARCHARACTER",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"SKIP",
	"LOCKED",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"POSITION",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"EXTRACT",
	"GET_FORMAT",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"TABLE_CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"PREPARE",
	"DEALLOCATE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"MICROSECOND",
	"SECOND",
	"MINUTE",
	"HOUR",
	"DAY",
	"WEEK",
	"MONTH",
	"QUARTER",
	"YEAR",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"NAME",
	"SYSTEM",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"INSENSITIVE",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"LINEAR",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"PURGE",
	"READ_WRITE",
	"RLIKE",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"NOT_ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 41,
	749, 41,
	-2, 79,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 49,
	199, 1769,
	200, 1790,
	-2, 331,
	-1, 62,
	241, 1149,
	242, 1149,
	-2, 1138,
	-1, 90,
	270, 331,
	-2, 1775,
	-1, 94,
	8, 58,
	9, 58,
	10, 58,
	-2, 51,
	-1, 95,
	8, 61,
	9, 61,
	-2, 52,
	-1, 540,
	1, 2470,
	6, 2470,
	7, 2470,
	28, 2470,
	187, 2470,
	749, 2470,
	-2, 1184,
	-1, 553,
	187, 1800,
	-2, 1794,
	-1, 554,
	187, 1801,
	-2, 1795,
	-1, 659,
	1, 679,
	749, 679,
	-2, 677,
	-1, 668,
	1, 1288,
	8, 1288,
	9, 1288,
	10, 1288,
	17, 1288,
	18, 1288,
	19, 1288,
	20, 1288,
	22, 1288,
	24, 1288,
	34, 1288,
	35, 1288,
	64, 1288,
	65, 1288,
	66, 1288,
	67, 1288,
	68, 1288,
	70, 1288,
	71, 1288,
	74, 1288,
	75, 1288,
	77, 1288,
	78, 1288,
	96, 1288,
	521, 1288,
	569, 1288,
	638, 1288,
	749, 1288,
	-2, 1784,
	-1, 673,
	1, 1395,
	8, 1395,
	9, 1395,
	10, 1395,
	17, 1395,
	18, 1395,
	19, 1395,
	20, 1395,
	22, 1395,
	24, 1395,
	34, 1395,
	35, 1395,
	64, 1395,
	65, 1395,
	66, 1395,
	67, 1395,
	68, 1395,
	70, 1395,
	71, 1395,
	74, 1395,
	75, 1395,
	77, 1395,
	78, 1395,
	96, 1395,
	521, 1395,
	569, 1395,
	638, 1395,
	749, 1395,
	-2, 1784,
	-1, 701,
	187, 2167,
	-2, 1409,
	-1, 734,
	187, 2275,
	-2, 1677,
	-1, 735,
	187, 2356,
	-2, 1411,
	-1, 736,
	187, 2187,
	-2, 1412,
	-1, 805,
	187, 2138,
	-2, 1643,
	-1, 808,
	187, 2153,
	-2, 1561,
	-1, 809,
	187, 2156,
	-2, 1561,
	-1, 810,
	187, 2366,
	-2, 1561,
	-1, 812,
	187, 2154,
	-2, 1561,
	-1, 813,
	187, 2367,
	-2, 1561,
	-1, 814,
	187, 2368,
	-2, 1561,
	-1, 873,
	187, 2155,
	-2, 1561,
	-1, 956,
	187, 2255,
	-2, 1561,
	-1, 957,
	187, 2256,
	-2, 1561,
	-1, 1069,
	109, 2483,
	120, 2483,
	187, 2483,
	-2, 1751,
	-1, 1070,
	109, 2613,
	120, 2613,
	187, 2613,
	-2, 1752,
	-1, 1075,
	109, 2510,
	120, 2510,
	187, 2510,
	-2, 1753,
	-1, 1076,
	109, 2561,
	120, 2561,
	187, 2561,
	-2, 1754,
	-1, 1077,
	109, 2562,
	120, 2562,
	187, 2562,
	-2, 1755,
	-1, 1078,
	109, 2410,
	120, 2410,
	187, 2410,
	-2, 1760,
	-1, 1080,
	109, 2538,
	120, 2538,
	187, 2538,
	-2, 1762,
	-1, 1253,
	448, 1163,
	-2, 1167,
	-1, 1255,
	448, 1163,
	-2, 1167,
	-1, 1381,
	1, 679,
	749, 679,
	-2, 677,
	-1, 1383,
	1, 680,
	749, 680,
	-2, 677,
	-1, 1406,
	1, 1289,
	8, 1289,
	9, 1289,
	10, 1289,
	17, 1289,
	18, 1289,
	19, 1289,
	20, 1289,
	22, 1289,
	24, 1289,
	34, 1289,
	35, 1289,
	64, 1289,
	65, 1289,
	66, 1289,
	67, 1289,
	68, 1289,
	70, 1289,
	71, 1289,
	74, 1289,
	75, 1289,
	77, 1289,
	78, 1289,
	96, 1289,
	521, 1289,
	569, 1289,
	638, 1289,
	749, 1289,
	-2, 1784,
	-1, 1417,
	1, 1395,
	8, 1395,
	9, 1395,
	10, 1395,
	17, 1395,
	18, 1395,
	19, 1395,
	20, 1395,
	22, 1395,
	24, 1395,
	34, 1395,
	35, 1395,
	64, 1395,
	65, 1395,
	66, 1395,
	67, 1395,
	68, 1395,
	70, 1395,
	71, 1395,
	74, 1395,
	75, 1395,
	77, 1395,
	78, 1395,
	96, 1395,
	521, 1395,
	569, 1395,
	638, 1395,
	749, 1395,
	-2, 1784,
	-1, 1710,
	1, 679,
	749, 679,
	-2, 677,
	-1, 1712,
	1, 679,
	749, 679,
	-2, 677,
	-1, 2261,
	187, 1804,
	-2, 1655,
	-1, 2263,
	187, 2698,
	-2, 1657,
	-1, 2264,
	187, 2699,
	-2, 1658,
	-1, 2265,
	187, 1803,
	-2, 1799,
	-1, 2414,
	75, 98,
	77, 98,
	-2, 102,
	-1, 2432,
	187, 2279,
	-2, 1756,
	-1, 2439,
	1, 883,
	749, 883,
	-2, 677,
	-1, 2625,
	49, 903,
	206, 906,
	208, 903,
	209, 903,
	210, 903,
	-2, 1010,
	-1, 2698,
	8, 59,
	9, 59,
	10, 59,
	-2, 1441,
	-1, 2715,
	1, 1334,
	8, 1334,
	9, 1334,
	10, 1334,
	17, 1334,
	18, 1334,
	19, 1334,
	20, 1334,
	22, 1334,
	24, 1334,
	34, 1334,
	35, 1334,
	64, 1334,
	65, 1334,
	66, 1334,
	67, 1334,
	68, 1334,
	70, 1334,
	71, 1334,
	74, 1334,
	75, 1334,
	77, 1334,
	78, 1334,
	96, 1334,
	521, 1334,
	569, 1334,
	638, 1334,
	749, 1334,
	-2, 1784,
	-1, 2883,
	212, 1004,
	216, 1004,
	-2, 782,
	-1, 2884,
	212, 1074,
	216, 1074,
	-2, 783,
	-1, 3136,
	1, 1395,
	8, 1395,
	9, 1395,
	10, 1395,
	17, 1395,
	18, 1395,
	19, 1395,
	20, 1395,
	22, 1395,
	24, 1395,
	34, 1395,
	35, 1395,
	64, 1395,
	65, 1395,
	66, 1395,
	67, 1395,
	68, 1395,
	70, 1395,
	71, 1395,
	74, 1395,
	75, 1395,
	77, 1395,
	78, 1395,
	96, 1395,
	521, 1395,
	569, 1395,
	638, 1395,
	749, 1395,
	-2, 1784,
	-1, 3239,
	1, 1708,
	74, 1708,
	749, 1708,
	-2, 1784,
	-1, 3431,
	49, 903,
	206, 906,
	208, 903,
	209, 903,
	210, 903,
	-2, 1010,
	-1, 3444,
	206, 907,
	212, 1004,
	216, 1004,
	-2, 905,
	-1, 3618,
	77, 2050,
	78, 2050,
	187, 2050,
	-2, 1190,
	-1, 3619,
	76, 1719,
	251, 1719,
	-2, 2099,
	-1, 3620,
	76, 1720,
	251, 1720,
	-2, 2664,
	-1, 3850,
	8, 59,
	9, 59,
	10, 59,
	-2, 1715,
	-1, 3995,
	46, 1815,
	-2, 1813,
	-1, 4257,
	8, 59,
	9, 59,
	10, 59,
	-2, 1716,
	-1, 4282,
	314, 426,
	-2, 1870,
	-1, 4283,
	314, 427,
	-2, 1911,
	-1, 4284,
	314, 428,
	-2, 2087,
	-1, 4513,
	104, 412,
	106, 412,
	108, 412,
	-2, 79,
	-1, 4594,
	106, 419,
	107, 419,
	108, 419,
	-2, 79,
}

const yyPrivate = 57344

const yyLast = 80530

var yyAct = [...]int{
	747, 44, 4567, 4468, 4536, 4505, 4517, 4504, 4289, 1185,
	693, 565, 4470, 2900, 2429, 3989, 3359, 4249, 4141, 3,
	4386, 1409, 4276, 4134, 4387, 2899, 703, 4144, 8, 3698,
	4143, 7, 489, 4288, 3991, 4029, 3984, 4142, 6, 653,
	4175, 28, 4108, 2352, 1630, 44, 4145, 9, 707, 3216,
	3247, 3396, 4136, 3563, 4275, 1416, 2353, 3296, 4040, 3638,
	3883, 4002, 2694, 108, 720, 3995, 107, 673, 3813, 4247,
	1533, 3533, 3990, 1701, 3770, 2640, 2290, 3806, 3805, 3771,
	2501, 2169, 544, 547, 3993, 3951, 3624, 684, 592, 592,
	3616, 637, 3126, 3409, 1745, 3824, 3762, 670, 649, 101,
	3374, 3727, 2967, 3721, 2520, 3704, 2682, 2236, 4135, 1464,
	3297, 3248, 3608, 3804, 1747, 2881, 1411, 746, 2456, 1145,
	3073, 3436, 2887, 2911, 3539, 156, 1214, 2888, 2880, 811,
	2953, 1562, 3112, 486, 2460, 3515, 542, 3506, 3036, 2618,
	2161, 2624, 1413, 105, 1387, 2977, 1561, 134, 2623, 1266,
	2446, 2592, 1157, 2823, 1153, 1376, 2487, 712, 3394, 706,
	1203, 3178, 694, 2699, 2846, 1074, 2552, 2222, 1408, 2224,
	1750, 1415, 2622, 1267, 2162, 2143, 2043, 1720, 2102, 2934,
	1445, 2575, 1071, 1240, 1611, 2483, 1607, 2342, 1146, 2267,
	1453, 668, 2685, 689, 1448, 1300, 2462, 2606, 1278, 1744,
	1067, 3040, 1382, 1148, 1637, 1610, 1472, 2107, 1068, 3223,
	1182, 2416, 2229, 664, 677, 1394, 1386, 1385, 1384, 652,
	3625, 567, 1161, 1199, 665, 568, 1277, 1259, 1198, 2306,
	2075, 1713, 2076, 2226, 2042, 550, 129, 1172, 1184, 4594,
	687, 125, 3224, 4588, 4575, 1149, 4559, 1166, 4545, 4513,
	4511, 710, 4483, 4480, 660, 4479, 4478, 4463, 3115, 4461,
	4369, 4365, 4360, 100, 4042, 4041, 3312, 3541, 3781, 2100,
	2505, 2907, 1176, 3387, 4231, 3924, 2914, 2539, 2538, 3776,
	3777, 2878, 3774, 3775, 3356, 3357, 86, 94, 4535, 97,
	3641, 3922, 2919, 2918, 4498, 99, 1436, 4496, 3780, 4583,
	3390, 4534, 4497, 2945, 3925, 1388, 1723, 3388, 651, 657,
	4303, 4302, 4501, 2858, 683, 3884, 1186, 2915, 560, 42,
	4245, 3705, 4445, 42, 4114, 71, 3937, 662, 3389, 4396,
	3886, 3707, 2536, 2921, 47, 2897, 122, 42, 2652, 42,
	1353, 4137, 4210, 2898, 696, 2035, 3639, 2536, 674, 2847,
	3799, 2366, 2364, 2363, 2362, 2365, 2361, 2360, 2359, 3371,
	2223, 2373, 2855, 2372, 2371, 2965, 2370, 2369, 2368, 2367,
	4244, 3206, 1178, 499, 4113, 4537, 1168, 4024, 1174, 1175,
	3867, 88, 3675, 3244, 89, 2431, 2901, 3245, 89, 3879,
	3880, 3802, 3803, 3531, 2848, 3275, 3274, 4009, 3095, 3094,
	4321, 2925, 89, 4063, 89, 1144, 1486, 1485, 1495, 1496,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 3516, 4339,
	1497, 3871, 2878, 2354, 2366, 2364, 2363, 2362, 2365, 2361,
	2360, 2359, 2355, 2356, 2373, 2357, 2372, 2371, 2358, 2370,
	2369, 2368, 2367, 3998, 2799, 1354, 1388, 4253, 3710, 2917,
	3600, 3885, 42, 2920, 2858, 1160, 1165, 138, 1156, 539,
	4230, 2910, 4099, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 2574, 2859, 3259, 3260, 3238, 114, 112, 113, 3258,
	562, 3337, 1061, 2865, 4250, 2426, 2427, 3338, 3339, 3017,
	3708, 3709, 3711, 3712, 3713, 1612, 3244, 1613, 4253, 1253,
	3245, 2146, 2147, 2855, 2106, 126, 2568, 96, 2912, 2837,
	2425, 96, 2836, 663, 4323, 2838, 4248, 89, 2857, 1238,
	1239, 1247, 148, 144, 145, 96, 146, 96, 2177, 4232,
	2104, 2105, 3268, 3561, 1236, 4250, 1237, 1238, 1239, 2124,
	1145, 1330, 1145, 89, 559, 558, 2923, 3832, 2194, 4254,
	1400, 1401, 1202, 1218, 1219, 2103, 2913, 1222, 1260, 3825,
	108, 150, 149, 1265, 136, 3159, 4266, 1261, 2458, 2459,
	1263, 2723, 646, 1209, 2573, 1297, 1338, 1262, 3179, 2463,
	4534, 1396, 1399, 1400, 1401, 1397, 4497, 1398, 1403, 4495,
	2473, 3830, 1220, 1221, 153, 2472, 2466, 2465, 3463, 2467,
	4254, 2477, 3581, 3585, 2463, 2484, 128, 3583, 2603, 1248,
	1249, 2869, 2148, 2859, 3059, 2377, 132, 140, 139, 2558,
	2557, 534, 557, 2081, 2865, 1223, 1301, 537, 1256, 640,
	641, 1224, 4267, 3287, 2144, 2145, 2877, 3016, 661, 1351,
	96, 4362, 1352, 1210, 4363, 3923, 4364, 2862, 641, 643,
	1145, 642, 4582, 151, 1377, 152, 4535, 4533, 1380, 2857,
	4532, 3182, 4498, 136, 2154, 2153, 2152, 2151, 3137, 2150,
	1407, 1412, 2149, 137, 141, 1372, 1430, 1431, 1145, 3797,
	1145, 1145, 3982, 639, 1145, 3137, 1334, 1335, 3066, 108,
	2651, 3789, 4390, 3787, 1145, 647, 3065, 3063, 2960, 2997,
	4403, 4402, 1506, 1508, 4205, 3381, 1510, 1250, 4342, 1396,
	1399, 1400, 1401, 1397, 2871, 1398, 1403, 3137, 3955, 2686,
	2687, 3064, 1304, 2912, 1404, 1311, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 4203, 1451, 3540, 4068, 130, 1525, 131,
	4067, 4457, 1528, 1529, 1530, 1531, 1532, 4057, 1536, 3408,
	3002, 4389, 2869, 2587, 2916, 1313, 1327, 2964, 3739, 2909,
	3722, 4361, 1345, 4307, 2962, 1346, 108, 3757, 3725, 2588,
	1476, 2913, 2136, 3946, 2521, 1379, 3737, 2877, 4315, 4301,
	3723, 3724, 3980, 2850, 3728, 3729, 3730, 3731, 2862, 1313,
	4591, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 4561, 1555, 1556, 1558,
	1558, 1558, 2861, 1563, 1563, 1563, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1422, 4065, 3887,
	3640, 3919, 659, 4557, 2569, 2871, 3888, 3518, 3944, 4590,
	4268, 1406, 4560, 2379, 2380, 2378, 2175, 147, 3706, 1313,
	3267, 538, 3941, 561, 1563, 2851, 2853, 2854, 2856, 3468,
	2860, 2863, 2864, 2866, 2867, 2868, 2870, 2872, 2873, 2874,
	2875, 2876, 1337, 3410, 3384, 4476, 2926, 4521, 1217, 3641,
	4059, 3186, 3185, 3187, 3184, 3085, 2607, 4357, 2581, 3191,
	4313, 3183, 3180, 4465, 2176, 3181, 4010, 3189, 3266, 545,
	1454, 674, 674, 3076, 2850, 142, 2178, 4355, 4356, 3810,
	3065, 3188, 3538, 1478, 4251, 1212, 1373, 3128, 4458, 4112,
	1557, 1559, 1560, 3938, 3890, 2912, 109, 2896, 3190, 3192,
	87, 127, 3058, 2861, 1507, 3796, 154, 1563, 1563, 1374,
	1564, 1565, 3456, 3063, 109, 1433, 109, 1433, 1433, 1438,
	1438, 1433, 3788, 1432, 3889, 1437, 1437, 1439, 1390, 1444,
	1373, 1534, 2966, 4100, 1358, 4251, 2908, 2082, 2928, 2912,
	3869, 1211, 1257, 2913, 4224, 1320, 4091, 4338, 2963, 3870,
	1264, 1305, 2486, 3129, 3786, 1402, 2469, 3128, 3517, 3519,
	3520, 3521, 3369, 2470, 2849, 115, 2851, 2853, 2854, 2856,
	1597, 2860, 2863, 2864, 2866, 2867, 2868, 2870, 2872, 2873,
	2874, 2875, 2876, 4229, 2106, 4388, 1255, 2913, 1402, 1554,
	1370, 1347, 1312, 727, 1323, 728, 730, 731, 732, 733,
	1391, 4204, 548, 729, 2302, 143, 4030, 3915, 1318, 3372,
	2104, 2105, 1600, 4058, 3916, 3375, 3376, 3377, 3378, 3379,
	3375, 3376, 3377, 3378, 3379, 1235, 1728, 1729, 1727, 109,
	1718, 3914, 1368, 3913, 3193, 3912, 3114, 3910, 1173, 3122,
	3124, 3123, 1708, 3911, 136, 3116, 4271, 4272, 3920, 4474,
	549, 4469, 4048, 1598, 1599, 4064, 4052, 4053, 727, 3537,
	728, 730, 731, 732, 733, 3943, 1074, 4472, 729, 2302,
	4333, 1074, 1319, 2511, 1315, 4139, 1469, 1470, 1468, 3940,
	3470, 3471, 1606, 1469, 1470, 1468, 546, 2515, 2516, 136,
	2157, 658, 3534, 3535, 546, 1471, 1145, 2985, 2986, 2045,
	141, 3383, 1471, 1251, 2510, 2849, 1316, 1317, 1170, 1169,
	1232, 1233, 4311, 2108, 108, 1234, 1402, 107, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1231, 1230, 3469, 1229, 1173, 592, 1228, 1722, 2299, 2158,
	4214, 1171, 543, 2035, 1364, 4571, 1693, 1694, 1695, 1696,
	1697, 2110, 3763, 3764, 2109, 592, 4132, 1746, 3457, 3458,
	3459, 2077, 4584, 4344, 1622, 1363, 1359, 1360, 1361, 1362,
	1365, 1366, 1367, 1369, 3507, 1604, 4343, 3508, 1160, 3509,
	3055, 3043, 1706, 1754, 1160, 3029, 2522, 3043, 2453, 138,
	3301, 1405, 3053, 3442, 1627, 3052, 4597, 1418, 1420, 1703,
	1615, 4592, 4576, 2299, 1606, 1616, 4548, 1739, 1167, 1187,
	4209, 663, 4082, 1309, 3974, 1145, 3795, 3792, 3536, 1721,
	3406, 3060, 1698, 2996, 1726, 3117, 3075, 2992, 2039, 2039,
	2039, 2039, 1752, 1260, 2970, 1418, 1420, 2052, 2053, 2054,
	2055, 2056, 1261, 2057, 2969, 1263, 1314, 1321, 1322, 1324,
	1325, 1326, 1262, 1328, 1329, 2582, 1331, 1332, 1333, 1699,
	1336, 2141, 1339, 1340, 1341, 1342, 1343, 1601, 1602, 592,
	1733, 1731, 1258, 2504, 546, 546, 1164, 2209, 2208, 2455,
	2533, 2207, 2455, 4471, 4473, 2532, 123, 1163, 3977, 3401,
	2046, 2070, 1389, 1177, 3118, 484, 3075, 1735, 3127, 3778,
	3032, 691, 2646, 3031, 2134, 2058, 4481, 2523, 2059, 2060,
	2061, 1371, 4222, 4366, 89, 2097, 3560, 2065, 2455, 3257,
	2033, 1512, 1513, 2048, 1623, 4569, 2994, 2073, 4570, 1419,
	4568, 2037, 2041, 2993, 2843, 1624, 2649, 2647, 2642, 1308,
	1511, 2770, 2644, 670, 670, 670, 670, 3300, 3441, 140,
	139, 89, 1709, 1704, 3051, 2117, 1716, 1707, 1145, 2767,
	2166, 1509, 2163, 1412, 2740, 2203, 1725, 1419, 2062, 1717,
	2064, 2717, 2614, 2537, 1742, 1724, 108, 2512, 2421, 1743,
	2239, 108, 1514, 1626, 2202, 4062, 2300, 2301, 1606, 1606,
	3033, 3034, 2044, 2095, 2196, 2140, 2643, 2645, 2648, 2650,
	2049, 3074, 1514, 1527, 1526, 1477, 2204, 2179, 1295, 2455,
	1514, 123, 2197, 1200, 648, 2050, 2051, 1487, 2292, 2291,
	1497, 2431, 4081, 2206, 4080, 1511, 1497, 2068, 118, 2454,
	1252, 2833, 2454, 3689, 3687, 2180, 2079, 2078, 3049, 3043,
	4089, 3403, 2083, 2072, 3046, 3428, 3427, 3045, 3050, 2088,
	2089, 2300, 2301, 2091, 3318, 3316, 2181, 3779, 2115, 1145,
	1754, 2184, 2260, 3772, 2112, 4334, 4335, 3927, 2454, 2094,
	3846, 3074, 4331, 4332, 96, 3069, 121, 108, 1534, 2113,
	2293, 2155, 2156, 3072, 2247, 2116, 2714, 1536, 670, 2298,
	2303, 3066, 1657, 3064, 2295, 3688, 2297, 1476, 2034, 2139,
	3051, 3025, 3024, 2135, 3928, 108, 2138, 3429, 2202, 2265,
	1241, 2309, 2311, 1512, 1513, 3042, 3317, 120, 3337, 1061,
	2824, 3327, 3328, 3330, 3338, 3339, 3329, 3331, 3332, 3022,
	3021, 1512, 1513, 3084, 2171, 4359, 4117, 4116, 2346, 2205,
	2455, 3333, 3334, 3335, 3336, 2159, 2328, 2331, 2268, 2170,
	2174, 2172, 2173, 670, 2344, 3083, 3082, 3081, 3080, 2454,
	3079, 2374, 2375, 3026, 1534, 3049, 3043, 2182, 2183, 2195,
	2185, 3046, 2455, 3078, 3045, 3050, 3077, 2246, 4373, 1623,
	3032, 2430, 2646, 3031, 1490, 1491, 1492, 1493, 1494, 1487,
	1624, 3023, 1497, 2711, 674, 674, 674, 674, 2259, 96,
	2708, 1644, 683, 2232, 664, 2840, 2839, 1471, 1074, 1754,
	2274, 2436, 1153, 1242, 674, 1216, 2649, 2647, 2642, 2412,
	2244, 2414, 2644, 1243, 4128, 2272, 2273, 2271, 2547, 3012,
	2256, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 1468, 3042, 1497, 1470, 1468, 696, 2237,
	2238, 1226, 2248, 2249, 2250, 3011, 3010, 1377, 2265, 4374,
	1471, 1469, 1470, 1468, 1471, 2438, 3009, 2841, 3008, 3007,
	3033, 3034, 4580, 4551, 4518, 4550, 2643, 2645, 2648, 2650,
	1471, 3006, 2269, 2602, 1658, 1469, 1470, 1468, 2762, 2382,
	2454, 2601, 554, 4578, 2530, 103, 2387, 3043, 2389, 2093,
	1271, 1180, 1160, 2443, 1471, 3044, 2453, 2452, 2312, 2313,
	2314, 2315, 2316, 1179, 2415, 1215, 1469, 1470, 1468, 3208,
	1534, 2413, 2454, 1245, 2343, 4574, 2323, 2324, 4547, 3043,
	2553, 2548, 2340, 4459, 1160, 1471, 4407, 3044, 2453, 674,
	2968, 110, 2524, 116, 2480, 2481, 2482, 2437, 2526, 2527,
	163, 1711, 487, 498, 1227, 2534, 163, 1469, 1470, 1468,
	2423, 163, 2493, 2494, 2495, 2496, 2497, 2419, 2422, 4397,
	2428, 634, 634, 2343, 3738, 2783, 1471, 2528, 2529, 3732,
	163, 2442, 2514, 2440, 1254, 4425, 2468, 2471, 2990, 163,
	2474, 2475, 2476, 2464, 2230, 3310, 2489, 2490, 2491, 2492,
	3807, 2498, 163, 2761, 674, 2760, 2435, 1062, 1063, 1064,
	3137, 1465, 2503, 163, 1159, 4565, 4277, 4596, 4406, 1162,
	4405, 2296, 4306, 2485, 4595, 1469, 1470, 1468, 4277, 3798,
	4351, 4263, 4350, 89, 2500, 163, 634, 2245, 1159, 4207,
	691, 1469, 1470, 1468, 1471, 2270, 2409, 487, 163, 2319,
	2320, 2321, 4527, 3668, 3666, 2325, 2230, 2327, 2330, 2333,
	1471, 2338, 2339, 2506, 3667, 2508, 528, 2349, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	4201, 2381, 1497, 2383, 2384, 4585, 2499, 4200, 2388, 691,
	2390, 2391, 2737, 2738, 2739, 2351, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 4129, 4025,
	1671, 1674, 1675, 1676, 1677, 1678, 1679, 3935, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 4202, 1659, 1660, 1661, 1641, 1640, 1672, 1642, 1645,
	1639, 1643, 1638, 3149, 4586, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 4439, 3934, 1469, 1470, 1468, 3122,
	3124, 3123, 500, 1486, 1485, 1495, 1496, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1487, 1471, 3933, 1497, 2118, 3524,
	3522, 2121, 2122, 2123, 4579, 2125, 2126, 4436, 3672, 2127,
	3523, 3932, 3926, 2128, 3748, 3696, 2129, 1469, 1470, 1468,
	2130, 2131, 3695, 2132, 2133, 4409, 2252, 2254, 2255, 503,
	4060, 3481, 1558, 4438, 2253, 3422, 1471, 2241, 514, 526,
	527, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 3421, 3420, 1497, 3419, 3361, 3146, 3122,
	3124, 3123, 2242, 2540, 3313, 2243, 4435, 1427, 1428, 2939,
	1427, 1428, 2937, 1388, 2924, 2219, 509, 1303, 516, 512,
	2564, 4061, 521, 522, 1302, 2221, 1469, 1470, 1468, 1421,
	4562, 2550, 1421, 4556, 4354, 4485, 2774, 3386, 3385, 4477,
	1469, 1470, 1468, 2572, 1673, 1471, 4367, 4277, 4348, 4347,
	523, 2220, 4294, 4293, 2215, 1429, 3143, 1662, 1429, 1471,
	4287, 1407, 1381, 4286, 2217, 4395, 2086, 4066, 3957, 1301,
	3607, 1380, 3460, 1418, 1420, 2980, 1418, 1420, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 2549,
	2216, 1497, 1469, 1470, 1468, 2979, 2559, 2544, 691, 670,
	3210, 2218, 2545, 2555, 2543, 2294, 2087, 2080, 2703, 2704,
	2705, 1471, 3670, 518, 2551, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 1414, 3528, 1497, 1741, 163, 1740, 1712,
	1710, 1298, 519, 556, 4394, 4391, 4324, 2696, 4320, 4304,
	2214, 4239, 487, 4233, 1275, 511, 2702, 4131, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	2940, 2741, 1497, 3122, 3124, 3123, 1274, 4130, 4056, 4055,
	4036, 3981, 1754, 3945, 2260, 3122, 3124, 3123, 3526, 1469,
	1470, 1468, 1451, 1451, 3942, 2681, 3909, 3878, 2615, 3877,
	3842, 2563, 3801, 3800, 2579, 3747, 3746, 2571, 1471, 3745,
	3744, 163, 2211, 510, 524, 1419, 3735, 3734, 1419, 3733,
	525, 3694, 2213, 4290, 2085, 2697, 3691, 2586, 3669, 2578,
	2589, 2265, 3664, 3658, 2630, 3656, 1309, 3652, 3651, 3122,
	3124, 3123, 1481, 3650, 1484, 3525, 3514, 3505, 2212, 3503,
	3499, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 3498, 1482,
	1483, 1480, 2611, 3497, 2608, 2735, 2736, 3425, 3418, 501,
	1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1487, 3417, 3416, 1497, 3344, 2701, 2690, 1495, 1496,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 2210, 2268,
	1497, 3158, 3157, 163, 3155, 3027, 517, 504, 505, 2935,
	531, 2842, 1524, 1523, 506, 508, 1522, 502, 530, 529,
	2437, 2609, 674, 163, 2570, 2542, 2090, 670, 564, 2764,
	670, 2716, 691, 4096, 691, 691, 2727, 3593, 2725, 2726,
	691, 3544, 4449, 3678, 4379, 3544, 691, 3964, 691, 487,
	3678, 4310, 2746, 3678, 4211, 3678, 4045, 3544, 4044, 3956,
	674, 3544, 4039, 3821, 1754, 520, 3978, 691, 2617, 3544,
	3949, 2742, 3137, 691, 2613, 691, 3544, 3817, 3902, 1454,
	2035, 3760, 1074, 1734, 2750, 2035, 3759, 3678, 3677, 2825,
	1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1487, 3544, 3543, 1497, 3354, 3353, 2417, 636, 3350,
	3351, 3350, 3349, 1752, 1486, 1485, 1495, 1496, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 2716, 691, 1497, 2584,
	2583, 2317, 2566, 2269, 2317, 691, 2198, 691, 2417, 2782,
	1344, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 1629, 1628, 1497, 3244, 3901, 2978, 3609,
	3245, 2756, 3628, 102, 2978, 3363, 2418, 3347, 2420, 2826,
	3346, 3345, 2234, 2828, 592, 2035, 2984, 89, 2827, 4529,
	3628, 1349, 2944, 2519, 2317, 4240, 2886, 2784, 2889, 2890,
	2891, 2894, 4110, 1348, 2852, 2829, 1307, 2418, 2830, 2035,
	1306, 2536, 3855, 1307, 3137, 3544, 2882, 2198, 1699, 3364,
	3352, 3156, 2198, 2971, 3005, 2424, 1615, 2831, 2198, 2834,
	2716, 2793, 2791, 1721, 3628, 2039, 2233, 2518, 3592, 2844,
	2790, 2716, 2600, 2092, 2541, 2535, 2235, 1375, 2798, 2800,
	3820, 2972, 1309, 2137, 2101, 2806, 2807, 2808, 2809, 2035,
	1732, 1730, 1609, 1378, 89, 4341, 2166, 2695, 2163, 3019,
	4212, 4076, 3960, 3697, 3686, 3683, 2461, 2488, 2463, 2936,
	3131, 2927, 2929, 3015, 3014, 2484, 2930, 2931, 674, 2932,
	2933, 674, 2938, 2751, 2752, 2753, 2754, 2755, 2982, 2879,
	1313, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 2686, 2687, 1497, 2961, 2513, 2479, 2478,
	1702, 2780, 1294, 2502, 3749, 2554, 1207, 1206, 4564, 3144,
	4563, 4542, 3147, 4540, 4531, 3150, 4530, 4506, 2976, 4499,
	4493, 4491, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 2981, 670, 1497, 4441, 4440, 3812,
	3808, 3609, 3362, 2975, 2974, 2958, 2941, 3133, 2689, 3041,
	1754, 2991, 2260, 3037, 3048, 3139, 3140, 3141, 3113, 3135,
	2995, 3121, 2683, 2111, 3035, 3047, 3054, 3070, 3057, 1737,
	1350, 3151, 1310, 1458, 1459, 3167, 3013, 3068, 2693, 533,
	2193, 2190, 2998, 1458, 1459, 2192, 2191, 2188, 3018, 2692,
	3004, 2691, 2189, 2187, 3030, 2186, 3161, 4329, 4243, 2265,
	3217, 3160, 2724, 4078, 1461, 1456, 4296, 163, 2732, 1463,
	1462, 3819, 1460, 2731, 1461, 4015, 1159, 3793, 3769, 1463,
	1462, 3681, 1460, 3450, 3241, 3246, 3449, 3343, 3342, 670,
	3341, 2895, 2885, 4102, 4105, 4238, 1410, 43, 3194, 4237,
	4, 3196, 108, 3996, 3994, 3240, 535, 536, 4297, 4051,
	2585, 4050, 3948, 555, 2562, 2561, 2084, 3929, 3930, 3251,
	3062, 3061, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 3138, 3249, 1497, 3426, 3167, 3162,
	3207, 43, 1446, 4372, 3785, 106, 3152, 3646, 3154, 3461,
	3315, 2616, 4522, 1447, 1625, 1292, 1276, 1273, 3165, 487,
	1272, 1213, 3967, 3164, 3966, 1388, 1159, 163, 3311, 3168,
	3169, 2237, 2238, 1405, 3242, 3324, 3847, 634, 634, 3742,
	3130, 3740, 634, 3132, 3195, 3391, 3743, 4241, 3741, 163,
	1269, 1270, 163, 2507, 1736, 4206, 3952, 634, 634, 3699,
	3685, 3319, 2943, 163, 2160, 1377, 2086, 487, 487, 487,
	487, 2085, 1268, 3299, 2307, 2308, 3294, 1442, 1443, 3121,
	1440, 1441, 163, 163, 163, 163, 163, 1356, 163, 696,
	1434, 1435, 592, 3253, 3380, 3255, 3256, 4413, 3314, 3323,
	2730, 4412, 4411, 3906, 163, 163, 674, 2605, 2729, 634,
	1246, 685, 2852, 4326, 4325, 163, 4235, 3254, 4123, 3365,
	4106, 4069, 4014, 3828, 3262, 686, 102, 3827, 3566, 3358,
	3293, 3309, 3261, 2978, 3303, 3304, 3305, 3209, 3306, 3307,
	4368, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233,
	3234, 3235, 3302, 3413, 2498, 4544, 4543, 3392, 1159, 2947,
	2948, 2949, 4543, 3443, 3218, 3219, 3220, 3221, 3222, 3003,
	3001, 634, 634, 634, 3000, 2792, 1159, 2771, 2768, 2734,
	2590, 2063, 1466, 1205, 1204, 3393, 4544, 4119, 3340, 3382,
	2231, 678, 3321, 4429, 3322, 682, 681, 4158, 65, 3243,
	674, 104, 1606, 1606, 4160, 23, 68, 634, 4159, 22,
	4161, 24, 634, 634, 4162, 25, 4156, 18, 4155, 17,
	3360, 4154, 16, 4157, 19, 4153, 15, 4147, 11, 4295,
	3438, 4182, 39, 163, 163, 4180, 37, 1, 163, 4228,
	1159, 4179, 36, 4183, 40, 3348, 3532, 4178, 32, 4177,
	31, 3399, 163, 634, 3397, 163, 163, 163, 163, 3475,
	4176, 30, 3438, 3400, 4173, 27, 672, 163, 4172, 26,
	4152, 14, 4149, 13, 50, 163, 2580, 3415, 2119, 163,
	591, 3445, 3446, 3447, 4148, 12, 3439, 3720, 3452, 3453,
	3719, 3455, 3035, 3726, 2630, 3423, 3424, 3504, 3430, 3370,
	3121, 4146, 10, 3542, 3564, 3473, 3440, 3373, 3478, 2959,
	3472, 3559, 3402, 3591, 4223, 2882, 3407, 1699, 4090, 3736,
	3411, 3412, 1719, 3414, 3918, 1183, 2517, 3598, 1299, 163,
	4236, 4101, 3398, 4103, 3703, 3451, 487, 3702, 2952, 3492,
	2951, 3494, 1293, 2567, 2099, 3038, 3039, 2531, 3464, 3028,
	3466, 4121, 2604, 2142, 3510, 3511, 3512, 2591, 1357, 2439,
	2444, 3479, 3617, 3482, 3530, 3484, 3486, 3488, 3490, 3866,
	3637, 4023, 1159, 3636, 1159, 3635, 2845, 1159, 1147, 117,
	108, 2546, 1225, 3613, 1159, 507, 2441, 2905, 2350, 1159,
	1159, 3251, 4104, 1296, 2166, 3567, 2163, 2904, 163, 3545,
	163, 2922, 2457, 1383, 3874, 2903, 2902, 3249, 4208, 3611,
	2906, 1634, 1632, 1633, 1631, 3612, 3676, 1486, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 1636,
	1422, 1497, 1635, 513, 3576, 3577, 3578, 1617, 3579, 4281,
	3606, 3493, 1467, 739, 3582, 135, 3584, 3071, 1558, 1558,
	1558, 1563, 1563, 1563, 1566, 1567, 1568, 1569, 1563, 1563,
	1563, 3580, 644, 645, 163, 163, 163, 3690, 3495, 3496,
	3610, 124, 133, 3633, 515, 3502, 1505, 3657, 2728, 2835,
	3121, 1072, 1073, 3513, 1065, 4371, 2719, 4115, 3527, 3529,
	3997, 4107, 1159, 4270, 1452, 690, 692, 3999, 3826, 3565,
	2781, 1553, 3615, 3570, 3571, 3572, 3573, 3574, 2341, 3629,
	3630, 3631, 3632, 3627, 709, 656, 3642, 3643, 3644, 3623,
	3634, 3845, 4001, 2251, 723, 722, 721, 718, 719, 2376,
	3626, 3715, 3716, 3717, 3660, 3661, 3662, 4252, 3659, 2240,
	3237, 3236, 3665, 700, 3682, 3674, 3564, 3239, 1479, 3355,
	3701, 1355, 698, 3679, 3680, 1426, 1425, 1424, 1423, 1417,
	667, 2410, 2989, 1395, 3601, 1393, 1392, 3750, 1738, 1605,
	2688, 2684, 666, 671, 3752, 46, 2733, 1244, 1457, 1557,
	1559, 1560, 3599, 4008, 3700, 111, 680, 163, 679, 3753,
	3693, 688, 3308, 163, 163, 634, 634, 634, 1564, 1565,
	163, 29, 3765, 3766, 1597, 1598, 1599, 21, 20, 1201,
	2621, 2641, 1181, 48, 3718, 3714, 3754, 54, 53, 51,
	52, 3756, 2946, 2509, 4280, 4467, 1279, 4484, 4516, 3438,
	38, 35, 34, 33, 4174, 4168, 4167, 4170, 4169, 4166,
	3767, 4171, 4165, 4164, 4163, 4181, 3751, 4151, 3648, 3649,
	4150, 4451, 4450, 5, 3438, 3655, 98, 95, 41, 3784,
	119, 1143, 2, 3663, 0, 0, 0, 0, 0, 3671,
	3673, 0, 0, 0, 0, 3041, 0, 3761, 0, 3037,
	3048, 0, 3823, 3768, 0, 0, 3773, 3814, 3816, 3790,
	0, 3047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3782, 3590, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3794, 3791, 3167, 0, 0, 0, 0,
	0, 0, 0, 3564, 3564, 3815, 3755, 0, 0, 0,
	0, 3603, 0, 3758, 3121, 3852, 0, 0, 3617, 0,
	0, 0, 0, 670, 0, 0, 3857, 0, 0, 0,
	0, 3829, 3831, 0, 0, 0, 108, 0, 3868, 107,
	0, 0, 0, 0, 0, 0, 3811, 0, 0, 0,
	0, 3809, 3849, 0, 0, 0, 0, 0, 0, 0,
	0, 3251, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 0, 0, 1497, 3249, 0, 0,
	0, 0, 0, 0, 0, 0, 3898, 1486, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 1145,
	0, 1497, 0, 0, 0, 3851, 0, 0, 3602, 0,
	0, 0, 0, 0, 0, 0, 3905, 108, 0, 0,
	3904, 3865, 3872, 0, 3848, 0, 3875, 3859, 0, 3121,
	0, 0, 0, 0, 0, 3896, 0, 0, 3899, 664,
	3860, 0, 0, 3856, 0, 0, 0, 0, 0, 0,
	0, 0, 3299, 0, 0, 3903, 0, 0, 3121, 1486,
	1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1487, 3299, 0, 1497, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 3882, 3892, 3893, 3891,
	3881, 0, 0, 0, 0, 0, 0, 0, 0, 3976,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 3908,
	3894, 3895, 3907, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3921, 3917, 0, 0, 3931, 0,
	0, 0, 0, 3936, 0, 0, 1159, 0, 0, 3205,
	0, 0, 3954, 3939, 163, 0, 163, 0, 3950, 3953,
	1159, 3947, 0, 3852, 4019, 1159, 0, 0, 0, 0,
	3969, 0, 3970, 3861, 3862, 3863, 3864, 0, 0, 0,
	4027, 4028, 108, 3985, 674, 4018, 0, 0, 1159, 3968,
	0, 1159, 0, 0, 3958, 3959, 3204, 0, 0, 0,
	0, 0, 0, 3170, 0, 0, 0, 3961, 3962, 0,
	0, 0, 0, 0, 3983, 0, 0, 3971, 0, 3973,
	0, 3975, 4016, 0, 0, 0, 0, 0, 0, 0,
	0, 4046, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 0, 4047, 1497, 4049, 0, 0,
	163, 163, 4020, 4033, 4017, 4013, 1159, 4022, 0, 163,
	4031, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1487, 4034, 0, 1497, 3121, 0, 0, 0,
	0, 0, 0, 1159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3203, 0, 0, 0, 4054,
	0, 0, 0, 0, 0, 0, 0, 4087, 1486, 1485,
	1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487,
	0, 0, 1497, 0, 0, 0, 0, 0, 4074, 0,
	3617, 0, 0, 0, 4122, 0, 0, 0, 0, 0,
	4127, 0, 0, 0, 3299, 4071, 4097, 0, 108, 4073,
	0, 4120, 4075, 0, 4077, 4085, 0, 4072, 1145, 0,
	1145, 4084, 0, 0, 0, 4088, 0, 4086, 4140, 0,
	3121, 4000, 4003, 0, 0, 0, 108, 0, 0, 4138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4125,
	0, 0, 0, 0, 0, 4118, 0, 0, 1145, 0,
	4083, 1534, 0, 0, 0, 0, 4220, 1486, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 0,
	2765, 1497, 0, 0, 0, 0, 0, 0, 3814, 1486,
	1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1487, 0, 4199, 1497, 4213, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 0, 0, 0, 0, 0, 0, 0, 0,
	3299, 0, 3251, 0, 163, 4269, 3815, 4273, 4216, 163,
	4225, 4219, 163, 163, 163, 0, 4221, 4234, 3249, 4227,
	4256, 0, 4242, 3148, 0, 0, 0, 0, 0, 4262,
	0, 0, 0, 4259, 0, 0, 0, 4255, 2884, 0,
	0, 1145, 4265, 1145, 2893, 2893, 4033, 4258, 4217, 1145,
	4264, 0, 1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1487, 0, 0, 1497, 0, 0, 0,
	0, 0, 4285, 0, 0, 0, 4291, 0, 0, 0,
	0, 0, 4300, 4322, 0, 4308, 0, 4314, 0, 0,
	0, 0, 3217, 0, 0, 1159, 0, 163, 1534, 4316,
	0, 3814, 0, 0, 0, 1159, 1159, 0, 0, 0,
	0, 634, 4318, 0, 0, 0, 4330, 0, 0, 0,
	4309, 4305, 0, 0, 0, 0, 0, 0, 163, 634,
	1159, 4336, 4319, 4327, 487, 0, 3299, 4346, 0, 3815,
	0, 4328, 4312, 4317, 0, 0, 0, 634, 4352, 1486,
	1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1487, 0, 4381, 1497, 0, 0, 0, 592, 4370, 4378,
	0, 1159, 4345, 0, 4393, 634, 4358, 1159, 0, 4349,
	0, 0, 4382, 634, 4380, 0, 0, 0, 4392, 4399,
	0, 0, 0, 0, 4003, 0, 0, 0, 0, 0,
	0, 0, 1145, 0, 4384, 1145, 1159, 1159, 0, 4385,
	0, 1145, 1145, 1145, 1145, 0, 1145, 1145, 0, 4417,
	1145, 1145, 4352, 4383, 4417, 4400, 4404, 0, 4417, 4427,
	4398, 0, 0, 1145, 3564, 4408, 0, 0, 4410, 0,
	0, 4433, 0, 4401, 4415, 4419, 4420, 4421, 0, 0,
	4424, 4448, 0, 4430, 0, 3251, 0, 1145, 4437, 4444,
	1145, 4434, 4414, 1145, 0, 4446, 0, 4442, 4274, 4278,
	0, 3249, 3120, 4428, 4464, 0, 0, 4292, 2430, 4475,
	0, 108, 4456, 0, 4466, 4455, 0, 0, 1159, 592,
	4460, 4487, 4454, 4462, 4486, 4453, 1159, 1159, 1159, 0,
	4490, 4452, 0, 0, 0, 0, 0, 0, 1145, 0,
	0, 0, 1145, 4492, 1145, 3145, 4494, 4507, 1145, 4510,
	4417, 163, 4417, 0, 2718, 0, 4519, 163, 0, 1145,
	1145, 1145, 1145, 1159, 1145, 0, 0, 4417, 4417, 4417,
	0, 4508, 4417, 0, 1486, 1485, 1495, 1496, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1487, 0, 0, 1497, 0,
	4539, 4353, 1145, 4541, 1145, 4526, 1145, 0, 0, 0,
	4417, 0, 4417, 4552, 4554, 1486, 1485, 1495, 1496, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1487, 0, 0, 1497,
	0, 0, 1159, 4566, 0, 0, 1145, 4572, 0, 4549,
	0, 0, 1145, 0, 4417, 0, 0, 0, 0, 0,
	1145, 0, 0, 0, 0, 0, 0, 0, 4417, 0,
	0, 163, 0, 0, 0, 0, 1145, 0, 0, 1145,
	0, 0, 0, 0, 4417, 4577, 1159, 0, 0, 1145,
	0, 0, 0, 0, 0, 1145, 0, 4417, 4422, 0,
	0, 0, 0, 4417, 0, 0, 0, 0, 0, 0,
	0, 3142, 4589, 0, 0, 0, 0, 0, 0, 0,
	3120, 0, 487, 0, 0, 0, 0, 0, 2893, 2893,
	2893, 0, 2893, 2893, 0, 0, 2619, 2620, 487, 0,
	1486, 1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1487, 0, 163, 1497, 0, 0, 4482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2069,
	0, 0, 0, 0, 0, 0, 0, 2199, 2200, 2201,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	2747, 0, 0, 0, 0, 0, 0, 0, 1159, 1159,
	1159, 0, 0, 0, 0, 634, 0, 0, 0, 0,
	0, 0, 163, 634, 0, 0, 0, 1159, 1159, 1486,
	1485, 1495, 1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494,
	1487, 0, 0, 1497, 0, 634, 0, 1159, 0, 634,
	0, 0, 0, 634, 634, 0, 634, 0, 0, 0,
	0, 0, 4553, 0, 0, 0, 0, 163, 163, 4558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 487,
	2893, 0, 0, 0, 0, 0, 0, 487, 487, 487,
	487, 1159, 0, 0, 1159, 487, 487, 1159, 487, 0,
	0, 0, 2318, 0, 0, 0, 0, 1159, 0, 1159,
	2322, 487, 487, 1159, 163, 487, 0, 0, 0, 0,
	1159, 0, 1159, 1159, 1159, 1159, 1159, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3120, 0, 2385, 2386, 0, 0, 0, 0, 0,
	2392, 2393, 2394, 2395, 0, 2228, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2408,
	0, 0, 71, 0, 1159, 0, 0, 0, 93, 0,
	1159, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 1159,
	0, 0, 0, 2266, 0, 0, 2275, 2276, 2277, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288,
	2289, 0, 0, 89, 0, 0, 0, 0, 0, 4191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4184, 0, 0, 4515, 4518, 4514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2326,
	0, 0, 0, 2334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1159, 0, 0, 0, 0, 1159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 3020, 0, 57, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3056, 0, 0,
	0, 0, 0, 0, 0, 0, 3067, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 1159, 0, 0,
	0, 0, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093,
	0, 0, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103,
	3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 1159, 3125,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 634,
	0, 0, 69, 70, 0, 4187, 634, 0, 0, 0,
	0, 0, 0, 0, 0, 4196, 4188, 4189, 4190, 4194,
	4195, 4192, 0, 4193, 0, 4197, 0, 0, 487, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1159, 4198, 4186,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 551,
	0, 0, 0, 1159, 0, 0, 0, 0, 3263, 3264,
	3265, 0, 3269, 3270, 3271, 3272, 3273, 0, 0, 3276,
	3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286,
	0, 3288, 3289, 3290, 3291, 3292, 0, 3295, 0, 0,
	0, 2556, 0, 0, 1081, 0, 0, 0, 0, 1150,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 163, 0, 0, 0, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3120,
	0, 487, 0, 0, 2893, 2893, 1159, 0, 0, 1159,
	2612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2698, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 2715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2560, 0,
	0, 2893, 2893, 0, 0, 1159, 0, 0, 3462, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 487, 1159, 487, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3500, 3501, 0, 0, 0, 0, 0,
	0, 0, 0, 2748, 0, 2749, 1159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2610, 0, 0, 0, 0, 0, 2757, 2758,
	2759, 0, 0, 0, 2763, 0, 2766, 0, 0, 2769,
	0, 0, 2772, 2773, 0, 0, 0, 2778, 2779, 0,
	0, 0, 0, 2785, 2786, 2787, 0, 0, 2788, 0,
	2789, 0, 0, 0, 0, 0, 0, 3120, 0, 0,
	0, 0, 0, 0, 2706, 2707, 0, 0, 2709, 2710,
	0, 0, 2712, 2713, 0, 0, 0, 0, 0, 0,
	2794, 2795, 2796, 2797, 0, 0, 2801, 2802, 2803, 2804,
	2805, 0, 0, 0, 0, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 0, 2822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 634, 2743, 2744, 2745, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 0,
	163, 3120, 0, 0, 0, 3645, 0, 3647, 0, 0,
	0, 0, 0, 3653, 3654, 0, 0, 0, 0, 0,
	0, 1159, 0, 0, 708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2775,
	2776, 2777, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 655, 0, 0, 0, 0, 0, 0, 1159,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 1083, 0, 0, 0, 158, 1151, 0, 0, 0,
	1159, 0, 0, 0, 584, 163, 578, 589, 571, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 490,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	3783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3136, 0,
	0, 0, 0, 0, 0, 0, 0, 2983, 0, 0,
	0, 0, 0, 1159, 0, 2987, 2988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1455, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3172,
	3173, 3174, 3175, 3176, 3177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 570, 569, 572, 0, 0, 0, 0,
	0, 0, 163, 577, 157, 1159, 0, 0, 0, 0,
	532, 0, 0, 0, 0, 157, 0, 0, 552, 0,
	0, 581, 0, 0, 1159, 0, 585, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 0, 0, 0,
	0, 588, 1159, 157, 0, 3873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 654, 697, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 573, 0, 0, 1159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 3171, 634, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3197,
	0, 3198, 3199, 0, 3200, 3201, 576, 0, 3202, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3211, 3212, 3213, 3214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	574, 575, 582, 2114, 586, 587, 590, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 0, 0, 0,
	0, 0, 0, 42, 45, 1081, 0, 0, 0, 0,
	1081, 1618, 0, 158, 0, 0, 0, 71, 0, 0,
	0, 0, 0, 93, 740, 0, 47, 75, 76, 0,
	0, 0, 0, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 4035, 0, 4037, 4038, 0, 0,
	0, 0, 0, 0, 63, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 655, 0, 1714, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3547, 3548,
	3549, 160, 0, 0, 0, 158, 0, 0, 0, 0,
	1714, 551, 0, 0, 1748, 0, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 160, 1155, 3568, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 3575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 3586, 3587, 3588, 3589, 0, 0, 0,
	160, 3594, 49, 90, 56, 55, 58, 0, 0, 80,
	0, 96, 3604, 3605, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	3614, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2098, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4215,
	0, 2120, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 3550, 3551, 3552, 3553,
	3554, 3555, 3556, 3557, 3558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 69, 70, 0,
	0, 0, 0, 0, 3569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 79, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 3595, 3596, 3597,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 0, 654, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2168, 0, 0, 0, 82,
	83, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 81, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 3684, 0, 2168, 0, 2168,
	0, 0, 2304, 0, 0, 0, 0, 0, 3692, 2305,
	0, 0, 0, 0, 2168, 2168, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 1083, 0, 0, 0, 0, 1083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2168, 0, 0, 1150, 0, 0,
	0, 0, 0, 0, 3837, 3838, 3839, 0, 3841, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 3850, 0, 3853, 3854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3858, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 0, 490,
	490, 490, 490, 3897, 0, 0, 0, 0, 0, 0,
	0, 3900, 85, 0, 158, 158, 158, 158, 158, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3833, 3834, 3835, 3836, 0, 0,
	0, 0, 3840, 0, 0, 0, 3843, 3844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1608, 0, 3979, 1082, 0, 0, 0, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4004, 4005, 4006, 4007, 0, 0, 0, 0,
	0, 0, 4011, 4012, 0, 158, 158, 0, 0, 0,
	655, 0, 2164, 0, 0, 0, 4021, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 158, 158, 158,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	4032, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 1715, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 157, 0, 0, 1715,
	552, 0, 0, 1749, 0, 0, 0, 1751, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 2262, 0, 0, 0, 157, 157, 157, 157,
	157, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3986, 3987, 3988, 0, 0, 2066, 2067,
	0, 0, 0, 0, 0, 4092, 4093, 4094, 4095, 2074,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4111, 0, 0,
	655, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4026, 0, 0, 4124, 0, 0, 0, 0,
	2345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4133, 0, 0, 0, 0, 0, 0, 0,
	0, 2565, 4043, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2577, 0, 0, 0, 0,
	2577, 0, 0, 0, 0, 0, 158, 158, 158, 0,
	0, 0, 0, 4218, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 2577, 4226, 0, 2577, 0, 0, 0,
	0, 2262, 4070, 0, 1151, 0, 0, 157, 157, 160,
	0, 0, 654, 0, 4246, 0, 0, 0, 0, 4257,
	4079, 0, 0, 0, 4260, 4261, 157, 0, 1749, 157,
	157, 157, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 0,
	0, 2700, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4126, 0, 0, 0, 0, 0, 2722, 0,
	0, 1081, 1081, 0, 0, 0, 0, 2168, 0, 158,
	0, 697, 0, 157, 0, 158, 158, 0, 0, 160,
	0, 0, 158, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4337, 0, 0,
	0, 4340, 0, 0, 160, 160, 160, 160, 160, 0,
	160, 0, 654, 0, 157, 2227, 2227, 2227, 0, 0,
	0, 2227, 0, 2227, 2227, 2227, 0, 2227, 2227, 0,
	0, 0, 1082, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 2227, 2227,
	2227, 0, 0, 2227, 2227, 2227, 2227, 2227, 0, 0,
	0, 0, 2227, 2227, 2227, 2227, 2227, 2227, 2227, 2227,
	2227, 2227, 2227, 2227, 0, 0, 0, 0, 157, 157,
	157, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	0, 4298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4443, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4488, 4489, 0, 0, 160, 0, 0, 160, 160, 160,
	160, 0, 0, 4500, 0, 0, 4502, 0, 0, 0,
	0, 0, 0, 0, 1749, 0, 0, 160, 0, 0,
	2942, 157, 0, 0, 738, 0, 0, 157, 157, 0,
	2950, 2954, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2973, 0, 0, 0, 0,
	0, 0, 4538, 0, 0, 0, 0, 0, 0, 0,
	158, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 4431, 2577, 0, 158, 0,
	0, 0, 2999, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4447, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2168, 2168, 0, 0, 0, 158, 0, 655, 0,
	0, 0, 160, 0, 0, 159, 1152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4503, 0, 0, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 488,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 160, 160, 0,
	0, 0, 2047, 3134, 0, 0, 0, 0, 0, 0,
	0, 3134, 3134, 3134, 0, 0, 0, 0, 0, 0,
	0, 0, 655, 158, 1155, 2168, 4555, 0, 0, 0,
	0, 655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1083, 1083,
	0, 0, 0, 0, 2262, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 3215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160,
	0, 0, 157, 0, 0, 160, 160, 0, 0, 0,
	0, 0, 160, 0, 1081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 2168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 158, 0, 0, 158, 0, 0, 0, 1083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3366, 3367, 3368, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3134, 3134, 654, 157, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 0, 0, 0, 159,
	0, 0, 3405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	1082, 1082, 0, 0, 0, 0, 1751, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3448, 0, 0, 2700,
	158, 0, 3454, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 2700, 159, 2700, 0, 0, 0, 3474, 0,
	0, 0, 0, 0, 0, 2700, 0, 2700, 3483, 2700,
	2700, 2700, 2700, 2227, 0, 0, 0, 0, 0, 2227,
	2227, 2227, 2227, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 2164, 3134,
	0, 0, 0, 0, 0, 3546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0,
	0, 0, 0, 0, 3562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 157, 0,
	0, 0, 0, 157, 0, 0, 157, 2832, 1751, 0,
	1082, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2262, 0, 0, 0, 1081, 0, 0, 2168,
	0, 0, 0, 158, 2700, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 2680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 1388, 160, 2637, 0, 0, 0, 0, 0,
	2661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2658,
	0, 3250, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3134, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2627, 2626, 2639, 2646, 2625, 2638, 2629, 0, 0, 2662,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	2668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2649, 2647, 2642,
	0, 0, 0, 2644, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 1751, 2660, 160, 2633, 2632, 0,
	0, 160, 0, 0, 160, 157, 0, 0, 0, 0,
	0, 157, 697, 0, 0, 2628, 0, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	158, 2634, 2635, 0, 1748, 2652, 0, 2643, 2645, 2648,
	2650, 0, 3818, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 2168, 490,
	490, 490, 490, 0, 0, 0, 0, 490, 490, 159,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 490, 490, 0, 158, 490, 2672, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 2679, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 2665, 0, 1081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 655, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3134, 0, 0, 3134, 0, 0, 157, 0, 0,
	0, 159, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1753, 0, 0, 0, 488,
	488, 488, 488, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 159, 159, 159, 159, 159, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 3250, 0, 0, 2164, 0, 0, 0,
	2654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3965, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2664,
	3972, 157, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 160,
	0, 2168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 2655, 2656, 2657, 2659, 0, 2663, 2666, 2667,
	2669, 2670, 2671, 2673, 2674, 2675, 2676, 2677, 2678, 0,
	0, 0, 0, 0, 0, 159, 159, 158, 0, 0,
	0, 0, 2165, 0, 0, 0, 0, 2651, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 159, 159, 159,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 158, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 490, 0, 0, 488, 0,
	0, 0, 2261, 0, 0, 0, 0, 0, 0, 0,
	0, 2653, 490, 0, 0, 160, 4109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2680, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3134, 160, 0, 0, 0,
	0, 0, 1388, 0, 2637, 0, 0, 0, 0, 0,
	2661, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2636, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2658,
	0, 0, 0, 0, 2168, 0, 0, 0, 0, 160,
	160, 0, 0, 0, 0, 0, 159, 159, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 3134, 0, 655, 0, 0,
	0, 2261, 0, 0, 1152, 0, 655, 158, 0, 157,
	0, 0, 0, 3250, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 2168, 0, 0, 0, 0,
	2627, 3432, 2639, 490, 3431, 2638, 2629, 0, 0, 2662,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2668, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 159, 159, 0, 4109, 0,
	0, 0, 159, 0, 0, 2660, 0, 2633, 2632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2628, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3433, 3434, 0, 0, 2652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 490, 0,
	490, 0, 0, 1749, 0, 0, 0, 0, 0, 0,
	2168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2672, 3134,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 2168, 0, 0,
	0, 93, 0, 2679, 47, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 2665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 2168, 0, 0, 0, 0, 0, 0, 654, 157,
	0, 0, 0, 0, 0, 1082, 89, 0, 0, 0,
	0, 0, 4191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4184, 0, 0, 0, 0, 4593, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 490,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	49, 90, 56, 55, 58, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 4185, 0, 0, 0, 2664,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2631, 62, 92, 91, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 2655, 2656, 2657, 2659, 159, 2663, 2666, 2667,
	2669, 2670, 2671, 2673, 2674, 2675, 2676, 2677, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3250, 69, 70, 2651, 4187, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 4196, 4188,
	4189, 4190, 4194, 4195, 4192, 0, 4193, 0, 4197, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 84, 0,
	0, 0, 93, 0, 0, 47, 0, 60, 0, 0,
	0, 0, 0, 159, 0, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	0, 2653, 0, 4191, 2261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4184, 0, 0, 0, 0, 4587,
	0, 4198, 4186, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 0, 655, 0, 0, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 42, 0,
	0, 0, 0, 89, 62, 92, 91, 3250, 0, 4191,
	0, 57, 71, 0, 0, 0, 1082, 0, 93, 0,
	0, 47, 0, 0, 0, 0, 0, 0, 0, 157,
	4184, 0, 0, 0, 0, 4581, 159, 0, 0, 0,
	0, 159, 0, 0, 159, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 4191,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 61, 0, 0, 69, 70, 87, 4187,
	4184, 0, 0, 655, 0, 4573, 0, 0, 0, 4196,
	4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0, 4197,
	0, 0, 0, 0, 78, 0, 79, 49, 90, 56,
	55, 58, 0, 0, 0, 0, 96, 0, 0, 159,
	85, 0, 4185, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	62, 92, 91, 0, 0, 0, 0, 57, 0, 0,
	159, 0, 0, 0, 0, 0, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 49, 90, 56,
	55, 58, 160, 0, 0, 0, 96, 0, 0, 0,
	0, 0, 4185, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	62, 92, 91, 0, 0, 0, 654, 57, 0, 0,
	0, 0, 4198, 4186, 0, 66, 67, 73, 0, 74,
	0, 0, 69, 70, 0, 4187, 0, 0, 2165, 0,
	0, 0, 0, 0, 0, 4196, 4188, 4189, 4190, 4194,
	4195, 4192, 0, 4193, 0, 4197, 0, 0, 0, 0,
	78, 0, 79, 0, 0, 0, 0, 0, 0, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 69, 70, 60, 4187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4196, 4188, 4189, 4190, 4194,
	4195, 4192, 0, 4193, 0, 4197, 0, 0, 0, 0,
	78, 4098, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 160, 0, 0,
	0, 0, 2261, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 159, 60, 654, 0, 0, 0, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 4198, 4186,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 59, 61, 47, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 4198, 4186,
	0, 66, 67, 73, 0, 74, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 159, 0, 0, 0, 89, 0, 0,
	0, 85, 0, 4191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4184, 0, 0, 0, 0, 4546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	488, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 1644, 0, 0, 0, 87, 159, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4185, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 85, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 0, 59,
	61, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	159, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 85, 0, 488,
	488, 488, 488, 0, 0, 0, 0, 488, 488, 0,
	488, 0, 0, 0, 0, 0, 69, 70, 0, 4187,
	0, 0, 0, 488, 488, 0, 159, 488, 0, 4196,
	4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0, 4197,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 1671,
	1674, 1675, 1676, 1677, 1678, 1679, 0, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	0, 1659, 1660, 1661, 1641, 1640, 1672, 1642, 1645, 1639,
	1643, 1638, 0, 0, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4198, 4186, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2165, 0, 0, 0,
	1671, 1674, 1675, 1676, 1677, 1678, 1679, 0, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 0, 1659, 1660, 1661, 1641, 1640, 1672, 1642, 1645,
	1639, 1643, 1638, 0, 0, 1646, 1647, 1648, 1649, 1650,
	1651, 1652, 1653, 1654, 1655, 1656, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 0, 0, 0, 0, 0, 0,
	0, 0, 445, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 2451,
	2455, 0, 172, 474, 190, 0, 313, 159, 493, 472,
	422, 338, 496, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 59, 61, 0, 0, 0, 0, 87,
	171, 0, 0, 0, 0, 494, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 1673, 0, 375, 283, 0, 0,
	488, 85, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	2454, 301, 191, 0, 0, 0, 2447, 0, 2448, 2450,
	2449, 310, 1160, 195, 0, 2445, 2453, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 1154, 391, 0,
	464, 492, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 159, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 491, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 488, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 488, 456, 488, 0,
	488, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 488,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 0, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 488, 0, 0, 0, 0, 0, 488, 897, 1039,
	0, 0, 445, 798, 1043, 884, 907, 1053, 913, 915,
	980, 859, 955, 356, 904, 860, 0, 0, 851, 702,
	852, 885, 259, 701, 1013, 958, 1041, 941, 973, 983,
	258, 244, 948, 947, 1030, 896, 895, 978, 1026, 1040,
	0, 0, 172, 474, 190, 806, 313, 159, 0, 472,
	422, 338, 0, 0, 939, 0, 790, 791, 924, 982,
	871, 969, 1045, 905, 974, 1046, 89, 0, 0, 0,
	0, 727, 553, 728, 730, 731, 732, 733, 0, 0,
	171, 729, 734, 735, 736, 0, 934, 979, 1058, 850,
	699, 716, 855, 805, 4277, 1031, 892, 893, 263, 0,
	0, 0, 0, 0, 0, 0, 937, 954, 998, 921,
	0, 465, 985, 994, 1008, 914, 375, 283, 0, 0,
	0, 0, 713, 714, 0, 0, 0, 488, 821, 0,
	715, 0, 865, 711, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 717, 0, 0, 0,
	870, 848, 890, 1000, 849, 847, 339, 862, 793, 1029,
	922, 301, 191, 1035, 920, 819, 988, 866, 1017, 1051,
	908, 310, 864, 195, 861, 867, 906, 352, 997, 1003,
	803, 198, 312, 1014, 886, 899, 724, 0, 391, 975,
	464, 705, 278, 961, 390, 314, 457, 989, 1037, 463,
	909, 439, 473, 478, 271, 942, 234, 419, 261, 254,
	891, 1007, 854, 284, 374, 249, 306, 925, 981, 887,
	241, 992, 968, 1019, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 1015, 1002, 1021, 882, 868,
	874, 869, 898, 1038, 293, 285, 1022, 1020, 900, 360,
	224, 952, 945, 938, 807, 467, 1054, 257, 1004, 469,
	180, 405, 404, 912, 292, 1005, 181, 170, 384, 182,
	302, 204, 1025, 482, 220, 308, 447, 704, 277, 351,
	977, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 1001, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 1044, 321, 266, 270, 286, 297, 976,
	388, 426, 470, 970, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 999, 216,
	237, 427, 210, 1033, 1016, 963, 927, 933, 856, 0,
	209, 928, 929, 930, 931, 932, 995, 889, 901, 881,
	971, 880, 281, 987, 725, 726, 246, 796, 1048, 211,
	863, 1047, 348, 355, 347, 1050, 1049, 456, 1034, 964,
	951, 949, 857, 1032, 962, 950, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 953, 424, 319,
	0, 206, 0, 423, 1042, 1060, 436, 226, 875, 1009,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 991, 1057, 359, 392, 233, 466, 420,
	262, 873, 1061, 820, 808, 809, 812, 956, 957, 810,
	813, 814, 822, 794, 795, 797, 799, 800, 801, 944,
	1036, 858, 804, 1012, 815, 816, 817, 818, 984, 1055,
	792, 242, 741, 834, 835, 836, 742, 837, 838, 743,
	744, 839, 840, 841, 842, 745, 843, 844, 845, 823,
	824, 825, 826, 827, 828, 829, 830, 833, 831, 832,
	0, 940, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 802, 199, 212, 311, 1056, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	1010, 967, 0, 917, 919, 918, 877, 879, 878, 876,
	1059, 345, 1028, 846, 853, 872, 883, 888, 894, 902,
	903, 911, 916, 926, 935, 936, 946, 959, 960, 966,
	990, 993, 1006, 1011, 1018, 1023, 1024, 468, 252, 943,
	965, 996, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 923, 196, 0, 0, 202,
	0, 203, 205, 910, 201, 1027, 1052, 972, 986, 897,
	1039, 0, 0, 445, 798, 1043, 884, 907, 1053, 913,
	915, 980, 859, 955, 356, 904, 860, 0, 0, 851,
	702, 852, 885, 259, 701, 1013, 958, 1041, 941, 973,
	983, 258, 244, 948, 947, 1030, 896, 895, 978, 1026,
	1040, 0, 0, 172, 474, 190, 806, 313, 0, 0,
	472, 422, 338, 0, 0, 939, 0, 790, 791, 924,
	982, 871, 969, 1045, 905, 974, 1046, 89, 0, 691,
	0, 0, 727, 553, 728, 730, 731, 732, 733, 0,
	0, 171, 729, 734, 735, 736, 0, 934, 979, 1058,
	850, 699, 716, 855, 805, 0, 1031, 892, 893, 263,
	0, 0, 0, 0, 0, 0, 0, 937, 954, 998,
	921, 0, 465, 985, 994, 1008, 914, 375, 283, 0,
	0, 0, 0, 713, 714, 0, 0, 0, 0, 821,
	0, 715, 0, 865, 711, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 717, 0, 0,
	0, 870, 848, 890, 1000, 849, 847, 339, 862, 793,
	1029, 922, 301, 191, 1035, 920, 819, 988, 866, 1017,
	1051, 908, 310, 864, 195, 861, 867, 906, 352, 997,
	1003, 803, 198, 312, 1014, 886, 899, 724, 0, 391,
	975, 464, 705, 278, 961, 390, 314, 457, 989, 1037,
	463, 909, 439, 473, 478, 271, 942, 234, 419, 261,
	254, 891, 1007, 854, 284, 374, 249, 306, 925, 981,
	887, 241, 992, 968, 1019, 418, 454, 200, 333, 455,
	477, 166, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 1015, 1002, 1021, 882,
	868, 874, 869, 898, 1038, 293, 285, 1022, 1020, 900,
	360, 224, 952, 945, 938, 807, 467, 1054, 257, 1004,
	469, 180, 405, 404, 912, 292, 1005, 181, 170, 384,
	182, 302, 204, 1025, 482, 220, 308, 447, 704, 277,
	351, 977, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1001, 381, 407, 452, 222, 425, 173, 176,
	185, 397, 186, 187, 1044, 321, 266, 270, 286, 297,
	976, 388, 426, 470, 970, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 999,
	216, 237, 427, 210, 1033, 1016, 963, 927, 933, 856,
	0, 209, 928, 929, 930, 931, 932, 995, 889, 901,
	881, 971, 880, 281, 987, 725, 726, 246, 796, 1048,
	211, 863, 1047, 348, 355, 347, 1050, 1049, 456, 1034,
	964, 951, 949, 857, 1032, 962, 950, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 953, 424,
	319, 0, 206, 0, 423, 1042, 1060, 436, 226, 875,
	1009, 451, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 991, 1057, 359, 392, 233, 466,
	420, 262, 873, 1061, 820, 808, 809, 812, 956, 957,
	810, 813, 814, 822, 794, 795, 797, 799, 800, 801,
	944, 1036, 858, 804, 1012, 815, 816, 817, 818, 984,
	1055, 792, 242, 741, 834, 835, 836, 742, 837, 838,
	743, 744, 839, 840, 841, 842, 745, 843, 844, 845,
	823, 824, 825, 826, 827, 828, 829, 830, 833, 831,
	832, 0, 940, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 802, 199, 212, 311, 1056,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 1010, 967, 0, 917, 919, 918, 877, 879, 878,
	876, 1059, 345, 1028, 846, 853, 872, 883, 888, 894,
	902, 903, 911, 916, 926, 935, 936, 946, 959, 960,
	966, 990, 993, 1006, 1011, 1018, 1023, 1024, 468, 252,
	943, 965, 996, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 923, 196, 0, 0,
	202, 0, 203, 205, 910, 201, 1027, 1052, 972, 986,
	897, 1039, 0, 0, 445, 798, 1043, 884, 907, 1053,
	913, 915, 980, 859, 955, 356, 904, 860, 0, 0,
	851, 702, 852, 885, 259, 701, 1013, 958, 1041, 941,
	973, 983, 258, 244, 948, 947, 1030, 896, 895, 978,
	1026, 1040, 0, 0, 172, 474, 190, 806, 313, 0,
	0, 472, 422, 338, 0, 0, 939, 0, 790, 791,
	924, 982, 871, 969, 1045, 905, 974, 1046, 89, 0,
	0, 0, 0, 727, 553, 728, 730, 731, 732, 733,
	0, 0, 171, 729, 734, 735, 736, 0, 934, 979,
	1058, 850, 699, 716, 855, 805, 0, 1031, 892, 893,
	263, 0, 0, 0, 0, 0, 0, 0, 937, 954,
	998, 921, 0, 465, 985, 994, 1008, 914, 375, 283,
	0, 0, 0, 0, 713, 714, 2225, 0, 0, 0,
	821, 0, 715, 0, 865, 711, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 717, 0,
	0, 0, 870, 848, 890, 1000, 849, 847, 339, 862,
	793, 1029, 922, 301, 191, 1035, 920, 819, 988, 866,
	1017, 1051, 908, 310, 864, 195, 861, 867, 906, 352,
	997, 1003, 803, 198, 312, 1014, 886, 899, 724, 0,
	391, 975, 464, 705, 278, 961, 390, 314, 457, 989,
	1037, 463, 909, 439, 473, 478, 271, 942, 234, 419,
	261, 254, 891, 1007, 854, 284, 374, 249, 306, 925,
	981, 887, 241, 992, 968, 1019, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 1015, 1002, 1021,
	882, 868, 874, 869, 898, 1038, 293, 285, 1022, 1020,
	900, 360, 224, 952, 945, 938, 807, 467, 1054, 257,
	1004, 469, 180, 405, 404, 912, 292, 1005, 181, 170,
	384, 182, 302, 204, 1025, 482, 220, 308, 447, 704,
	277, 351, 977, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 1001, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 1044, 321, 266, 270, 286,
	297, 976, 388, 426, 470, 970, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	999, 216, 237, 427, 210, 1033, 1016, 963, 927, 933,
	856, 0, 209, 928, 929, 930, 931, 932, 995, 889,
	901, 881, 971, 880, 281, 987, 725, 726, 246, 796,
	1048, 211, 863, 1047, 348, 355, 347, 1050, 1049, 456,
	1034, 964, 951, 949, 857, 1032, 962, 950, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 953,
	424, 319, 0, 206, 0, 423, 1042, 1060, 436, 226,
	875, 1009, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 991, 1057, 359, 392, 233,
	466, 420, 262, 873, 1061, 820, 808, 809, 812, 956,
	957, 810, 813, 814, 822, 794, 795, 797, 799, 800,
	801, 944, 1036, 858, 804, 1012, 815, 816, 817, 818,
	984, 1055, 792, 242, 741, 834, 835, 836, 742, 837,
	838, 743, 744, 839, 840, 841, 842, 745, 843, 844,
	845, 823, 824, 825, 826, 827, 828, 829, 830, 833,
	831, 832, 0, 940, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 802, 199, 212, 311,
	1056, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 1010, 967, 0, 917, 919, 918, 877, 879,
	878, 876, 1059, 345, 1028, 846, 853, 872, 883, 888,
	894, 902, 903, 911, 916, 926, 935, 936, 946, 959,
	960, 966, 990, 993, 1006, 1011, 1018, 1023, 1024, 468,
	252, 943, 965, 996, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 923, 196, 0,
	0, 202, 0, 203, 205, 910, 201, 1027, 1052, 972,
	986, 897, 1039, 0, 0, 445, 798, 1043, 884, 907,
	1053, 913, 915, 980, 859, 955, 356, 904, 860, 0,
	0, 851, 702, 852, 885, 259, 701, 1013, 958, 1041,
	941, 973, 983, 258, 244, 948, 947, 1030, 896, 895,
	978, 1026, 1040, 0, 0, 172, 474, 190, 806, 313,
	0, 0, 472, 422, 338, 0, 0, 939, 0, 790,
	791, 924, 982, 871, 969, 1045, 905, 974, 1046, 89,
	0, 0, 0, 0, 727, 553, 728, 730, 731, 732,
	733, 0, 0, 171, 729, 734, 735, 736, 0, 934,
	979, 1058, 850, 699, 716, 855, 805, 0, 1031, 892,
	893, 263, 0, 0, 0, 0, 0, 0, 0, 937,
	954, 998, 921, 0, 465, 985, 994, 1008, 914, 375,
	283, 0, 0, 0, 0, 713, 714, 695, 0, 0,
	0, 821, 0, 715, 0, 865, 711, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 717,
	0, 0, 0, 870, 848, 890, 1000, 849, 847, 339,
	862, 793, 1029, 922, 301, 191, 1035, 920, 819, 988,
	866, 1017, 1051, 908, 310, 864, 195, 861, 867, 906,
	352, 997, 1003, 803, 198, 312, 1014, 886, 899, 724,
	0, 391, 975, 464, 705, 278, 961, 390, 314, 457,
	989, 1037, 463, 909, 439, 473, 478, 271, 942, 234,
	419, 261, 254, 891, 1007, 854, 284, 374, 249, 306,
	925, 981, 887, 241, 992, 968, 1019, 418, 454, 200,
	333, 455, 477, 166, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 1015, 1002,
	1021, 882, 868, 874, 869, 898, 1038, 293, 285, 1022,
	1020, 900, 360, 224, 952, 945, 938, 807, 467, 1054,
	257, 1004, 469, 180, 405, 404, 912, 292, 1005, 181,
	170, 384, 182, 302, 204, 1025, 482, 220, 308, 447,
	704, 277, 351, 977, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1001, 381, 407, 452, 222, 425,
	173, 176, 185, 397, 186, 187, 1044, 321, 266, 270,
	286, 297, 976, 388, 426, 470, 970, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 999, 216, 237, 427, 210, 1033, 1016, 963, 927,
	933, 856, 0, 209, 928, 929, 930, 931, 932, 995,
	889, 901, 881, 971, 880, 281, 987, 725, 726, 246,
	796, 1048, 211, 863, 1047, 348, 355, 347, 1050, 1049,
	456, 1034, 964, 951, 949, 857, 1032, 962, 950, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	953, 424, 319, 0, 206, 0, 423, 1042, 1060, 436,
	226, 875, 1009, 451, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 991, 1057, 359, 392,
	233, 466, 420, 262, 873, 1061, 820, 808, 809, 812,
	956, 957, 810, 813, 814, 822, 794, 795, 797, 799,
	800, 801, 944, 1036, 858, 804, 1012, 815, 816, 817,
	818, 984, 1055, 792, 242, 741, 834, 835, 836, 742,
	837, 838, 743, 744, 839, 840, 841, 842, 745, 843,
	844, 845, 823, 824, 825, 826, 827, 828, 829, 830,
	833, 831, 832, 0, 940, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 802, 199, 212,
	311, 1056, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 1010, 967, 0, 917, 919, 918, 877,
	879, 878, 876, 1059, 345, 1028, 846, 853, 872, 883,
	888, 894, 902, 903, 911, 916, 926, 935, 936, 946,
	959, 960, 966, 990, 993, 1006, 1011, 1018, 1023, 1024,
	468, 252, 943, 965, 996, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 923, 196,
	0, 0, 202, 0, 203, 205, 910, 201, 1027, 1052,
	972, 986, 897, 1039, 0, 0, 445, 798, 1043, 884,
	907, 1053, 913, 915, 980, 859, 955, 356, 904, 860,
	0, 0, 851, 702, 852, 885, 259, 701, 1013, 958,
	1041, 941, 973, 983, 258, 244, 948, 947, 1030, 896,
	895, 978, 1026, 1040, 0, 0, 172, 474, 190, 806,
	313, 0, 0, 472, 422, 338, 0, 0, 939, 0,
	790, 791, 924, 982, 871, 969, 1045, 905, 2432, 1046,
	89, 0, 0, 0, 0, 2434, 553, 728, 730, 731,
	732, 733, 0, 0, 171, 729, 734, 735, 736, 2433,
	934, 979, 1058, 850, 699, 716, 855, 805, 0, 1031,
	892, 893, 263, 0, 0, 0, 0, 0, 0, 0,
	937, 954, 998, 921, 0, 465, 985, 994, 1008, 914,
	375, 283, 0, 0, 0, 0, 713, 714, 0, 0,
	0, 0, 821, 0, 715, 0, 865, 711, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	717, 0, 0, 0, 870, 848, 890, 1000, 849, 847,
	339, 862, 793, 1029, 922, 301, 191, 1035, 920, 819,
	988, 866, 1017, 1051, 908, 310, 864, 195, 861, 867,
	906, 352, 997, 1003, 803, 198, 312, 1014, 886, 899,
	724, 0, 391, 975, 464, 705, 278, 961, 390, 314,
	457, 989, 1037, 463, 909, 439, 473, 478, 271, 942,
	234, 419, 261, 254, 891, 1007, 854, 284, 374, 249,
	306, 925, 981, 887, 241, 992, 968, 1019, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 1015,
	1002, 1021, 882, 868, 874, 869, 898, 1038, 293, 285,
	1022, 1020, 900, 360, 224, 952, 945, 938, 807, 467,
	1054, 257, 1004, 469, 180, 405, 404, 912, 292, 1005,
	181, 170, 384, 182, 302, 204, 1025, 482, 220, 308,
	447, 704, 277, 351, 977, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 1001, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 1044, 321, 266,
	270, 286, 297, 976, 388, 426, 470, 970, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 999, 216, 237, 427, 210, 1033, 1016, 963,
	927, 933, 856, 0, 209, 928, 929, 930, 931, 932,
	995, 889, 901, 881, 971, 880, 281, 987, 725, 726,
	246, 796, 1048, 211, 863, 1047, 348, 355, 347, 1050,
	1049, 456, 1034, 964, 951, 949, 857, 1032, 962, 950,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 953, 424, 319, 0, 206, 0, 423, 1042, 1060,
	436, 226, 875, 1009, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 991, 1057, 359,
	392, 233, 466, 420, 262, 873, 1061, 820, 808, 809,
	812, 956, 957, 810, 813, 814, 822, 794, 795, 797,
	799, 800, 801, 944, 1036, 858, 804, 1012, 815, 816,
	817, 818, 984, 1055, 792, 242, 741, 834, 835, 836,
	742, 837, 838, 743, 744, 839, 840, 841, 842, 745,
	843, 844, 845, 823, 824, 825, 826, 827, 828, 829,
	830, 833, 831, 832, 0, 940, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 802, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 798, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 702, 852, 885, 259, 701, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	806, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 790, 791, 924, 982, 871, 969, 1045, 905, 974,
	1046, 89, 0, 0, 0, 0, 2332, 553, 728, 730,
	731, 732, 733, 0, 0, 171, 729, 734, 735, 736,
	0, 934, 979, 1058, 850, 699, 716, 855, 805, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 713, 714, 2225,
	0, 0, 0, 821, 0, 715, 0, 865, 711, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 717, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 793, 1029, 922, 301, 191, 1035, 920,
	819, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 803, 198, 312, 1014, 886,
	899, 724, 0, 391, 975, 464, 705, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 807,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 704, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 725,
	726, 246, 796, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 873, 1061, 820, 808,
	809, 812, 956, 957, 810, 813, 814, 822, 794, 795,
	797, 799, 800, 801, 944, 1036, 858, 804, 1012, 815,
	816, 817, 818, 984, 1055, 792, 242, 741, 834, 835,
	836, 742, 837, 838, 743, 744, 839, 840, 841, 842,
	745, 843, 844, 845, 823, 824, 825, 826, 827, 828,
	829, 830, 833, 831, 832, 0, 940, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 802,
	199, 212, 311, 1056, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 1010, 967, 0, 917, 919,
	918, 877, 879, 878, 876, 1059, 345, 1028, 846, 853,
	872, 883, 888, 894, 902, 903, 911, 916, 926, 935,
	936, 946, 959, 960, 966, 990, 993, 1006, 1011, 1018,
	1023, 1024, 468, 252, 943, 965, 996, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	923, 196, 0, 0, 202, 0, 203, 205, 910, 201,
	1027, 1052, 972, 986, 897, 1039, 0, 0, 445, 798,
	1043, 884, 907, 1053, 913, 915, 980, 859, 955, 356,
	904, 860, 0, 0, 851, 702, 852, 885, 259, 701,
	1013, 958, 1041, 941, 973, 983, 258, 244, 948, 947,
	1030, 896, 895, 978, 1026, 1040, 0, 0, 172, 474,
	190, 806, 313, 0, 0, 472, 422, 338, 0, 0,
	939, 0, 790, 791, 924, 982, 871, 969, 1045, 905,
	974, 1046, 89, 0, 0, 0, 0, 2329, 553, 728,
	730, 731, 732, 733, 0, 0, 171, 729, 734, 735,
	736, 0, 934, 979, 1058, 850, 699, 716, 855, 805,
	0, 1031, 892, 893, 263, 0, 0, 0, 0, 0,
	0, 0, 937, 954, 998, 921, 0, 465, 985, 994,
	1008, 914, 375, 283, 0, 0, 0, 0, 713, 714,
	2225, 0, 0, 0, 821, 0, 715, 0, 865, 711,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 717, 0, 0, 0, 870, 848, 890, 1000,
	849, 847, 339, 862, 793, 1029, 922, 301, 191, 1035,
	920, 819, 988, 866, 1017, 1051, 908, 310, 864, 195,
	861, 867, 906, 352, 997, 1003, 803, 198, 312, 1014,
	886, 899, 724, 0, 391, 975, 464, 705, 278, 961,
	390, 314, 457, 989, 1037, 463, 909, 439, 473, 478,
	271, 942, 234, 419, 261, 254, 891, 1007, 854, 284,
	374, 249, 306, 925, 981, 887, 241, 992, 968, 1019,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 1015, 1002, 1021, 882, 868, 874, 869, 898, 1038,
	293, 285, 1022, 1020, 900, 360, 224, 952, 945, 938,
	807, 467, 1054, 257, 1004, 469, 180, 405, 404, 912,
	292, 1005, 181, 170, 384, 182, 302, 204, 1025, 482,
	220, 308, 447, 704, 277, 351, 977, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 1001, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 1044,
	321, 266, 270, 286, 297, 976, 388, 426, 470, 970,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 999, 216, 237, 427, 210, 1033,
	1016, 963, 927, 933, 856, 0, 209, 928, 929, 930,
	931, 932, 995, 889, 901, 881, 971, 880, 281, 987,
	725, 726, 246, 796, 1048, 211, 863, 1047, 348, 355,
	347, 1050, 1049, 456, 1034, 964, 951, 949, 857, 1032,
	962, 950, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 953, 424, 319, 0, 206, 0, 423,
	1042, 1060, 436, 226, 875, 1009, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 991,
	1057, 359, 392, 233, 466, 420, 262, 873, 1061, 820,
	808, 809, 812, 956, 957, 810, 813, 814, 822, 794,
	795, 797, 799, 800, 801, 944, 1036, 858, 804, 1012,
	815, 816, 817, 818, 984, 1055, 792, 242, 741, 834,
	835, 836, 742, 837, 838, 743, 744, 839, 840, 841,
	842, 745, 843, 844, 845, 823, 824, 825, 826, 827,
	828, 829, 830, 833, 831, 832, 0, 940, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	802, 199, 212, 311, 1056, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 1010, 967, 0, 917,
	919, 918, 877, 879, 878, 876, 1059, 345, 1028, 846,
	853, 872, 883, 888, 894, 902, 903, 911, 916, 926,
	935, 936, 946, 959, 960, 966, 990, 993, 1006, 1011,
	1018, 1023, 1024, 468, 252, 943, 965, 996, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 923, 196, 0, 0, 202, 0, 203, 205, 910,
	201, 1027, 1052, 972, 986, 897, 1039, 0, 42, 445,
	798, 1043, 884, 907, 1053, 913, 915, 980, 859, 955,
	356, 904, 860, 0, 0, 851, 702, 852, 885, 259,
	701, 1013, 958, 1041, 941, 973, 983, 258, 244, 948,
	947, 1030, 896, 895, 978, 1026, 1040, 0, 0, 172,
	474, 190, 806, 313, 0, 0, 472, 422, 338, 0,
	0, 939, 0, 790, 791, 924, 982, 871, 969, 1045,
	905, 974, 1046, 89, 0, 0, 0, 0, 727, 553,
	728, 730, 731, 732, 733, 0, 0, 171, 729, 734,
	735, 736, 0, 934, 979, 1058, 850, 699, 716, 855,
	805, 0, 1031, 892, 893, 263, 0, 0, 0, 0,
	0, 0, 0, 937, 954, 998, 921, 0, 465, 985,
	994, 1008, 914, 375, 283, 0, 0, 0, 0, 713,
	714, 0, 0, 0, 0, 821, 0, 715, 0, 865,
	711, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 717, 0, 0, 0, 870, 848, 890,
	1000, 849, 847, 339, 862, 793, 1537, 922, 301, 191,
	1035, 920, 819, 988, 866, 1017, 1051, 908, 310, 864,
	195, 861, 867, 906, 352, 997, 1003, 803, 198, 312,
	1014, 886, 899, 724, 0, 391, 975, 464, 705, 278,
	961, 390, 314, 457, 989, 1037, 463, 909, 439, 473,
	478, 271, 942, 234, 419, 261, 254, 891, 1007, 854,
	284, 374, 249, 306, 925, 981, 887, 241, 992, 968,
	1019, 418, 454, 200, 333, 455, 477, 166, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 1015, 1002, 1021, 882, 868, 874, 869, 898,
	1038, 293, 285, 1022, 1020, 900, 360, 224, 952, 945,
	938, 807, 467, 1054, 257, 1004, 469, 180, 405, 404,
	912, 292, 1005, 181, 170, 384, 182, 302, 204, 1025,
	482, 220, 308, 447, 704, 277, 351, 977, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1001, 381,
	407, 452, 222, 425, 173, 176, 185, 397, 186, 187,
	1044, 321, 266, 270, 286, 297, 976, 388, 426, 470,
	970, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 999, 216, 237, 427, 210,
	1033, 1016, 963, 927, 933, 856, 0, 209, 928, 929,
	930, 931, 932, 995, 889, 901, 881, 971, 880, 281,
	987, 725, 726, 246, 796, 1048, 211, 863, 1047, 348,
	355, 347, 1050, 1049, 456, 1034, 964, 951, 949, 857,
	1032, 962, 950, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 953, 424, 319, 0, 206, 0,
	423, 1042, 1060, 436, 226, 875, 1009, 451, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	991, 1057, 359, 392, 233, 466, 420, 262, 873, 1061,
	820, 808, 809, 812, 956, 957, 810, 813, 814, 822,
	794, 795, 797, 799, 800, 801, 944, 1036, 858, 804,
	1012, 815, 816, 817, 818, 984, 1055, 792, 242, 741,
	834, 835, 836, 742, 837, 838, 743, 744, 839, 840,
	841, 842, 745, 843, 844, 845, 823, 824, 825, 826,
	827, 828, 829, 830, 833, 831, 832, 0, 940, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 802, 199, 212, 311, 1535, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 1010, 967, 0,
	917, 919, 918, 877, 879, 878, 876, 1059, 345, 1028,
	846, 853, 872, 883, 888, 894, 902, 903, 911, 916,
	926, 935, 936, 946, 959, 960, 966, 990, 993, 1006,
	1011, 1018, 1023, 1024, 468, 252, 943, 965, 996, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 923, 196, 0, 0, 202, 0, 203, 205,
	910, 201, 1027, 1052, 972, 986, 897, 1039, 0, 0,
	445, 798, 1043, 884, 907, 1053, 913, 915, 980, 859,
	955, 356, 904, 860, 0, 0, 851, 702, 852, 885,
	259, 701, 1013, 958, 1041, 941, 973, 983, 258, 244,
	948, 947, 1030, 896, 895, 978, 1026, 1040, 0, 0,
	172, 474, 190, 806, 313, 0, 0, 472, 422, 338,
	0, 0, 939, 0, 790, 791, 924, 982, 871, 969,
	1045, 905, 974, 1046, 89, 0, 2096, 0, 0, 727,
	553, 728, 730, 731, 732, 733, 0, 0, 171, 729,
	734, 735, 736, 0, 934, 979, 1058, 850, 699, 716,
	855, 805, 0, 1031, 892, 893, 263, 0, 0, 0,
	0, 0, 0, 0, 937, 954, 998, 921, 0, 465,
	985, 994, 1008, 914, 375, 283, 0, 0, 0, 0,
	713, 714, 0, 0, 0, 0, 821, 0, 715, 0,
	865, 711, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 717, 0, 0, 0, 870, 848,
	890, 1000, 849, 847, 339, 862, 793, 1029, 922, 301,
	191, 1035, 920, 819, 988, 866, 1017, 1051, 908, 310,
	864, 195, 861, 867, 906, 352, 997, 1003, 803, 198,
	312, 1014, 886, 899, 724, 0, 391, 975, 464, 705,
	278, 961, 390, 314, 457, 989, 1037, 463, 909, 439,
	473, 478, 271, 942, 234, 419, 261, 254, 891, 1007,
	854, 284, 374, 249, 306, 925, 981, 887, 241, 992,
	968, 1019, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 1015, 1002, 1021, 882, 868, 874, 869,
	898, 1038, 293, 285, 1022, 1020, 900, 360, 224, 952,
	945, 938, 807, 467, 1054, 257, 1004, 469, 180, 405,
	404, 912, 292, 1005, 181, 170, 384, 182, 302, 204,
	1025, 482, 220, 308, 447, 704, 277, 351, 977, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 1001,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 1044, 321, 266, 270, 286, 297, 976, 388, 426,
	470, 970, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 999, 216, 237, 427,
	210, 1033, 1016, 963, 927, 933, 856, 0, 209, 928,
	929, 930, 931, 932, 995, 889, 901, 881, 971, 880,
	281, 987, 725, 726, 246, 796, 1048, 211, 863, 1047,
	348, 355, 347, 1050, 1049, 456, 1034, 964, 951, 949,
	857, 1032, 962, 950, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 953, 424, 319, 0, 206,
	0, 423, 1042, 1060, 436, 226, 875, 1009, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 991, 1057, 359, 392, 233, 466, 420, 262, 873,
	1061, 820, 808, 809, 812, 956, 957, 810, 813, 814,
	822, 794, 795, 797, 799, 800, 801, 944, 1036, 858,
	804, 1012, 815, 816, 817, 818, 984, 1055, 792, 242,
	741, 834, 835, 836, 742, 837, 838, 743, 744, 839,
	840, 841, 842, 745, 843, 844, 845, 823, 824, 825,
	826, 827, 828, 829, 830, 833, 831, 832, 0, 940,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 802, 199, 212, 311, 1056, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 1010, 967,
	0, 917, 919, 918, 877, 879, 878, 876, 1059, 345,
	1028, 846, 853, 872, 883, 888, 894, 902, 903, 911,
	916, 926, 935, 936, 946, 959, 960, 966, 990, 993,
	1006, 1011, 1018, 1023, 1024, 468, 252, 943, 965, 996,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 923, 196, 0, 0, 202, 0, 203,
	205, 910, 201, 1027, 1052, 972, 986, 897, 1039, 0,
	0, 445, 798, 1043, 884, 907, 1053, 913, 915, 980,
	859, 955, 356, 904, 860, 0, 0, 851, 702, 852,
	885, 259, 701, 1013, 958, 1041, 941, 973, 983, 258,
	244, 948, 947, 1030, 896, 895, 978, 1026, 1040, 0,
	0, 172, 474, 190, 806, 313, 0, 0, 472, 422,
	338, 0, 0, 939, 0, 790, 791, 924, 982, 871,
	969, 1045, 905, 974, 1046, 89, 0, 0, 0, 0,
	727, 553, 728, 730, 731, 732, 733, 0, 0, 171,
	729, 734, 735, 736, 0, 934, 979, 1058, 850, 699,
	716, 855, 805, 0, 1031, 892, 893, 263, 0, 0,
	0, 0, 0, 0, 0, 937, 954, 998, 921, 0,
	465, 985, 994, 1008, 914, 375, 283, 0, 0, 0,
	0, 713, 714, 0, 0, 0, 0, 821, 0, 715,
	0, 865, 711, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 717, 0, 0, 0, 870,
	848, 890, 1000, 849, 847, 339, 862, 793, 1029, 922,
	301, 191, 1035, 920, 819, 988, 866, 1017, 1051, 908,
	310, 864, 195, 861, 867, 906, 352, 997, 1003, 803,
	198, 312, 1014, 886, 899, 724, 0, 391, 975, 464,
	705, 278, 961, 390, 314, 457, 989, 1037, 463, 909,
	439, 473, 478, 271, 942, 234, 419, 261, 254, 891,
	1007, 854, 284, 374, 249, 306, 925, 981, 887, 241,
	992, 968, 1019, 418, 454, 200, 333, 455, 477, 166,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 1015, 1002, 1021, 882, 868, 874,
	869, 898, 1038, 293, 285, 1022, 1020, 900, 360, 224,
	952, 945, 938, 807, 467, 1054, 257, 1004, 469, 180,
	405, 404, 912, 292, 1005, 181, 170, 384, 182, 302,
	204, 1025, 482, 220, 308, 447, 704, 277, 351, 977,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1001, 381, 407, 452, 222, 425, 173, 176, 185, 397,
	186, 187, 1044, 321, 266, 270, 286, 297, 976, 388,
	426, 470, 970, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 999, 216, 237,
	427, 210, 1033, 1016, 963, 927, 933, 856, 0, 209,
	928, 929, 930, 931, 932, 995, 889, 901, 881, 971,
	880, 281, 987, 725, 726, 246, 796, 1048, 211, 863,
	1047, 348, 355, 347, 1050, 1049, 456, 1034, 964, 951,
	949, 857, 1032, 962, 950, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 953, 424, 319, 0,
	206, 0, 423, 1042, 1060, 436, 226, 875, 1009, 451,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 991, 1057, 359, 392, 233, 466, 420, 262,
	873, 1061, 820, 808, 809, 812, 956, 957, 810, 813,
	814, 822, 794, 795, 797, 799, 800, 801, 944, 1036,
	858, 804, 1012, 815, 816, 817, 818, 984, 1055, 792,
	242, 741, 834, 835, 836, 742, 837, 838, 743, 744,
	839, 840, 841, 842, 745, 843, 844, 845, 823, 824,
	825, 826, 827, 828, 829, 830, 833, 831, 832, 0,
	940, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 802, 199, 212, 311, 1056, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 1010,
	967, 0, 917, 919, 918, 877, 879, 878, 876, 1059,
	345, 1028, 846, 853, 872, 883, 888, 894, 902, 903,
	911, 916, 926, 935, 936, 946, 959, 960, 966, 990,
	993, 1006, 1011, 1018, 1023, 1024, 468, 252, 943, 965,
	996, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 923, 196, 0, 0, 202, 0,
	203, 205, 910, 201, 1027, 1052, 972, 986, 897, 1039,
	0, 0, 445, 798, 1043, 884, 907, 1053, 913, 915,
	980, 859, 955, 356, 904, 860, 0, 0, 851, 1101,
	852, 885, 259, 1099, 1013, 958, 1041, 941, 973, 983,
	258, 244, 948, 947, 1030, 896, 895, 978, 1026, 1040,
	0, 0, 172, 474, 190, 806, 313, 0, 0, 472,
	422, 338, 0, 0, 939, 0, 790, 791, 924, 982,
	871, 969, 1045, 905, 974, 1046, 89, 0, 0, 0,
	0, 727, 553, 728, 730, 731, 732, 733, 0, 0,
	171, 729, 734, 735, 736, 0, 934, 979, 1058, 850,
	1118, 716, 855, 805, 0, 1031, 892, 893, 263, 0,
	0, 0, 0, 0, 0, 0, 937, 954, 998, 921,
	0, 465, 985, 994, 1008, 914, 375, 283, 0, 0,
	0, 0, 713, 714, 0, 0, 0, 0, 821, 0,
	715, 0, 865, 711, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 717, 0, 0, 0,
	870, 848, 890, 1000, 849, 847, 339, 862, 793, 1029,
	922, 301, 191, 1035, 920, 819, 988, 866, 1017, 1051,
	908, 310, 864, 195, 861, 867, 906, 352, 997, 1003,
	803, 198, 312, 1014, 886, 899, 724, 0, 391, 975,
	464, 705, 278, 961, 390, 314, 457, 989, 1037, 463,
	909, 439, 473, 478, 271, 942, 234, 419, 261, 254,
	891, 1007, 854, 284, 374, 249, 306, 925, 981, 887,
	241, 992, 968, 1019, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 1015, 1002, 1021, 882, 868,
	874, 869, 898, 1038, 293, 285, 1022, 1020, 900, 360,
	224, 952, 945, 938, 807, 467, 1054, 257, 1004, 469,
	180, 405, 404, 912, 292, 1005, 181, 170, 384, 182,
	302, 204, 1025, 482, 220, 308, 447, 704, 277, 351,
	977, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 1001, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 1044, 321, 266, 270, 286, 297, 976,
	388, 426, 470, 970, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 999, 216,
	237, 427, 210, 1033, 1016, 963, 927, 933, 856, 0,
	209, 928, 929, 930, 931, 932, 995, 889, 901, 881,
	971, 880, 281, 987, 725, 726, 246, 796, 1048, 211,
	863, 1047, 348, 355, 347, 1050, 1049, 456, 1034, 964,
	951, 949, 857, 1032, 962, 950, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 953, 424, 319,
	0, 206, 0, 423, 1042, 1060, 436, 226, 875, 1009,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 991, 1057, 359, 392, 233, 466, 420,
	262, 873, 1061, 820, 808, 809, 812, 956, 957, 810,
	813, 814, 822, 794, 795, 797, 799, 800, 801, 944,
	1036, 858, 804, 1012, 815, 816, 817, 818, 984, 1055,
	792, 242, 741, 834, 835, 836, 742, 837, 838, 743,
	744, 839, 840, 841, 842, 745, 843, 844, 845, 823,
	824, 825, 826, 827, 828, 829, 830, 833, 831, 832,
	0, 940, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 802, 199, 212, 311, 1056, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	1010, 967, 0, 917, 919, 918, 877, 879, 878, 876,
	1059, 345, 1028, 846, 853, 872, 883, 888, 894, 902,
	903, 911, 916, 926, 935, 936, 946, 959, 960, 966,
	990, 993, 1006, 1011, 1018, 1023, 1024, 468, 252, 943,
	965, 996, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 923, 196, 0, 0, 202,
	0, 203, 205, 910, 201, 1027, 1052, 972, 986, 897,
	1039, 0, 0, 445, 798, 1043, 884, 907, 1053, 913,
	915, 980, 859, 955, 356, 904, 860, 0, 0, 851,
	1101, 852, 885, 259, 1099, 1013, 958, 1041, 941, 973,
	983, 258, 244, 948, 947, 1030, 896, 895, 978, 1026,
	1040, 0, 0, 172, 474, 190, 806, 313, 0, 0,
	472, 422, 338, 0, 0, 939, 0, 790, 791, 924,
	982, 871, 969, 1045, 905, 974, 1046, 89, 0, 0,
	0, 0, 727, 553, 728, 730, 731, 732, 733, 0,
	0, 171, 729, 734, 735, 736, 0, 934, 979, 1058,
	850, 1118, 716, 855, 805, 0, 1031, 892, 893, 263,
	0, 0, 0, 0, 0, 0, 0, 937, 954, 998,
	921, 0, 465, 985, 994, 1008, 914, 375, 283, 0,
	0, 0, 0, 713, 714, 0, 0, 0, 0, 821,
	0, 715, 0, 865, 711, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 717, 0, 0,
	0, 870, 848, 890, 1000, 849, 847, 339, 862, 793,
	1029, 922, 301, 191, 1035, 920, 819, 988, 866, 1017,
	1051, 908, 310, 864, 195, 861, 867, 906, 352, 997,
	1003, 803, 198, 312, 1014, 886, 899, 724, 0, 391,
	975, 464, 705, 278, 4432, 390, 314, 457, 989, 1037,
	463, 909, 439, 473, 478, 271, 942, 234, 419, 261,
	254, 891, 1007, 854, 284, 374, 249, 306, 925, 981,
	887, 241, 992, 968, 1019, 418, 454, 200, 333, 455,
	477, 166, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 1015, 1002, 1021, 882,
	868, 874, 869, 898, 1038, 293, 285, 1022, 1020, 900,
	360, 224, 952, 945, 938, 807, 467, 1054, 257, 1004,
	469, 180, 405, 404, 912, 292, 1005, 181, 170, 384,
	182, 302, 204, 1025, 482, 220, 308, 447, 704, 277,
	351, 977, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1001, 381, 407, 452, 222, 425, 173, 176,
	185, 397, 186, 187, 1044, 321, 266, 270, 286, 297,
	976, 388, 426, 470, 970, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 999,
	216, 237, 427, 210, 1033, 1016, 963, 927, 933, 856,
	0, 209, 928, 929, 930, 931, 932, 995, 889, 901,
	881, 971, 880, 281, 987, 725, 726, 246, 796, 1048,
	211, 863, 1047, 348, 355, 347, 1050, 1049, 456, 1034,
	964, 951, 949, 857, 1032, 962, 950, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 953, 424,
	319, 0, 206, 0, 423, 1042, 1060, 436, 226, 875,
	1009, 451, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 991, 1057, 359, 392, 233, 466,
	420, 262, 873, 1061, 820, 808, 809, 812, 956, 957,
	810, 813, 814, 822, 794, 795, 797, 799, 800, 801,
	944, 1036, 858, 804, 1012, 815, 816, 817, 818, 984,
	1055, 792, 242, 741, 834, 835, 836, 742, 837, 838,
	743, 744, 839, 840, 841, 842, 745, 843, 844, 845,
	823, 824, 825, 826, 827, 828, 829, 830, 833, 831,
	832, 0, 940, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 802, 199, 212, 311, 1056,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 1010, 967, 0, 917, 919, 918, 877, 879, 878,
	876, 1059, 345, 1028, 846, 853, 872, 883, 888, 894,
	902, 903, 911, 916, 926, 935, 936, 946, 959, 960,
	966, 990, 993, 1006, 1011, 1018, 1023, 1024, 468, 252,
	943, 965, 996, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 923, 196, 0, 0,
	202, 0, 203, 205, 910, 201, 1027, 1052, 972, 986,
	897, 1039, 0, 0, 445, 798, 1043, 884, 907, 1053,
	913, 915, 980, 859, 955, 356, 904, 860, 0, 0,
	851, 1101, 852, 885, 259, 1099, 1013, 958, 1041, 941,
	973, 983, 258, 244, 948, 947, 1030, 896, 895, 978,
	1026, 1040, 0, 0, 172, 474, 190, 806, 313, 0,
	0, 472, 422, 338, 0, 0, 939, 0, 790, 791,
	924, 982, 871, 969, 1045, 905, 974, 1046, 89, 0,
	0, 0, 0, 727, 553, 728, 730, 731, 732, 733,
	0, 0, 171, 729, 734, 735, 736, 0, 934, 979,
	1058, 850, 1118, 716, 855, 805, 0, 1031, 892, 893,
	263, 0, 0, 0, 0, 0, 0, 0, 937, 954,
	998, 921, 0, 465, 985, 994, 1008, 914, 375, 283,
	0, 0, 0, 0, 713, 714, 0, 0, 0, 0,
	821, 0, 715, 0, 865, 711, 748, 749, 750, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 717, 0,
	0, 0, 870, 848, 890, 1000, 849, 847, 339, 862,
	793, 1029, 922, 301, 191, 1035, 920, 819, 988, 866,
	1017, 1051, 908, 310, 864, 195, 861, 867, 906, 352,
	997, 1003, 803, 198, 312, 1014, 886, 899, 724, 0,
	391, 975, 464, 705, 278, 961, 390, 314, 457, 989,
	1037, 463, 909, 439, 473, 478, 271, 942, 234, 419,
	261, 254, 891, 1007, 854, 284, 374, 249, 306, 925,
	981, 887, 241, 992, 968, 1019, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 1015, 1002, 1021,
	882, 868, 874, 869, 898, 1038, 293, 285, 1022, 1020,
	900, 360, 224, 952, 945, 938, 807, 467, 1054, 257,
	1004, 469, 180, 405, 404, 912, 292, 1005, 181, 170,
	384, 182, 302, 204, 1025, 482, 220, 308, 447, 704,
	277, 351, 977, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 1001, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 1044, 321, 266, 270, 286,
	297, 976, 388, 426, 470, 970, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	999, 216, 237, 427, 210, 1033, 1016, 963, 927, 933,
	856, 0, 209, 928, 929, 930, 931, 932, 995, 889,
	901, 881, 971, 880, 281, 987, 725, 726, 246, 796,
	1048, 211, 863, 1047, 348, 355, 347, 1050, 1049, 456,
	1034, 964, 951, 949, 857, 1032, 962, 950, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 953,
	424, 319, 0, 206, 0, 423, 1042, 1060, 436, 226,
	875, 1009, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 991, 1057, 359, 392, 233,
	466, 420, 262, 873, 1061, 820, 808, 809, 812, 956,
	957, 810, 813, 814, 822, 794, 795, 797, 799, 800,
	801, 2335, 2336, 2337, 804, 1012, 815, 816, 817, 818,
	984, 1055, 792, 242, 741, 834, 835, 836, 742, 837,
	838, 743, 744, 839, 840, 841, 842, 745, 843, 844,
	845, 823, 824, 825, 826, 827, 828, 829, 830, 833,
	831, 832, 0, 940, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 802, 199, 212, 311,
	1056, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 1010, 967, 0, 917, 919, 918, 877, 879,
	878, 876, 1059, 345, 1028, 846, 853, 872, 883, 888,
	894, 902, 903, 911, 916, 926, 935, 936, 946, 959,
	960, 966, 990, 993, 1006, 1011, 1018, 1023, 1024, 468,
	252, 943, 965, 996, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 923, 196, 0,
	0, 202, 0, 203, 205, 910, 201, 1027, 1052, 972,
	986, 1824, 2003, 0, 3618, 445, 1858, 2007, 1807, 1837,
	2025, 1843, 1846, 1927, 1773, 1896, 356, 1834, 1774, 1757,
	1812, 1761, 1825, 1762, 1809, 259, 1805, 1968, 1899, 2005,
	1878, 1920, 1930, 258, 244, 1888, 1887, 1993, 1823, 1822,
	1925, 1982, 2004, 1877, 0, 172, 474, 190, 3619, 313,
	1979, 493, 3620, 422, 338, 496, 495, 1873, 1988, 1894,
	1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921, 2010, 89,
	0, 691, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1917, 2001, 1828, 494, 1868,
	1926, 2030, 1760, 1913, 0, 1765, 1776, 2024, 1994, 1819,
	1820, 263, 0, 0, 0, 0, 0, 0, 0, 1871,
	1895, 1947, 1853, 0, 465, 1932, 1942, 1960, 1845, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 1910, 0, 0, 0, 1781, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 1788, 1758, 1816, 1949, 1759, 1756, 339,
	1777, 1962, 3622, 1854, 301, 191, 1998, 1852, 1851, 1936,
	1782, 1972, 2022, 1838, 310, 1780, 195, 1775, 1783, 1836,
	352, 1946, 1954, 177, 198, 312, 1969, 1810, 1827, 245,
	2167, 391, 1922, 464, 492, 278, 1903, 390, 314, 457,
	1937, 2000, 463, 1839, 439, 473, 478, 271, 1879, 234,
	419, 261, 254, 1818, 1959, 1764, 284, 374, 249, 306,
	1857, 1928, 1811, 241, 1940, 1911, 1974, 418, 454, 200,
	333, 455, 477, 166, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 1970, 1953,
	1976, 1804, 1784, 1795, 1785, 1826, 2002, 293, 285, 1977,
	1975, 1829, 360, 224, 1892, 1885, 1872, 1950, 467, 2026,
	257, 1955, 469, 180, 405, 404, 1842, 292, 1956, 181,
	170, 384, 182, 302, 204, 1981, 482, 220, 308, 447,
	491, 277, 351, 1924, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1952, 381, 407, 452, 222, 425,
	173, 176, 185, 397, 186, 187, 2008, 321, 266, 270,
	286, 297, 1923, 388, 426, 470, 1914, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 1948, 216, 237, 427, 210, 1996, 1971, 1905, 1860,
	1866, 1766, 0, 209, 1861, 1862, 1863, 1864, 1865, 1944,
	1815, 1831, 1803, 1918, 1802, 281, 1935, 460, 461, 246,
	1778, 2016, 211, 1779, 2015, 348, 355, 347, 2019, 2017,
	456, 1997, 1906, 1891, 1889, 1771, 1995, 1904, 1890, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	1893, 424, 319, 0, 206, 0, 423, 2006, 2032, 436,
	226, 1797, 1963, 451, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 1939, 2029, 359, 392,
	233, 466, 420, 262, 1793, 0, 1796, 1791, 1794, 1792,
	1897, 1898, 2011, 2012, 2013, 1951, 1786, 0, 0, 1989,
	1990, 0, 1884, 1999, 1772, 0, 1967, 188, 189, 174,
	179, 1931, 2027, 1844, 242, 164, 1768, 1769, 1770, 165,
	1874, 1875, 167, 168, 1985, 1984, 1983, 1986, 169, 2020,
	2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883, 1915, 1916,
	1961, 1934, 1943, 1817, 1876, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 1902, 199, 212,
	311, 3621, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849, 1799,
	1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790, 1806,
	1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870, 1886,
	1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978, 1980,
	468, 252, 1882, 1907, 1945, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 1855, 196,
	0, 0, 202, 0, 203, 205, 1840, 201, 1987, 2023,
	1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007, 1807,
	1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834, 1774,
	1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968, 1899,
	2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993, 1823,
	1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190, 2014,
	313, 1979, 493, 472, 422, 338, 496, 495, 1873, 1988,
	1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921, 2010,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1917, 2001, 1828, 494,
	1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024, 1994,
	1819, 1820, 263, 0, 0, 0, 0, 0, 0, 0,
	1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960, 1845,
	375, 283, 0, 0, 0, 0, 0, 0, 3153, 0,
	1814, 0, 1910, 0, 0, 0, 1781, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759, 1756,
	339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852, 1851,
	1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775, 1783,
	1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810, 1827,
	245, 0, 391, 1922, 464, 2264, 278, 1903, 390, 314,
	457, 1937, 2000, 463, 1839, 439, 473, 478, 271, 1879,
	234, 419, 261, 254, 1818, 1959, 1764, 284, 374, 249,
	306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 1970,
	1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293, 285,
	1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950, 467,
	2026, 257, 1955, 469, 180, 405, 404, 1842, 292, 1956,
	181, 170, 384, 182, 302, 204, 1981, 482, 220, 308,
	447, 2263, 277, 351, 1924, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 1952, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 2008, 321, 266,
	270, 286, 297, 1923, 388, 426, 470, 1914, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 1948, 216, 237, 427, 210, 1996, 1971, 1905,
	1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864, 1865,
	1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460, 461,
	246, 1778, 2016, 211, 1779, 2015, 348, 355, 347, 2019,
	2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904, 1890,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 1893, 424, 319, 0, 206, 0, 423, 2006, 2032,
	436, 226, 1797, 1963, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 1939, 2029, 359,
	392, 233, 466, 420, 262, 1793, 0, 1796, 1791, 1794,
	1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0, 0,
	1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188, 189,
	174, 179, 1931, 2027, 1844, 242, 164, 1768, 1769, 1770,
	165, 1874, 1875, 167, 168, 1985, 1984, 1983, 1986, 169,
	2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883, 1915,
	1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474, 190,
	2014, 313, 1979, 493, 472, 422, 338, 496, 495, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1917, 2001, 1828,
	494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969, 1810,
	1827, 245, 2167, 391, 1922, 464, 492, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 180, 405, 404, 1842, 292,
	1956, 181, 170, 384, 182, 302, 204, 1981, 482, 220,
	308, 447, 491, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1952, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 188,
	189, 174, 179, 1931, 2027, 1844, 242, 164, 1768, 1769,
	1770, 165, 1874, 1875, 167, 168, 1985, 1984, 1983, 1986,
	169, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 1902,
	199, 212, 311, 2028, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 1964, 1909, 0, 1848, 1850,
	1849, 1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763,
	1790, 1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869,
	1870, 1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973,
	1978, 1980, 468, 252, 1882, 1907, 1945, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	1855, 196, 0, 0, 202, 0, 203, 205, 1840, 201,
	1987, 2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858,
	2007, 1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356,
	1834, 1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805,
	1968, 1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887,
	1993, 1823, 1822, 1925, 1982, 2004, 1877, 0, 172, 474,
	190, 2014, 313, 1979, 493, 472, 422, 338, 496, 495,
	1873, 1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835,
	1921, 2010, 0, 0, 0, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1917, 2001,
	1828, 494, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776,
	2024, 1994, 1819, 1820, 263, 0, 0, 0, 0, 0,
	0, 0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942,
	1960, 1845, 375, 283, 0, 0, 0, 0, 0, 0,
	2258, 0, 1814, 0, 1910, 0, 0, 0, 1781, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949,
	1759, 1756, 339, 1777, 1962, 1992, 1854, 301, 191, 1998,
	1852, 1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195,
	1775, 1783, 1836, 352, 1946, 1954, 177, 198, 312, 1969,
	1810, 1827, 245, 0, 391, 1922, 464, 2264, 278, 1903,
	390, 314, 457, 1937, 2000, 463, 1839, 439, 473, 478,
	271, 1879, 234, 419, 261, 254, 1818, 1959, 1764, 284,
	374, 249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002,
	293, 285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872,
	1950, 467, 2026, 257, 1955, 469, 180, 405, 404, 1842,
	292, 1956, 181, 170, 384, 182, 302, 204, 1981, 482,
	220, 308, 447, 2263, 277, 351, 1924, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 1952, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 2008,
	321, 266, 270, 286, 297, 1923, 388, 426, 470, 1914,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 1948, 216, 237, 427, 210, 1996,
	1971, 1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863,
	1864, 1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935,
	460, 461, 246, 1778, 2016, 211, 1779, 2015, 348, 355,
	347, 2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995,
	1904, 1890, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 1893, 424, 319, 0, 206, 0, 423,
	2006, 2032, 436, 226, 1797, 1963, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 1939,
	2029, 359, 392, 233, 466, 420, 262, 1793, 0, 1796,
	1791, 1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786,
	0, 0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967,
	188, 189, 174, 179, 1931, 2027, 1844, 242, 164, 1768,
	1769, 1770, 165, 1874, 1875, 167, 168, 1985, 1984, 1983,
	1986, 169, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881,
	1883, 1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	1902, 199, 212, 311, 2028, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 1964, 1909, 0, 1848,
	1850, 1849, 1799, 1801, 1800, 1798, 2031, 345, 1991, 1755,
	1763, 1790, 1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859,
	1869, 1870, 1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966,
	1973, 1978, 1980, 468, 252, 1882, 1907, 1945, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 1855, 196, 0, 0, 202, 0, 203, 205, 1840,
	201, 1987, 2023, 1919, 1933, 1824, 2003, 0, 1965, 445,
	1858, 2007, 1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896,
	356, 1834, 1774, 1757, 1812, 1761, 1825, 1762, 1809, 259,
	1805, 1968, 1899, 2005, 1878, 1920, 1930, 258, 244, 1888,
	1887, 1993, 1823, 1822, 1925, 1982, 2004, 1877, 0, 172,
	474, 190, 2014, 313, 1979, 493, 472, 422, 338, 496,
	495, 1873, 1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009,
	1835, 1921, 2010, 0, 0, 0, 0, 0, 0, 553,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 1917,
	2001, 1828, 494, 1868, 1926, 2030, 1760, 1913, 0, 1765,
	1776, 2024, 1994, 1819, 1820, 263, 0, 0, 0, 0,
	0, 0, 0, 1871, 1895, 1947, 1853, 0, 465, 1932,
	1942, 1960, 1845, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 1910, 0, 0, 0, 1781,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 1788, 1758, 1816,
	1949, 1759, 1756, 339, 1777, 1962, 1992, 1854, 301, 191,
	1998, 1852, 1851, 1936, 1782, 1972, 2022, 1838, 310, 1780,
	195, 1775, 1783, 1836, 352, 1946, 1954, 177, 198, 312,
	1969, 1810, 1827, 245, 0, 391, 1922, 464, 2264, 278,
	1903, 390, 314, 457, 1937, 2000, 463, 1839, 439, 473,
	478, 271, 1879, 234, 419, 261, 254, 1818, 1959, 1764,
	284, 374, 249, 306, 1857, 1928, 1811, 241, 1940, 1911,
	1974, 418, 454, 200, 333, 455, 477, 166, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826,
	2002, 293, 285, 1977, 1975, 1829, 360, 224, 1892, 1885,
	1872, 1950, 467, 2026, 257, 1955, 469, 180, 405, 404,
	1842, 292, 1956, 181, 170, 384, 182, 302, 204, 1981,
	482, 220, 308, 447, 2263, 277, 351, 1924, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 1952, 381,
	407, 452, 222, 425, 173, 176, 185, 397, 186, 187,
	2008, 321, 266, 270, 286, 297, 1923, 388, 426, 470,
	1914, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 1948, 216, 237, 427, 210,
	1996, 1971, 1905, 1860, 1866, 1766, 0, 209, 1861, 1862,
	1863, 1864, 1865, 1944, 1815, 1831, 1803, 1918, 1802, 281,
	1935, 460, 461, 246, 1778, 2016, 211, 1779, 2015, 348,
	355, 347, 2019, 2017, 456, 1997, 1906, 1891, 1889, 1771,
	1995, 1904, 1890, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 1893, 424, 319, 0, 206, 0,
	423, 2006, 2032, 436, 226, 1797, 1963, 451, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	1939, 2029, 359, 392, 233, 466, 420, 262, 1793, 0,
	1796, 1791, 1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951,
	1786, 0, 0, 1989, 1990, 0, 1884, 1999, 1772, 0,
	1967, 188, 189, 174, 179, 1931, 2027, 1844, 242, 164,
	1768, 1769, 1770, 165, 1874, 1875, 167, 168, 1985, 1984,
	1983, 1986, 169, 2020, 2018, 2021, 1787, 1808, 1830, 1880,
	1881, 1883, 1915, 1916, 1961, 1934, 1943, 1817, 1876, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 1902, 199, 212, 311, 2028, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 1964, 1909, 0,
	1848, 1850, 1849, 1799, 1801, 1800, 1798, 2031, 345, 1991,
	1755, 1763, 1790, 1806, 1813, 1821, 1832, 1833, 1841, 1847,
	1859, 1869, 1870, 1886, 1900, 1901, 1908, 1938, 1941, 1958,
	1966, 1973, 1978, 1980, 468, 252, 1882, 1907, 1945, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 1855, 196, 0, 0, 202, 0, 203, 205,
	1840, 201, 1987, 2023, 1919, 1933, 897, 1039, 0, 0,
	445, 1106, 1043, 884, 907, 1053, 913, 915, 980, 859,
	955, 356, 904, 860, 0, 0, 851, 1101, 852, 885,
	259, 1099, 1013, 958, 1041, 941, 973, 983, 258, 244,
	948, 947, 1030, 896, 895, 978, 1026, 1040, 0, 0,
	172, 474, 190, 1139, 313, 0, 493, 472, 422, 338,
	496, 495, 939, 0, 1113, 1126, 924, 982, 871, 969,
	1045, 905, 974, 1046, 0, 0, 0, 0, 0, 0,
	553, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	1121, 1135, 1102, 494, 934, 979, 1058, 850, 1118, 0,
	855, 1090, 0, 1031, 892, 893, 263, 0, 0, 0,
	0, 0, 0, 0, 937, 954, 998, 921, 0, 465,
	985, 994, 1008, 914, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1117, 0, 0, 0,
	865, 1086, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1107, 0, 0, 0, 870, 848,
	890, 1000, 849, 847, 339, 862, 1128, 1029, 922, 301,
	191, 1035, 920, 1105, 988, 866, 1017, 1051, 908, 310,
	864, 195, 861, 867, 906, 352, 997, 1003, 177, 198,
	312, 1014, 886, 899, 245, 3252, 391, 975, 464, 2348,
	278, 961, 390, 314, 457, 989, 1037, 463, 909, 439,
	473, 478, 271, 942, 234, 419, 261, 254, 891, 1007,
	854, 284, 374, 249, 306, 925, 981, 887, 241, 992,
	968, 1019, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 1015, 1002, 1021, 882, 868, 874, 869,
	898, 1038, 293, 285, 1022, 1020, 900, 360, 224, 952,
	945, 938, 1124, 467, 1054, 257, 1004, 469, 180, 405,
	404, 912, 292, 1005, 181, 170, 384, 182, 302, 204,
	1025, 482, 220, 308, 447, 2347, 277, 351, 977, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 1001,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 1044, 321, 266, 270, 286, 297, 976, 388, 426,
	470, 970, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 999, 216, 237, 427,
	210, 1033, 1016, 963, 927, 933, 856, 0, 209, 928,
	929, 930, 931, 932, 995, 889, 901, 881, 971, 880,
	281, 987, 460, 461, 246, 1091, 1048, 211, 863, 1047,
	348, 355, 347, 1050, 1049, 456, 1034, 964, 951, 949,
	857, 1032, 962, 950, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 953, 424, 319, 0, 206,
	0, 423, 1042, 1060, 436, 226, 875, 1009, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 991, 1057, 359, 392, 233, 466, 420, 262, 1096,
	0, 1098, 1094, 1097, 1095, 1114, 1115, 1136, 1137, 1138,
	1125, 1092, 192, 193, 1133, 1134, 194, 944, 1036, 858,
	0, 1012, 188, 189, 174, 179, 984, 1055, 1104, 242,
	164, 1087, 1088, 1089, 165, 1108, 1109, 167, 168, 1131,
	1130, 1129, 1132, 169, 1141, 1140, 1142, 1093, 1100, 1103,
	1110, 1111, 1112, 1119, 1120, 1127, 1122, 1123, 0, 940,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 1116, 199, 212, 311, 1056, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 1010, 967,
	0, 917, 919, 918, 877, 879, 878, 876, 1059, 345,
	1028, 846, 853, 872, 883, 888, 894, 902, 903, 911,
	916, 926, 935, 936, 946, 959, 960, 966, 990, 993,
	1006, 1011, 1018, 1023, 1024, 468, 252, 943, 965, 996,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 923, 196, 0, 0, 202, 0, 203,
	205, 910, 201, 1027, 1052, 972, 986, 1824, 2003, 0,
	1965, 445, 1858, 2007, 1807, 1837, 2025, 1843, 1846, 1927,
	1773, 1896, 356, 1834, 1774, 1757, 1812, 1761, 1825, 1762,
	1809, 259, 1805, 1968, 1899, 2005, 1878, 1920, 1930, 258,
	244, 1888, 1887, 1993, 1823, 1822, 1925, 1982, 2004, 1877,
	0, 172, 474, 190, 2014, 313, 1979, 493, 472, 422,
	338, 496, 495, 1873, 1988, 1894, 1957, 1856, 1929, 1789,
	1912, 2009, 1835, 1921, 2010, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 1917, 2001, 1828, 494, 1868, 1926, 2030, 1760, 1913,
	0, 1765, 1776, 2024, 1994, 1819, 1820, 263, 0, 0,
	0, 0, 0, 0, 0, 1871, 1895, 1947, 1853, 0,
	465, 1932, 1942, 1960, 1845, 375, 283, 0, 0, 0,
	0, 0, 0, 2833, 0, 1814, 0, 1910, 0, 0,
	0, 1781, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 1788,
	1758, 1816, 1949, 1759, 1756, 339, 1777, 1962, 1992, 1854,
	301, 191, 1998, 1852, 1851, 1936, 1782, 1972, 2022, 1838,
	310, 1780, 195, 1775, 1783, 1836, 352, 1946, 1954, 177,
	198, 312, 1969, 1810, 1827, 245, 0, 391, 1922, 464,
	492, 278, 1903, 390, 314, 457, 1937, 2000, 463, 1839,
	439, 473, 478, 271, 1879, 234, 419, 261, 254, 1818,
	1959, 1764, 284, 374, 249, 306, 1857, 1928, 1811, 241,
	1940, 1911, 1974, 418, 454, 200, 333, 455, 477, 0,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 1970, 1953, 1976, 1804, 1784, 1795,
	1785, 1826, 2002, 293, 285, 1977, 1975, 1829, 360, 224,
	1892, 1885, 1872, 1950, 467, 2026, 257, 1955, 469, 180,
	405, 404, 1842, 292, 1956, 181, 170, 384, 182, 302,
	204, 1981, 482, 220, 308, 447, 491, 277, 351, 1924,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	1952, 381, 407, 452, 222, 425, 173, 176, 185, 397,
	186, 187, 2008, 321, 266, 270, 286, 297, 1923, 388,
	426, 470, 1914, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 1948, 216, 237,
	427, 210, 1996, 1971, 1905, 1860, 1866, 1766, 0, 209,
	1861, 1862, 1863, 1864, 1865, 1944, 1815, 1831, 1803, 1918,
	1802, 281, 1935, 460, 461, 246, 1778, 2016, 211, 1779,
	2015, 348, 355, 347, 2019, 2017, 456, 1997, 1906, 1891,
	1889, 1771, 1995, 1904, 1890, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 1893, 424, 319, 0,
	206, 0, 423, 2006, 2032, 436, 226, 1797, 1963, 451,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 1939, 2029, 359, 392, 233, 466, 420, 262,
	1793, 0, 1796, 1791, 1794, 1792, 1897, 1898, 2011, 2012,
	2013, 1951, 1786, 0, 0, 1989, 1990, 0, 1884, 1999,
	1772, 0, 1967, 188, 189, 174, 179, 1931, 2027, 1844,
	242, 0, 1768, 1769, 1770, 0, 1874, 1875, 0, 0,
	1985, 1984, 1983, 1986, 0, 2020, 2018, 2021, 1787, 1808,
	1830, 1880, 1881, 1883, 1915, 1916, 1961, 1934, 1943, 1817,
	1876, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 1902, 199, 212, 311, 2028, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 1964,
	1909, 0, 1848, 1850, 1849, 1799, 1801, 1800, 1798, 2031,
	345, 1991, 1755, 1763, 1790, 1806, 1813, 1821, 1832, 1833,
	1841, 1847, 1859, 1869, 1870, 1886, 1900, 1901, 1908, 1938,
	1941, 1958, 1966, 1973, 1978, 1980, 468, 252, 1882, 1907,
	1945, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 1855, 196, 0, 0, 202, 0,
	203, 205, 1840, 201, 1987, 2023, 1919, 1933, 897, 1039,
	0, 0, 445, 1106, 1043, 884, 907, 1053, 913, 915,
	980, 859, 955, 356, 904, 860, 0, 0, 851, 1101,
	852, 885, 259, 1099, 1013, 958, 1041, 941, 973, 983,
	258, 244, 948, 947, 1030, 896, 895, 978, 1026, 1040,
	0, 0, 172, 474, 190, 1139, 313, 0, 493, 472,
	422, 338, 496, 495, 939, 0, 1113, 1126, 924, 982,
	871, 969, 1045, 905, 974, 1046, 0, 0, 0, 0,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 1121, 1135, 1102, 494, 934, 979, 1058, 850,
	1118, 0, 855, 1090, 0, 1031, 892, 893, 263, 0,
	0, 0, 0, 0, 0, 0, 937, 954, 998, 921,
	0, 465, 985, 994, 1008, 914, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 0,
	0, 0, 865, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1107, 0, 0, 0,
	870, 848, 890, 1000, 849, 847, 339, 862, 1128, 1029,
	922, 301, 191, 1035, 920, 1105, 988, 866, 1017, 1051,
	908, 310, 864, 195, 861, 867, 906, 352, 997, 1003,
	177, 198, 312, 1014, 886, 899, 245, 0, 391, 975,
	464, 2348, 278, 961, 390, 314, 457, 989, 1037, 463,
	909, 439, 473, 478, 271, 942, 234, 419, 261, 254,
	891, 1007, 854, 284, 374, 249, 306, 925, 981, 887,
	241, 992, 968, 1019, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 1015, 1002, 1021, 882, 868,
	874, 869, 898, 1038, 293, 285, 1022, 1020, 900, 360,
	224, 952, 945, 938, 1124, 467, 1054, 257, 1004, 469,
	180, 405, 404, 912, 292, 1005, 181, 170, 384, 182,
	302, 204, 1025, 482, 220, 308, 447, 2347, 277, 351,
	977, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 1001, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 1044, 321, 266, 270, 286, 297, 976,
	388, 426, 470, 970, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 999, 216,
	237, 427, 210, 1033, 1016, 963, 927, 933, 856, 0,
	209, 928, 929, 930, 931, 932, 995, 889, 901, 881,
	971, 880, 281, 987, 460, 461, 246, 1091, 1048, 211,
	863, 1047, 348, 355, 347, 1050, 1049, 456, 1034, 964,
	951, 949, 857, 1032, 962, 950, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 953, 424, 319,
	0, 206, 0, 423, 1042, 1060, 436, 226, 875, 1009,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 991, 1057, 359, 392, 233, 466, 420,
	262, 1096, 0, 1098, 1094, 1097, 1095, 1114, 1115, 1136,
	1137, 1138, 1125, 1092, 192, 193, 1133, 1134, 194, 944,
	1036, 858, 0, 1012, 188, 189, 174, 179, 984, 1055,
	1104, 242, 164, 1087, 1088, 1089, 165, 1108, 1109, 167,
	168, 1131, 1130, 1129, 1132, 169, 1141, 1140, 1142, 1093,
	1100, 1103, 1110, 1111, 1112, 1119, 1120, 1127, 1122, 1123,
	0, 940, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 1116, 199, 212, 311, 1056, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	1010, 967, 0, 917, 919, 918, 877, 879, 878, 876,
	1059, 345, 1028, 846, 853, 872, 883, 888, 894, 902,
	903, 911, 916, 926, 935, 936, 946, 959, 960, 966,
	990, 993, 1006, 1011, 1018, 1023, 1024, 468, 252, 943,
	965, 996, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 923, 196, 0, 0, 202,
	0, 203, 205, 910, 201, 1027, 1052, 972, 986, 1824,
	2003, 0, 1965, 445, 1858, 2007, 1807, 1837, 2025, 1843,
	1846, 1927, 1773, 1896, 356, 1834, 1774, 1757, 1812, 1761,
	1825, 1762, 1809, 259, 1805, 1968, 1899, 2005, 1878, 1920,
	1930, 258, 244, 1888, 1887, 1993, 1823, 1822, 1925, 1982,
	2004, 1877, 0, 172, 474, 190, 2014, 313, 1979, 493,
	472, 422, 338, 496, 495, 1873, 1988, 1894, 1957, 1856,
	1929, 1789, 1912, 2009, 1835, 1921, 2010, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 1917, 2001, 1828, 494, 1868, 1926, 2030,
	1760, 1913, 0, 1765, 1776, 2024, 1994, 1819, 1820, 263,
	0, 0, 0, 0, 0, 0, 0, 1871, 1895, 1947,
	1853, 0, 465, 1932, 1942, 1960, 1845, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 1910,
	0, 0, 0, 1781, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 1788, 1758, 1816, 1949, 1759, 1756, 339, 1777, 1962,
	1992, 1854, 301, 191, 1998, 1852, 1851, 1936, 1782, 1972,
	2022, 1838, 310, 1780, 195, 1775, 1783, 1836, 352, 1946,
	1954, 177, 198, 312, 1969, 1810, 1827, 245, 0, 391,
	1922, 464, 492, 278, 1903, 390, 314, 457, 1937, 2000,
	463, 1839, 439, 473, 478, 271, 1879, 234, 419, 261,
	254, 1818, 1959, 1764, 284, 374, 249, 306, 1857, 1928,
	1811, 241, 1940, 1911, 1974, 418, 454, 200, 333, 455,
	477, 0, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 1970, 1953, 1976, 1804,
	1784, 1795, 1785, 1826, 2002, 293, 285, 1977, 1975, 1829,
	360, 224, 1892, 1885, 1872, 1950, 467, 2026, 257, 1955,
	469, 180, 405, 404, 1842, 292, 1956, 181, 170, 384,
	182, 302, 204, 1981, 482, 220, 308, 447, 491, 277,
	351, 1924, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 1952, 381, 407, 452, 222, 425, 173, 176,
	185, 397, 186, 187, 2008, 321, 266, 270, 286, 297,
	1923, 388, 426, 470, 1914, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 1948,
	216, 237, 427, 210, 1996, 1971, 1905, 1860, 1866, 1766,
	0, 209, 1861, 1862, 1863, 1864, 1865, 1944, 1815, 1831,
	1803, 1918, 1802, 281, 1935, 460, 461, 246, 1778, 2016,
	211, 1779, 2015, 348, 355, 347, 2019, 2017, 456, 1997,
	1906, 1891, 1889, 1771, 1995, 1904, 1890, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 1893, 424,
	319, 0, 206, 0, 423, 2006, 2032, 436, 226, 1797,
	1963, 451, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 1939, 2029, 359, 392, 233, 466,
	420, 262, 1793, 0, 1796, 1791, 1794, 1792, 1897, 1898,
	2011, 2012, 2013, 1951, 1786, 0, 0, 1989, 1990, 0,
	1884, 1999, 1772, 0, 1967, 188, 189, 174, 179, 1931,
	2027, 1844, 242, 0, 1768, 1769, 1770, 0, 1874, 1875,
	0, 0, 1985, 1984, 1983, 1986, 0, 2020, 2018, 2021,
	1787, 1808, 1830, 1880, 1881, 1883, 1915, 1916, 1961, 1934,
	1943, 1817, 1876, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 1902, 199, 212, 311, 2028,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 1964, 1909, 0, 1848, 1850, 1849, 1799, 1801, 1800,
	1798, 2031, 345, 1991, 1755, 1763, 1790, 1806, 1813, 1821,
	1832, 1833, 1841, 1847, 1859, 1869, 1870, 1886, 1900, 1901,
	1908, 1938, 1941, 1958, 1966, 1973, 1978, 1980, 468, 252,
	1882, 1907, 1945, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 1855, 196, 0, 0,
	202, 0, 203, 205, 1840, 201, 1987, 2023, 1919, 1933,
	897, 1039, 0, 0, 445, 1106, 1043, 884, 907, 1053,
	913, 915, 980, 859, 955, 356, 904, 860, 0, 0,
	851, 1101, 852, 885, 259, 1099, 1013, 958, 1041, 941,
	973, 983, 258, 244, 948, 947, 1030, 896, 895, 978,
	1026, 1040, 0, 0, 172, 474, 190, 1139, 313, 0,
	0, 472, 422, 338, 0, 0, 939, 0, 1113, 1126,
	924, 982, 871, 969, 1045, 905, 974, 1046, 0, 0,
	0, 0, 0, 0, 553, 0, 1449, 0, 0, 1450,
	0, 0, 171, 0, 1121, 1135, 1102, 0, 934, 979,
	1058, 850, 1118, 0, 855, 1090, 0, 1031, 892, 893,
	263, 0, 0, 0, 0, 0, 0, 0, 937, 954,
	998, 921, 0, 465, 985, 994, 1008, 914, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1117, 0, 0, 0, 865, 1086, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1107, 0,
	0, 0, 870, 848, 890, 1000, 849, 847, 339, 862,
	1128, 1029, 922, 301, 191, 1035, 920, 1105, 988, 866,
	1017, 1051, 908, 310, 864, 195, 861, 867, 906, 352,
	997, 1003, 177, 198, 312, 1014, 886, 899, 245, 0,
	391, 975, 464, 1085, 278, 961, 390, 314, 457, 989,
	1037, 463, 909, 439, 473, 478, 271, 942, 234, 419,
	261, 254, 891, 1007, 854, 284, 374, 249, 306, 925,
	981, 887, 241, 992, 968, 1019, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 1015, 1002, 1021,
	882, 868, 874, 869, 898, 1038, 293, 285, 1022, 1020,
	900, 360, 224, 952, 945, 938, 1124, 467, 1054, 257,
	1004, 469, 180, 405, 404, 912, 292, 1005, 181, 170,
	384, 182, 302, 204, 1025, 482, 220, 308, 447, 1084,
	277, 351, 977, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 1001, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 1044, 321, 266, 270, 286,
	297, 976, 388, 426, 470, 970, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	999, 216, 237, 427, 210, 1033, 1016, 963, 927, 933,
	856, 0, 209, 928, 929, 930, 931, 932, 995, 889,
	901, 881, 971, 880, 281, 987, 460, 461, 246, 1091,
	1048, 211, 863, 1047, 348, 355, 347, 1050, 1049, 456,
	1034, 964, 951, 949, 857, 1032, 962, 950, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 953,
	424, 319, 0, 206, 0, 423, 1042, 1060, 436, 226,
	875, 1009, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 991, 1057, 359, 392, 233,
	466, 420, 262, 1096, 0, 1098, 1094, 1097, 1095, 1114,
	1115, 1136, 1137, 1138, 1125, 1092, 192, 193, 1133, 1134,
	194, 944, 1036, 858, 0, 1012, 188, 189, 174, 179,
	984, 1055, 1104, 242, 164, 1087, 1088, 1089, 165, 1108,
	1109, 167, 168, 1131, 1130, 1129, 1132, 169, 1141, 1140,
	1142, 1093, 1100, 1103, 1110, 1111, 1112, 1119, 1120, 1127,
	1122, 1123, 0, 940, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 1116, 199, 212, 311,
	1056, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 1010, 967, 0, 917, 919, 918, 877, 879,
	878, 876, 1059, 345, 1028, 846, 853, 872, 883, 888,
	894, 902, 903, 911, 916, 926, 935, 936, 946, 959,
	960, 966, 990, 993, 1006, 1011, 1018, 1023, 1024, 468,
	252, 943, 965, 996, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 923, 196, 0,
	0, 202, 0, 203, 205, 910, 201, 1027, 1052, 972,
	986, 897, 1039, 0, 0, 445, 1106, 1043, 884, 907,
	1053, 913, 915, 980, 859, 955, 356, 904, 860, 0,
	0, 851, 1101, 852, 885, 259, 1099, 1013, 958, 1041,
	941, 973, 983, 258, 244, 948, 947, 1030, 896, 895,
	978, 1026, 1040, 0, 0, 172, 474, 190, 1139, 313,
	0, 0, 472, 422, 338, 0, 0, 939, 0, 1113,
	1126, 924, 982, 871, 969, 1045, 905, 974, 1046, 0,
	0, 0, 0, 0, 0, 553, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1121, 1135, 1102, 0, 934,
	979, 1058, 850, 1118, 0, 855, 1090, 0, 1031, 892,
	893, 263, 0, 0, 0, 0, 0, 0, 0, 937,
	954, 998, 921, 0, 465, 985, 994, 1008, 914, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1117, 0, 0, 0, 865, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	0, 0, 0, 870, 848, 890, 1000, 849, 847, 339,
	862, 1128, 1029, 922, 301, 191, 1035, 920, 1105, 988,
	866, 1017, 1051, 908, 310, 864, 195, 861, 867, 906,
	352, 997, 1003, 177, 198, 312, 1014, 886, 899, 245,
	0, 391, 975, 464, 1085, 278, 961, 390, 314, 457,
	989, 1037, 463, 909, 439, 473, 478, 271, 942, 234,
	419, 261, 254, 891, 1007, 854, 284, 374, 249, 306,
	925, 981, 887, 241, 992, 968, 1019, 418, 454, 200,
	333, 455, 477, 166, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 1015, 1002,
	1021, 882, 868, 874, 869, 898, 1038, 293, 285, 1022,
	1020, 900, 360, 224, 952, 945, 938, 1124, 467, 1054,
	257, 1004, 469, 180, 405, 404, 912, 292, 1005, 181,
	170, 384, 182, 302, 204, 1025, 482, 220, 308, 447,
	1084, 277, 351, 977, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 1001, 381, 407, 452, 222, 425,
	173, 176, 185, 397, 186, 187, 1044, 321, 266, 270,
	286, 297, 976, 388, 426, 470, 970, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 999, 216, 237, 427, 210, 1033, 1016, 963, 927,
	933, 856, 0, 209, 928, 929, 930, 931, 932, 995,
	889, 901, 881, 971, 880, 281, 987, 460, 461, 246,
	1091, 1048, 211, 863, 1047, 348, 355, 347, 1050, 1049,
	456, 1034, 964, 951, 949, 857, 1032, 962, 950, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	953, 424, 319, 0, 206, 0, 423, 1042, 1060, 436,
	226, 875, 1009, 451, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 991, 1057, 359, 392,
	233, 466, 420, 262, 1096, 0, 1098, 1094, 1097, 1095,
	1114, 1115, 1136, 1137, 1138, 1125, 1092, 192, 193, 1133,
	1134, 194, 944, 1036, 858, 0, 1012, 188, 189, 174,
	179, 984, 1055, 1104, 242, 164, 1087, 1088, 1089, 165,
	1108, 1109, 167, 168, 1131, 1130, 1129, 1132, 169, 1141,
	1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112, 1119, 1120,
	1127, 1122, 1123, 0, 940, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 1116, 199, 212,
	311, 1056, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 1010, 967, 0, 917, 919, 918, 877,
	879, 878, 876, 1059, 345, 1028, 846, 853, 872, 883,
	888, 894, 902, 903, 911, 916, 926, 935, 936, 946,
	959, 960, 966, 990, 993, 1006, 1011, 1018, 1023, 1024,
	468, 252, 943, 965, 996, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 923, 196,
	0, 0, 202, 0, 203, 205, 910, 201, 1027, 1052,
	972, 986, 897, 1039, 0, 0, 445, 1106, 1043, 884,
	907, 1053, 913, 915, 980, 859, 955, 356, 904, 860,
	0, 0, 851, 1101, 852, 885, 259, 1099, 1013, 958,
	1041, 941, 973, 983, 258, 244, 948, 947, 1030, 896,
	895, 978, 1026, 1040, 0, 0, 172, 474, 190, 1139,
	313, 0, 0, 472, 422, 338, 0, 0, 939, 0,
	1113, 1126, 924, 982, 871, 969, 1045, 905, 974, 1046,
	0, 0, 0, 0, 0, 0, 553, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 1121, 1135, 1102, 0,
	934, 979, 1058, 850, 1118, 0, 855, 1090, 0, 1031,
	892, 893, 263, 0, 0, 0, 0, 0, 0, 0,
	937, 954, 998, 921, 0, 465, 985, 994, 1008, 914,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 0, 865, 1086, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1107, 0, 0, 0, 870, 848, 890, 1000, 849, 847,
	339, 862, 1128, 1029, 922, 301, 191, 1035, 920, 1105,
	988, 866, 1017, 1051, 908, 310, 864, 195, 861, 867,
	906, 352, 997, 1003, 177, 198, 312, 1014, 886, 899,
	245, 0, 391, 975, 464, 1085, 278, 961, 390, 314,
	457, 989, 1037, 463, 909, 439, 473, 478, 271, 942,
	234, 419, 261, 254, 891, 1007, 854, 284, 374, 249,
	306, 925, 981, 887, 241, 992, 968, 1019, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 1015,
	1002, 1021, 882, 868, 874, 869, 898, 1038, 293, 285,
	1022, 1020, 900, 360, 224, 952, 945, 938, 1124, 467,
	1054, 257, 1004, 469, 180, 405, 404, 912, 292, 1005,
	181, 170, 384, 182, 302, 204, 1025, 482, 220, 308,
	447, 1084, 277, 351, 977, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 1001, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 1044, 321, 266,
	270, 286, 297, 976, 388, 426, 470, 970, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 999, 216, 237, 427, 210, 1033, 1016, 963,
	927, 933, 856, 0, 209, 928, 929, 930, 931, 932,
	995, 889, 901, 881, 971, 880, 281, 987, 460, 461,
	246, 1091, 1048, 211, 1079, 1047, 348, 355, 347, 1050,
	1049, 456, 1034, 964, 951, 949, 857, 1032, 962, 950,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	1075, 953, 424, 319, 0, 206, 0, 423, 1042, 1060,
	436, 226, 875, 1009, 451, 178, 380, 227, 279, 267,
	371, 1080, 1078, 1069, 1070, 307, 315, 991, 1057, 359,
	392, 233, 466, 420, 262, 1096, 0, 1098, 1094, 1097,
	1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192, 193,
	1133, 1134, 194, 944, 1036, 858, 0, 1012, 188, 189,
	174, 179, 984, 1055, 1104, 242, 164, 1087, 1088, 1089,
	165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132, 169,
	1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112, 1119,
	1120, 1127, 1122, 1123, 0, 940, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 1116, 199,
	212, 311, 1056, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1010, 967, 0, 917, 919, 918,
	877, 879, 878, 876, 1059, 345, 1028, 846, 853, 872,
	883, 888, 894, 902, 903, 911, 916, 926, 935, 936,
	946, 959, 960, 966, 990, 993, 1006, 1011, 1018, 1023,
	1024, 468, 252, 943, 965, 996, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 1076, 1077, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 923,
	196, 0, 0, 202, 0, 203, 205, 910, 201, 1027,
	1052, 972, 986, 897, 1039, 0, 0, 445, 1106, 1043,
	884, 907, 1053, 913, 915, 980, 859, 955, 356, 904,
	860, 0, 0, 851, 1101, 852, 885, 259, 1099, 1013,
	958, 1041, 941, 973, 983, 258, 244, 948, 947, 1030,
	896, 895, 978, 1026, 1040, 0, 0, 172, 474, 190,
	1139, 313, 0, 0, 472, 422, 338, 0, 0, 939,
	0, 1113, 1126, 924, 982, 871, 969, 1045, 905, 974,
	1046, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 1121, 1135, 1102,
	0, 934, 979, 1058, 850, 1118, 0, 855, 1090, 0,
	1031, 892, 893, 263, 0, 0, 0, 0, 0, 0,
	0, 937, 954, 998, 921, 0, 465, 985, 994, 1008,
	914, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 865, 1086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 870, 848, 890, 1000, 849,
	847, 339, 862, 1128, 1029, 922, 301, 191, 1035, 920,
	1105, 988, 866, 1017, 1051, 908, 310, 864, 195, 861,
	867, 906, 352, 997, 1003, 177, 198, 312, 1014, 886,
	899, 245, 0, 391, 975, 464, 1085, 278, 961, 390,
	314, 457, 989, 1037, 463, 909, 439, 473, 478, 271,
	942, 234, 419, 261, 254, 891, 1007, 854, 284, 374,
	249, 306, 925, 981, 887, 241, 992, 968, 1019, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1015, 1002, 1021, 882, 868, 874, 869, 898, 1038, 293,
	285, 1022, 1020, 900, 360, 224, 952, 945, 938, 1124,
	467, 1054, 257, 1004, 469, 180, 405, 404, 912, 292,
	1005, 181, 170, 384, 182, 302, 204, 1025, 482, 220,
	308, 447, 1084, 277, 351, 977, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 1001, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 1044, 321,
	266, 270, 286, 297, 976, 388, 426, 470, 970, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 1614, 229,
	406, 409, 481, 999, 216, 237, 427, 210, 1033, 1016,
	963, 927, 933, 856, 0, 209, 928, 929, 930, 931,
	932, 995, 889, 901, 881, 971, 880, 281, 987, 460,
	461, 246, 1091, 1048, 211, 863, 1047, 348, 355, 347,
	1050, 1049, 456, 1034, 964, 951, 949, 857, 1032, 962,
	950, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 953, 424, 319, 0, 206, 0, 423, 1042,
	1060, 436, 226, 875, 1009, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 991, 1057,
	359, 392, 233, 466, 420, 262, 1096, 0, 1098, 1094,
	1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092, 192,
	193, 1133, 1134, 194, 944, 1036, 858, 0, 1012, 188,
	189, 174, 179, 984, 1055, 1104, 242, 164, 1087, 1088,
	1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129, 1132,
	169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111, 1112,
	1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 1116,
	199, 212, 311, 1056, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 1010, 967, 0, 917, 919,
	918, 877, 879, 878, 876, 1059, 345, 1028, 846, 853,
	872, 883, 888, 894, 902, 903, 911, 916, 926, 935,
	936, 946, 959, 960, 966, 990, 993, 1006, 1011, 1018,
	1023, 1024, 468, 252, 943, 965, 996, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	923, 196, 0, 0, 202, 0, 203, 205, 910, 201,
	1027, 1052, 972, 986, 897, 1039, 0, 0, 445, 1106,
	1043, 884, 907, 1053, 913, 915, 980, 859, 955, 356,
	904, 860, 0, 0, 851, 1101, 852, 885, 259, 1099,
	1013, 958, 1041, 941, 973, 983, 258, 244, 948, 947,
	1030, 896, 895, 978, 1026, 1040, 0, 0, 172, 474,
	190, 1139, 313, 0, 0, 472, 422, 338, 0, 0,
	939, 0, 1113, 1126, 924, 982, 871, 969, 1045, 905,
	974, 1046, 0, 0, 0, 0, 0, 0, 553, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 1121, 1135,
	1102, 0, 934, 979, 1058, 850, 1118, 0, 855, 1090,
	0, 1031, 892, 893, 263, 0, 0, 0, 0, 0,
	0, 0, 937, 954, 998, 921, 0, 465, 985, 994,
	1008, 914, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1117, 0, 0, 0, 865, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1107, 0, 0, 0, 870, 848, 890, 1000,
	849, 847, 339, 862, 1128, 1029, 922, 301, 191, 1035,
	920, 1105, 988, 866, 1017, 1051, 908, 310, 864, 195,
	861, 867, 906, 352, 997, 1003, 177, 198, 312, 1014,
	886, 899, 245, 0, 391, 975, 464, 1085, 278, 961,
	390, 314, 457, 989, 1037, 463, 909, 439, 473, 478,
	271, 942, 234, 419, 261, 254, 891, 1007, 854, 284,
	374, 249, 306, 925, 981, 887, 241, 992, 968, 1019,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 1015, 1002, 1021, 882, 868, 874, 869, 898, 1038,
	293, 285, 1022, 1020, 900, 360, 224, 952, 945, 938,
	1124, 467, 1054, 257, 1004, 469, 180, 405, 404, 912,
	292, 1005, 181, 170, 384, 182, 302, 204, 1025, 482,
	220, 308, 447, 1084, 277, 351, 977, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 1001, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 1044,
	321, 266, 270, 286, 297, 976, 388, 426, 470, 970,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 1066,
	229, 406, 409, 481, 999, 216, 237, 427, 210, 1033,
	1016, 963, 927, 933, 856, 0, 209, 928, 929, 930,
	931, 932, 995, 889, 901, 881, 971, 880, 281, 987,
	460, 461, 246, 1091, 1048, 211, 1079, 1047, 348, 355,
	347, 1050, 1049, 456, 1034, 964, 951, 949, 857, 1032,
	962, 950, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 1075, 953, 424, 319, 0, 206, 0, 423,
	1042, 1060, 436, 226, 875, 1009, 451, 178, 380, 227,
	279, 267, 371, 1080, 1078, 1069, 1070, 307, 315, 991,
	1057, 359, 392, 233, 466, 420, 262, 1096, 0, 1098,
	1094, 1097, 1095, 1114, 1115, 1136, 1137, 1138, 1125, 1092,
	192, 193, 1133, 1134, 194, 944, 1036, 858, 0, 1012,
	188, 189, 174, 179, 984, 1055, 1104, 242, 164, 1087,
	1088, 1089, 165, 1108, 1109, 167, 168, 1131, 1130, 1129,
	1132, 169, 1141, 1140, 1142, 1093, 1100, 1103, 1110, 1111,
	1112, 1119, 1120, 1127, 1122, 1123, 0, 940, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	1116, 199, 212, 311, 1056, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 1010, 967, 0, 917,
	919, 918, 877, 879, 878, 876, 1059, 345, 1028, 846,
	853, 872, 883, 888, 894, 902, 903, 911, 916, 926,
	935, 936, 946, 959, 960, 966, 990, 993, 1006, 1011,
	1018, 1023, 1024, 468, 252, 943, 965, 996, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 1076, 1077, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 923, 196, 0, 0, 202, 0, 203, 205, 910,
	201, 1027, 1052, 972, 986, 1824, 2003, 0, 1965, 445,
	1858, 2007, 1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896,
	356, 1834, 1774, 1757, 1812, 1761, 1825, 1762, 1809, 259,
	1805, 1968, 1899, 2005, 1878, 1920, 1930, 258, 244, 1888,
	1887, 1993, 1823, 1822, 1925, 1982, 2004, 1877, 0, 0,
	474, 0, 2014, 313, 1979, 0, 472, 422, 338, 0,
	0, 1873, 1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009,
	1835, 1921, 2010, 0, 0, 0, 0, 0, 3114, 3119,
	0, 3122, 3124, 3123, 0, 0, 0, 3116, 0, 1917,
	2001, 1828, 0, 1868, 1926, 2030, 1760, 1913, 0, 1765,
	1776, 2024, 1994, 1819, 1820, 263, 0, 0, 0, 0,
	0, 0, 0, 1871, 1895, 1947, 1853, 0, 465, 1932,
	1942, 1960, 1845, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 1910, 0, 0, 0, 1781,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 1788, 1758, 1816,
	1949, 1759, 1756, 339, 1777, 1962, 1992, 1854, 301, 0,
	1998, 1852, 1851, 1936, 1782, 1972, 2022, 1838, 310, 1780,
	195, 1775, 1783, 1836, 352, 1946, 1954, 0, 198, 312,
	1969, 1810, 1827, 245, 0, 391, 1922, 464, 0, 278,
	1903, 390, 314, 457, 1937, 2000, 463, 1839, 439, 473,
	478, 271, 1879, 234, 419, 261, 254, 1818, 1959, 1764,
	284, 374, 249, 306, 1857, 1928, 1811, 241, 1940, 1911,
	1974, 418, 454, 200, 333, 455, 477, 3117, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826,
	2002, 293, 285, 1977, 1975, 1829, 360, 224, 1892, 1885,
	1872, 1950, 467, 2026, 257, 1955, 469, 0, 405, 404,
	1842, 292, 1956, 0, 0, 384, 3118, 302, 204, 1981,
	482, 220, 308, 447, 0, 277, 351, 1924, 361, 197,
	379, 328, 330, 327, 331, 282, 0, 0, 1952, 381,
	407, 452, 222, 425, 0, 0, 0, 397, 0, 0,
	2008, 321, 266, 270, 286, 297, 1923, 388, 426, 470,
	1914, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 1948, 216, 237, 427, 210,
	1996, 1971, 1905, 1860, 1866, 1766, 0, 209, 1861, 1862,
	1863, 1864, 1865, 1944, 1815, 1831, 1803, 1918, 1802, 281,
	1935, 460, 461, 246, 1778, 2016, 211, 1779, 2015, 348,
	355, 347, 2019, 2017, 456, 1997, 1906, 1891, 1889, 1771,
	1995, 1904, 1890, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 1893, 424, 319, 0, 206, 0,
	423, 2006, 2032, 436, 226, 1797, 1963, 451, 0, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	1939, 2029, 359, 392, 233, 466, 420, 262, 1793, 0,
	1796, 1791, 1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951,
	1786, 0, 0, 1989, 1990, 0, 1884, 1999, 1772, 0,
	1967, 0, 0, 0, 0, 1931, 2027, 1844, 242, 0,
	1768, 1769, 1770, 0, 1874, 1875, 0, 0, 1985, 1984,
	1983, 1986, 0, 2020, 2018, 2021, 1787, 1808, 1830, 1880,
	1881, 1883, 1915, 1916, 1961, 1934, 1943, 1817, 1876, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 1902, 199, 212, 311, 2028, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 1964, 1909, 0,
	1848, 1850, 1849, 1799, 1801, 1800, 1798, 2031, 345, 1991,
	1755, 1763, 1790, 1806, 1813, 1821, 1832, 1833, 1841, 1847,
	1859, 1869, 1870, 1886, 1900, 1901, 1908, 1938, 1941, 1958,
	1966, 1973, 1978, 1980, 468, 252, 1882, 1907, 1945, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 1855, 196, 0, 0, 202, 0, 203, 205,
	1840, 201, 1987, 2023, 1919, 1933, 1824, 2003, 0, 1965,
	445, 1858, 2007, 1807, 1837, 2025, 1843, 1846, 1927, 1773,
	1896, 356, 1834, 1774, 1757, 1812, 1761, 1825, 1762, 1809,
	259, 1805, 1968, 1899, 2005, 1878, 1920, 1930, 258, 244,
	1888, 1887, 1993, 1823, 1822, 1925, 1982, 2004, 1877, 0,
	0, 474, 0, 2014, 313, 1979, 0, 472, 422, 338,
	0, 0, 1873, 1988, 1894, 1957, 1856, 1929, 1789, 1912,
	2009, 1835, 1921, 2010, 0, 0, 0, 0, 0, 3876,
	3119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1917, 2001, 1828, 0, 1868, 1926, 2030, 1760, 1913, 0,
	1765, 1776, 2024, 1994, 1819, 1820, 263, 0, 0, 0,
	0, 0, 0, 0, 1871, 1895, 1947, 1853, 0, 465,
	1932, 1942, 1960, 1845, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 1910, 0, 0, 0,
	1781, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 0, 1788, 1758,
	1816, 1949, 1759, 1756, 339, 1777, 1962, 1992, 1854, 301,
	0, 1998, 1852, 1851, 1936, 1782, 1972, 2022, 1838, 310,
	1780, 195, 1775, 1783, 1836, 352, 1946, 1954, 0, 198,
	312, 1969, 1810, 1827, 245, 0, 391, 1922, 464, 0,
	278, 1903, 390, 314, 457, 1937, 2000, 463, 1839, 439,
	473, 478, 271, 1879, 234, 419, 261, 254, 1818, 1959,
	1764, 284, 374, 249, 306, 1857, 1928, 1811, 241, 1940,
	1911, 1974, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 1970, 1953, 1976, 1804, 1784, 1795, 1785,
	1826, 2002, 293, 285, 1977, 1975, 1829, 360, 224, 1892,
	1885, 1872, 1950, 467, 2026, 257, 1955, 469, 0, 405,
	404, 1842, 292, 1956, 0, 0, 384, 0, 302, 204,
	1981, 482, 220, 308, 447, 0, 277, 351, 1924, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 1952,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 2008, 321, 266, 270, 286, 297, 1923, 388, 426,
	470, 1914, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 1948, 216, 237, 427,
	210, 1996, 1971, 1905, 1860, 1866, 1766, 0, 209, 1861,
	1862, 1863, 1864, 1865, 1944, 1815, 1831, 1803, 1918, 1802,
	281, 1935, 460, 461, 246, 1778, 2016, 211, 1779, 2015,
	348, 355, 347, 2019, 2017, 456, 1997, 1906, 1891, 1889,
	1771, 1995, 1904, 1890, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 1893, 424, 319, 0, 206,
	0, 423, 2006, 2032, 436, 226, 1797, 1963, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 1939, 2029, 359, 392, 233, 466, 420, 262, 1793,
	0, 1796, 1791, 1794, 1792, 1897, 1898, 2011, 2012, 2013,
	1951, 1786, 0, 0, 1989, 1990, 0, 1884, 1999, 1772,
	0, 1967, 0, 0, 0, 0, 1931, 2027, 1844, 242,
	0, 1768, 1769, 1770, 0, 1874, 1875, 0, 0, 1985,
	1984, 1983, 1986, 0, 2020, 2018, 2021, 1787, 1808, 1830,
	1880, 1881, 1883, 1915, 1916, 1961, 1934, 1943, 1817, 1876,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 1902, 199, 212, 311, 2028, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 1964, 1909,
	0, 1848, 1850, 1849, 1799, 1801, 1800, 1798, 2031, 345,
	1991, 1755, 1763, 1790, 1806, 1813, 1821, 1832, 1833, 1841,
	1847, 1859, 1869, 1870, 1886, 1900, 1901, 1908, 1938, 1941,
	1958, 1966, 1973, 1978, 1980, 468, 252, 1882, 1907, 1945,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 0,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 1855, 196, 0, 0, 202, 0, 203,
	205, 1840, 201, 1987, 2023, 1919, 1933, 1824, 2003, 0,
	1965, 445, 1858, 2007, 1807, 1837, 2025, 1843, 1846, 1927,
	1773, 1896, 356, 1834, 1774, 1757, 1812, 1761, 1825, 1762,
	1809, 259, 1805, 1968, 1899, 2005, 1878, 1920, 1930, 258,
	244, 1888, 1887, 1993, 1823, 1822, 1925, 1982, 2004, 1877,
	0, 0, 474, 0, 2014, 313, 1979, 0, 472, 422,
	338, 0, 0, 1873, 1988, 1894, 1957, 1856, 1929, 1789,
	1912, 2009, 1835, 1921, 2010, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1917, 2001, 1828, 0, 1868, 1926, 2030, 1760, 1913,
	0, 1765, 1776, 2024, 1994, 1819, 1820, 263, 0, 0,
	0, 0, 0, 0, 0, 1871, 1895, 1947, 1853, 0,
	465, 1932, 1942, 1960, 1845, 375, 283, 0, 0, 0,
	0, 0, 0, 3822, 0, 1814, 0, 1910, 0, 0,
	0, 1781, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 1788,
	1758, 1816, 1949, 1759, 1756, 339, 1777, 1962, 1992, 1854,
	301, 0, 1998, 1852, 1851, 1936, 1782, 1972, 2022, 1838,
	310, 1780, 195, 1775, 1783, 1836, 352, 1946, 1954, 0,
	198, 312, 1969, 1810, 1827, 245, 0, 391, 1922, 464,
	0, 278, 1903, 390, 314, 457, 1937, 2000, 463, 1839,
	439, 473, 478, 271, 1879, 234, 419, 261, 254, 1818,
	1959, 1764, 284, 374, 249, 306, 1857, 1928, 1811, 241,
	1940, 1911, 1974, 418, 454, 200, 333, 455, 477, 0,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 1970, 1953, 1976, 1804, 1784, 1795,
	1785, 1826, 2002, 293, 285, 1977, 1975, 1829, 360, 224,
	1892, 1885, 1872, 1950, 467, 2026, 257, 1955, 469, 0,
	405, 404, 1842, 292, 1956, 0, 0, 384, 0, 302,
	204, 1981, 482, 220, 308, 447, 0, 277, 351, 1924,
	361, 197, 379, 328, 330, 327, 331, 282, 0, 0,
	1952, 381, 407, 452, 222, 425, 0, 0, 0, 397,
	0, 0, 2008, 321, 266, 270, 286, 297, 1923, 388,
	426, 470, 1914, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 1948, 216, 237,
	427, 210, 1996, 1971, 1905, 1860, 1866, 1766, 0, 209,
	1861, 1862, 1863, 1864, 1865, 1944, 1815, 1831, 1803, 1918,
	1802, 281, 1935, 460, 461, 246, 1778, 2016, 211, 1779,
	2015, 348, 355, 347, 2019, 2017, 456, 1997, 1906, 1891,
	1889, 1771, 1995, 1904, 1890, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 1893, 424, 319, 0,
	206, 0, 423, 2006, 2032, 436, 226, 1797, 1963, 451,
	0, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 1939, 2029, 359, 392, 233, 466, 420, 262,
	1793, 0, 1796, 1791, 1794, 1792, 1897, 1898, 2011, 2012,
	2013, 1951, 1786, 0, 0, 1989, 1990, 0, 1884, 1999,
	1772, 0, 1967, 0, 0, 0, 0, 1931, 2027, 1844,
	242, 0, 1768, 1769, 1770, 0, 1874, 1875, 0, 0,
	1985, 1984, 1983, 1986, 0, 2020, 2018, 2021, 1787, 1808,
	1830, 1880, 1881, 1883, 1915, 1916, 1961, 1934, 1943, 1817,
	1876, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 1902, 199, 212, 311, 2028, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 1964,
	1909, 0, 1848, 1850, 1849, 1799, 1801, 1800, 1798, 2031,
	345, 1991, 1755, 1763, 1790, 1806, 1813, 1821, 1832, 1833,
	1841, 1847, 1859, 1869, 1870, 1886, 1900, 1901, 1908, 1938,
	1941, 1958, 1966, 1973, 1978, 1980, 468, 252, 1882, 1907,
	1945, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 1855, 196, 0, 0, 202, 0,
	203, 205, 1840, 201, 1987, 2023, 1919, 1933, 1824, 2003,
	0, 1965, 445, 1858, 2007, 1807, 1837, 2025, 1843, 1846,
	1927, 1773, 1896, 356, 1834, 1774, 1757, 1812, 1761, 1825,
	1762, 1809, 259, 1805, 1968, 1899, 2005, 1878, 1920, 1930,
	258, 244, 1888, 1887, 1993, 1823, 1822, 1925, 1982, 2004,
	1877, 0, 0, 474, 0, 2014, 313, 1979, 0, 472,
	422, 338, 0, 0, 1873, 1988, 1894, 1957, 1856, 1929,
	1789, 1912, 2009, 1835, 1921, 2010, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1917, 2001, 1828, 0, 1868, 1926, 2030, 1760,
	1913, 0, 1765, 1776, 2024, 1994, 1819, 1820, 263, 0,
	0, 0, 0, 0, 0, 0, 1871, 1895, 1947, 1853,
	0, 465, 1932, 1942, 1960, 1845, 375, 283, 0, 0,
	0, 0, 0, 0, 3166, 0, 1814, 0, 1910, 0,
	0, 0, 1781, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	1788, 1758, 1816, 1949, 1759, 1756, 339, 1777, 1962, 1992,
	1854, 301, 0, 1998, 1852, 1851, 1936, 1782, 1972, 2022,
	1838, 310, 1780, 195, 1775, 1783, 1836, 352, 1946, 1954,
	0, 198, 312, 1969, 1810, 1827, 245, 0, 391, 1922,
	464, 0, 278, 1903, 390, 314, 457, 1937, 2000, 463,
	1839, 439, 473, 478, 271, 1879, 234, 419, 261, 254,
	1818, 1959, 1764, 284, 374, 249, 306, 1857, 1928, 1811,
	241, 1940, 1911, 1974, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 1970, 1953, 1976, 1804, 1784,
	1795, 1785, 1826, 2002, 293, 285, 1977, 1975, 1829, 360,
	224, 1892, 1885, 1872, 1950, 467, 2026, 257, 1955, 469,
	0, 405, 404, 1842, 292, 1956, 0, 0, 384, 0,
	302, 204, 1981, 482, 220, 308, 447, 0, 277, 351,
	1924, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 1952, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 2008, 321, 266, 270, 286, 297, 1923,
	388, 426, 470, 1914, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 1948, 216,
	237, 427, 210, 1996, 1971, 1905, 1860, 1866, 1766, 0,
	209, 1861, 1862, 1863, 1864, 1865, 1944, 1815, 1831, 1803,
	1918, 1802, 281, 1935, 460, 461, 246, 1778, 2016, 211,
	1779, 2015, 348, 355, 347, 2019, 2017, 456, 1997, 1906,
	1891, 1889, 1771, 1995, 1904, 1890, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 1893, 424, 319,
	0, 206, 0, 423, 2006, 2032, 436, 226, 1797, 1963,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 1939, 2029, 359, 392, 233, 466, 420,
	262, 1793, 0, 1796, 1791, 1794, 1792, 1897, 1898, 2011,
	2012, 2013, 1951, 1786, 0, 0, 1989, 1990, 0, 1884,
	1999, 1772, 0, 1967, 0, 0, 0, 0, 1931, 2027,
	1844, 242, 0, 1768, 1769, 1770, 0, 1874, 1875, 0,
	0, 1985, 1984, 1983, 1986, 0, 2020, 2018, 2021, 1787,
	1808, 1830, 1880, 1881, 1883, 1915, 1916, 1961, 1934, 1943,
	1817, 1876, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 1902, 199, 212, 311, 2028, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	1964, 1909, 0, 1848, 1850, 1849, 1799, 1801, 1800, 1798,
	2031, 345, 1991, 1755, 1763, 1790, 1806, 1813, 1821, 1832,
	1833, 1841, 1847, 1859, 1869, 1870, 1886, 1900, 1901, 1908,
	1938, 1941, 1958, 1966, 1973, 1978, 1980, 468, 252, 1882,
	1907, 1945, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 0, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 1855, 196, 0, 0, 202,
	0, 203, 205, 1840, 201, 1987, 2023, 1919, 1933, 1824,
	2003, 0, 1965, 445, 1858, 2007, 1807, 1837, 2025, 1843,
	1846, 1927, 1773, 1896, 356, 1834, 1774, 1757, 1812, 1761,
	1825, 1762, 1809, 259, 1805, 1968, 1899, 2005, 1878, 1920,
	1930, 258, 244, 1888, 1887, 1993, 1823, 1822, 1925, 1982,
	2004, 1877, 0, 0, 474, 0, 2014, 313, 1979, 0,
	472, 422, 338, 0, 0, 1873, 1988, 1894, 1957, 1856,
	1929, 1789, 1912, 2009, 1835, 1921, 2010, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1917, 2001, 1828, 0, 1868, 1926, 2030,
	1760, 1913, 0, 1765, 1776, 2024, 1994, 1819, 1820, 263,
	0, 0, 0, 0, 0, 0, 0, 1871, 1895, 1947,
	1853, 0, 465, 1932, 1942, 1960, 1845, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 1910,
	0, 0, 0, 1781, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 1788, 1758, 1816, 1949, 1759, 1756, 339, 1777, 1962,
	1992, 1854, 301, 0, 1998, 1852, 1851, 1936, 1782, 1972,
	2022, 1838, 310, 1780, 195, 1775, 1783, 1836, 352, 1946,
	1954, 0, 198, 312, 1969, 1810, 1827, 245, 0, 391,
	1922, 464, 0, 278, 1903, 390, 314, 457, 1937, 2000,
	463, 1839, 439, 473, 478, 271, 1879, 234, 419, 261,
	254, 1818, 1959, 1764, 284, 374, 249, 306, 1857, 1928,
	1811, 241, 1940, 1911, 1974, 418, 454, 200, 333, 455,
	477, 0, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 1970, 1953, 1976, 1804,
	1784, 1795, 1785, 1826, 2002, 293, 285, 1977, 1975, 1829,
	360, 224, 1892, 1885, 1872, 1950, 467, 2026, 257, 1955,
	469, 0, 405, 404, 1842, 292, 1956, 0, 0, 384,
	0, 302, 204, 1981, 482, 220, 308, 447, 0, 277,
	351, 1924, 361, 197, 379, 328, 330, 327, 331, 282,
	0, 0, 1952, 381, 407, 452, 222, 425, 0, 0,
	0, 397, 0, 0, 2008, 321, 266, 270, 286, 297,
	1923, 388, 426, 470, 1914, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 1948,
	216, 237, 427, 210, 1996, 1971, 1905, 1860, 1866, 1766,
	0, 209, 1861, 1862, 1863, 1864, 1865, 1944, 1815, 1831,
	1803, 1918, 1802, 281, 1935, 460, 461, 246, 1778, 2016,
	211, 1779, 2015, 348, 355, 347, 2019, 2017, 456, 1997,
	1906, 1891, 1889, 1771, 1995, 1904, 1890, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 1893, 424,
	319, 0, 206, 0, 423, 2006, 2032, 436, 226, 1797,
	1963, 451, 2310, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 1939, 2029, 359, 392, 233, 466,
	420, 262, 1793, 0, 1796, 1791, 1794, 1792, 1897, 1898,
	2011, 2012, 2013, 1951, 1786, 0, 0, 1989, 1990, 0,
	1884, 1999, 1772, 0, 1967, 0, 0, 0, 0, 1931,
	2027, 1844, 242, 0, 1768, 1769, 1770, 0, 1874, 1875,
	0, 0, 1985, 1984, 1983, 1986, 0, 2020, 2018, 2021,
	1787, 1808, 1830, 1880, 1881, 1883, 1915, 1916, 1961, 1934,
	1943, 1817, 1876, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 1902, 199, 212, 311, 2028,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 1964, 1909, 0, 1848, 1850, 1849, 1799, 1801, 1800,
	1798, 2031, 345, 1991, 1755, 1763, 1790, 1806, 1813, 1821,
	1832, 1833, 1841, 1847, 1859, 1869, 1870, 1886, 1900, 1901,
	1908, 1938, 1941, 1958, 1966, 1973, 1978, 1980, 468, 252,
	1882, 1907, 1945, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 1855, 196, 0, 0,
	202, 0, 203, 205, 1840, 201, 1987, 2023, 1919, 1933,
	1824, 2003, 0, 1965, 445, 1858, 2007, 1807, 1837, 2025,
	1843, 1846, 1927, 1773, 1896, 356, 1834, 1774, 1757, 1812,
	1761, 1825, 1762, 1809, 259, 1805, 1968, 1899, 2005, 1878,
	1920, 1930, 258, 244, 1888, 1887, 1993, 1823, 1822, 1925,
	1982, 2004, 1877, 0, 0, 474, 0, 2014, 313, 1979,
	0, 472, 422, 338, 0, 0, 1873, 1988, 1894, 1957,
	1856, 1929, 1789, 1912, 2009, 1835, 1921, 2010, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1917, 2001, 1828, 0, 1868, 1926,
	2030, 1760, 1913, 0, 1765, 1776, 2024, 1994, 1819, 1820,
	263, 0, 0, 0, 0, 0, 0, 0, 1871, 1895,
	1947, 1853, 0, 465, 1932, 1942, 1960, 1845, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 1814, 0,
	1910, 0, 0, 0, 1781, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 1788, 1758, 1816, 1949, 1759, 1756, 339, 1777,
	1962, 1992, 1854, 301, 0, 1998, 1852, 1851, 1936, 1782,
	1972, 2022, 1838, 310, 1780, 195, 1775, 1783, 1836, 352,
	1946, 1954, 0, 198, 312, 1969, 1810, 1827, 245, 0,
	391, 1922, 464, 0, 278, 1903, 390, 314, 457, 1937,
	2000, 463, 1839, 439, 473, 478, 271, 1879, 234, 419,
	261, 254, 1818, 1959, 1764, 284, 374, 249, 306, 1857,
	1928, 1811, 241, 1940, 1911, 1974, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 1970, 1953, 1976,
	1804, 1784, 1795, 1785, 1826, 2002, 293, 285, 1977, 1975,
	1829, 360, 224, 1892, 1885, 1872, 1950, 467, 2026, 257,
	1955, 469, 0, 405, 404, 1842, 292, 1956, 0, 0,
	384, 0, 302, 204, 1981, 482, 220, 308, 447, 0,
	277, 351, 1924, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 1952, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 2008, 321, 266, 270, 286,
	297, 1923, 388, 426, 470, 1914, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	1948, 216, 237, 427, 210, 1996, 1971, 1905, 1860, 1866,
	1766, 0, 209, 1861, 1862, 1863, 1864, 1865, 1944, 1815,
	1831, 1803, 1918, 1802, 281, 1935, 460, 461, 246, 1778,
	2016, 211, 1779, 2015, 348, 355, 347, 2019, 2017, 456,
	1997, 1906, 1891, 1889, 1771, 1995, 1904, 1890, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 1893,
	424, 319, 0, 206, 0, 423, 2006, 2032, 436, 226,
	1797, 1963, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 1939, 2029, 359, 392, 233,
	466, 420, 262, 1793, 0, 1796, 1791, 1794, 1792, 1897,
	1898, 2011, 2012, 2013, 1951, 1786, 0, 0, 1989, 1990,
	0, 1884, 1999, 1772, 0, 1967, 0, 0, 0, 0,
	1931, 2027, 1844, 242, 0, 1768, 1769, 1770, 0, 1874,
	1875, 0, 0, 1985, 1984, 1983, 1986, 0, 2020, 2018,
	2021, 1787, 1808, 1830, 1880, 1881, 1883, 1915, 1916, 1961,
	1934, 1943, 1817, 1876, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 1902, 199, 212, 311,
	2028, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 1964, 1909, 0, 1848, 1850, 1849, 1799, 1801,
	1800, 1798, 2031, 345, 1991, 1755, 1763, 1790, 1806, 1813,
	1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870, 1886, 1900,
	1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978, 1980, 468,
	252, 1882, 1907, 1945, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 3992, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 0, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 1855, 196, 0,
	0, 202, 0, 203, 205, 1840, 201, 1987, 2023, 1919,
	1933, 1824, 2003, 0, 1965, 445, 1858, 2007, 1807, 1837,
	2025, 1843, 1846, 1927, 1773, 1896, 356, 1834, 1774, 1757,
	1812, 1761, 1825, 1762, 1809, 259, 1805, 1968, 1899, 2005,
	1878, 1920, 1930, 258, 244, 1888, 1887, 1993, 1823, 1822,
	1925, 1982, 2004, 1877, 0, 0, 474, 0, 2014, 313,
	1979, 0, 472, 422, 338, 0, 0, 1873, 1988, 1894,
	1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921, 2010, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1917, 2001, 1828, 0, 1868,
	1926, 2030, 1760, 1913, 0, 1765, 1776, 2024, 1994, 1819,
	1820, 263, 0, 0, 0, 0, 0, 0, 0, 1871,
	1895, 1947, 1853, 0, 465, 1932, 1942, 1960, 1845, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 1910, 0, 0, 0, 1781, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 1788, 1758, 1816, 1949, 1759, 1756, 339,
	1777, 1962, 1992, 1854, 301, 0, 1998, 1852, 1851, 1936,
	1782, 1972, 2022, 1838, 310, 1780, 195, 1775, 1783, 1836,
	352, 1946, 1954, 0, 198, 312, 1969, 1810, 1827, 245,
	0, 391, 1922, 464, 0, 278, 1903, 390, 314, 457,
	1937, 2000, 463, 1839, 439, 473, 478, 271, 1879, 234,
	419, 261, 254, 1818, 1959, 1764, 284, 374, 249, 306,
	1857, 1928, 1811, 241, 1940, 1911, 1974, 418, 454, 200,
	333, 455, 477, 0, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 1970, 1953,
	1976, 1804, 1784, 1795, 1785, 1826, 2002, 293, 285, 1977,
	1975, 1829, 360, 224, 1892, 1885, 1872, 1950, 467, 2026,
	257, 1955, 469, 0, 405, 404, 1842, 292, 1956, 0,
	0, 384, 0, 302, 204, 1981, 482, 220, 308, 447,
	0, 277, 351, 1924, 361, 197, 379, 328, 330, 327,
	331, 282, 0, 0, 1952, 381, 407, 452, 222, 425,
	0, 0, 0, 397, 0, 0, 2008, 321, 266, 270,
	286, 297, 1923, 388, 426, 470, 1914, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 1948, 216, 237, 427, 210, 1996, 1971, 1905, 1860,
	1866, 1766, 0, 209, 1861, 1862, 1863, 1864, 1865, 1944,
	1815, 1831, 1803, 1918, 1802, 281, 1935, 460, 461, 246,
	1778, 2016, 211, 1779, 2015, 348, 355, 347, 2019, 2017,
	456, 1997, 1906, 1891, 1889, 1771, 1995, 1904, 1890, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	1893, 424, 319, 0, 206, 0, 423, 2006, 2032, 436,
	226, 1797, 1963, 451, 0, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 1939, 2029, 359, 392,
	233, 466, 420, 262, 1793, 0, 1796, 1791, 1794, 1792,
	1897, 1898, 2011, 2012, 2013, 1951, 1786, 0, 0, 1989,
	1990, 0, 1884, 1999, 1772, 0, 1967, 0, 0, 0,
	0, 1931, 2027, 1844, 242, 0, 1768, 1769, 1770, 0,
	1874, 1875, 0, 0, 1985, 1984, 1983, 1986, 0, 2020,
	2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883, 1915, 1916,
	1961, 1934, 1943, 1817, 1876, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 1902, 199, 212,
	311, 2028, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849, 1799,
	1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790, 1806,
	1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870, 1886,
	1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978, 1980,
	468, 252, 1882, 1907, 1945, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 1855, 196,
	0, 0, 202, 0, 203, 205, 1840, 201, 1987, 2023,
	1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007, 1807,
	1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834, 1774,
	1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968, 1899,
	2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993, 1823,
	1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0, 2014,
	313, 1979, 0, 472, 422, 338, 0, 0, 1873, 1988,
	1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921, 2010,
	0, 0, 0, 0, 0, 0, 4279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 2001, 1828, 0,
	1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024, 1994,
	1819, 1820, 263, 0, 0, 0, 0, 0, 0, 0,
	1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960, 1845,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 1910, 0, 0, 0, 1781, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759, 1756,
	339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852, 1851,
	1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775, 1783,
	1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810, 1827,
	245, 0, 391, 1922, 464, 0, 278, 1903, 390, 314,
	457, 1937, 2000, 463, 1839, 439, 473, 478, 271, 1879,
	234, 419, 261, 254, 1818, 1959, 1764, 284, 374, 249,
	306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 1970,
	1953, 1976, 1804, 1784, 1795, 4282, 4283, 4284, 293, 285,
	1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950, 467,
	2026, 257, 1955, 469, 0, 405, 404, 1842, 292, 1956,
	0, 0, 384, 0, 302, 204, 1981, 482, 220, 308,
	447, 0, 277, 351, 1924, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 1952, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 2008, 321, 266,
	270, 286, 297, 1923, 388, 426, 470, 1914, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 1948, 216, 237, 427, 210, 1996, 1971, 1905,
	1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864, 1865,
	1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460, 461,
	246, 1778, 2016, 211, 1779, 2015, 348, 355, 347, 2019,
	2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904, 1890,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 1893, 424, 319, 0, 206, 0, 423, 2006, 2032,
	436, 226, 1797, 1963, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 1939, 2029, 359,
	392, 233, 466, 420, 262, 1793, 0, 1796, 1791, 1794,
	1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0, 0,
	1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0, 0,
	0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769, 1770,
	0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986, 0,
	2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883, 1915,
	1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 1902, 199,
	212, 311, 2028, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 1964, 1909, 0, 1848, 1850, 1849,
	1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763, 1790,
	1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869, 1870,
	1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973, 1978,
	1980, 468, 252, 1882, 1907, 1945, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 1855,
	196, 0, 0, 202, 0, 203, 205, 1840, 201, 1987,
	2023, 1919, 1933, 1824, 2003, 0, 1965, 445, 1858, 2007,
	1807, 1837, 2025, 1843, 1846, 1927, 1773, 1896, 356, 1834,
	1774, 1757, 1812, 1761, 1825, 1762, 1809, 259, 1805, 1968,
	1899, 2005, 1878, 1920, 1930, 258, 244, 1888, 1887, 1993,
	1823, 1822, 1925, 1982, 2004, 1877, 0, 0, 474, 0,
	2014, 313, 1979, 0, 472, 422, 338, 0, 0, 1873,
	1988, 1894, 1957, 1856, 1929, 1789, 1912, 2009, 1835, 1921,
	2010, 0, 0, 0, 0, 0, 0, 3119, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1917, 2001, 1828,
	0, 1868, 1926, 2030, 1760, 1913, 0, 1765, 1776, 2024,
	1994, 1819, 1820, 263, 0, 0, 0, 0, 0, 0,
	0, 1871, 1895, 1947, 1853, 0, 465, 1932, 1942, 1960,
	1845, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 1910, 0, 0, 0, 1781, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1788, 1758, 1816, 1949, 1759,
	1756, 339, 1777, 1962, 1992, 1854, 301, 0, 1998, 1852,
	1851, 1936, 1782, 1972, 2022, 1838, 310, 1780, 195, 1775,
	1783, 1836, 352, 1946, 1954, 0, 198, 312, 1969, 1810,
	1827, 245, 0, 391, 1922, 464, 0, 278, 1903, 390,
	314, 457, 1937, 2000, 463, 1839, 439, 473, 478, 271,
	1879, 234, 419, 261, 254, 1818, 1959, 1764, 284, 374,
	249, 306, 1857, 1928, 1811, 241, 1940, 1911, 1974, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	1970, 1953, 1976, 1804, 1784, 1795, 1785, 1826, 2002, 293,
	285, 1977, 1975, 1829, 360, 224, 1892, 1885, 1872, 1950,
	467, 2026, 257, 1955, 469, 0, 405, 404, 1842, 292,
	1956, 0, 0, 384, 0, 302, 204, 1981, 482, 220,
	308, 447, 0, 277, 351, 1924, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 1952, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 2008, 321,
	266, 270, 286, 297, 1923, 388, 426, 470, 1914, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 1948, 216, 237, 427, 210, 1996, 1971,
	1905, 1860, 1866, 1766, 0, 209, 1861, 1862, 1863, 1864,
	1865, 1944, 1815, 1831, 1803, 1918, 1802, 281, 1935, 460,
	461, 246, 1778, 2016, 211, 1779, 2015, 348, 355, 347,
	2019, 2017, 456, 1997, 1906, 1891, 1889, 1771, 1995, 1904,
	1890, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 1893, 424, 319, 0, 206, 0, 423, 2006,
	2032, 436, 226, 1797, 1963, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 1939, 2029,
	359, 392, 233, 466, 420, 262, 1793, 0, 1796, 1791,
	1794, 1792, 1897, 1898, 2011, 2012, 2013, 1951, 1786, 0,
	0, 1989, 1990, 0, 1884, 1999, 1772, 0, 1967, 0,
	0, 0, 0, 1931, 2027, 1844, 242, 0, 1768, 1769,
	1770, 0, 1874, 1875, 0, 0, 1985, 1984, 1983, 1986,
	0, 2020, 2018, 2021, 1787, 1808, 1830, 1880, 1881, 1883,
	1915, 1916, 1961, 1934, 1943, 1817, 1876, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 1902,
	199, 212, 311, 2028, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 1964, 1909, 0, 1848, 1850,
	1849, 1799, 1801, 1800, 1798, 2031, 345, 1991, 1755, 1763,
	1790, 1806, 1813, 1821, 1832, 1833, 1841, 1847, 1859, 1869,
	1870, 1886, 1900, 1901, 1908, 1938, 1941, 1958, 1966, 1973,
	1978, 1980, 468, 252, 1882, 1907, 1945, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	1855, 196, 0, 0, 202, 0, 203, 205, 1840, 201,
	1987, 2023, 1919, 1933, 584, 445, 578, 589, 571, 0,
	0, 0, 0, 0, 0, 0, 356, 0, 0, 635,
	0, 0, 0, 0, 0, 259, 0, 0, 579, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 313,
	0, 0, 472, 422, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 632, 633, 0, 727, 0, 728,
	730, 731, 732, 733, 0, 0, 0, 729, 2302, 3325,
	3326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 3320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 0, 570, 569, 572, 0, 0, 0, 339,
	0, 0, 0, 577, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 195, 0, 0, 0,
	352, 581, 0, 0, 198, 312, 585, 0, 0, 245,
	0, 391, 2299, 464, 0, 278, 0, 390, 314, 457,
	0, 588, 463, 0, 439, 473, 478, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 454, 200,
	333, 455, 477, 573, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 467, 0,
	257, 0, 469, 0, 405, 404, 576, 292, 0, 0,
	0, 384, 0, 302, 204, 0, 482, 220, 308, 447,
	0, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 0, 0, 0, 638, 407, 452, 222, 425,
	574, 575, 582, 583, 586, 587, 590, 321, 266, 270,
	286, 297, 0, 388, 426, 470, 0, 217, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 460, 461, 246,
	2300, 2301, 211, 0, 0, 348, 355, 347, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 436,
	226, 0, 0, 451, 0, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 466, 420, 262, 0, 0, 0, 3337, 1061, 0,
	3327, 3328, 3330, 3338, 3339, 3329, 3331, 3332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3333, 3334, 3335, 3336, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 580, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 0, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 584, 445,
	578, 589, 571, 0, 0, 0, 0, 0, 0, 0,
	356, 0, 0, 563, 0, 0, 0, 0, 0, 259,
	0, 0, 579, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 313, 0, 0, 472, 422, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 570, 569, 572,
	0, 0, 0, 339, 0, 0, 0, 577, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	195, 0, 0, 0, 352, 581, 0, 0, 198, 312,
	585, 0, 0, 245, 0, 391, 0, 464, 0, 278,
	0, 390, 314, 457, 0, 588, 463, 0, 439, 473,
	478, 271, 0, 234, 419, 261, 254, 0, 0, 0,
	284, 374, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 418, 454, 200, 333, 455, 477, 573, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 360, 224, 0, 0,
	0, 0, 467, 0, 257, 0, 469, 0, 405, 404,
	576, 292, 0, 0, 0, 384, 0, 302, 204, 0,
	482, 220, 308, 447, 0, 277, 351, 0, 361, 197,
	379, 328, 330, 327, 331, 282, 0, 0, 0, 566,
	407, 452, 222, 425, 574, 575, 582, 583, 586, 587,
	590, 321, 266, 270, 286, 297, 0, 388, 426, 470,
	0, 217, 593, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 604, 605, 606, 607, 608, 609, 610,
	611, 612, 613, 614, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 460, 461, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 436, 226, 0, 0, 451, 0, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 466, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 580, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 1473, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 493, 472,
	422, 338, 496, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1475, 1474, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 494, 0, 1469, 1470, 1468,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 1471, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 492, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 491, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 445, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 474, 190, 0, 313,
	0, 493, 472, 422, 338, 496, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 1160, 195, 0, 1156, 0,
	352, 0, 0, 177, 198, 312, 0, 0, 0, 245,
	1154, 391, 0, 464, 492, 278, 0, 390, 314, 457,
	0, 0, 463, 0, 439, 473, 478, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 454, 200,
	333, 455, 477, 166, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 467, 0,
	257, 0, 469, 180, 405, 404, 0, 292, 0, 181,
	170, 384, 182, 302, 204, 0, 482, 220, 308, 447,
	491, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 0, 381, 407, 452, 222, 425,
	173, 176, 185, 397, 186, 187, 0, 321, 266, 270,
	286, 297, 0, 388, 426, 470, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 460, 461, 246,
	0, 0, 211, 0, 0, 348, 355, 347, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 436,
	226, 0, 0, 451, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 466, 420, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 0, 196,
	42, 445, 202, 0, 203, 205, 0, 201, 0, 0,
	0, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 474, 190, 88, 313, 0, 0, 472, 422,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 675, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 96, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 195, 0, 0, 0, 352, 0, 0, 177,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 464,
	0, 278, 0, 390, 314, 457, 0, 0, 463, 0,
	439, 473, 478, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 454, 200, 333, 455, 477, 166,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 467, 0, 257, 0, 469, 180,
	405, 404, 0, 292, 0, 181, 170, 384, 182, 302,
	204, 0, 482, 220, 308, 447, 161, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	0, 381, 407, 452, 222, 425, 173, 176, 185, 397,
	186, 187, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 470, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 0, 216, 237,
	427, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 460, 461, 246, 0, 0, 211, 0,
	0, 348, 355, 347, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 0, 424, 319, 0,
	206, 0, 423, 0, 0, 436, 226, 0, 0, 451,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 0, 0, 359, 392, 233, 466, 420, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	676, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 0, 199, 212, 311, 109, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 669, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 474, 190, 0, 313, 0,
	493, 472, 422, 338, 496, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1700, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 3477, 195, 0, 0, 3476, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 492, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 482, 220, 308, 447, 491,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 0, 199, 212, 311,
	0, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 445, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 474, 190,
	0, 313, 0, 493, 472, 422, 338, 496, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3444, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 1160, 195, 0,
	0, 2453, 352, 0, 0, 177, 198, 312, 0, 0,
	0, 245, 0, 391, 0, 464, 492, 278, 0, 390,
	314, 457, 0, 0, 463, 0, 439, 473, 478, 271,
	0, 234, 419, 261, 254, 0, 0, 0, 284, 374,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 360, 224, 0, 0, 0, 0,
	467, 0, 257, 0, 469, 180, 405, 404, 0, 292,
	0, 181, 170, 384, 182, 302, 204, 0, 482, 220,
	308, 447, 491, 277, 351, 0, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 0, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 0, 321,
	266, 270, 286, 297, 0, 388, 426, 470, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 0, 216, 237, 427, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 460,
	461, 246, 0, 0, 211, 0, 0, 348, 355, 347,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 0, 424, 319, 0, 206, 0, 423, 0,
	0, 436, 226, 0, 0, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 0, 0,
	359, 392, 233, 466, 420, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 474, 190, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	675, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 482, 220, 308, 447, 161, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 0, 0, 194, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3163, 676,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 0, 199, 212, 311, 0, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 252, 669, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 445, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 474, 190, 0, 313, 0, 493,
	472, 422, 338, 496, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2883, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 1160, 195, 0, 0, 2453, 352, 0,
	0, 177, 198, 312, 0, 0, 0, 245, 0, 391,
	0, 464, 492, 278, 0, 390, 314, 457, 0, 0,
	463, 0, 439, 473, 478, 271, 0, 234, 419, 261,
	254, 0, 0, 0, 284, 374, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 418, 454, 200, 333, 455,
	477, 166, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	360, 224, 0, 0, 0, 0, 467, 0, 257, 0,
	469, 180, 405, 404, 0, 292, 0, 181, 170, 384,
	182, 302, 204, 0, 482, 220, 308, 447, 491, 277,
	351, 0, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 0, 381, 407, 452, 222, 425, 173, 176,
	185, 397, 186, 187, 0, 321, 266, 270, 286, 297,
	0, 388, 426, 470, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 0,
	216, 237, 427, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 460, 461, 246, 0, 0,
	211, 0, 0, 348, 355, 347, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 0, 424,
	319, 0, 206, 0, 423, 0, 0, 436, 226, 0,
	0, 451, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 0, 0, 359, 392, 233, 466,
	420, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 474, 190, 0,
	313, 0, 493, 472, 422, 338, 496, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1475, 1474, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 2257, 391, 0, 464, 492, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 482, 220, 308,
	447, 491, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 0, 199,
	212, 311, 0, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 445,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	474, 190, 0, 313, 0, 0, 472, 422, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 89, 0, 0, 0, 0, 0, 675,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	195, 0, 0, 0, 352, 0, 0, 177, 198, 312,
	0, 0, 0, 245, 0, 391, 0, 464, 0, 278,
	0, 390, 314, 457, 0, 0, 463, 0, 439, 473,
	478, 271, 0, 234, 419, 261, 254, 0, 0, 0,
	284, 374, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 418, 454, 200, 333, 455, 477, 166, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 360, 224, 0, 0,
	0, 0, 467, 0, 257, 0, 469, 180, 405, 404,
	0, 292, 0, 181, 170, 384, 182, 302, 204, 0,
	482, 220, 308, 447, 161, 277, 351, 0, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 0, 381,
	407, 452, 222, 425, 173, 176, 185, 397, 186, 187,
	0, 321, 266, 270, 286, 297, 0, 388, 426, 470,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 460, 461, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 436, 226, 0, 0, 451, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 466, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 0, 0, 194, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 676, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 669, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 493, 472,
	422, 338, 496, 495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3435, 0, 0, 0,
	0, 0, 3437, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 492, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 491, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 445, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 474, 190, 0, 313,
	0, 493, 472, 422, 338, 496, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 2038, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 195, 0, 0, 0,
	352, 0, 0, 177, 198, 312, 0, 0, 0, 245,
	0, 391, 0, 464, 492, 278, 0, 390, 314, 457,
	0, 0, 463, 0, 439, 473, 478, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 454, 200,
	333, 455, 477, 166, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 467, 0,
	257, 0, 469, 180, 405, 404, 0, 292, 0, 181,
	170, 384, 182, 302, 204, 0, 482, 220, 308, 447,
	491, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 0, 381, 407, 452, 222, 425,
	173, 176, 185, 397, 186, 187, 0, 321, 266, 270,
	286, 297, 0, 388, 426, 470, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 460, 461, 246,
	0, 0, 211, 0, 0, 348, 355, 347, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 436,
	226, 0, 0, 451, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 466, 420, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 493, 472, 422, 338, 496, 495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2036, 2038, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 492, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 491, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	0, 199, 212, 311, 0, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 445, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 474, 190, 0, 313, 0, 493, 472, 422,
	338, 496, 495, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1700, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 1160, 195, 0, 0, 0, 352, 0, 0, 177,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 464,
	492, 278, 0, 390, 314, 457, 0, 0, 463, 0,
	439, 473, 478, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 454, 200, 333, 455, 477, 166,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 467, 0, 257, 0, 469, 180,
	405, 404, 0, 292, 0, 181, 170, 384, 182, 302,
	204, 0, 482, 220, 308, 447, 491, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	0, 381, 407, 452, 222, 425, 173, 176, 185, 397,
	186, 187, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 470, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 0, 216, 237,
	427, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 460, 461, 246, 0, 0, 211, 0,
	0, 348, 355, 347, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 0, 424, 319, 0,
	206, 0, 423, 0, 0, 436, 226, 0, 0, 451,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 0, 0, 359, 392, 233, 466, 420, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 474, 190, 0, 313, 0,
	493, 472, 422, 338, 496, 495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3298, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 177, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 492, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 166, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 180, 405, 404, 0, 292, 0, 181, 170,
	384, 182, 302, 204, 0, 482, 220, 308, 447, 491,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 175, 183, 0, 381, 407, 452, 222, 425, 173,
	176, 185, 397, 186, 187, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 178, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 174, 179,
	0, 0, 0, 242, 164, 0, 0, 0, 165, 0,
	0, 167, 168, 0, 0, 0, 0, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 0, 199, 212, 311,
	0, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 184, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 445, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 474, 190,
	0, 313, 0, 493, 472, 422, 338, 496, 495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 301, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 195, 0,
	0, 0, 352, 0, 0, 177, 198, 312, 0, 0,
	0, 245, 0, 391, 0, 464, 492, 278, 0, 390,
	314, 457, 0, 0, 463, 0, 439, 473, 478, 271,
	0, 234, 419, 261, 254, 0, 0, 0, 284, 374,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 360, 224, 0, 0, 0, 0,
	467, 0, 257, 0, 469, 180, 405, 404, 0, 292,
	0, 181, 170, 384, 182, 302, 204, 0, 482, 220,
	308, 447, 491, 277, 351, 0, 361, 197, 379, 328,
	330, 327, 331, 282, 175, 183, 0, 381, 407, 452,
	222, 425, 173, 176, 185, 397, 186, 187, 0, 321,
	266, 270, 286, 297, 0, 388, 426, 470, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 0, 216, 237, 427, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 460,
	461, 246, 0, 0, 211, 0, 0, 348, 355, 347,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 0, 424, 319, 0, 206, 0, 423, 0,
	0, 436, 226, 0, 0, 451, 178, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 0, 0,
	359, 392, 233, 466, 420, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 174, 179, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 184, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 474, 190, 0, 313, 0, 493, 472, 422, 338,
	496, 495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3437, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 177, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 492,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 180, 405,
	404, 0, 292, 0, 181, 170, 384, 182, 302, 204,
	0, 482, 220, 308, 447, 491, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 175, 183, 0,
	381, 407, 452, 222, 425, 173, 176, 185, 397, 186,
	187, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 178,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 174, 179, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 0, 199, 212, 311, 0, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 184,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 445, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 474, 190, 0, 313, 0, 493,
	472, 422, 338, 496, 495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 301, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 195, 0, 0, 0, 352, 0,
	0, 177, 198, 312, 0, 0, 0, 245, 0, 391,
	0, 464, 492, 278, 0, 390, 314, 457, 0, 0,
	463, 0, 439, 473, 478, 271, 0, 234, 419, 261,
	254, 0, 0, 0, 284, 374, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 418, 454, 200, 333, 455,
	477, 166, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	360, 224, 0, 0, 0, 0, 467, 0, 257, 0,
	469, 180, 405, 404, 0, 292, 0, 181, 170, 384,
	182, 302, 204, 0, 482, 220, 308, 447, 491, 277,
	351, 0, 361, 197, 379, 328, 330, 327, 331, 282,
	175, 183, 0, 381, 407, 452, 222, 425, 173, 176,
	185, 397, 186, 187, 0, 321, 266, 270, 286, 297,
	0, 388, 426, 470, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 0,
	216, 237, 427, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 460, 461, 246, 0, 0,
	211, 0, 0, 348, 355, 347, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 0, 424,
	319, 0, 206, 0, 423, 0, 0, 436, 226, 0,
	0, 451, 178, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 0, 0, 359, 392, 233, 466,
	420, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 174, 179, 0,
	0, 0, 242, 164, 0, 0, 0, 165, 0, 0,
	167, 168, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 184, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 474, 190, 0,
	313, 0, 493, 472, 422, 338, 496, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 177, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 492, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 166, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 180, 405, 404, 0, 292, 0,
	181, 170, 384, 182, 302, 204, 0, 482, 220, 308,
	447, 491, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 175, 183, 0, 381, 407, 452, 222,
	425, 173, 176, 185, 397, 186, 187, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 178, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	174, 179, 0, 0, 0, 242, 164, 0, 0, 0,
	165, 0, 0, 167, 168, 0, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 0, 199,
	212, 311, 0, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 184, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 445,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	474, 190, 0, 313, 0, 493, 472, 422, 338, 496,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1197,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 301, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	195, 0, 0, 0, 352, 0, 0, 177, 198, 312,
	0, 0, 0, 245, 0, 391, 0, 464, 492, 278,
	0, 390, 314, 457, 0, 0, 463, 0, 439, 473,
	478, 271, 0, 234, 419, 261, 254, 0, 0, 0,
	284, 374, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 418, 454, 200, 333, 455, 477, 166, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 360, 224, 0, 0,
	0, 0, 467, 0, 257, 0, 469, 180, 405, 404,
	0, 292, 0, 181, 170, 384, 182, 302, 204, 0,
	482, 220, 308, 447, 491, 277, 351, 0, 361, 197,
	379, 328, 330, 327, 331, 282, 175, 183, 0, 381,
	407, 452, 222, 425, 173, 176, 185, 397, 186, 187,
	0, 321, 266, 270, 286, 297, 0, 388, 426, 470,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 460, 461, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 436, 226, 0, 0, 451, 178, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 466, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 174, 179, 0, 0, 0, 242, 164,
	0, 0, 0, 165, 0, 0, 167, 168, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 184, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 543, 540, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 161, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 445, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 474, 190, 0, 313,
	0, 493, 472, 422, 338, 496, 495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 494, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 195, 0, 0, 0,
	352, 0, 0, 177, 198, 312, 0, 0, 0, 245,
	0, 391, 0, 464, 492, 278, 0, 390, 314, 457,
	0, 0, 463, 0, 439, 473, 478, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 454, 200,
	333, 455, 477, 166, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 467, 0,
	257, 0, 469, 180, 405, 404, 0, 292, 0, 181,
	170, 384, 182, 302, 204, 0, 482, 220, 308, 447,
	491, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 0, 381, 407, 452, 222, 425,
	173, 176, 185, 397, 186, 187, 0, 321, 266, 270,
	286, 297, 0, 388, 426, 470, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 460, 461, 246,
	0, 0, 211, 0, 0, 348, 355, 347, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 436,
	226, 0, 0, 451, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 466, 420, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 2525, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 161, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	0, 199, 212, 311, 0, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 445, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 474, 190, 0, 313, 0, 0, 472, 422,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 2411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	301, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 195, 0, 0, 0, 352, 0, 0, 177,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 464,
	0, 278, 0, 390, 314, 457, 0, 0, 463, 0,
	439, 473, 478, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 454, 200, 333, 455, 477, 166,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 467, 0, 257, 0, 469, 180,
	405, 404, 0, 292, 0, 181, 170, 384, 182, 302,
	204, 0, 482, 220, 308, 447, 161, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 175, 183,
	0, 381, 407, 452, 222, 425, 173, 176, 185, 397,
	186, 187, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 470, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 0, 216, 237,
	427, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 460, 461, 246, 0, 0, 211, 0,
	0, 348, 355, 347, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 0, 424, 319, 0,
	206, 0, 423, 0, 0, 436, 226, 0, 0, 451,
	178, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 0, 0, 359, 392, 233, 466, 420, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 0, 0, 194, 0, 0,
	0, 0, 0, 188, 189, 174, 179, 0, 0, 0,
	242, 164, 0, 0, 0, 165, 0, 0, 167, 168,
	0, 0, 0, 0, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	184, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 0, 196, 0, 0, 202, 0,
	203, 205, 445, 201, 0, 0, 1603, 0, 0, 0,
	0, 0, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 474, 190, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	177, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	166, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	180, 405, 404, 0, 292, 0, 181, 170, 384, 182,
	302, 204, 0, 482, 220, 308, 447, 161, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 175,
	183, 0, 381, 407, 452, 222, 425, 173, 176, 185,
	397, 186, 187, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 178, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 0, 0, 194, 0,
	0, 0, 0, 0, 188, 189, 174, 179, 0, 0,
	0, 242, 164, 0, 0, 0, 165, 0, 0, 167,
	168, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 184, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 445, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 474, 190, 0, 313,
	0, 0, 472, 422, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 155, 0, 301, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 195, 0, 0, 0,
	352, 0, 0, 177, 198, 312, 0, 0, 0, 245,
	0, 391, 0, 464, 0, 278, 0, 390, 314, 457,
	0, 0, 463, 0, 439, 473, 478, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 454, 200,
	333, 455, 477, 166, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 467, 0,
	257, 0, 469, 180, 405, 404, 0, 292, 0, 181,
	170, 384, 182, 302, 204, 0, 482, 220, 308, 447,
	161, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 175, 183, 0, 381, 407, 452, 222, 425,
	173, 176, 185, 397, 186, 187, 0, 321, 266, 270,
	286, 297, 0, 388, 426, 470, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 460, 461, 246,
	0, 0, 211, 0, 0, 348, 355, 347, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 436,
	226, 0, 0, 451, 178, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 466, 420, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 0,
	0, 194, 0, 0, 0, 0, 0, 188, 189, 174,
	179, 0, 0, 0, 242, 164, 0, 0, 0, 165,
	0, 0, 167, 168, 0, 0, 0, 0, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 184, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 474,
	190, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 177, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 166, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 180, 405, 404, 0,
	292, 0, 181, 170, 384, 182, 302, 204, 0, 482,
	220, 308, 447, 161, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 175, 183, 0, 381, 407,
	452, 222, 425, 173, 176, 185, 397, 186, 187, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 178, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 0, 0, 194, 0, 0, 0, 0, 0,
	188, 189, 174, 179, 0, 0, 0, 242, 164, 0,
	0, 0, 165, 0, 0, 167, 168, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	0, 199, 212, 311, 0, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 184, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 445, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 313, 0, 0, 472, 422,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 375, 283, 1486, 1485, 1495,
	1496, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1487, 0,
	0, 1497, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 195, 0, 0, 0, 352, 0, 0, 0,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 464,
	0, 278, 0, 390, 314, 457, 0, 0, 463, 0,
	439, 473, 478, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 454, 200, 333, 455, 477, 0,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 467, 0, 257, 0, 469, 0,
	405, 404, 0, 292, 0, 0, 0, 384, 0, 302,
	204, 0, 482, 220, 308, 447, 0, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 0, 0,
	0, 381, 407, 452, 222, 425, 0, 0, 0, 397,
	0, 0, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 470, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 0, 216, 237,
	427, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 460, 461, 246, 0, 0, 211, 0,
	0, 348, 355, 347, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 0, 424, 319, 0,
	206, 0, 423, 0, 0, 436, 226, 0, 0, 451,
	0, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 0, 0, 359, 392, 233, 466, 420, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 727, 1158, 728, 730, 731, 732, 733,
	0, 0, 0, 729, 2302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 724, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 725, 726, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 0, 199, 212, 311,
	0, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 0, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 445, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 313, 0, 0, 472, 422, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 195, 0,
	0, 0, 352, 0, 0, 0, 198, 312, 0, 0,
	0, 245, 0, 391, 0, 464, 0, 278, 0, 390,
	314, 457, 0, 0, 463, 0, 439, 473, 478, 271,
	0, 234, 419, 261, 254, 0, 0, 0, 284, 374,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 418,
	454, 200, 333, 455, 477, 166, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 360, 224, 0, 0, 0, 0,
	467, 0, 257, 0, 469, 0, 405, 404, 0, 292,
	0, 0, 0, 384, 0, 302, 204, 0, 482, 220,
	308, 447, 0, 277, 351, 0, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 0, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 0, 321,
	266, 270, 286, 297, 0, 388, 426, 470, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 0, 216, 237, 427, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 460,
	461, 246, 0, 0, 211, 0, 0, 348, 355, 347,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 0, 424, 319, 0, 206, 0, 423, 0,
	0, 436, 226, 0, 0, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 0, 0,
	359, 392, 233, 466, 420, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 164, 0, 0,
	0, 165, 0, 0, 167, 168, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 650, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 166, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	164, 0, 0, 0, 165, 0, 0, 167, 168, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 0, 199, 212, 311, 0, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 0,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 445, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 356, 0, 0, 4377, 0, 0,
	0, 0, 0, 259, 4375, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 0, 0, 313, 0, 0,
	472, 422, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 633, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 195, 0, 0, 0, 352, 0,
	0, 0, 198, 312, 0, 0, 0, 245, 0, 391,
	0, 464, 0, 278, 0, 390, 314, 457, 0, 0,
	463, 0, 439, 473, 478, 271, 0, 234, 419, 261,
	254, 0, 0, 0, 284, 374, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 418, 454, 200, 333, 455,
	477, 0, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	360, 224, 0, 0, 0, 0, 467, 0, 257, 0,
	469, 0, 405, 404, 0, 292, 0, 4376, 0, 384,
	0, 302, 204, 0, 482, 220, 308, 447, 0, 277,
	351, 0, 361, 197, 379, 328, 330, 327, 331, 282,
	0, 0, 0, 381, 407, 452, 222, 425, 0, 0,
	0, 397, 0, 0, 0, 321, 266, 270, 286, 297,
	0, 388, 426, 470, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 0,
	216, 237, 427, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 460, 461, 246, 0, 0,
	211, 0, 0, 348, 355, 347, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 0, 424,
	319, 0, 206, 0, 423, 0, 0, 436, 226, 0,
	0, 451, 0, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 0, 0, 359, 392, 233, 466,
	420, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2955, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 2956, 2957, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 0, 199,
	212, 311, 0, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 445,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	1620, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 313, 0, 0, 472, 422, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	195, 0, 0, 0, 352, 0, 0, 0, 198, 312,
	0, 0, 0, 245, 0, 391, 0, 464, 0, 278,
	0, 390, 314, 457, 0, 0, 463, 0, 439, 473,
	478, 271, 0, 234, 419, 261, 254, 0, 0, 0,
	284, 374, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 418, 454, 200, 333, 455, 477, 0, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 360, 224, 0, 0,
	0, 0, 467, 0, 257, 0, 469, 0, 405, 404,
	0, 292, 0, 0, 0, 384, 0, 302, 204, 0,
	482, 220, 308, 447, 0, 277, 351, 0, 361, 197,
	379, 328, 330, 327, 331, 282, 0, 0, 0, 381,
	407, 452, 222, 425, 0, 0, 0, 397, 0, 0,
	0, 321, 266, 270, 286, 297, 0, 388, 426, 470,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 460, 461, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 436, 226, 0, 0, 451, 0, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 466, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	2455, 0, 0, 474, 0, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2892, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	2454, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 0, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 445, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 313,
	0, 0, 472, 422, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 633, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 195, 0, 0, 0,
	352, 0, 0, 0, 198, 312, 0, 0, 0, 245,
	0, 391, 0, 464, 0, 278, 0, 390, 314, 457,
	0, 0, 463, 0, 439, 473, 478, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 454, 200,
	333, 455, 477, 0, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 467, 0,
	257, 0, 469, 0, 405, 404, 0, 292, 0, 0,
	0, 384, 0, 302, 204, 0, 482, 220, 308, 447,
	0, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 0, 0, 0, 381, 407, 452, 222, 425,
	0, 0, 0, 397, 0, 0, 0, 321, 266, 270,
	286, 297, 0, 388, 426, 470, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 460, 461, 246,
	0, 0, 211, 0, 0, 348, 355, 347, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 436,
	226, 0, 0, 451, 0, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 466, 420, 262, 0, 0, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 632, 633, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 0, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 482,
	220, 308, 447, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	452, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	0, 199, 212, 311, 0, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 0, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 445, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 356, 0, 0, 3491, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 313, 0, 0, 472, 422,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 375, 283, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 195, 0, 0, 0, 352, 0, 0, 0,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 464,
	0, 278, 0, 390, 314, 457, 0, 0, 463, 0,
	439, 473, 478, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 454, 200, 333, 455, 477, 0,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 467, 0, 257, 0, 469, 0,
	405, 404, 0, 292, 0, 0, 0, 384, 0, 302,
	204, 0, 482, 220, 308, 447, 0, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 0, 0,
	0, 381, 407, 452, 222, 425, 0, 0, 0, 397,
	0, 0, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 470, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 0, 216, 237,
	427, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 460, 461, 246, 0, 0, 211, 0,
	0, 348, 355, 347, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 0, 424, 319, 0,
	206, 0, 423, 0, 0, 436, 226, 0, 0, 451,
	0, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 0, 0, 359, 392, 233, 466, 420, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 3489, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 258, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 0, 199, 212, 311,
	0, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 0, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 445, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 356, 0,
	0, 3487, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 313, 0, 0, 472, 422, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 195, 0,
	0, 0, 352, 0, 0, 0, 198, 312, 0, 0,
	0, 245, 0, 391, 0, 464, 0, 278, 0, 390,
	314, 457, 0, 0, 463, 0, 439, 473, 478, 271,
	0, 234, 419, 261, 254, 0, 0, 0, 284, 374,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 360, 224, 0, 0, 0, 0,
	467, 0, 257, 0, 469, 0, 405, 404, 0, 292,
	0, 0, 0, 384, 0, 302, 204, 0, 482, 220,
	308, 447, 0, 277, 351, 0, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 0, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 0, 321,
	266, 270, 286, 297, 0, 388, 426, 470, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 0, 216, 237, 427, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 460,
	461, 246, 0, 0, 211, 0, 0, 348, 355, 347,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 0, 424, 319, 0, 206, 0, 423, 0,
	0, 436, 226, 0, 0, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 0, 0,
	359, 392, 233, 466, 420, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 3485, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 0, 199, 212, 311, 0, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 0,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 445, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 356, 0, 0, 3480, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 0, 0, 313, 0, 0,
	472, 422, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 195, 0, 0, 0, 352, 0,
	0, 0, 198, 312, 0, 0, 0, 245, 0, 391,
	0, 464, 0, 278, 0, 390, 314, 457, 0, 0,
	463, 0, 439, 473, 478, 271, 0, 234, 419, 261,
	254, 0, 0, 0, 284, 374, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 418, 454, 200, 333, 455,
	477, 0, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	360, 224, 0, 0, 0, 0, 467, 0, 257, 0,
	469, 0, 405, 404, 0, 292, 0, 0, 0, 384,
	0, 302, 204, 0, 482, 220, 308, 447, 0, 277,
	351, 0, 361, 197, 379, 328, 330, 327, 331, 282,
	0, 0, 0, 381, 407, 452, 222, 425, 0, 0,
	0, 397, 0, 0, 0, 321, 266, 270, 286, 297,
	0, 388, 426, 470, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 0,
	216, 237, 427, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 460, 461, 246, 0, 0,
	211, 0, 0, 348, 355, 347, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 0, 424,
	319, 0, 206, 0, 423, 0, 0, 436, 226, 0,
	0, 451, 0, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 0, 0, 359, 392, 233, 466,
	420, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	3467, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 0, 199,
	212, 311, 0, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 445,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	356, 0, 0, 3465, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 313, 0, 0, 472, 422, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	195, 0, 0, 0, 352, 0, 0, 0, 198, 312,
	0, 0, 0, 245, 0, 391, 0, 464, 0, 278,
	0, 390, 314, 457, 0, 0, 463, 0, 439, 473,
	478, 271, 0, 234, 419, 261, 254, 0, 0, 0,
	284, 374, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 418, 454, 200, 333, 455, 477, 0, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 360, 224, 0, 0,
	0, 0, 467, 0, 257, 0, 469, 0, 405, 404,
	0, 292, 0, 0, 0, 384, 0, 302, 204, 0,
	482, 220, 308, 447, 0, 277, 351, 0, 361, 197,
	379, 328, 330, 327, 331, 282, 0, 0, 0, 381,
	407, 452, 222, 425, 0, 0, 0, 397, 0, 0,
	0, 321, 266, 270, 286, 297, 0, 388, 426, 470,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 460, 461, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 436, 226, 0, 0, 451, 0, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 466, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 445, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 0, 0, 0, 0, 0, 0,
	258, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 474, 0, 0, 313, 0, 0, 472,
	422, 338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 375, 283, 0, 0,
	0, 0, 0, 0, 3404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 0,
	0, 301, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 310, 0, 195, 0, 0, 0, 352, 0, 0,
	0, 198, 312, 0, 0, 0, 245, 0, 391, 0,
	464, 0, 278, 0, 390, 314, 457, 0, 0, 463,
	0, 439, 473, 478, 271, 0, 234, 419, 261, 254,
	0, 0, 0, 284, 374, 249, 306, 0, 0, 0,
	241, 0, 0, 0, 418, 454, 200, 333, 455, 477,
	0, 272, 410, 273, 438, 264, 235, 377, 214, 304,
	0, 0, 255, 299, 0, 0, 480, 471, 225, 274,
	385, 389, 366, 221, 446, 334, 344, 238, 240, 239,
	215, 411, 453, 228, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 285, 0, 0, 0, 360,
	224, 0, 0, 0, 0, 467, 0, 257, 0, 469,
	0, 405, 404, 0, 292, 0, 0, 0, 384, 0,
	302, 204, 0, 482, 220, 308, 447, 0, 277, 351,
	0, 361, 197, 379, 328, 330, 327, 331, 282, 0,
	0, 0, 381, 407, 452, 222, 425, 0, 0, 0,
	397, 0, 0, 0, 321, 266, 270, 286, 297, 0,
	388, 426, 470, 0, 217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 428, 443, 399, 280,
	320, 322, 430, 435, 431, 432, 429, 434, 433, 395,
	396, 208, 437, 462, 229, 406, 409, 481, 0, 216,
	237, 427, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 0, 460, 461, 246, 0, 0, 211,
	0, 0, 348, 355, 347, 0, 0, 456, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 269, 288, 372,
	316, 373, 289, 342, 341, 343, 318, 0, 424, 319,
	0, 206, 0, 423, 0, 0, 436, 226, 0, 0,
	451, 0, 380, 227, 279, 267, 371, 346, 218, 291,
	421, 307, 315, 0, 0, 359, 392, 233, 466, 420,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 368, 207, 219, 450, 232, 253, 251, 268,
	303, 329, 336, 365, 408, 414, 415, 440, 441, 442,
	444, 256, 332, 260, 231, 386, 230, 317, 294, 367,
	448, 449, 376, 248, 0, 199, 212, 311, 0, 383,
	276, 335, 412, 337, 298, 247, 479, 340, 382, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 252, 0,
	0, 0, 213, 223, 236, 250, 265, 0, 275, 287,
	290, 295, 296, 300, 305, 323, 324, 325, 326, 349,
	350, 353, 354, 357, 358, 362, 363, 364, 369, 370,
	378, 0, 387, 398, 400, 401, 402, 403, 413, 416,
	417, 458, 459, 475, 476, 445, 196, 0, 0, 202,
	0, 203, 205, 0, 201, 0, 356, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 258, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 313,
	0, 0, 472, 422, 338, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3395,
	0, 0, 0, 0, 0, 1158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 465, 0, 0, 0, 0, 375,
	283, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 301, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 310, 0, 195, 0, 0, 0,
	352, 0, 0, 0, 198, 312, 0, 0, 0, 245,
	0, 391, 0, 464, 0, 278, 0, 390, 314, 457,
	0, 0, 463, 0, 439, 473, 478, 271, 0, 234,
	419, 261, 254, 0, 0, 0, 284, 374, 249, 306,
	0, 0, 0, 241, 0, 0, 0, 418, 454, 200,
	333, 455, 477, 0, 272, 410, 273, 438, 264, 235,
	377, 214, 304, 0, 0, 255, 299, 0, 0, 480,
	471, 225, 274, 385, 389, 366, 221, 446, 334, 344,
	238, 240, 239, 215, 411, 453, 228, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 285, 0,
	0, 0, 360, 224, 0, 0, 0, 0, 467, 0,
	257, 0, 469, 0, 405, 404, 0, 292, 0, 0,
	0, 384, 0, 302, 204, 0, 482, 220, 308, 447,
	0, 277, 351, 0, 361, 197, 379, 328, 330, 327,
	331, 282, 0, 0, 0, 381, 407, 452, 222, 425,
	0, 0, 0, 397, 0, 0, 0, 321, 266, 270,
	286, 297, 0, 388, 426, 470, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 428,
	443, 399, 280, 320, 322, 430, 435, 431, 432, 429,
	434, 433, 395, 396, 208, 437, 462, 229, 406, 409,
	481, 0, 216, 237, 427, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 0, 460, 461, 246,
	0, 0, 211, 0, 0, 348, 355, 347, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	269, 288, 372, 316, 373, 289, 342, 341, 343, 318,
	0, 424, 319, 0, 206, 0, 423, 0, 0, 436,
	226, 0, 0, 451, 0, 380, 227, 279, 267, 371,
	346, 218, 291, 421, 307, 315, 0, 0, 359, 392,
	233, 466, 420, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 368, 207, 219, 450, 232,
	253, 251, 268, 303, 329, 336, 365, 408, 414, 415,
	440, 441, 442, 444, 256, 332, 260, 231, 386, 230,
	317, 294, 367, 448, 449, 376, 248, 0, 199, 212,
	311, 0, 383, 276, 335, 412, 337, 298, 247, 479,
	340, 382, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	468, 252, 0, 0, 0, 213, 223, 236, 250, 265,
	0, 275, 287, 290, 295, 296, 300, 305, 323, 324,
	325, 326, 349, 350, 353, 354, 357, 358, 362, 363,
	364, 369, 370, 378, 0, 387, 398, 400, 401, 402,
	403, 413, 416, 417, 458, 459, 475, 476, 445, 196,
	0, 0, 202, 0, 203, 205, 0, 201, 0, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	0, 0, 0, 0, 0, 0, 258, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	0, 0, 313, 0, 0, 472, 422, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 89, 0, 0, 0, 0, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 375, 283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 310, 0, 195,
	0, 0, 0, 352, 0, 0, 0, 198, 312, 0,
	0, 0, 245, 0, 391, 0, 464, 0, 278, 0,
	390, 314, 457, 0, 0, 463, 0, 439, 473, 478,
	271, 0, 234, 419, 261, 254, 0, 0, 0, 284,
	374, 249, 306, 0, 0, 0, 241, 0, 0, 0,
	418, 454, 200, 333, 455, 477, 0, 272, 410, 273,
	438, 264, 235, 377, 214, 304, 0, 0, 255, 299,
	0, 0, 480, 471, 225, 274, 385, 389, 366, 221,
	446, 334, 344, 238, 240, 239, 215, 411, 453, 228,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 285, 0, 0, 0, 360, 224, 0, 0, 0,
	0, 467, 0, 257, 0, 469, 0, 405, 404, 0,
	292, 0, 0, 0, 384, 0, 302, 204, 0, 482,
	220, 308, 447, 0, 277, 351, 0, 361, 197, 379,
	328, 330, 327, 331, 282, 0, 0, 0, 381, 407,
	452, 222, 425, 0, 0, 0, 397, 0, 0, 0,
	321, 266, 270, 286, 297, 0, 388, 426, 470, 0,
	217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 428, 443, 399, 280, 320, 322, 430, 435,
	431, 432, 429, 434, 433, 395, 396, 208, 437, 462,
	229, 406, 409, 481, 0, 216, 237, 427, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 0,
	460, 461, 246, 0, 0, 211, 0, 0, 348, 355,
	347, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 269, 288, 372, 316, 373, 289, 342,
	341, 343, 318, 0, 424, 319, 0, 206, 0, 423,
	0, 0, 436, 226, 0, 0, 451, 0, 380, 227,
	279, 267, 371, 346, 218, 291, 421, 307, 315, 0,
	0, 359, 392, 233, 466, 420, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 368, 207,
	219, 450, 232, 253, 251, 268, 303, 329, 336, 365,
	408, 414, 415, 440, 441, 442, 444, 256, 332, 260,
	231, 386, 230, 317, 294, 367, 448, 449, 376, 248,
	0, 199, 212, 311, 0, 383, 276, 335, 412, 337,
	298, 247, 479, 340, 382, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 252, 0, 0, 0, 213, 223,
	236, 250, 265, 0, 275, 287, 290, 295, 296, 300,
	305, 323, 324, 325, 326, 349, 350, 353, 354, 357,
	358, 362, 363, 364, 369, 370, 378, 0, 387, 398,
	400, 401, 402, 403, 413, 416, 417, 458, 459, 475,
	476, 445, 196, 0, 0, 202, 0, 203, 205, 0,
	201, 0, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 258,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 313, 0, 0, 472, 422,
	338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 375, 283, 0, 0, 0,
	0, 0, 0, 2576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 0, 195, 0, 0, 0, 352, 0, 0, 0,
	198, 312, 0, 0, 0, 245, 0, 391, 0, 464,
	0, 278, 0, 390, 314, 457, 0, 0, 463, 0,
	439, 473, 478, 271, 0, 234, 419, 261, 254, 0,
	0, 0, 284, 374, 249, 306, 0, 0, 0, 241,
	0, 0, 0, 418, 454, 200, 333, 455, 477, 0,
	272, 410, 273, 438, 264, 235, 377, 214, 304, 0,
	0, 255, 299, 0, 0, 480, 471, 225, 274, 385,
	389, 366, 221, 446, 334, 344, 238, 240, 239, 215,
	411, 453, 228, 243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 285, 0, 0, 0, 360, 224,
	0, 0, 0, 0, 467, 0, 257, 0, 469, 0,
	405, 404, 0, 292, 0, 0, 0, 384, 0, 302,
	204, 0, 482, 220, 308, 447, 0, 277, 351, 0,
	361, 197, 379, 328, 330, 327, 331, 282, 0, 0,
	0, 381, 407, 452, 222, 425, 0, 0, 0, 397,
	0, 0, 0, 321, 266, 270, 286, 297, 0, 388,
	426, 470, 0, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 428, 443, 399, 280, 320,
	322, 430, 435, 431, 432, 429, 434, 433, 395, 396,
	208, 437, 462, 229, 406, 409, 481, 0, 216, 237,
	427, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 0, 460, 461, 246, 0, 0, 211, 0,
	0, 348, 355, 347, 0, 0, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 269, 288, 372, 316,
	373, 289, 342, 341, 343, 318, 0, 424, 319, 0,
	206, 0, 423, 0, 0, 436, 226, 0, 0, 451,
	0, 380, 227, 279, 267, 371, 346, 218, 291, 421,
	307, 315, 0, 0, 359, 392, 233, 466, 420, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 368, 207, 219, 450, 232, 253, 251, 268, 303,
	329, 336, 365, 408, 414, 415, 440, 441, 442, 444,
	256, 332, 260, 231, 386, 230, 317, 294, 367, 448,
	449, 376, 248, 0, 199, 212, 311, 0, 383, 276,
	335, 412, 337, 298, 247, 479, 340, 382, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 468, 252, 0, 0,
	0, 213, 223, 236, 250, 265, 0, 275, 287, 290,
	295, 296, 300, 305, 323, 324, 325, 326, 349, 350,
	353, 354, 357, 358, 362, 363, 364, 369, 370, 378,
	0, 387, 398, 400, 401, 402, 403, 413, 416, 417,
	458, 459, 475, 476, 445, 196, 0, 0, 202, 0,
	203, 205, 0, 201, 0, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 2721, 2720, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 313, 0,
	0, 472, 422, 338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 465, 0, 0, 0, 0, 375, 283,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 301, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 310, 0, 195, 0, 0, 0, 352,
	0, 0, 0, 198, 312, 0, 0, 0, 245, 0,
	391, 0, 464, 0, 278, 0, 390, 314, 457, 0,
	0, 463, 0, 439, 473, 478, 271, 0, 234, 419,
	261, 254, 0, 0, 0, 284, 374, 249, 306, 0,
	0, 0, 241, 0, 0, 0, 418, 454, 200, 333,
	455, 477, 0, 272, 410, 273, 438, 264, 235, 377,
	214, 304, 0, 0, 255, 299, 0, 0, 480, 471,
	225, 274, 385, 389, 366, 221, 446, 334, 344, 238,
	240, 239, 215, 411, 453, 228, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 285, 0, 0,
	0, 360, 224, 0, 0, 0, 0, 467, 0, 257,
	0, 469, 0, 405, 404, 0, 292, 0, 0, 0,
	384, 0, 302, 204, 0, 482, 220, 308, 447, 0,
	277, 351, 0, 361, 197, 379, 328, 330, 327, 331,
	282, 0, 0, 0, 381, 407, 452, 222, 425, 0,
	0, 0, 397, 0, 0, 0, 321, 266, 270, 286,
	297, 0, 388, 426, 470, 0, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 428, 443,
	399, 280, 320, 322, 430, 435, 431, 432, 429, 434,
	433, 395, 396, 208, 437, 462, 229, 406, 409, 481,
	0, 216, 237, 427, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 0, 460, 461, 246, 0,
	0, 211, 0, 0, 348, 355, 347, 0, 0, 456,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 269,
	288, 372, 316, 373, 289, 342, 341, 343, 318, 0,
	424, 319, 0, 206, 0, 423, 0, 0, 436, 226,
	0, 0, 451, 0, 380, 227, 279, 267, 371, 346,
	218, 291, 421, 307, 315, 0, 0, 359, 392, 233,
	466, 420, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 368, 207, 219, 450, 232, 253,
	251, 268, 303, 329, 336, 365, 408, 414, 415, 440,
	441, 442, 444, 256, 332, 260, 231, 386, 230, 317,
	294, 367, 448, 449, 376, 248, 0, 199, 212, 311,
	0, 383, 276, 335, 412, 337, 298, 247, 479, 340,
	382, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	252, 0, 0, 0, 213, 223, 236, 250, 265, 0,
	275, 287, 290, 295, 296, 300, 305, 323, 324, 325,
	326, 349, 350, 353, 354, 357, 358, 362, 363, 364,
	369, 370, 378, 0, 387, 398, 400, 401, 402, 403,
	413, 416, 417, 458, 459, 475, 476, 445, 196, 0,
	0, 202, 0, 203, 205, 0, 201, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 0,
	0, 0, 0, 0, 0, 258, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 313, 0, 0, 472, 422, 338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 0, 0, 0,
	0, 375, 283, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 301, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 310, 0, 195, 0,
	0, 0, 352, 0, 0, 0, 198, 312, 0, 0,
	0, 245, 0, 391, 0, 464, 0, 278, 0, 390,
	314, 457, 0, 0, 463, 0, 439, 473, 478, 271,
	0, 234, 419, 261, 254, 0, 0, 0, 284, 374,
	249, 306, 0, 0, 0, 241, 0, 0, 0, 418,
	454, 200, 333, 455, 477, 0, 272, 410, 273, 438,
	264, 235, 377, 214, 304, 0, 0, 255, 299, 0,
	0, 480, 471, 225, 274, 385, 389, 366, 221, 446,
	334, 344, 238, 240, 239, 215, 411, 453, 228, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	285, 0, 0, 0, 360, 224, 0, 0, 0, 0,
	467, 0, 257, 0, 469, 0, 405, 404, 0, 292,
	0, 0, 0, 384, 0, 302, 204, 0, 482, 220,
	308, 447, 0, 277, 351, 0, 361, 197, 379, 328,
	330, 327, 331, 282, 0, 0, 0, 381, 407, 452,
	222, 425, 0, 0, 0, 397, 0, 0, 0, 321,
	266, 270, 286, 297, 0, 388, 426, 470, 0, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 428, 443, 399, 280, 320, 322, 430, 435, 431,
	432, 429, 434, 433, 395, 396, 208, 437, 462, 229,
	406, 409, 481, 0, 216, 237, 427, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 0, 460,
	461, 246, 0, 0, 211, 0, 0, 348, 355, 347,
	0, 0, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 269, 288, 372, 316, 373, 289, 342, 341,
	343, 318, 0, 424, 319, 0, 206, 0, 423, 0,
	0, 436, 226, 0, 0, 451, 0, 380, 227, 279,
	267, 371, 346, 218, 291, 421, 307, 315, 0, 0,
	359, 392, 233, 466, 420, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 207, 219,
	450, 232, 253, 251, 268, 303, 329, 336, 365, 408,
	414, 415, 440, 441, 442, 444, 256, 332, 260, 231,
	386, 230, 317, 294, 367, 448, 449, 376, 248, 0,
	199, 212, 311, 0, 383, 276, 335, 412, 337, 298,
	247, 479, 340, 382, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 468, 252, 0, 0, 0, 213, 223, 236,
	250, 265, 0, 275, 287, 290, 295, 296, 300, 305,
	323, 324, 325, 326, 349, 350, 353, 354, 357, 358,
	362, 363, 364, 369, 370, 378, 0, 387, 398, 400,
	401, 402, 403, 413, 416, 417, 458, 459, 475, 476,
	445, 196, 0, 0, 202, 0, 203, 205, 0, 201,
	0, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 258, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 474, 0, 0, 313, 0, 0, 472, 422, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, 375, 283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 195, 0, 0, 0, 352, 0, 0, 0, 198,
	312, 0, 0, 0, 245, 0, 391, 0, 464, 0,
	278, 0, 390, 314, 457, 0, 0, 463, 0, 439,
	473, 478, 271, 0, 234, 419, 261, 254, 0, 0,
	0, 284, 374, 249, 306, 0, 0, 0, 241, 0,
	0, 0, 418, 454, 200, 333, 455, 477, 0, 272,
	410, 273, 438, 264, 235, 377, 214, 304, 0, 0,
	255, 299, 0, 0, 480, 471, 225, 274, 385, 389,
	366, 221, 446, 334, 344, 238, 240, 239, 215, 411,
	453, 228, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 285, 0, 0, 0, 360, 224, 0,
	0, 0, 0, 467, 0, 257, 0, 469, 0, 405,
	404, 0, 292, 0, 0, 0, 384, 0, 302, 204,
	0, 482, 220, 308, 447, 0, 277, 351, 0, 361,
	197, 379, 328, 330, 327, 331, 282, 0, 0, 0,
	381, 407, 452, 222, 425, 0, 0, 0, 397, 0,
	0, 0, 321, 266, 270, 286, 297, 0, 388, 426,
	470, 0, 217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 428, 443, 399, 280, 320, 322,
	430, 435, 431, 432, 429, 434, 433, 395, 396, 208,
	437, 462, 229, 406, 409, 481, 0, 216, 237, 427,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 0, 460, 461, 246, 0, 0, 211, 0, 0,
	348, 355, 347, 0, 0, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 269, 288, 372, 316, 373,
	289, 342, 341, 343, 318, 0, 424, 319, 0, 206,
	0, 423, 0, 0, 436, 226, 0, 0, 451, 0,
	380, 227, 279, 267, 371, 346, 218, 291, 421, 307,
	315, 0, 0, 359, 392, 233, 466, 420, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	368, 207, 219, 450, 232, 253, 251, 268, 303, 329,
	336, 365, 408, 414, 415, 440, 441, 442, 444, 256,
	332, 260, 231, 386, 230, 317, 294, 367, 448, 449,
	376, 248, 0, 199, 212, 311, 0, 383, 276, 335,
	412, 337, 298, 247, 479, 340, 382, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 468, 252, 0, 0, 0,
	213, 223, 236, 250, 265, 0, 275, 287, 290, 295,
	296, 300, 305, 323, 324, 325, 326, 349, 350, 353,
	354, 357, 358, 362, 363, 364, 369, 370, 378, 0,
	387, 398, 400, 401, 402, 403, 413, 416, 417, 458,
	459, 475, 476, 445, 196, 0, 0, 202, 0, 203,
	205, 0, 201, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 258, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 0, 0, 313, 0, 0,
	472, 422, 338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 465, 0, 0, 0, 0, 375, 283, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 301, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 310, 0, 195, 0, 0, 0, 352, 0,
	0, 0, 198, 312, 0, 0, 0, 245, 0, 391,
	0, 464, 0, 278, 0, 390, 314, 457, 0, 0,
	463, 0, 439, 473, 478, 271, 0, 234, 419, 261,
	254, 0, 0, 0, 284, 374, 249, 306, 0, 0,
	0, 241, 0, 0, 0, 418, 454, 200, 333, 455,
	477, 0, 272, 410, 273, 438, 264, 235, 377, 214,
	304, 0, 0, 255, 299, 0, 0, 480, 471, 225,
	274, 385, 389, 366, 221, 446, 334, 344, 238, 240,
	239, 215, 411, 453, 228, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 285, 0, 0, 0,
	360, 224, 0, 0, 0, 0, 467, 0, 257, 0,
	469, 0, 405, 404, 0, 292, 0, 0, 0, 384,
	0, 302, 204, 0, 482, 220, 308, 447, 0, 277,
	351, 0, 361, 197, 379, 328, 330, 327, 331, 282,
	0, 0, 0, 381, 407, 452, 222, 425, 0, 0,
	0, 397, 0, 0, 0, 321, 266, 270, 286, 297,
	0, 388, 426, 470, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 428, 443, 399,
	280, 320, 322, 430, 435, 431, 432, 429, 434, 433,
	395, 396, 208, 437, 462, 229, 406, 409, 481, 0,
	216, 237, 427, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 0, 460, 461, 246, 0, 0,
	211, 0, 0, 348, 355, 347, 0, 0, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 269, 288,
	372, 316, 373, 289, 342, 341, 343, 318, 0, 424,
	319, 0, 206, 0, 423, 0, 0, 436, 226, 0,
	0, 451, 0, 380, 227, 279, 267, 371, 346, 218,
	291, 421, 307, 315, 0, 0, 359, 392, 233, 466,
	420, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 368, 207, 219, 450, 232, 253, 251,
	268, 303, 329, 336, 365, 408, 414, 415, 440, 441,
	442, 444, 256, 332, 260, 231, 386, 230, 317, 294,
	367, 448, 449, 376, 248, 0, 199, 212, 311, 0,
	383, 276, 335, 412, 337, 298, 247, 479, 340, 382,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 468, 252,
	0, 0, 0, 213, 223, 236, 250, 265, 0, 275,
	287, 290, 295, 296, 300, 305, 323, 324, 325, 326,
	349, 350, 353, 354, 357, 358, 362, 363, 364, 369,
	370, 378, 0, 387, 398, 400, 401, 402, 403, 413,
	416, 417, 458, 459, 475, 476, 445, 196, 0, 0,
	202, 0, 203, 205, 0, 201, 0, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 0, 0,
	0, 0, 0, 0, 258, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 474, 0, 0,
	313, 0, 0, 472, 422, 338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 465, 0, 0, 0, 0,
	375, 283, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 301, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 310, 0, 195, 0, 0,
	0, 352, 0, 0, 0, 198, 312, 0, 0, 0,
	245, 0, 391, 0, 464, 0, 278, 0, 390, 314,
	457, 0, 0, 463, 0, 439, 473, 478, 271, 0,
	234, 419, 261, 254, 0, 0, 0, 284, 374, 249,
	306, 0, 0, 0, 241, 0, 0, 0, 418, 454,
	200, 333, 455, 477, 0, 272, 410, 273, 438, 264,
	235, 377, 214, 304, 0, 0, 255, 299, 0, 0,
	480, 471, 225, 274, 385, 389, 366, 221, 446, 334,
	344, 238, 240, 239, 215, 411, 453, 228, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 285,
	0, 0, 0, 360, 224, 0, 0, 0, 0, 467,
	0, 257, 0, 469, 0, 405, 404, 0, 292, 0,
	0, 0, 384, 0, 302, 204, 0, 482, 220, 308,
	447, 0, 277, 351, 0, 361, 197, 379, 328, 330,
	327, 331, 282, 0, 0, 0, 381, 407, 452, 222,
	425, 0, 0, 0, 397, 0, 0, 0, 321, 266,
	270, 286, 297, 0, 388, 426, 470, 0, 217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	428, 443, 399, 280, 320, 322, 430, 435, 431, 432,
	429, 434, 433, 395, 396, 208, 437, 462, 229, 406,
	409, 481, 0, 216, 237, 427, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 0, 460, 461,
	246, 0, 0, 211, 0, 0, 348, 355, 347, 0,
	0, 456, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 269, 288, 372, 316, 373, 289, 342, 341, 343,
	318, 0, 424, 319, 0, 206, 0, 423, 0, 0,
	436, 226, 0, 0, 451, 0, 380, 227, 279, 267,
	371, 346, 218, 291, 421, 307, 315, 0, 0, 359,
	392, 233, 466, 420, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 207, 219, 450,
	232, 253, 251, 268, 303, 329, 336, 365, 408, 414,
	415, 440, 441, 442, 444, 256, 332, 260, 231, 386,
	230, 317, 294, 367, 448, 449, 376, 248, 0, 199,
	212, 311, 0, 383, 276, 335, 412, 337, 298, 247,
	479, 340, 382, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 468, 252, 0, 0, 0, 213, 223, 236, 250,
	265, 0, 275, 287, 290, 295, 296, 300, 305, 323,
	324, 325, 326, 349, 350, 353, 354, 357, 358, 362,
	363, 364, 369, 370, 378, 0, 387, 398, 400, 401,
	402, 403, 413, 416, 417, 458, 459, 475, 476, 445,
	196, 0, 0, 202, 0, 203, 205, 0, 201, 0,
	356, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 0, 0, 0, 0, 0, 0, 258, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	474, 0, 0, 313, 0, 0, 472, 422, 338, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, 375, 283, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 301, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 310, 0,
	195, 0, 0, 0, 352, 0, 0, 0, 198, 312,
	0, 0, 0, 245, 0, 391, 0, 464, 0, 278,
	0, 390, 314, 457, 0, 0, 463, 0, 439, 473,
	478, 271, 0, 234, 419, 261, 254, 0, 0, 0,
	284, 374, 249, 306, 0, 0, 0, 241, 0, 0,
	0, 418, 454, 200, 333, 455, 477, 0, 272, 410,
	273, 438, 264, 235, 377, 214, 304, 0, 0, 255,
	299, 0, 0, 480, 471, 225, 274, 385, 389, 366,
	221, 446, 334, 344, 238, 240, 239, 215, 411, 453,
	228, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 285, 0, 0, 0, 360, 224, 0, 0,
	0, 0, 467, 0, 257, 0, 469, 0, 405, 404,
	0, 292, 0, 0, 0, 384, 0, 302, 204, 0,
	482, 220, 308, 447, 0, 277, 351, 0, 361, 197,
	379, 328, 330, 327, 331, 282, 0, 0, 0, 381,
	407, 452, 222, 425, 0, 0, 0, 397, 0, 0,
	0, 321, 266, 270, 286, 297, 0, 388, 426, 470,
	0, 217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 428, 443, 399, 280, 320, 322, 430,
	435, 431, 432, 429, 434, 433, 395, 396, 208, 437,
	462, 229, 406, 409, 481, 0, 216, 237, 427, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	0, 460, 461, 246, 0, 0, 211, 0, 0, 348,
	355, 347, 0, 0, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 269, 288, 372, 316, 373, 289,
	342, 341, 343, 318, 0, 424, 319, 0, 206, 0,
	423, 0, 0, 436, 226, 0, 0, 451, 0, 380,
	227, 279, 267, 371, 346, 218, 291, 421, 307, 315,
	0, 0, 359, 392, 233, 466, 420, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 368,
	207, 219, 450, 232, 253, 251, 268, 303, 329, 336,
	365, 408, 414, 415, 440, 441, 442, 444, 256, 332,
	260, 231, 386, 230, 317, 294, 367, 448, 449, 376,
	248, 0, 199, 212, 311, 0, 383, 276, 335, 412,
	337, 298, 247, 479, 340, 382, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 252, 0, 0, 0, 213,
	223, 236, 250, 265, 0, 275, 287, 290, 295, 296,
	300, 305, 323, 324, 325, 326, 349, 350, 353, 354,
	357, 358, 362, 363, 364, 369, 370, 378, 0, 387,
	398, 400, 401, 402, 403, 413, 416, 417, 458, 459,
	475, 476, 42, 196, 0, 0, 202, 0, 203, 205,
	0, 201, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 89, 0, 0,
	71, 0, 0, 4191, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4184, 0, 0, 0, 0, 4528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 89, 0, 0, 0, 0, 0, 4191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 42, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	71, 57, 0, 0, 0, 0, 93, 0, 0, 47,
	0, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 0, 62, 92,
	91, 89, 0, 0, 0, 57, 71, 4191, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 4184, 4187,
	0, 0, 0, 4524, 0, 0, 0, 0, 0, 4196,
	4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0, 4197,
	0, 0, 0, 0, 78, 0, 79, 89, 0, 0,
	0, 0, 0, 4191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	69, 70, 0, 4187, 4184, 0, 0, 0, 60, 4523,
	0, 0, 0, 4196, 4188, 4189, 4190, 4194, 4195, 4192,
	4525, 4193, 0, 4197, 0, 0, 0, 0, 78, 0,
	79, 0, 0, 0, 0, 49, 90, 56, 55, 58,
	0, 0, 0, 0, 96, 0, 0, 0, 0, 0,
	4185, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 62, 92,
	91, 0, 0, 0, 0, 57, 0, 0, 0, 0,
	0, 0, 4198, 4186, 0, 66, 67, 73, 0, 74,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 4198, 4186, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 0, 0,
	69, 70, 0, 4187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4196, 4188, 4189, 4190, 4194, 4195, 4192,
	0, 4193, 0, 4197, 0, 0, 0, 0, 78, 42,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 71, 0, 0, 0, 0, 0, 93,
	0, 0, 47, 84, 0, 0, 69, 70, 0, 4187,
	0, 0, 60, 0, 0, 0, 0, 0, 0, 4196,
	4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0, 4197,
	0, 0, 0, 42, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 89, 4520, 0, 71, 0, 0,
	4191, 0, 0, 93, 0, 0, 47, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 4184, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 4198, 4186, 0, 66,
	67, 73, 0, 74, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 4191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 4184, 0, 59, 61, 0,
	4512, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 4198, 4186, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 49, 90,
	56, 55, 58, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 4185, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 42, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 71, 57, 0,
	0, 0, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	0, 0, 0, 0, 0, 62, 92, 91, 89, 0,
	0, 0, 57, 71, 4191, 0, 0, 0, 0, 93,
	0, 0, 47, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 69, 70, 4184, 4187, 59, 61, 0,
	4509, 0, 0, 87, 0, 0, 4196, 4188, 4189, 4190,
	4194, 4195, 4192, 0, 4193, 0, 4197, 0, 0, 0,
	0, 78, 0, 79, 89, 0, 0, 0, 0, 0,
	4191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 84, 69, 70, 0,
	4187, 4184, 0, 59, 61, 60, 4426, 0, 0, 87,
	4196, 4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0,
	4197, 0, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4185, 0, 0,
	84, 85, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 4198,
	4186, 42, 66, 67, 73, 0, 74, 0, 49, 90,
	56, 55, 58, 0, 0, 71, 0, 96, 0, 0,
	0, 93, 0, 4185, 47, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 62, 92, 91, 0, 0, 0, 0, 57, 0,
	0, 0, 0, 4198, 4186, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 89, 69, 70, 0,
	4187, 0, 4191, 0, 0, 0, 0, 0, 0, 0,
	4196, 4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0,
	4197, 0, 0, 4184, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 69, 70, 0, 4187, 0, 0, 60,
	0, 0, 0, 0, 0, 0, 4196, 4188, 4189, 4190,
	4194, 4195, 4192, 0, 4193, 0, 4197, 0, 0, 0,
	0, 78, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	49, 90, 56, 55, 58, 60, 0, 0, 0, 96,
	59, 61, 0, 0, 0, 4185, 87, 0, 0, 0,
	0, 0, 42, 4198, 4186, 0, 66, 67, 73, 0,
	74, 0, 0, 62, 92, 91, 71, 0, 0, 0,
	57, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 4198,
	4186, 0, 66, 67, 73, 0, 74, 89, 0, 0,
	0, 0, 0, 4191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 4184, 69, 70, 0, 4187, 4418,
	0, 0, 0, 0, 0, 0, 0, 0, 4196, 4188,
	4189, 4190, 4194, 4195, 4192, 4423, 4193, 0, 4197, 0,
	0, 0, 0, 78, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 42, 0, 0, 0, 0, 60, 0, 0,
	0, 0, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 93, 0, 0, 47, 0, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 59, 61, 4185, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 62, 92, 91, 89, 0, 0,
	0, 57, 0, 4191, 0, 0, 0, 0, 0, 0,
	0, 4198, 4186, 0, 66, 67, 73, 0, 74, 0,
	0, 0, 85, 0, 4184, 0, 0, 0, 0, 4416,
	59, 61, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 70, 85, 4187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4196,
	4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0, 4197,
	0, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 49, 90, 56, 55, 58, 0, 0, 0, 0,
	96, 0, 0, 0, 0, 0, 4185, 0, 0, 84,
	0, 0, 0, 42, 0, 0, 0, 0, 60, 0,
	0, 0, 0, 0, 62, 92, 91, 71, 0, 0,
	0, 57, 0, 93, 0, 0, 47, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	42, 0, 59, 61, 4191, 0, 0, 0, 87, 0,
	0, 0, 4198, 4186, 71, 66, 67, 73, 0, 74,
	93, 0, 0, 47, 0, 4184, 69, 70, 0, 4187,
	4299, 0, 0, 0, 0, 0, 0, 0, 0, 4196,
	4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0, 4197,
	85, 0, 0, 0, 78, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 89, 0, 0, 0, 0,
	0, 4191, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 60, 0,
	0, 0, 4184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 49, 90, 56, 55, 58, 0, 0, 0,
	0, 96, 0, 0, 0, 0, 0, 4185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 92, 91, 0, 0,
	0, 0, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4198, 4186, 0, 66, 67, 73, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 49,
	90, 56, 55, 58, 0, 0, 0, 0, 96, 0,
	0, 0, 0, 0, 4185, 0, 0, 0, 0, 0,
	0, 0, 0, 59, 61, 0, 0, 0, 0, 87,
	0, 0, 62, 92, 91, 0, 0, 0, 0, 57,
	0, 0, 0, 0, 0, 0, 0, 69, 70, 0,
	4187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4196, 4188, 4189, 4190, 4194, 4195, 4192, 0, 4193, 0,
	4197, 85, 0, 0, 0, 78, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 60,
	0, 0, 0, 0, 69, 70, 0, 4187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4196, 4188, 4189,
	4190, 4194, 4195, 4192, 0, 4193, 0, 4197, 0, 0,
	0, 0, 78, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 0,
	0, 0, 0, 59, 61, 0, 60, 0, 0, 87,
	0, 0, 0, 4198, 4186, 0, 66, 67, 73, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4198, 4186, 0, 66, 67, 73, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 61, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 61, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
}

var yyPact = [...]int{
	6282, -1000, -486, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2986, -1000, 2986, 326, -1000, 463, -1000, 1450, 408,
	-1000, -1000, -1000, -1000, -1000, 726, 324, 57303, 1146, 54403,
	77547, -259, 1879, 76824, 174, -1000, 174, 424, 53680, 837,
	1018, 76101, 2812, 2151, 176, 25, 24, 234, 39217, 38483,
	313, 205, 227, 225, 189, 1321, -1000, 60195, 890, -1000,
	309, -1000, -1000, -1000, -1000, -1000, 45727, 3061, 3067, 3061,
	-1000, 2969, 2984, -1000, -1000, 2969, 2347, 2347, -1000, 60195,
	14033, -1000, -1000, -1000, -1000, -1000, 31076, -1000, 1325, -1000,
	58026, 40663, 2986, -1000, 1137, 1124, -96, 1053, 1053, 921,
	1053, 1053, -450, 1144, -1000, 839, 1654, -1000, -1000, -1000,
	-1000, 1642, 58026, 65256, 1054, 74655, 1054, 1054, 1054, 1054,
	1054, 1054, 1054, 1054, 52957, 58026, -1000, 1276, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 58026, 3048, 3047, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2632, 2631, 52234,
	561, 2867, 1648, 355, 1648, -1000, -1000, 1685, -1000, 945,
	942, 940, 939, 919, 924, 14, 1544, 1656, 2966, -1000,
	2568, 2969, 2969, 1544, -1000, 912, -1000, -1000, -1000, -1000,
	-1000, -1000, 1345, -1000, -1000, 1735, 1735, 546, 1119, 312,
	961, 308, 2924, 1641, 2866, 2863, 2185, 2862, 875, 2861,
	2626, -1000, 1271, -1000, -1000, 69, -1000, 2149, 58026, -1000,
	-1000, 2040, 2033, 648, 2516, 1186, 2698, -1000, -1000, 679,
	793, 2604, 713, 2604, 2604, 2604, 406, 2604, 2604, 21,
	2604, 2604, 2604, 321, 2604, 374, 2604, 2604, 2604, 2604,
	2604, -1000, 2451, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 688, 2509, 2555, 2696, 213,
	-1000, -193, -1000, 2941, 841, -1000, -1000, -1000, 301, 1325,
	60918, 2550, -1000, 2568, -1000, -1000, 2566, 2568, -1000, 2080,
	1143, 1054, 780, -1000, 517, -1000, -1000, -1000, 2885, 2568,
	41389, -1000, -1000, 2101, -1000, 2568, 2568, 1325, 2944, 1325,
	1325, 2934, 2931, 1325, 2858, 28112, 18479, 2747, 1772, -1000,
	-1000, -1000, -1000, 1325, 3046, -1000, 39940, 1268, -1000, 18479,
	2232, 2568, 2568, -1000, 1224, 1288, -1000, 1183, 1245, -1000,
	-1000, 19220, 19220, 19220, 19220, 19220, 19220, 19220, -1000, -1000,
	-1000, -1000, -1000, -1000, 2325, 2322, 2321, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2568, 1267, 1266,
	-1000, 2568, 2568, 2568, 2568, 2568, -1000, 16997, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568,
	2568, 2568, 2568, 2568, 2568, 18479, 2568, 2568, 2568, 2568,
	2568, -1000, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568,
	2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568,
	2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568,
	2568, 2568, 2568, 2568, 2568, 2568, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2568, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2568, 2568, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2568, 1057, 1057, 56580, 2565, -36, 30335, -1000, -1000,
	-1000, -1000, 28853, 63087, 1520, -1000, -1000, -1000, -1000, 2860,
	-1000, -1000, 1246, 1245, 1224, 1203, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2986, 308, -1000, 2466, -1000, -1000,
	10528, 10528, 10528, 10528, 10528, 10528, 48619, -1000, -1000, -1000,
	2624, 2969, -1000, 74655, 58026, 884, 2148, 1701, 2147, 76101,
	76101, 1053, -1000, 816, 65256, 65256, -356, 1053, 825, 65256,
	809, 2564, 1118, 2563, 1117, 2394, 58026, 2905, 2695, 58026,
	2146, 2144, 76101, 76101, 65256, 65256, 76101, -1000, -1000, -1000,
	27371, -1000, 1356, 2562, 47896, 47173, 51511, 51511, -1000, -1000,
	-1000, 908, -1000, 1648, -1000, 7841, 18479, 1053, 1053, 58026,
	58026, 58026, 58026, 58026, -1000, 58026, -1000, -1000, 1648, -1000,
	-1000, 1648, 1648, 1648, 1544, 3045, 1544, -1000, -1000, -1000,
	1648, 76824, 76824, 18479, -1000, 19220, 64533, 1359, -1000, -1000,
	1648, -1000, 76824, 994, 994, 994, -1000, 2125, 541, -1000,
	-1000, -1000, -1000, -1000, 312, -1000, -1000, -1000, 2818, 2923,
	2918, 2124, 875, 875, -1000, 2335, 875, 2546, -1000, 1640,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 875, 2924, 17738, 74655, -466, -1000, -1000, 2557,
	-1000, 527, -1000, -1000, 964, 2689, 964, 5863, 65256, 65256,
	65256, -1000, 2604, 74655, -1000, 2604, 2604, 2604, 19, 2604,
	2604, -1000, -1000, 2604, -1000, -1000, -1000, 2604, -1000, -1000,
	2604, -1000, -1000, -1000, 2604, 2604, -1000, 2604, 2604, -1000,
	-1000, -1000, -1000, -1000, 65256, 964, 439, 2556, 964, 65256,
	65256, 1108, 195, -33, 162, -1000, -1000, -1000, 298, 295,
	293, 292, -1000, -1000, -1000, -1000, 291, 290, -1000, -1000,
	58026, 58026, 937, -1000, 2550, 60918, 2916, 22925, 890, -1000,
	18479, 2872, -1000, 2872, -1000, -1000, -1000, 386, -1000, 58026,
	65256, 76101, 45727, 45727, 45727, 45727, -1000, 2731, 2729, -1000,
	2723, 2717, 2716, 484, 60918, -1000, 2885, 326, 2449, 2347,
	2347, 517, 41389, -1000, 2568, -1000, 60918, 1213, 1131, 1128,
	1127, 2818, -1000, -1000, -1000, -1000, -1000, 2286, 2138, 2099,
	13292, 19220, -1000, -1000, -1000, -1000, -1000, 3061, 3061, -1000,
	-1000, -1000, -1000, -1000, -1000, 1748, 3056, 1534, 2539, -1000,
	-1000, -1000, 2549, -1000, 1669, 1243, 2018, 1810, -1000, -1000,
	-1000, -1000, -1000, -1000, 14033, -1000, 58026, -1000, 18479, 18479,
	18479, 1974, -1000, 45004, -1000, -1000, -1000, 23666, 1541, 19220,
	1807, 1558, 19220, 19220, 19220, 19220, 19220, 19220, 19220, 19220,
	19220, 19220, 19220, 19220, 19220, 19220, 19220, 1387, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2123, -1000, 308, 36263,
	13292, 36263, 962, 962, 74655, 1334, 1334, 1334, 1334, 1334,
	1334, 58749, -1000, -1000, -1000, 2928, 34781, 36263, 2928, 2928,
	2928, 2928, 2928, 2447, 1919, 60195, 16997, 45727, 13292, 13292,
	13292, 2347, 18479, 18479, 13292, 19220, 13292, 16256, 15515, 20702,
	13292, 13292, 2928, 1670, 1919, 26630, 13292, -1000, 2347, -1000,
	-1000, -1000, -1000, 1861, -1000, -1000, -218, -218, -218, 389,
	13292, 13292, 13292, 13292, 2347, 2347, 13292, 13292, 13292, 13292,
	13292, 2347, 2347, 2347, 2347, 13292, 13292, 13292, 13292, 13292,
	13292, 13292, 13292, 13292, 13292, 13292, 13292, -1000, -1000, -1000,
	1812, 55849, 45727, 58026, 2512, 2481, -1000, -1000, 1241, 29594,
	2528, -1000, -22, -49, -36, -1000, -1000, 1329, -1000, -1000,
	-1000, -1000, 14774, -1000, -1000, -1000, 24407, 2969, -1000, 11040,
	-1000, 55, -1000, -1000, -1000, 2580, -1000, 2582, 119, 528,
	2582, 110, 105, 2582, 2582, 2582, -1000, -1000, -1000, -1000,
	123, -1000, -1000, -1000, -1000, -1000, 2623, 2622, -1000, 2580,
	2580, 2580, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2589, 529, 2581, 2581,
	2581, 2581, 2581, -1000, -1000, -1000, -1000, -1000, 1016, -1000,
	-1000, -1000, 18479, 2858, 2757, 2628, 2568, 1121, -452, 825,
	2872, 2904, 2872, 902, -1000, 1240, 2621, 76101, 882, 2540,
	-1000, 444, 2249, 1152, 55126, -1000, -1000, -1000, -1000, -1000,
	58026, 58026, 65256, 65256, 65256, 1116, -1000, 58026, 2548, -1000,
	-1000, -1000, -1000, -1000, 2514, -1000, 2249, -1000, -1000, 1236,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -423, -424, 58026, -1000, -1000, -1000, -1000,
	-1000, -1000, 2547, -1000, 2547, -1000, -1000, -1000, 2334, 1919,
	2122, 2115, 2924, -1000, -1000, -1000, -1000, 1662, -1000, -1000,
	-1000, -1000, 1648, 58026, 2924, -1000, -1000, -1000, 1919, 1553,
	2630, 2568, 2347, -1000, -1000, -1000, 172, -1000, 170, -1000,
	-1000, -1000, 2114, -1000, 19220, 2817, 2816, -1000, 2546, 2546,
	-1000, 2546, 875, 59472, 2546, -1000, -1000, 2444, -1000, 302,
	2333, 58026, -1000, 60918, 68, -1000, -63, 73209, -1000, -1000,
	-1000, 964, 73209, -1000, 321, 270, -1000, 1102, -1000, 2442,
	-1000, -1000, -1000, -1000, 2604, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 73209, 403, 436, 73209, 2514,
	3044, 294, 2545, -1000, 1632, 1624, -1000, -1000, 157, -1000,
	-1000, -1000, -1000, 2963, -1000, 268, 268, 2330, 19220, -1000,
	2568, 2387, -1000, 1235, -1000, -1000, -1000, -1000, -1000, -1000,
	2568, -1000, -1000, -1000, -1000, 2857, 1520, 1520, 1520, 8479,
	444, 2688, 2619, 2674, 645, -1000, -1000, -1000, -1000, 2727,
	-1000, 2725, 2714, -1000, -1000, -1000, 2571, 60918, 45727, -1000,
	-1000, -1000, 2347, 74655, 1175, -1000, 60918, 2568, 2568, 2568,
	19220, 19220, 1531, -1000, 19220, 19220, 1524, -1000, 19220, 19220,
	1417, -1000, 2347, 2544, -1000, -1000, 1919, 1234, 4397, -1000,
	73932, 63, 2742, 28112, 28112, 18479, -1000, -1000, -1000, 24407,
	2964, -1000, 2758, 2753, 3043, -1000, -1000, -1000, 1541, 1598,
	1594, -1000, -1000, 1850, -1000, -1000, -1000, -1000, -1000, 1227,
	2568, -1000, -1000, -1000, -1000, -1000, 4171, -1000, -1000, -1000,
	-1000, 1807, 19220, 19220, 19220, 1553, 4171, 4591, 2248, 2049,
	1334, 1500, 1500, 1328, 1328, 1328, 1328, 1328, 2083, 2083,
	-1000, -1000, -1000, -1000, 2347, -1000, 2439, -1000, -1000, 2325,
	2322, 2321, -1000, -1000, -1000, -1000, 13292, -1000, -1000, -1000,
	-1000, -1000, 13292, 13292, 13292, 13292, 13292, 18479, -1000, 2439,
	2439, 2439, -1000, 1778, 1710, 2344, 3991, 2439, 1393, 3042,
	2439, 1375, 3041, 2439, 2120, 19220, 19220, 19220, 2439, 2439,
	13292, 1719, -1000, 18479, 2347, 1273, 2347, 1224, 1203, 2439,
	-1000, 2347, 2543, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2535, 3039, 2534, -1000, -1000, -1000,
	-1000, 2439, 2347, 2439, 2439, -124, -124, 2347, 2439, 2347,
	2439, 2439, -124, -124, -124, -124, 2439, 2439, 2439, 2439,
	2439, 2439, 2439, 2439, 2439, 2439, 2439, 2439, -1000, 2347,
	1448, 58026, -1000, 2525, 1448, 2488, 45727, -1000, -1000, 45727,
	76824, 25889, -1000, 28853, -36, -24, -1000, -1000, 2528, -1000,
	-1000, 1574, -1000, -1000, 2320, 1919, -1000, 1197, 2858, 272,
	-1000, -1000, -1000, -1000, 2603, 44281, -1000, 2782, 1279, 1279,
	1279, 63810, 75378, 2781, -1000, -1000, 243, 31, -1000, -1000,
	-1000, 2030, -1000, 317, 503, 2582, -1000, -1000, -1000, 2582,
	2582, -1000, 2582, 2582, -1000, -1000, -1000, -1000, 2318, 2318,
	-1000, -1000, -1000, -1000, 2028, -1000, 2589, -1000, 2025, -1000,
	-1000, -1000, -1000, 243, 243, 243, 243, 243, -1000, 2182,
	-1000, 2672, 74655, 2914, 58026, -359, -1000, -1000, -1000, 3026,
	-1000, -1000, 74655, 62364, 2671, -1000, -1000, 337, 65256, 433,
	658, 344, -1000, 1690, -1000, -1000, 1091, -1000, 1081, -1000,
	-1000, -1000, -1000, -1000, -1000, 58026, 65256, 74655, 2670, 2669,
	-1000, 51511, -1000, -1000, -1000, -1000, 2996, 2113, 2093, -1000,
	1544, 1648, -1000, 19220, 65256, -1000, 904, -1000, -1000, -1000,
	4171, 19220, 19220, -1000, -1000, -1000, -1000, 1742, -1000, -1000,
	-1000, -1000, -3, -1000, -1000, 1074, 1196, 1189, 73209, 1070,
	-1000, 347, 65256, -1000, 74655, -1000, 3038, 3034, 400, 3033,
	65256, 2527, -1000, 1622, 1610, 1609, 1607, 1597, 1596, 1570,
	195, 2588, 2587, -1000, -1000, 253, -1000, -44, -1000, -1000,
	4171, -1000, -1000, 22925, 36263, -1000, 1520, 1498, -1000, 1470,
	2314, 1158, 1438, -1000, -1000, 1572, 1282, 1030, 1520, 1024,
	472, 1068, 2824, 2823, 599, 566, -1000, 1520, 1024, 1318,
	636, -1000, 1504, 1501, 1488, 1486, 1485, 1484, 1483, 1461,
	613, -1000, -1000, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, -208, -209, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 31817,
	1520, -1000, 1155, 731, -1000, -1000, 18479, 2584, -1000, 18479,
	-1000, -1000, -1000, -1000, -1000, 74655, 2571, 517, -1000, 2385,
	-1000, -1000, 1175, 74655, 74655, 74655, 4512, 1953, 2568, 4366,
	1895, 2568, 4074, 1790, 2568, 2885, 13292, 22184, 2313, 2524,
	2311, 2310, -1000, 56, 2740, -1000, -1000, -1000, 58026, -1000,
	-1000, -1000, -1000, 2996, 43558, 14033, -1000, -1000, -1000, -1000,
	34040, 13292, -1000, 1553, 4171, 3794, -1000, 19220, -1000, -1000,
	2347, 2439, 2439, 2439, 2439, 2439, 1919, -1000, -1000, -1000,
	435, 1387, 435, -1000, 1387, 19220, -1000, 19220, 19220, -1000,
	19220, 19220, -1000, -1000, 19220, 3969, 3870, 3823, -264, -1000,
	2533, 1661, -1000, 18479, 2095, -1000, -1000, -1000, -1000, -1000,
	19220, 19220, 19220, 19220, -1000, -1000, -1000, -1000, -1000, 72486,
	-1000, -124, -124, -124, -124, -124, -1000, -1000, -1000, -1000,
	-124, -124, -124, -124, -124, -124, -124, -124, -124, -124,
	-124, -124, -1000, 441, 2568, -1000, 25148, 2996, 45727, 2531,
	2531, -1000, 1182, -1000, -1000, -1000, -54, -64, -1000, -1000,
	-1000, -1000, -1000, 36263, -1000, -1000, -1000, 413, 2983, 1520,
	1520, 1520, 390, 1520, 1520, 1520, 1520, 1520, -211, -212,
	1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520, 1520,
	1520, 190, 1520, 1520, 1520, 1520, 1520, 31817, 1520, 49342,
	1191, 1022, -1000, -1000, -1000, 75378, 75378, 75378, -1000, 75378,
	75378, -1000, -1000, -1000, -1000, 50065, -1000, -1000, 1753, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2568, -478, 2020,
	58026, -1000, 2856, 1423, 38486, 3054, -1000, 2780, -1000, 2778,
	2777, 2294, -1000, -1000, 2483, 2482, 2479, -1000, 2582, -1000,
	-1000, -1000, -1000, -1000, 2424, -1000, 2422, 2523, -1000, 2418,
	-412, 58026, -1000, -1000, 2568, 2013, 2668, -1000, -1000, -1000,
	-1000, 2477, 2522, -1000, 10528, 74655, 74655, 74655, 740, -279,
	723, -1000, 65256, 364, 444, 813, 2056, -388, 2896, 58026,
	65256, -1000, -1000, -1000, 71763, 71763, -1000, -1000, 18479, -1000,
	-1000, 2924, -1000, 4171, 2249, -1000, -1000, 4171, 4171, 1448,
	1140, -1000, 65256, 1357, 71040, 1067, 65256, 399, 255, -1000,
	65256, 65256, 3017, 65256, 2514, 294, 2292, 2291, 2277, 2012,
	2010, 2009, 1991, -1000, 58026, 58026, 2276, 2842, -1000, -1000,
	1414, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 9229,
	1438, 1443, 1428, 1421, 1419, -1000, 46450, 75378, 1190, 1037,
	-1000, -1000, 2568, -1000, 42835, 50065, 50065, 50065, 74655, 2776,
	2773, 74655, 50065, 50065, 74655, 50065, 929, 2090, 2855, 1520,
	118, -1000, -1000, -1000, 70317, -1000, 69594, 846, 50788, 50065,
	74655, 58026, 42112, -1000, -1000, -1000, -1000, 68871, 1987, 74655,
	74655, 68148, 67425, 66702, 65979, -1000, 1005, 18479, 1005, 1935,
	1935, 2272, 2267, 2259, 1520, 1520, 1935, 2258, 37745, 2256,
	1007, 1005, 1005, 1005, 1935, 2255, 385, 1958, 2254, 2245,
	2191, 1005, -1000, -227, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2568, 894, 1065, 832, -6,
	1919, 74655, 1919, 2415, -1000, -1000, 2104, 74655, -1000, 2358,
	2358, 2358, 19220, 19220, 19220, 19220, 19220, 19220, 19220, 19220,
	19220, 60918, -1000, -1000, 1179, 10, 74655, -1000, 28, -1000,
	-1000, -1000, 2990, -1000, 2520, -1000, -1000, -1000, 2347, -1000,
	19220, 4171, -1000, -124, -124, -124, -124, -124, 2347, 2580,
	2580, 2580, -1000, 2580, 2581, 129, -1000, -1000, -1000, 2580,
	150, 2580, 146, -1000, 2347, 2347, 2347, 2352, 3559, 3169,
	2594, 2403, 2352, 19220, 19220, 19220, 2568, -113, -1000, 1919,
	18479, 3631, 3534, 2352, 2352, -1000, -1000, 2088, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2667, 2667, 25148, 2885,
	-1000, 21443, -1000, 890, -1000, -1000, 74655, 2537, -1000, 1520,
	1265, 1520, 1520, 2986, 2531, -1000, -1000, 1347, -1000, -1000,
	-1000, -1000, 223, 1005, 1005, 1005, 1520, 2853, 1520, 1935,
	1935, 2252, 2247, 2246, 1520, 1520, 1935, 2244, 37745, 2242,
	1007, 1005, 1005, 1005, 1935, 2241, 385, -1000, 1822, 2237,
	2179, 2015, 1005, -1000, -238, 2568, 2400, -1000, 2580, 2580,
	2771, 1279, -1000, -1000, -1000, -1000, -1000, -1000, 2579, -1000,
	-1000, 19220, 2912, -1000, 2578, 1402, -1000, -1000, -1000, -1000,
	962, 2235, -1000, -1000, 19220, -1000, -1000, 2568, 2568, 2568,
	2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568,
	-60, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2230, -1000, 1978, -1000, 1971, -1000, -1000, -1000, 2577, -1000,
	2911, -1000, 58026, 231, 62364, -1000, 10528, 10528, 10528, -6,
	421, 430, -1000, 1730, -1000, -1000, -1000, 2228, 2226, 2225,
	2249, 446, 1725, 419, -1000, 2900, 2898, 2219, 2218, 2215,
	2214, 1970, -1000, -1000, 2629, 74655, 2518, -1000, 1919, 1648,
	28, 58026, 255, -1000, -1000, -1000, 65256, 255, -1000, -1000,
	434, 2514, 2514, 65256, 2514, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2398, 2393, -1000, -1000, -1000, -1000, -1000,
	-1000, 1540, 1409, 333, 332, 50788, 982, 10528, 10528, 2628,
	1279, -1000, 2768, 1391, -1000, -1000, -1000, -1000, -1000, -1000,
	50065, 2517, -414, -417, 1315, -436, -1000, -1000, -1000, -1000,
	50788, 1520, 1387, 2850, 640, 329, 608, 327, -1000, -1000,
	-1000, -1000, 982, 1248, 1064, -1000, 2767, 50065, 1063, 591,
	315, -1000, 1783, -288, 2517, -1000, 2517, -1000, 2517, -1000,
	2517, -1000, -1000, 1919, -1000, -1000, -1000, -1000, -1000, -1000,
	2212, 2211, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -230, 37745, 1760, -1000, 2666, 76101, -1000, 652, 2665,
	1027, 962, 2389, -1000, 74655, -1000, -1000, -1000, -1000, -1000,
	4171, 4171, 2734, 4171, 4171, 2553, 4171, 4171, 2376, -1000,
	33299, 2568, -1000, -4, -1000, 2988, 2982, -1000, -1000, 4171,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 509, 465, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19220, 19220, 19220, 19220, -1000, 2352, 2352, 2352, 19220, 2347,
	2209, 1919, 19220, 19220, -1000, -1000, 1398, -1000, -1000, 2884,
	-1000, 2475, 60918, 2347, 2491, 2387, 2347, 328, -1000, -1000,
	-1000, 60195, 45727, 2515, -1000, 2568, 2385, 2986, 25148, 18479,
	18479, 18479, 18479, 2969, -1000, -249, -1000, 467, 371, -1000,
	-1000, -1000, -1000, -1000, -1000, 1387, 1520, 32558, -1000, -1000,
	-1000, -1000, -1000, 2208, 2206, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -232, 37745, 240, 49342, 2881,
	2881, 75378, 75378, 74655, 2352, 2568, 74655, -1000, -1000, -1000,
	-1000, -1000, 2352, -1000, -1000, 2469, 2390, 49342, 308, -1000,
	-388, 2959, -1000, 231, -1000, 2205, 824, 834, -1000, 822,
	820, 818, 794, 800, -1000, -1000, -1000, -1000, 2665, 761,
	421, -1000, -57, 1968, 1433, 2822, 430, -1000, 1967, 1952,
	1931, 1883, 728, -1000, -1000, -1000, -1000, 305, 444, -1000,
	791, 2203, 777, 2192, -1000, -1000, 443, -1000, -1000, 2811,
	2382, -1000, -4, -1000, 2908, 255, 2908, 368, 2514, -1000,
	-1000, 2371, -1000, -1000, 2086, -1000, -1000, 2576, 75378, 75378,
	2360, -1000, 74655, -1000, -1000, -1000, -1000, -1000, 2871, 2869,
	-1000, -1000, 982, 1387, -1000, 1387, -1000, -1000, -1000, -1000,
	-1000, 50065, 74655, 50065, 1061, 50065, -1000, -1000, 2568, 1139,
	-1000, -1000, -1000, -1000, 2379, -1000, 455, 2190, 316, -1000,
	-1000, 1155, 661, -1000, -1000, -1000, -291, -1000, -1000, 19220,
	19220, 19220, -1000, 35522, 2801, 2799, -126, 18479, 18479, -1000,
	-1000, -1000, -1000, 2352, 2352, 2352, 2352, -1000, -1000, -1000,
	278, -1000, -1000, 2352, 2352, 2986, 2981, 2765, -1000, 2571,
	-1000, -1000, 2491, 328, -1000, 890, -1000, 12551, -1000, 2969,
	-1000, 1919, 1919, 1919, 1919, -1000, -253, 1875, 19220, 2568,
	2568, 790, -1000, 1387, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2379, 240, -1000, 37745, 1520, 2189, 1520, 1520, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2374, -481, 19220, 2370,
	-1000, -1000, -1000, 2368, -1000, -1000, 852, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2810, 2808, 851, 894, -1000, 2188,
	2187, -1000, 714, 2037, 1249, -168, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 767, 2085, -1000,
	401, -1000, -1000, 397, -1000, -1000, 2980, -388, 19220, -1000,
	2801, -1000, 65256, 2908, -1000, -1000, -1000, -1000, 243, 243,
	49342, 2628, 2575, -1000, 1391, 2748, 19220, -1000, -1000, 1332,
	1330, -1000, -1000, 1059, 50065, -1000, 1391, 58026, 37745, -1000,
	-1000, -1000, -1000, 894, 1358, 722, 2352, 2352, 2352, 2346,
	-1000, 10407, 381, -1000, 2785, 2787, 2979, -1000, 74655, -1000,
	1919, 2505, -1000, 1919, -1000, -1000, -1000, -1000, 2347, 303,
	-315, -1000, -1000, 1463, 18479, 3053, -1000, -1000, -1000, 328,
	-1000, -1000, -1000, 2568, 2977, -1000, 2352, 74655, 19220, 2568,
	1565, -1000, -1000, -1000, -1000, 1874, -1000, 2186, 2166, 988,
	-1000, -1000, -1000, 2352, -1000, 240, -297, 308, 874, 79849,
	-1000, -1000, -1000, -1000, 1760, -1000, -1000, -1000, -1000, 1853,
	-1000, -1000, 1897, 700, 365, -1000, 2907, -1000, -1000, 1805,
	4171, 1056, -296, -1000, 2366, 2574, 49342, -1000, 955, 4171,
	1520, 1387, 50065, -1000, 2360, 52, -1000, 79849, 1760, 1176,
	719, 1027, -1000, -1000, -1000, 2347, 35522, 431, -441, 6,
	2162, 2799, 2975, 2794, 2789, -1000, 2160, 2498, -1000, 2899,
	18479, -1000, 2737, -267, -320, 2347, 414, 414, 2497, 25148,
	2347, -1000, 1391, -386, -1000, 2358, 2352, 74655, 1797, -1000,
	-1000, -1000, 58026, -481, -1000, 240, -1000, 354, -1000, 843,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 11810, 18479, 187, 37004, 2081, 2078,
	79849, 2233, 79849, 18479, 2071, 2070, 2790, 19220, 79782, 452,
	-334, -1000, -335, -1000, -1000, -1000, 2158, -1000, 2571, 1788,
	432, 240, 49342, 2363, 926, 1387, -1000, -1000, -1000, 623,
	-1000, 451, 962, -1000, 1027, -1000, 2885, -1000, -1000, 2157,
	-202, -1000, 2568, -9, -1000, 2155, -1000, 2973, 2972, -1000,
	74655, 2568, -1000, -1000, 2736, -1000, -1000, -1000, 363, -1000,
	1396, 869, 1389, -1000, 962, -1000, 2493, -1000, 2360, 369,
	-1000, -1000, 2358, -1000, 2569, -1000, 358, 1014, 1001, -297,
	-1000, 2067, 2066, -1000, 2043, 1774, -1000, 18479, 2029, 618,
	593, 1508, -1000, -1000, -1000, -1000, -1000, -1000, -487, -1000,
	320, -488, 1036, -1000, -1000, 2064, -1000, 3004, 4171, -1000,
	-489, -1000, -1000, -1000, -1000, 2849, 1585, 61641, -1000, 2356,
	240, 2568, -1000, -1000, -1000, -1000, -291, -1000, 1358, 60918,
	659, 2154, 35522, 2568, -1000, 2153, 2084, -1000, -1000, -309,
	1720, -1000, -1000, -1000, -1000, -1000, -218, -1000, 2568, 790,
	-1000, 74655, -1000, 351, 350, -1000, -1000, -1000, -1000, 1762,
	1683, 79849, -1000, 1960, 79849, 2958, 2957, 2953, 28, 36263,
	79581, 79431, 79849, 79849, 18479, 79230, 79849, 1739, -1000, 79058,
	79849, -1000, 25148, -1000, -1000, -1000, -1000, 3065, 2249, 240,
	-1000, 19961, 79849, -1000, 1358, -1000, 2014, 1981, 2664, 2663,
	962, -1000, 2346, 35522, -1000, -1000, -317, 363, -1000, 19220,
	2568, 2354, -1000, -1000, 300, 1680, 79849, -1000, -490, 79849,
	-492, 829, 308, 1017, 1329, -1000, 574, -1000, 2057, -493,
	-494, -496, 1029, 18479, -497, 2053, -1000, -1000, 2493, 65256,
	-1000, 2352, 2347, -1000, -1000, 2647, 962, -1000, 2646, 962,
	-79, -82, 2645, -1000, 2346, -328, -1000, 2352, 19220, 2643,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 79002, 60195, -1000,
	-499, 78852, -500, 4847, -1000, -1000, -1000, 78798, -1000, -1000,
	-1000, -1000, 582, -1000, -1000, 2859, -1000, -1000, 78531, 78475,
	78325, 79849, 1794, 78271, 2492, -1000, -1000, 2249, -1000, -1000,
	-1000, 286, 2642, -366, 2640, 284, 281, -1000, -1000, -88,
	-1000, -1000, -256, 2352, 2639, 2637, 3021, -1000, -501, -1000,
	-1000, 10491, 1675, 79849, 1051, 79849, 1617, -1000, 18479, -1000,
	1017, -1000, 19220, 2051, 532, 18479, -503, 538, 480, 2048,
	280, -367, 2636, 2634, -1000, -1000, -1000, 1781, -256, -1000,
	3052, -1000, 3027, 1161, 1161, 10097, 1672, -1000, -1000, -505,
	1047, 79849, -1000, 1638, -1000, 4171, -1000, 1962, 1614, 10037,
	-1000, -1000, -1000, 276, -369, -1000, -1000, -1000, -1000, -1000,
	999, 1902, -1000, -1000, -1000, 9891, -1000, -506, 79849, -1000,
	535, 464, -1000, -1000, -1000, -1000, -1000, 1046, 9560, -510,
	1792, 1785, -1000, 1041, 79849, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3542, 3541, 3540, 18, 3538, 286, 295, 287, 21,
	2840, 3537, 289, 3536, 296, 3533, 37, 30, 27, 46,
	3532, 3181, 3164, 3152, 3150, 40, 3531, 8, 3530, 3527,
	3148, 3525, 3524, 3144, 3523, 3522, 3521, 3519, 3518, 3517,
	3516, 3515, 3514, 3140, 3129, 3127, 3123, 3513, 3512, 3511,
	3121, 3115, 3111, 3510, 33, 54, 22, 3508, 6, 3507,
	198, 226, 3506, 3, 3505, 3504, 12, 204, 3503, 3502,
	75, 3107, 3500, 3499, 3498, 3497, 3493, 3492, 148, 3491,
	3490, 3105, 3489, 3103, 3488, 3101, 3098, 3096, 3094, 3090,
	227, 3487, 3088, 3084, 3077, 3481, 2779, 232, 499, 230,
	3472, 137, 1745, 3471, 229, 3468, 214, 3466, 3465, 3463,
	459, 3462, 166, 3458, 360, 167, 162, 169, 233, 3457,
	61, 168, 308, 3456, 10, 3455, 116, 3453, 224, 3452,
	219, 2836, 191, 251, 192, 3451, 3450, 160, 3449, 3448,
	3446, 215, 3445, 3443, 231, 67, 3442, 3441, 186, 3440,
	142, 3439, 173, 3438, 3437, 3436, 3435, 235, 114, 92,
	171, 145, 3432, 159, 3431, 3429, 3428, 3427, 3421, 3420,
	90, 26, 3423, 3419, 149, 194, 3417, 68, 43, 56,
	3409, 3408, 64, 3407, 3406, 146, 3405, 3404, 129, 3403,
	189, 70, 3402, 3401, 3399, 3395, 117, 86, 3394, 48,
	3388, 187, 3381, 3380, 3379, 3378, 3377, 99, 3374, 96,
	3373, 190, 242, 209, 3371, 3370, 42, 49, 3367, 69,
	17, 16, 109, 29, 107, 87, 180, 174, 140, 155,
	51, 158, 62, 153, 163, 3366, 234, 176, 212, 112,
	50, 3365, 3364, 205, 3362, 111, 208, 182, 184, 200,
	3361, 3359, 3358, 254, 3356, 183, 559, 3354, 126, 316,
	247, 3352, 240, 147, 3351, 3343, 3342, 3327, 120, 55,
	138, 3325, 35, 236, 237, 241, 52, 81, 3323, 1742,
	5744, 6314, 7734, 32, 73, 115, 5227, 34, 206, 3322,
	80, 3320, 3319, 3317, 6006, 170, 39, 76, 157, 3313,
	161, 44, 118, 3312, 3309, 3294, 3293, 3292, 3291, 196,
	134, 3290, 3288, 77, 3286, 3285, 53, 25, 14, 13,
	3284, 144, 218, 217, 216, 3283, 202, 58, 3282, 3281,
	185, 156, 3277, 3273, 3272, 3267, 179, 121, 203, 3266,
	201, 123, 127, 3265, 122, 3262, 3261, 128, 2458, 139,
	3259, 3258, 132, 135, 3256, 3255, 3253, 3251, 59, 3250,
	3249, 4, 3240, 110, 57, 60, 108, 23, 164, 3239,
	3238, 197, 3237, 3233, 151, 175, 3232, 150, 152, 74,
	3231, 79, 141, 3229, 172, 2, 7, 5, 3227, 3226,
	3225, 3224, 3223, 3222, 3220, 3218, 130, 3217, 3214, 105,
	95, 84, 3213, 65, 3211, 3210, 3208, 195, 178, 94,
	225, 199, 11, 3206, 3205, 9, 3204, 177, 3202, 104,
	3199, 124, 3198, 3194, 71, 106, 36, 100, 3189, 3187,
	101, 3179, 3173, 103, 3170, 3167, 221, 2418, 3160, 725,
	3158, 207, 181, 85, 93, 3156, 78, 113, 3154, 102,
	3146, 15, 72, 3119, 20, 24, 258, 3117, 0, 3268,
	211, 3109, 131, 3086, 3081, 220, 3079,
}

var yyR1 = [...]int{
	0, 457, 457, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 241, 241, 95, 4, 4, 10, 10, 9,
	15, 6, 6, 11, 11, 11, 12, 12, 7, 7,
	13, 13, 14, 14, 5, 5, 124, 124, 8, 8,
	123, 123, 123, 238, 238, 238, 238, 235, 235, 125,
	125, 122, 122, 130, 16, 16, 16, 108, 108, 17,
	18, 18, 18, 18, 460, 460, 139, 139, 137, 137,
	138, 138, 233, 233, 19, 19, 19, 243, 243, 248,
	248, 248, 251, 251, 251, 251, 221, 222, 223, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 448, 448, 448, 449, 449, 449,
	449, 449, 276, 276, 276, 276, 413, 413, 428, 428,
	428, 429, 429, 427, 427, 427, 427, 427, 431, 431,
	432, 432, 430, 430, 430, 430, 434, 434, 435, 435,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 416, 416, 416, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 437, 437, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 439, 439, 440, 440, 441, 441, 441, 441,
	442, 442, 442, 442, 442, 443, 443, 443, 443, 443,
	443, 443, 444, 444, 445, 445, 3, 2, 394, 394,
	395, 395, 396, 396, 396, 396, 397, 397, 398, 398,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	31, 31, 31, 31, 31, 31, 275, 275, 271, 271,
	271, 273, 273, 274, 274, 274, 415, 415, 415, 409,
	409, 409, 411, 411, 410, 410, 410, 412, 412, 417,
	417, 417, 417, 417, 419, 419, 419, 419, 419, 419,
	419, 419, 419, 419, 420, 420, 420, 418, 418, 158,
	158, 421, 421, 426, 426, 422, 422, 423, 423, 425,
	425, 425, 424, 424, 424, 424, 313, 313, 177, 177,
	68, 68, 69, 69, 69, 210, 210, 210, 20, 20,
	20, 20, 20, 20, 26, 26, 28, 28, 28, 28,
	55, 55, 56, 29, 29, 29, 29, 57, 57, 58,
	32, 32, 32, 32, 32, 32, 65, 65, 65, 64,
	64, 63, 63, 63, 63, 63, 63, 34, 35, 36,
	461, 461, 461, 59, 59, 37, 37, 37, 40, 40,
	40, 41, 41, 41, 38, 39, 42, 30, 30, 30,
	30, 66, 66, 61, 61, 60, 60, 62, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 33,
	33, 33, 33, 33, 33, 25, 393, 393, 393, 54,
	54, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 76, 76, 350, 351, 351, 351,
	351, 351, 351, 337, 337, 338, 338, 338, 338, 338,
	338, 327, 327, 327, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 301, 301, 301, 301, 305, 305, 303, 303, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 304, 304, 304, 304, 304, 304, 304, 304,
	306, 306, 306, 306, 306, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 308, 308, 308, 308, 308, 308, 308, 308, 336,
	336, 310, 310, 309, 309, 309, 330, 330, 331, 331,
	331, 328, 328, 328, 329, 329, 314, 314, 314, 314,
	314, 314, 315, 332, 316, 316, 317, 317, 317, 317,
	317, 317, 318, 318, 319, 319, 319, 321, 321, 326,
	326, 325, 325, 325, 325, 325, 325, 322, 322, 322,
	322, 322, 322, 323, 323, 323, 324, 335, 335, 335,
	335, 335, 311, 46, 46, 52, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	371, 371, 376, 376, 265, 265, 266, 266, 53, 53,
	53, 53, 53, 164, 164, 372, 372, 374, 374, 374,
	374, 374, 374, 374, 373, 373, 375, 375, 339, 339,
	367, 367, 366, 366, 365, 365, 365, 365, 365, 365,
	365, 348, 348, 349, 349, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 343, 343, 343, 342, 342, 344,
	344, 347, 347, 347, 364, 364, 363, 363, 340, 340,
	340, 377, 377, 377, 377, 377, 100, 100, 341, 341,
	341, 378, 345, 345, 346, 346, 346, 386, 387, 385,
	385, 385, 385, 385, 165, 165, 165, 369, 369, 369,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 101,
	101, 101, 320, 320, 352, 352, 352, 352, 352, 456,
	456, 456, 353, 353, 353, 353, 353, 353, 447, 447,
	446, 446, 446, 354, 354, 355, 355, 355, 356, 356,
	358, 358, 272, 272, 359, 359, 360, 360, 357, 357,
	357, 361, 361, 390, 390, 390, 389, 389, 71, 71,
	71, 71, 73, 73, 72, 72, 80, 80, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 70, 70, 285, 285, 75, 209, 209, 209,
	270, 270, 383, 383, 384, 384, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 380, 380, 379,
	379, 381, 381, 74, 74, 74, 74, 159, 159, 22,
	22, 77, 77, 414, 414, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 388, 388, 388, 24, 24,
	81, 82, 82, 82, 284, 284, 284, 284, 85, 85,
	85, 85, 236, 236, 237, 237, 86, 86, 86, 86,
	87, 87, 87, 87, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 119, 257, 257,
	256, 256, 255, 255, 255, 258, 258, 258, 258, 299,
	299, 299, 84, 84, 84, 96, 96, 91, 91, 94,
	94, 94, 94, 97, 97, 98, 98, 99, 99, 92,
	93, 43, 44, 44, 44, 44, 45, 89, 89, 89,
	90, 90, 90, 90, 110, 110, 463, 463, 463, 88,
	464, 102, 103, 103, 105, 105, 105, 106, 106, 106,
	107, 107, 107, 262, 262, 262, 262, 262, 262, 262,
	104, 104, 104, 113, 113, 117, 117, 117, 117, 116,
	116, 116, 116, 212, 212, 217, 291, 291, 193, 193,
	213, 213, 218, 218, 218, 219, 219, 220, 220, 220,
	220, 220, 215, 215, 214, 214, 216, 180, 180, 180,
	180, 178, 178, 178, 178, 178, 178, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 176, 176, 289, 289, 289, 289, 288, 288,
	288, 121, 121, 126, 126, 128, 128, 128, 128, 128,
	128, 128, 128, 131, 195, 195, 465, 465, 149, 149,
	150, 150, 150, 150, 151, 151, 151, 151, 151, 153,
	153, 153, 154, 154, 154, 154, 154, 154, 155, 156,
	156, 152, 152, 152, 174, 174, 231, 231, 232, 232,
	230, 230, 234, 234, 127, 127, 129, 129, 129, 129,
	134, 134, 135, 135, 136, 136, 296, 296, 140, 140,
	140, 142, 141, 141, 141, 141, 141, 141, 143, 143,
	450, 451, 451, 452, 452, 452, 452, 453, 453, 453,
	453, 453, 453, 453, 453, 453, 453, 454, 454, 455,
	455, 144, 144, 146, 147, 147, 145, 145, 145, 145,
	145, 145, 157, 157, 148, 160, 160, 160, 160, 161,
	161, 118, 118, 118, 118, 118, 118, 118, 118, 254,
	254, 163, 163, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 189, 189, 189, 189, 189, 189, 166,
	166, 166, 166, 166, 166, 166, 112, 112, 190, 190,
	190, 133, 132, 132, 115, 115, 114, 114, 191, 191,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 183, 183, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 188, 188, 188, 188,
	188, 462, 462, 185, 185, 184, 184, 184, 184, 184,
	184, 109, 109, 109, 109, 109, 297, 297, 297, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 67, 67, 202, 202, 111, 111, 200, 200, 201,
	203, 203, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 173, 173,
	173, 204, 204, 192, 192, 120, 205, 205, 206, 207,
	207, 208, 208, 211, 224, 224, 224, 225, 225, 225,
	225, 175, 175, 175, 226, 226, 226, 226, 168, 168,
	167, 167, 167, 169, 169, 169, 169, 170, 170, 466,
	466, 229, 229, 228, 228, 227, 227, 227, 227, 227,
	227, 239, 239, 194, 194, 197, 197, 196, 198, 240,
	240, 245, 245, 245, 245, 242, 242, 246, 246, 246,
	246, 249, 249, 250, 250, 250, 247, 247, 247, 247,
	244, 244, 244, 293, 293, 293, 293, 252, 252, 261,
	261, 259, 259, 260, 260, 253, 253, 312, 312, 312,
	267, 267, 268, 268, 269, 269, 263, 263, 263, 263,
	264, 264, 290, 290, 286, 286, 292, 292, 287, 287,
	294, 294, 295, 295, 295, 295, 391, 391, 392, 392,
	392, 333, 333, 402, 402, 334, 334, 403, 403, 405,
	405, 400, 400, 401, 401, 404, 404, 47, 406, 406,
	407, 407, 408, 408, 408, 408, 48, 49, 49, 49,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 283, 283,
	283, 283, 283, 283, 280, 280, 280, 280, 280, 280,
	281, 281, 281, 458, 459,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 2, 13, 5, 7, 3, 3, 1,
	5, 1, 1, 1, 3, 3, 3, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 2, 1, 10, 2,
	0, 2, 2, 0, 2, 3, 6, 1, 3, 0,
	2, 1, 3, 4, 8, 8, 9, 1, 1, 10,
	9, 8, 7, 7, 1, 1, 1, 3, 1, 3,
	1, 3, 0, 4, 3, 4, 5, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 0, 0, 0, 2,
	3, 2, 3, 11, 11, 13, 5, 5, 16, 12,
	9, 4, 15, 1, 6, 9, 8, 0, 3, 3,
	6, 3, 0, 3, 4, 4, 0, 3, 0, 2,
	2, 1, 3, 1, 1, 2, 2, 2, 0, 2,
	1, 2, 2, 2, 2, 2, 0, 1, 1, 2,
	3, 3, 5, 3, 3, 4, 5, 4, 4, 2,
	2, 2, 2, 2, 0, 2, 2, 9, 10, 9,
	5, 7, 7, 7, 7, 8, 4, 6, 2, 3,
	2, 3, 3, 3, 4, 3, 3, 2, 2, 3,
	2, 2, 2, 3, 2, 2, 3, 2, 2, 2,
	3, 3, 2, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 1, 3, 0, 1, 1, 1,
	1, 3, 1, 3, 3, 0, 2, 5, 5, 5,
	7, 5, 0, 3, 0, 3, 4, 4, 0, 1,
	1, 3, 2, 3, 3, 3, 0, 1, 1, 2,
	2, 2, 2, 1, 2, 2, 3, 3, 3, 3,
	2, 4, 5, 4, 6, 7, 2, 3, 3, 3,
	3, 0, 3, 0, 3, 3, 1, 1, 1, 3,
	2, 1, 1, 3, 3, 2, 1, 1, 3, 1,
	2, 5, 4, 6, 4, 3, 3, 3, 6, 6,
	5, 5, 5, 5, 4, 3, 5, 1, 3, 1,
	3, 3, 5, 0, 5, 0, 3, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 4, 2, 5, 8, 4, 7,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 2, 5,
	0, 1, 2, 1, 3, 5, 7, 8, 7, 9,
	10, 7, 9, 10, 2, 2, 2, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 4, 3, 2, 4, 4, 0, 2, 3, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 5, 5, 5, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 1, 1, 0, 2, 2, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 6, 8, 3, 6,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 3, 2, 3, 3,
	2, 3, 3, 2, 3, 4, 2, 2, 1, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 3, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 2, 3, 3, 2,
	2, 4, 3, 1, 0, 1, 3, 3, 3, 2,
	2, 2, 0, 1, 2, 2, 2, 0, 1, 0,
	1, 1, 1, 1, 2, 2, 2, 5, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 2, 1, 2,
	1, 2, 2, 5, 5, 3, 2, 2, 2, 2,
	1, 1, 1, 1, 3, 2, 1, 1, 3, 3,
	0, 3, 0, 3, 1, 1, 0, 1, 5, 4,
	2, 2, 3, 0, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 3, 5, 5, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 3, 3, 1,
	1, 0, 1, 1, 1, 3, 5, 3, 3, 3,
	5, 3, 2, 2, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 3, 3, 3, 3, 2,
	1, 11, 12, 12, 13, 13, 0, 1, 3, 2,
	1, 5, 1, 1, 0, 2, 2, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 2, 3,
	3, 3, 3, 4, 5, 3, 3, 4, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 4, 4, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 6, 1, 4, 5, 5, 6,
	0, 1, 0, 3, 1, 1, 0, 2, 0, 8,
	9, 0, 2, 0, 1, 2, 0, 2, 1, 1,
	1, 1, 4, 3, 6, 5, 1, 3, 5, 4,
	8, 10, 9, 2, 2, 3, 3, 4, 4, 4,
	4, 3, 3, 3, 3, 6, 5, 4, 4, 5,
	5, 8, 4, 5, 7, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 3, 3, 3, 4, 5,
	5, 3, 7, 6, 5, 2, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 5, 1, 1, 1, 1, 5, 0, 1, 2,
	0, 1, 0, 1, 1, 2, 5, 3, 4, 4,
	4, 4, 4, 4, 3, 7, 6, 8, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 3, 1,
	3, 8, 8, 8, 11, 12, 15, 0, 3, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 0, 1, 1, 3, 2,
	3, 8, 5, 1, 1, 1, 1, 1, 4, 4,
	4, 4, 1, 3, 1, 1, 2, 2, 4, 4,
	3, 3, 3, 3, 3, 4, 3, 5, 5, 5,
	4, 4, 4, 4, 3, 2, 2, 6, 2, 4,
	3, 3, 4, 4, 5, 8, 6, 3, 4, 4,
	2, 4, 3, 2, 4, 5, 6, 2, 6, 6,
	3, 3, 4, 2, 4, 3, 3, 3, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 3, 2, 0,
	1, 1, 2, 4, 1, 0, 1, 2, 1, 2,
	4, 4, 5, 0, 1, 0, 3, 0, 2, 4,
	4, 2, 3, 4, 4, 5, 3, 3, 4, 3,
	1, 1, 1, 1, 0, 3, 1, 1, 1, 3,
	0, 2, 0, 2, 1, 2, 2, 1, 2, 2,
	1, 2, 2, 0, 2, 2, 2, 2, 2, 2,
	0, 1, 1, 3, 5, 1, 1, 3, 5, 1,
	2, 3, 5, 2, 2, 6, 0, 1, 0, 3,
	0, 1, 0, 2, 2, 4, 1, 2, 2, 2,
	2, 2, 0, 2, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 2, 2, 1, 1,
	1, 1, 3, 1, 1, 1, 4, 5, 1, 2,
	3, 1, 1, 2, 2, 4, 0, 1, 2, 6,
	1, 3, 2, 4, 1, 1, 1, 1, 1, 5,
	5, 8, 5, 5, 8, 5, 5, 8, 2, 2,
	2, 3, 4, 4, 0, 1, 3, 1, 0, 3,
	1, 3, 1, 3, 4, 6, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 3, 2, 2, 2,
	12, 1, 3, 3, 3, 6, 7, 2, 3, 3,
	4, 4, 5, 5, 8, 8, 3, 3, 4, 3,
	4, 1, 3, 3, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 3, 2, 3, 1, 2, 0,
	3, 1, 1, 3, 3, 4, 4, 5, 3, 4,
	5, 6, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 1, 1, 5, 6, 6, 6,
	5, 5, 5, 6, 5, 5, 6, 5, 5, 5,
	5, 6, 5, 5, 5, 4, 4, 5, 5, 5,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 6, 6, 4, 6, 6, 6, 4, 8, 8,
	8, 8, 4, 6, 7, 7, 7, 9, 4, 7,
	5, 4, 4, 4, 4, 2, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 6, 3, 4, 2, 2,
	2, 0, 2, 1, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 1, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 5, 1, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 1, 3, 1, 0, 2, 1, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 1, 1, 1, 0, 2, 4, 4, 1, 4,
	1, 3, 4, 1, 4, 3, 6, 2, 3, 1,
	1, 0, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 0, 5, 1, 3, 2, 3, 3, 1, 1,
	3, 3, 3, 3, 3, 1, 3, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 3, 4, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 1, 1, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 1,
	1, 0, 1, 0, 4, 0, 1, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 3, 3, 1, 3,
	2, 4, 1, 2, 1, 2, 2, 2, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -457, -1, -4, -10, -15, -16, -17, -18, -19,
	-21, -71, -22, -23, -24, -81, -85, -86, -87, -83,
	-84, -91, -92, -93, -89, -88, -30, -33, -25, -95,
	-43, -44, -45, -47, -48, -49, -50, -51, -53, -52,
	-46, -5, 11, -131, -458, 12, -125, 34, -76, 190,
	-448, -73, -72, -74, -75, 193, 192, 230, 194, 632,
	367, 633, 223, 72, 441, -94, 444, 445, -463, 305,
	306, 25, 42, 446, 448, 35, 36, 245, 333, 335,
	197, 442, 427, 428, 358, 680, -6, 638, 55, 76,
	191, 225, 224, 31, -8, -11, 199, -12, -13, -7,
	749, -207, 20, -102, -464, -207, -10, -9, -4, 638,
	-102, -108, 14, 15, 13, 552, -102, -350, 28, -3,
	117, 76, -8, 11, -264, -275, 97, 543, 198, -273,
	329, 331, 208, -261, -263, -271, 255, 265, 49, 210,
	209, 266, 199, 329, 199, 200, 202, 543, 198, 238,
	237, 329, 331, 270, 632, 199, -145, -294, -280, -282,
	-281, 347, 82, -279, 572, 576, 270, 579, 580, 585,
	337, 90, 52, 367, 566, 359, 368, 220, 521, 567,
	330, 336, 339, 360, 721, 369, 371, 372, 564, 565,
	54, 202, 554, 555, 558, 213, 736, 352, 221, 635,
	266, 744, 739, 741, 341, 742, 511, 603, 441, 460,
	452, 479, 636, 692, 278, 300, 449, 384, 528, 604,
	344, 293, 365, 693, 320, 288, 517, 523, 303, 444,
	626, 624, 606, 537, 246, 276, 694, 450, 297, 299,
	298, 260, 571, 304, 41, 226, 476, 645, 633, 255,
	695, 608, 688, 607, 249, 282, 621, 327, 40, 32,
	623, 248, 540, 108, 275, 696, 375, 525, 609, 497,
	376, 244, 271, 273, 289, 698, 640, 348, 232, 524,
	429, 472, 358, 127, 253, 315, 377, 699, 498, 502,
	700, 529, 334, 314, 628, 701, 702, 378, 644, 283,
	703, 201, 340, 610, 279, 704, 256, 531, 345, 496,
	211, 637, 222, 56, 235, 532, 500, 627, 506, 509,
	430, 374, 431, 705, 706, 707, 708, 356, 354, 611,
	355, 357, 622, 267, 295, 641, 612, 643, 61, 196,
	647, 504, 503, 505, 296, 661, 527, 484, 482, 709,
	710, 349, 217, 711, 712, 483, 23, 713, 714, 535,
	319, 351, 715, 716, 717, 613, 292, 629, 602, 718,
	719, 526, 499, 501, 254, 126, 632, 277, 720, 353,
	522, 362, 648, 639, 338, 290, 625, 722, 380, 291,
	234, 228, 536, 424, 425, 439, 440, 370, 723, 428,
	724, 725, 726, 727, 332, 331, 445, 363, 614, 446,
	272, 301, 642, 728, 615, 616, 729, 730, 264, 247,
	539, 530, 60, 513, 508, 366, 381, 451, 426, 436,
	432, 434, 435, 438, 437, 433, 516, 442, 274, 241,
	617, 618, 619, 427, 620, 12, 294, 346, 630, 631,
	605, 520, 364, 302, 265, 268, 487, 236, 731, 732,
	474, 475, 443, 239, 230, 121, 538, 325, 687, 329,
	382, 287, 59, 242, 53, 733, 734, 269, 243, 646,
	286, 447, 343, 649, 199, 82, -284, -279, -282, -283,
	-280, 347, 231, 58, 95, 63, 62, 82, -279, 632,
	143, 480, 528, 190, 518, 519, 525, -343, 526, 237,
	424, 366, 240, -299, 199, -257, 239, 517, 334, 353,
	576, 243, 244, 271, 425, 431, 200, 201, 37, 530,
	529, 521, -294, -96, 447, -96, -96, 203, 447, -110,
	232, 194, -145, 231, -66, 82, 307, -66, 34, 82,
	-157, -286, -294, 82, -279, 41, 82, 446, 520, 520,
	84, 639, 246, 26, -437, -412, 362, -436, -410, 191,
	190, 15, 192, 270, 367, 368, 333, 200, 13, 35,
	721, 218, 369, 370, 11, 223, 371, 372, 238, 14,
	373, -438, -415, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 418, 419, 420, 421,
	422, 423, 81, 82, -279, 26, -437, -412, 362, 370,
	424, 443, 424, 424, -266, -265, 383, 506, 143, -124,
	691, -122, -130, -296, -294, -280, -195, -465, 251, 543,
	-253, 329, -273, 204, -126, -128, -129, -149, -132, 689,
	-458, -127, -450, -145, -133, 82, 601, -106, 10, -105,
	-107, 9, 8, -106, -225, 22, 21, -262, -103, -225,
	-459, 78, -459, -124, -116, 134, -118, -294, -162, 100,
	-172, 33, 29, -171, 347, 231, -163, -199, -280, -198,
	-133, 143, -298, 132, 133, 140, 101, 186, -183, -181,
	-182, -184, -186, -187, 226, 474, 475, 81, 83, 91,
	84, 85, 86, 87, 92, 93, 94, -286, -282, -278,
	-281, 572, 576, 579, 580, 585, -196, -458, 144, 145,
	146, 147, 148, 149, 150, 151, 152, 153, 154, 155,
	156, 157, 158, 159, 160, 161, 162, 163, 164, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	66, 67, 570, 198, 553, 554, 477, 555, 13, 556,
	557, 558, 634, 220, 562, 103, 55, 324, 544, 545,
	549, -188, 546, 550, 551, 564, 565, 566, 567, 205,
	543, 138, 552, 589, 590, 591, 592, 593, 594, 595,
	596, 598, 599, 597, 573, 574, 575, 577, 578, 581,
	582, 583, 584, 586, 587, 588, 663, 195, 191, 194,
	99, 28, 30, 664, 252, 102, 458, 492, 561, 21,
	25, 214, 197, 480, 212, 142, 207, 215, 309, 311,
	190, 70, 665, 541, 310, 518, 659, 656, 658, 657,
	471, 469, 308, 666, 15, 31, 224, 259, 667, 467,
	192, 250, 106, 107, 668, 46, 45, 8, 312, 225,
	318, 468, 669, 670, 24, 73, 216, 16, 210, 240,
	743, 671, 333, 18, 125, 19, 672, 653, 655, 654,
	204, 119, 200, 735, 68, 257, 673, 456, 461, 462,
	463, 464, 465, 457, 96, 674, 675, 116, 323, 64,
	601, 37, 245, 689, 559, 322, 676, 43, 42, 491,
	495, 490, 321, 507, 117, 22, 547, 548, 35, 677,
	678, 233, 494, 455, 489, 690, 679, 651, 262, 71,
	383, 470, 747, 38, 74, 229, 379, 350, 47, 97,
	20, 258, 69, 39, 568, 122, 748, 473, 206, 237,
	680, 533, 261, 681, 123, 466, 691, 218, 118, 448,
	193, 361, 306, 219, 328, 335, 682, 251, 124, 519,
	650, 683, 563, 34, 223, 305, 454, 208, 684, 263,
	317, 307, 316, 685, 686, 342, 48, 745, 662, 199,
	44, 105, 493, 453, 488, 203, 560, 238, 313, 9,
	49, 36, 514, 14, 373, 72, 75, 481, 478, 486,
	485, 209, 746, 17, 326, 569, 638, 534, 98, 660,
	515, 542, -102, -102, -102, -242, 443, -249, -246, 529,
	530, -247, -250, -244, -199, 506, 718, 719, 528, 480,
	527, -286, -294, -280, 347, 231, 143, 573, 574, 575,
	103, 477, 553, 589, 544, 546, 541, 545, 543, 33,
	590, 29, 94, 591, 570, 205, 13, 186, 577, 578,
	592, 593, 594, 66, 547, 548, 634, 138, 100, 595,
	596, 92, 598, 599, 324, 552, 67, 597, 198, 583,
	582, 581, 584, 556, 557, 93, 549, 550, 551, 55,
	587, 586, 588, -2, -6, -458, -145, -351, -338, -341,
	-286, -280, -282, -283, 227, -281, 215, -378, 82, -279,
	212, -207, -102, 200, 202, 552, -260, 205, -260, 238,
	237, 270, -274, 263, -260, -260, 722, 199, -273, 109,
	109, -77, -145, -414, -409, -415, -259, 205, -286, -259,
	-259, -259, -259, -259, -259, -259, -259, 82, -284, -145,
	187, -82, -145, -137, 16, 16, 75, 75, 82, -284,
	82, 430, 374, 34, -258, 117, 17, 543, 198, 199,
	237, 238, 202, 270, -258, -345, 16, 119, 241, 241,
	241, 241, 241, 242, 241, -256, 520, 522, 523, 524,
	-255, 16, 119, 17, -119, 117, 24, -458, -225, -225,
	-255, 241, 135, -98, 99, -98, 82, 446, 203, -90,
	-4, -18, -16, -17, -110, -9, -174, -152, 28, 6,
	7, 109, 34, 34, 81, 59, 34, -61, -60, -62,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	303, 304, 34, -393, 76, 187, -333, 506, 82, -406,
	-407, -145, 84, 84, 74, 353, 74, 77, 203, 77,
	74, -439, 363, 76, -439, 331, 363, 364, 265, 329,
	202, -439, -439, 331, -439, -439, -439, 350, -439, -439,
	520, -439, -439, -439, 365, 366, -439, 518, 202, -439,
	-439, -439, -439, -439, 79, 74, 77, 353, 74, 16,
	74, 426, 429, 533, 638, -164, 26, -370, 143, 375,
	376, 377, 378, 374, 353, 379, 380, 381, 241, 382,
	199, 520, 374, -6, -122, 77, -229, -458, 77, -196,
	-458, 82, -326, -325, -322, -323, -324, -321, 33, 199,
	-259, 270, -140, -142, -141, -143, 64, 68, 70, 65,
	66, 67, 521, 71, -269, 28, -132, -458, -121, -9,
	-131, -126, -458, -150, 122, -160, -269, -151, 72, 204,
	73, 28, -152, -153, -154, -155, -156, 6, 7, 54,
	-458, -458, -7, -8, 26, 27, -14, -7, -12, -14,
	26, 27, 26, 27, -7, -226, 24, 35, -175, 84,
	87, -199, -208, -211, -118, -294, 58, -113, 26, 27,
	65, 57, 63, 62, -222, 89, 16, -289, 99, 97,
	98, 116, -288, 28, 82, 81, -284, 187, -118, -166,
	119, 100, 117, 118, 102, 129, 128, 139, 132, 133,
	134, 135, 136, 137, 138, 130, 131, 142, 109, 110,
	111, 112, 113, 114, 115, -254, -458, -133, -458, 187,
	-458, 187, 188, 189, 187, -172, -172, -172, -172, -172,
	-172, -172, 81, 81, 81, -458, 187, 187, -458, -458,
	-458, -458, -458, -191, -118, 638, -458, 199, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -202, -118, -458, -458, -462, -458, -462,
	-462, -185, -462, -458, -185, -185, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -458, -458, -458,
	-458, -458, -458, -458, -458, -458, -458, -185, -185, -185,
	-458, -253, -253, 16, -137, -138, -145, -148, -294, 77,
	-243, -248, 531, 533, 443, -247, -247, -293, -286, 81,
	33, 143, -349, 109, 120, 34, 187, -207, 78, 77,
	-301, -305, -307, -306, -308, -303, -304, -67, 484, 482,
	478, 477, 480, 483, 143, 481, 487, 488, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 34, 226, 474,
	475, 476, 649, 498, 499, 500, 501, 502, 503, 504,
	505, 452, 479, 636, 453, 454, 455, 456, 457, 458,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, -301, -301, -301, -301, -301, -285, -378,
	82, -284, 76, -225, -262, -286, -145, -275, 208, -273,
	82, 100, 82, -144, -286, -294, -157, -260, 264, -418,
	-417, -409, -412, 662, -260, -274, -409, 269, 267, 268,
	77, 203, 77, 203, 79, -137, 29, 74, -139, -145,
	82, 82, -144, -157, -411, -409, -412, -158, -286, -294,
	-295, -294, -277, -282, -283, 663, 195, 26, 191, 194,
	99, 28, 30, 664, 252, 102, 458, 143, 573, 574,
	575, 492, 561, 21, 25, 214, 103, 197, 477, 480,
	212, 142, 207, 215, 309, 311, 553, 589, 190, 70,
	665, 544, 546, 541, 545, 310, 543, 518, 659, 656,
	658, 657, 471, 469, 308, 33, 666, 15, 590, 31,
	224, 259, 27, 667, 136, 467, 192, 600, 250, 106,
	107, 668, 46, 45, 8, 29, 312, 225, 94, 318,
	591, 468, 669, 670, 24, 73, 216, 16, 210, 240,
	743, 671, 333, 18, 570, 125, 19, 672, 653, 655,
	654, 205, 204, 119, 200, 735, 68, 257, 13, 673,
	456, 461, 462, 463, 464, 465, 457, 186, 96, 674,
	675, 116, 323, 64, 577, 578, 601, 50, 37, 245,
	592, 593, 689, 594, 559, 322, 676, 43, 42, 491,
	495, 490, 321, 507, 66, 117, 22, 547, 548, 35,
	677, 678, 634, 233, 494, 455, 489, 690, 679, 651,
	138, 262, 71, 100, 383, 595, 596, 92, 470, 747,
	38, 74, 229, 379, 350, 47, 97, 20, 258, 69,
	39, 568, 122, 748, 598, 473, 206, 237, 680, 533,
	261, 681, 123, 599, 466, 691, 218, 118, 448, 193,
	324, 552, 361, 306, 219, 328, 335, 67, 682, 251,
	124, 597, 198, 519, 650, 11, 683, 563, 34, 223,
	305, 454, 208, 684, 263, 317, 307, 316, 685, 57,
	686, 342, 48, 583, 582, 581, 584, 745, 65, 556,
	557, 662, 199, 44, 105, 493, 453, 488, 203, 560,
	238, 93, 313, 9, 49, 36, 514, 14, 373, 72,
	75, 549, 550, 551, 55, 481, 478, 486, 587, 485,
	586, 588, 209, 746, 104, 17, 326, 569, 638, 534,
	98, 660, 515, 14, 192, 77, 81, -237, 82, -284,
	81, -237, -236, -237, -236, 241, -258, 81, -298, -118,
	-260, -260, -145, -145, -145, -145, -145, -145, -258, -258,
	-258, -258, -255, 16, -255, -258, -294, -294, -118, -172,
	-409, 545, 134, -258, -294, -99, -97, 217, -97, -99,
	82, 82, 446, -90, 38, 28, 28, 82, -61, -61,
	81, -61, 77, 109, -61, -174, 78, -191, -286, -391,
	735, 77, -408, 28, 533, 534, 507, -441, 199, 240,
	237, 74, -441, -436, 370, -411, -410, -409, -439, -440,
	-286, -439, -439, -439, 520, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -415, -441, 333, 77, -441, -411,
	-409, 203, -373, -375, 439, 440, 534, 535, 450, 374,
	374, 374, 374, 374, 374, -137, -137, 203, 252, -130,
	28, -228, -227, -287, -280, -282, -283, 227, -286, -277,
	-465, -326, -323, -322, -324, 480, 528, 142, 540, -145,
	-409, -158, -128, -128, -126, -128, 64, 64, 64, 69,
	64, 69, 69, 64, 64, -141, -296, -269, 77, -459,
	-459, -459, -9, -458, -296, -160, -269, 200, 200, 200,
	102, 16, 52, 26, 102, 16, 52, 26, 102, 16,
	52, 26, -115, -114, -117, 134, -118, -294, -172, -238,
	96, 14, 119, 77, 23, 77, -224, 30, 31, 187,
	-173, 59, 84, 87, -238, 77, -116, -145, -118, -118,
	-118, -189, 92, 100, 93, 94, -288, 227, 134, -295,
	-287, -282, -280, 347, 231, -277, -172, -190, -196, -133,
	88, 119, 117, 118, 102, -172, -172, -172, -172, -172,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -172,
	-297, 82, 81, 143, 82, -287, -114, -287, -171, 226,
	474, 475, 92, -171, -286, -286, -104, 26, 27, -287,
	521, -287, -104, -104, -104, -104, -104, 77, -459, -114,
	-114, -114, -459, -118, -118, -114, -172, -114, -199, 81,
	-114, -199, 81, -114, -172, 559, 560, 561, -114, -114,
	-104, -200, -201, 104, -199, -280, -283, 347, 231, -114,
	-459, 84, -178, -179, 641, 650, 651, 653, 656, 649,
	648, 647, 645, 644, 643, 646, 642, 660, 659, 658,
	657, 655, 654, 652, -178, -178, -180, 226, 476, 474,
	475, -114, -115, -114, -114, -459, -459, -117, -114, -117,
	-114, -114, -459, -459, -459, -459, -114, -114, -114, -114,
	-114, -114, -114, -114, -114, -114, -114, -114, -459, 84,
	-147, 96, -145, -121, -145, -137, -460, 16, 75, -460,
	77, 187, -246, -249, 77, 532, 534, 535, -243, -318,
	-319, 142, 74, 95, 81, -118, -287, -295, -225, -369,
	-338, -339, -340, -341, -362, 215, -377, 206, 208, 210,
	209, 49, -342, 216, 200, 50, -302, -328, 513, 514,
	-310, 76, -309, 76, -67, 478, 477, 480, -309, 478,
	485, -309, 485, 485, -309, -309, -309, 478, 76, 76,
	-310, -310, -310, -330, 76, -330, 473, -331, 76, -331,
	-331, -331, -331, -302, -302, -302, -302, -302, -378, -118,
	-226, -290, 75, -229, 202, 722, -326, 29, -326, -68,
	252, 221, 187, 76, -158, 255, 256, -413, 77, 33,
	-419, 330, 84, 205, -145, 231, -145, -145, -409, -409,
	-415, -388, 219, 214, -145, 77, 77, 187, 701, 701,
	-145, 77, 81, 82, 82, -174, -346, 16, 119, -258,
	-145, -174, -112, 227, 75, -462, -459, 448, 449, 82,
	-172, 38, 38, -60, -171, -286, 78, -392, 204, 552,
	81, -407, -296, 506, 534, -442, 134, -286, -441, -442,
	-445, 638, 203, 78, 77, -439, -442, 350, 333, -442,
	16, -372, -374, 432, 433, 434, 435, 436, 437, 438,
	77, 109, 109, 451, -376, 24, -371, 638, -371, 81,
	-172, -132, -459, 77, 187, -196, 34, -348, -349, -348,
	-348, -80, -384, -78, -382, 195, 192, 191, 266, 197,
	-321, 553, 249, 248, 282, 283, 73, 35, 196, 193,
	-70, -79, 230, 288, 234, 289, 194, 229, 290, 228,
	291, 638, 286, 742, 511, 603, 604, 605, 90, 606,
	246, 41, 200, 608, 540, 375, 609, 610, 211, 611,
	612, 613, 339, 614, 615, 616, 617, 618, 619, 364,
	9, -419, -425, 74, -135, -134, 74, 75, -136, 74,
	-134, 64, 64, 64, -232, 76, -296, -126, -459, -234,
	-286, -160, -296, -458, -458, -458, -172, -172, 119, -172,
	-172, 119, -172, -172, 119, -459, 77, 187, 77, -235,
	40, 39, -286, 508, 60, -175, -175, -211, -252, 24,
	16, 55, 55, -123, 16, -222, -222, 92, 93, 94,
	187, -458, -190, -172, -172, -172, -112, 99, -459, -459,
	-115, -114, -114, -114, -114, -114, -118, -459, -459, -459,
	77, 75, 28, -459, 75, 119, -459, 16, 16, -459,
	16, 16, -459, -459, 16, -172, -172, -172, -459, -459,
	-114, -203, -201, 106, -118, -459, -459, -459, -459, -459,
	77, 77, 16, 77, -459, -459, -459, -459, -212, 568,
	-212, -459, -459, -459, -459, -459, -212, -212, -212, -212,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -233, 122, -145, 34, -233, 75, -121,
	-121, -148, -294, 134, -248, -251, 536, 533, 539, 82,
	81, 143, 81, 187, -226, -354, -368, 77, 122, 742,
	511, 603, -321, 604, 605, 90, 606, 246, 41, 200,
	608, 540, 375, 609, 610, 211, 611, 612, 613, 339,
	614, 442, 615, 616, 617, 618, 619, 364, 9, 76,
	-347, -285, -377, 82, -279, 50, -342, -344, -342, -342,
	-342, -347, 82, -279, -347, 50, 704, 92, 100, -317,
	-319, 143, -314, -315, -332, -335, -311, 28, 743, 516,
	218, -341, 480, 528, 33, 74, 511, 206, 50, 49,
	210, 90, -329, 515, 84, 84, 579, -309, 485, -309,
	-309, -309, -309, -309, -336, 81, -336, 84, -330, 84,
	78, 74, -286, 28, -145, 662, -69, 13, 14, 15,
	-286, -394, -395, -396, -286, 119, 257, 258, 74, -428,
	361, -417, 331, 340, 99, 21, 638, -449, 100, 203,
	203, -145, -409, -286, 74, 74, -237, -161, 17, 82,
	82, -255, -258, -172, -412, 243, 244, -172, -172, -146,
	96, -408, 203, 187, 187, -442, 203, 352, -411, -286,
	16, 16, 350, 16, -411, 77, 109, 109, 109, 109,
	109, 109, 109, -375, 76, 76, 384, 533, -227, -287,
	-348, 82, 81, 143, 82, 81, 143, 81, -383, 77,
	-384, 195, 192, 282, 283, -382, -270, -342, -390, -389,
	-340, -341, 122, 207, 215, 215, 212, -270, -342, 206,
	216, 122, 215, 212, -270, 200, -348, -270, 480, 142,
	203, 37, 37, 364, 122, 364, 122, -348, -270, 207,
	-342, -267, 215, -268, 203, 28, 287, 122, 122, 122,
	122, 122, 122, 122, 122, 292, -348, -348, -348, -348,
	-348, -348, -348, -348, 607, 607, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, -348, -348, -348,
	-348, -348, -352, -446, 81, -456, 90, 270, 339, 82,
	-279, -277, 84, 86, 85, -348, -159, 193, 276, 272,
	-118, 76, -118, -230, -286, -232, -459, 77, -160, -230,
	-230, -230, 99, 203, -458, 99, 203, -458, 99, 203,
	-458, -269, -117, 134, -295, 81, 77, 81, 81, 509,
	61, -145, -161, 600, -121, -116, 134, -287, -115, -112,
	99, -172, -459, -459, -459, -459, -459, -459, -300, 143,
	477, 480, 226, 476, 469, 467, 466, 468, 496, 482,
	513, 474, 514, 649, -297, -300, -297, -172, -172, -172,
	-172, -172, -172, 16, 16, 16, 635, -207, 108, -118,
	105, -172, -172, -172, -172, -286, -217, -458, -212, -212,
	-212, -212, -212, -213, -212, -213, -213, -213, -213, -213,
	-213, -213, -213, -213, -213, -213, -168, -169, 34, -167,
	-9, -458, -170, -466, 55, 59, -458, -240, -245, -199,
	-280, -283, 227, -161, -121, -161, -161, 187, 533, 537,
	538, -368, 21, -348, -348, -348, 528, 480, 142, -348,
	-348, -348, -348, -348, 607, 607, -348, -348, -348, -348,
	-348, -348, -348, -348, -348, -348, -348, 443, -348, -348,
	-348, -348, -348, -352, -446, -348, -364, -363, 82, -284,
	206, 49, -377, -347, -347, -347, -347, -347, -100, -285,
	92, -458, 744, 84, -145, 34, 82, 143, 81, -171,
	133, -298, -163, -182, -458, 93, 94, 544, 545, 549,
	546, 550, 551, 564, 565, 566, 567, 541, 547, 548,
	14, 50, 50, 50, 81, 78, 78, 78, -309, 78,
	77, 78, 77, 78, 77, -165, 696, 697, -145, -221,
	-229, 84, 74, 78, 77, -301, -286, -286, -286, 272,
	-431, 638, 336, -429, -427, 342, 343, 344, 345, 346,
	-412, 341, -419, 338, 81, 82, 81, 661, 695, 716,
	688, 29, -145, -409, -231, 76, -230, -231, -118, -174,
	-233, 199, -411, 134, 134, -286, 203, -411, 350, -444,
	638, -411, -411, 16, -411, -374, 81, 81, 81, 84,
	84, 84, 84, -137, -137, 81, 35, 82, 81, 143,
	-78, 195, 192, 282, 283, 76, -337, 82, -284, -347,
	-263, 208, 206, -458, 82, -285, -285, -285, -286, 50,
	50, -234, -285, -285, -286, -285, 33, 279, 280, 281,
	82, 34, -348, 480, -234, 26, -234, 26, 33, 336,
	284, 285, -337, -285, -286, -145, 216, 212, -285, -234,
	26, 84, -234, -286, -234, 26, -234, 26, -234, 26,
	-234, 26, -352, -118, -352, -456, -456, 81, 81, 81,
	-348, -348, -456, 81, -446, 81, -101, 217, 220, 222,
	-352, -352, -352, -456, 81, -353, 33, 623, 472, 624,
	625, 626, 82, 92, 81, 81, 33, -456, 33, -456,
	-352, 620, -458, -424, 248, 249, 203, 277, 100, -421,
	741, 273, -230, 78, 77, -150, -286, -459, -459, -459,
	-172, -172, -172, -172, -172, -172, -172, -172, -172, -296,
	187, 523, -286, -316, -317, -204, 18, -222, -459, -172,
	-213, -213, -213, -213, -213, -459, -310, -310, -310, -310,
	-331, 473, -310, 457, -310, 457, -459, -459, -459, -459,
	24, 24, 24, 24, -459, -172, -172, -172, -458, -111,
	563, -118, 77, 77, -459, -459, -291, 82, -239, 74,
	-239, -240, -269, -9, -459, -228, -170, -458, 11, 55,
	59, 638, 199, -194, -197, -465, -234, -161, 77, -349,
	-349, -349, -349, -207, -161, -355, -356, -359, -358, 123,
	627, 676, -352, -352, -352, -348, 34, -348, -456, -456,
	81, 81, 81, -348, -348, -456, 81, -446, 81, -101,
	-352, -352, -352, -456, 81, -353, 82, 92, 81, 81,
	33, -456, 33, -456, -352, 620, -458, 78, 77, -310,
	-310, 50, -344, 76, -172, 28, 76, 82, 143, 81,
	-171, 81, -172, -188, 81, 84, 84, 76, -223, 28,
	-449, -145, -397, -398, -399, 90, 637, 100, 259, 260,
	217, 261, 262, 263, -396, -301, -301, -301, -421, -434,
	-435, -433, 339, 359, 360, 347, -432, -430, 354, 355,
	356, 357, 99, 81, 81, 81, -420, 330, 99, 339,
	21, 28, 21, 28, 81, 81, 81, 81, 84, 75,
	-230, -258, -316, -145, -444, -411, -444, 333, -411, 78,
	78, -337, -209, 220, 221, -301, -301, -290, -344, 50,
	-379, -381, 122, -285, 696, 697, 696, 697, 34, 192,
	734, 704, -337, -348, -297, 34, 364, 364, 364, 364,
	-209, -268, 203, 50, -285, 203, 364, 364, 96, 638,
	81, 81, 621, 622, -447, -446, -313, 90, 74, -158,
	277, -425, 74, -177, -171, -182, -171, 78, -286, 77,
	77, 77, 134, -458, -400, -256, -205, 19, 21, -316,
	82, -316, 82, -172, -172, -172, -172, -459, -459, -459,
	-172, -459, 81, -172, -172, -193, 122, 32, -239, -296,
	-459, -170, -458, -459, -459, 77, -196, -458, -459, -207,
	-245, -118, -118, -118, -118, -225, -360, 629, -458, 523,
	628, 50, -297, -348, -320, -446, 81, 81, 81, 621,
	622, -447, -366, -365, 75, 211, 90, 609, 616, 734,
	704, -363, -224, -224, -347, -347, -230, -459, -458, -230,
	-459, 78, 78, -364, -9, -221, 24, -222, -399, 81,
	263, 259, 263, 263, 263, 263, 264, -425, -416, 90,
	337, -433, 348, 702, 332, 361, 84, 84, 121, 35,
	36, -430, 84, 84, 84, 84, -427, 21, 638, -419,
	338, 81, 81, 338, 81, 81, 330, -449, 41, 78,
	-400, -443, 28, -444, -443, 350, 78, 82, -302, -302,
	76, -347, -347, -459, 77, -286, 33, 33, -209, -297,
	-297, -285, -286, -285, 203, -285, -458, 199, 77, -459,
	327, 81, 366, -159, -426, -179, -172, -172, -172, -451,
	-452, -287, 709, -401, 43, -403, 44, -215, 569, -206,
	-118, -192, -120, -118, -459, -459, -459, -459, -109, 119,
	638, -459, -459, -207, 21, 50, -232, -170, -9, -458,
	-197, -459, -225, -357, 630, 84, -172, -458, -458, -272,
	266, -297, -459, -365, -446, -348, 81, -348, -348, 78,
	-327, 746, 745, -172, 78, 78, -221, -223, 250, -223,
	41, 41, 255, 256, -424, 81, 81, 33, 349, 186,
	33, 84, 186, 571, 338, 81, 82, 339, 339, 21,
	-172, -401, -409, -443, -364, -290, 76, -381, 55, -172,
	142, 142, 203, -285, -379, -145, -446, -221, -424, 132,
	-422, 274, -459, -459, -459, -459, 77, -301, 24, 81,
	602, -404, 48, -402, -334, 47, 21, -214, -216, -286,
	77, -459, 636, 71, 639, -218, 124, 123, -191, 14,
	-9, -380, -458, 21, -459, -230, -172, -458, 109, 84,
	81, 81, 218, -459, -367, -366, -276, 638, -9, 251,
	-27, -4, -16, -17, -18, -19, -21, -71, -22, -23,
	-28, -29, -24, -81, -85, -86, -87, -83, -94, -92,
	-93, -89, -88, -32, -34, -35, -37, -40, -41, -38,
	-39, -36, -30, -33, -42, -25, -43, -44, -45, -50,
	-51, -31, -52, -46, 103, 205, 442, 308, 319, 320,
	321, 82, 324, 326, 322, 323, 318, 328, 441, -313,
	84, 33, 84, 33, 351, 339, 28, 84, -312, 204,
	638, 78, 76, -364, 235, -348, -297, -285, -459, -70,
	-27, -313, 186, -423, 275, -177, -459, -452, -453, 602,
	29, 715, 523, 81, -403, 21, -405, 45, 46, 81,
	77, 28, -120, 61, 637, 640, -459, -219, 102, -220,
	121, 571, -176, 84, 186, -219, -240, -459, -379, -358,
	-459, -459, -230, 84, -145, -327, 212, 278, 506, -221,
	-210, 253, 254, -221, -118, -55, -56, 104, -118, 82,
	-65, -292, 311, 312, 313, -287, 82, 82, -54, -27,
	80, -54, -118, 82, 82, -461, 16, 58, -172, 108,
	-54, 327, 645, 645, 81, -232, 84, 331, -367, -364,
	78, 236, -297, 287, -221, 327, -171, -177, -426, -269,
	81, 602, -458, 523, 81, 21, 21, -216, -217, 61,
	-220, 126, 127, 251, 126, 127, -171, -459, 628, 50,
	-459, 76, 350, 212, 212, -276, -221, 82, 82, -55,
	108, 106, -56, -118, 105, 309, 310, 314, -301, 77,
	749, 441, 321, 324, 326, 749, 327, 82, 16, 749,
	-221, -241, 34, 43, 124, 33, 336, 26, -412, 78,
	-367, -458, -221, -179, -426, -296, -454, -455, 376, 92,
	33, 81, -451, -458, 81, 81, 638, 99, -178, -458,
	-272, -230, 350, 350, -223, 108, 106, 103, -54, 105,
	-54, 24, 24, 24, -316, -287, 108, -27, 108, -54,
	-54, -54, -118, 325, -54, 96, 108, -27, -240, 8,
	-367, -172, 233, -27, -455, 92, 33, -454, 92, 33,
	74, 74, -171, -459, -451, 639, -220, -172, -458, 78,
	-20, -26, -19, -25, -16, -17, -18, 441, 638, 103,
	-54, 749, -54, 749, -66, 84, -9, -64, -63, 84,
	-66, 316, 100, 317, 82, -318, 321, 82, 749, 749,
	749, 327, -118, 749, -59, 82, -221, -412, -459, -459,
	-221, 74, -171, 74, -171, 668, 376, 668, 376, 74,
	-459, 640, -459, -172, -386, -387, 74, -221, -54, 108,
	-124, 749, 108, 749, 108, 106, -57, -58, 107, -27,
	77, 315, 33, 108, 108, 325, -54, 108, 108, 77,
	74, 74, 376, 376, 668, 376, -361, 631, -459, -387,
	74, -386, 74, 15, 14, 749, 108, 103, 205, -54,
	108, 106, -58, -118, -63, -172, 82, 321, -118, 749,
	324, 326, 82, 74, 74, 84, -361, -385, 219, 214,
	217, 34, -385, 108, 103, 749, 205, -54, 105, 82,
	108, 108, 376, 668, 213, 33, 92, 108, 749, -54,
	324, 326, 205, 108, 749, 82, 82, 205,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	40, 1689, 1190, 1689, 0, 1190, 0, 1190, 0, -2,
	133, 908, 909, 910, 911, 0, 0, 0, 0, 0,
	0, 0, -2, 1154, 1155, 1158, 1155, 1155, 1184, 0,
	479, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 726, 0, 64, 0, 1296, 2713,
	-2, 1186, 1187, 1188, -2, -2, 0, 53, 0, 60,
	2, 1697, 0, 1203, 1192, 1697, 0, 0, 49, 0,
	0, 1190, 1190, 1190, 87, 88, 0, 119, 0, 121,
	0, 0, 1689, 1190, 0, 0, 0, 1773, 1773, 333,
	1773, 1773, 1788, 0, 1791, 331, 0, 1770, 1786, 1787,
	1789, 0, 0, 0, 1771, 0, 1771, 1771, 1771, 1771,
	1771, 1771, 1771, 1771, 0, 0, 1069, 1386, 1388, 1389,
	1390, 1391, 1800, 1801, 2704, 2705, 2706, 2707, 2708, 2709,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2710, 2711, 2712, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471,
	2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481,
	2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501,
	2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511,
	2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521,
	2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531,
	2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541,
	2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551,
	2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571,
	2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591,
	2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601,
	2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611,
	2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621,
	2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 0, 0, 0, 1074, 1075, 1076,
	1077, 2698, 2699, 2700, 2701, 2702, 2703, 1086, 1087, 0,
	0, 0, 1145, 0, 1145, 1105, 1106, 0, 1108, 0,
	0, 0, 0, 0, 0, 0, 1142, 1120, 1123, 1127,
	0, 1697, 1697, 1142, 1133, 0, 774, 775, 776, 1150,
	1151, 1139, 1152, 1157, 1156, 1165, 1165, 0, 1156, 79,
	-2, 0, 1324, 0, 457, 459, 0, 480, 0, 483,
	486, 1392, 0, -2, -2, 1811, 1171, 0, 0, 1836,
	1837, 0, 0, 0, 0, 0, 2573, 231, 347, 272,
	272, 272, 272, 272, 272, 272, 0, 272, 272, 0,
	272, 272, 272, 2589, 272, 0, 272, 272, 272, 272,
	272, 230, 346, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 336, 337, 338, 0, 0, 0, 2573, 0,
	730, 1159, 731, 733, 0, 727, 724, 725, 0, 80,
	0, 67, 81, 1721, 1346, 1347, 1293, 0, 1297, -2,
	0, 1771, 0, 1776, 69, 1283, 1284, 1285, -2, 0,
	0, 1291, 1292, -2, 1442, 1800, 0, 0, 1197, 0,
	0, 1194, 1200, 0, 1704, 0, 0, 117, 1191, 47,
	48, 2714, 59, 0, 0, 1219, 1274, 0, 1401, 2271,
	1407, -2, 2184, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 2129, 0, 0, 0, 0, 0, 2226, 1480, 1481,
	1482, 1483, 1484, 1485, 2437, 2652, 2653, 1667, 1671, 1672,
	1673, 1674, 1675, 1676, -2, -2, -2, 1652, 1653, 0,
	1665, 2704, 2705, 2707, 2708, 2709, 1738, 0, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620,
	2252, 2315, 2203, 2320, 2148, 2710, 2140, 2711, 2217, 2344,
	2345, 2712, 2260, 2683, 0, -2, 2369, 2308, -2, -2,
	-2, 1548, -2, -2, -2, 2694, 2695, 2680, 2685, 2210,
	2158, 2268, 2309, 2149, 2170, 2189, 2238, 2239, 2241, 2273,
	2274, 2292, 2301, 2319, 2130, 2131, 2132, 2233, 2234, 2341,
	2340, 2339, 2342, 2375, 2373, 2376, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2133, 2134, 2135,
	2136, 2137, 2139, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2150, 2151, 2152, -2, 2157, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2168, 2169, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2185, 2186,
	2188, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2204, 2205, 2206, 2207, 2208, 2209,
	2211, 2212, 2213, 2214, 2215, 2216, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2227, 2228, 2229, 2230, 2231, 2232,
	2235, 2236, 2237, 2240, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2253, 2254, -2, -2, 2257, 2258,
	2259, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2269, 2270,
	2272, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2302, 2303, 2304, 2305, 2306,
	2307, 2310, 2311, 2312, 2313, 2314, 2316, 2317, 2318, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2343, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2370, 2371, 2372,
	2374, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 0, 1775, 1775, 0, 104, 2654, 0, 1745, -2,
	-2, 1747, 0, 0, 0, -2, -2, -2, -2, 2141,
	-2, 1652, 0, 0, 0, 0, 2129, 2130, 2131, 2132,
	2138, 2140, 2148, 2149, 2153, 2154, 2155, 2156, 2158, 2167,
	2170, 2184, 2187, 2189, 2203, 2210, 2217, 2226, 2233, 2234,
	2238, 2239, 2241, 2252, 2255, 2256, 2260, 2268, 2271, 2273,
	2274, 2275, 2292, 2301, 2308, 2309, 2315, 2319, 2320, 2339,
	2340, 2341, 2342, 2344, 2345, 2356, 2366, 2367, 2368, 2369,
	2373, 2375, 2376, 120, 1689, 0, 122, 0, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 800, 1794, 1795,
	0, 1697, 1203, 0, 0, 331, 0, 0, 0, 0,
	0, 1773, 326, 0, 0, 0, 0, 1773, 333, 0,
	0, 1049, 0, 1050, 0, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1092, 1093, 1068,
	0, 1070, 98, 1073, 0, 0, 0, 0, 1090, 1091,
	1094, 0, 1136, 1145, 1096, 0, 0, 1773, 1773, 0,
	0, 0, 0, 0, 1104, 0, 802, 803, 1145, 1110,
	1111, 1145, 1145, 1145, 1142, 0, 1142, 1117, 1140, 1141,
	1145, 0, 0, 0, 1122, 0, 0, 0, 1130, 1131,
	1145, 1135, 0, -2, 1163, -2, 1172, 0, 0, 1177,
	1180, 1181, 1182, 1183, 79, 1179, 1189, 1325, 0, 0,
	0, 0, 0, 0, 461, 0, 0, 482, 463, 0,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 1324, 0, 0, 1806, 1812, 1176, 1827,
	1828, 0, 1838, 1839, 276, 0, 276, 0, 0, 0,
	0, 198, 272, 0, 200, 272, 272, 272, 0, 272,
	272, 207, 208, 272, 210, 211, 212, 272, 214, 215,
	272, 217, 218, 219, 272, 272, 222, 272, 272, 225,
	226, 227, 228, 229, 345, 276, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 732, 734, 705, 0, 0,
	0, 0, 710, 711, 712, 713, 0, 0, 716, 717,
	0, 0, 0, 65, 66, 0, 0, 0, 1296, 1294,
	0, -2, 913, -2, 681, 682, 683, 0, 678, 0,
	0, 0, 0, 0, 0, 0, 1348, 0, 0, 1351,
	0, 0, 0, 0, 0, 1785, -2, 0, 0, 0,
	0, 1281, 0, 1298, 0, 1300, 0, -2, 0, 0,
	0, 1785, 1304, 1305, 1306, 1307, 1308, 0, 0, 0,
	1444, 0, 57, 58, 1198, 1199, 54, 62, 63, 55,
	1195, 1196, 1201, 1202, 56, 73, 0, 0, 1698, 1701,
	1702, 1703, 1690, 1691, 1694, 0, 0, 73, 1204, 1205,
	1206, 1207, 1208, 1209, 0, 1193, 0, 1220, 0, 0,
	0, 0, 1275, 0, 1278, 1279, 1280, 0, 1405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1408, 0, 1422, 0, 0,
	0, 0, 0, 0, 0, 1473, 1474, 1475, 1476, 1477,
	1478, 0, 1668, 1669, 1670, 1210, 0, 0, 1210, 1210,
	1210, 1210, 1210, 0, 1448, 2382, 0, 2347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 1644, 0, 0, 1545, 0, 1546,
	1547, 1549, 1563, 0, 1550, 1551, 0, 0, 0, 0,
	0, 1444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1558, 1559, 1560,
	0, 0, 0, 0, 0, 0, 98, 100, 1386, 0,
	105, 107, 0, 0, 2654, 1748, 1749, 672, 1763, 1764,
	1765, 1766, 0, 763, 764, 1761, 0, 1697, 817, 0,
	554, 651, 572, 573, 574, 641, 576, 643, 0, 643,
	643, 1641, 1642, 643, 643, 643, 618, 619, 620, 621,
	622, 624, 625, 626, 627, 628, 0, 0, 600, 641,
	641, 641, 604, 631, 632, 633, 634, 635, 636, 637,
	638, 577, 578, 579, 580, 581, 582, 583, 584, 585,
	586, 587, 588, 589, 590, 591, 646, 646, 648, 648,
	648, 648, 648, 554, 554, 554, 554, 554, 0, 799,
	1004, 1005, 0, 1704, 117, 1792, 1721, 0, 0, 333,
	-2, 0, -2, 0, 1381, 0, 0, 0, 0, 146,
	367, 349, 131, 0, 0, 327, 332, 328, 329, 330,
	0, 0, 0, 0, 340, 1065, 1772, 0, 1057, 96,
	1058, 1059, 1060, 1061, 1062, 342, 1063, 1064, 369, 0,
	1387, 1802, 1803, 1804, 1805, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924,
	1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934,
	1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
	1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964,
	1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984,
	1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994,
	1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
	2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014,
	2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024,
	2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034,
	2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064,
	2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074,
	2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084,
	2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094,
	2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104,
	2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114,
	2115, 2116, 2117, 0, 0, 0, 1078, 1080, 1084, 1085,
	1079, 1081, 1088, 1082, 1089, 1134, 1095, 1146, 0, 1148,
	0, 0, 1324, 1100, 1101, 1102, 1103, 804, 1109, 1112,
	1113, 1119, 1145, 0, 1324, 1118, 1143, 1144, 1121, 1436,
	1124, 1561, 0, 1132, 1153, 1169, 0, 1164, 0, 1170,
	1174, 1173, 0, 1178, 0, 0, 0, 1185, 458, 460,
	462, 481, 0, 0, 484, 485, 487, 0, 1393, 1808,
	0, 0, 1830, 0, 1832, 1834, 0, 0, 277, 278,
	279, 276, 0, 232, 0, 294, 348, 0, 199, 0,
	274, 201, 202, 203, 272, 205, 206, 209, 213, 216,
	220, 221, 223, 224, 344, 0, 0, 0, 0, 196,
	0, 0, 729, 744, 0, 0, 1160, 1161, 0, 706,
	707, 708, 709, 722, 715, 720, 720, 0, 0, 82,
	0, 0, 1723, 1726, 1727, 1728, 1729, 1730, 1798, 1799,
	0, 912, 684, 685, 686, 0, 761, 761, 761, 677,
	0, 379, 1342, 1344, 0, 1339, 1349, 1350, 1352, 0,
	1354, 0, 0, 1357, 1358, 1359, 1328, 0, 0, 1290,
	1441, 1443, 0, 0, 1395, 1302, 0, 0, 0, 0,
	0, 0, 0, 1318, 0, 0, 0, 1319, 0, 0,
	0, 1320, 0, 1445, 1446, 1215, 1216, 0, 0, 45,
	0, 1705, 0, 0, 0, 0, 1693, 1695, 1696, 0,
	0, 1678, 0, 0, 70, 117, 117, 50, 1402, 1403,
	1404, 1406, 1423, 0, 1425, 1427, 1276, 1277, 1221, 0,
	1654, -2, 1656, -2, -2, -2, 1413, 1414, 1438, 1439,
	1440, 0, 0, 0, 0, 1436, 1418, 0, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1472, 1576, 1577, 1578, 0, 1663, 0, 1664, 1470, 0,
	0, 0, 1677, 1471, 1659, 1479, 1444, 1211, 1212, 1661,
	1662, 1660, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 1454, 1667,
	0, 1454, 1667, 0, 0, 2242, 2354, 2134, 0, 0,
	0, 1650, 1647, 0, 0, 0, 0, 2698, 2699, 0,
	1562, 0, 0, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 0, 0, 0, 1247, 1248, 1249,
	1250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1556, 0,
	102, 0, 1385, 0, -2, 0, 0, 94, 95, 0,
	0, 0, 1746, 0, 0, 0, 110, 111, 106, 1750,
	673, 0, -2, 1757, 1667, 1759, 1654, 0, 1704, -2,
	539, 540, 541, 542, 0, 781, 790, 0, 0, 779,
	0, 781, 781, 0, 777, 778, 545, 654, 652, 653,
	575, 0, 605, 0, 643, 643, 1641, 1642, 607, 643,
	643, 610, 643, 643, 613, 616, 617, 623, 0, 0,
	601, 602, 603, 592, 0, 593, 646, 595, 0, 596,
	597, 598, 599, 546, 547, 548, 549, 550, 798, 0,
	296, 0, 0, 0, 0, 0, 126, 1774, 127, 0,
	390, 391, 0, 298, 0, 334, 335, 148, 0, 0,
	350, 0, 137, 0, 534, 535, 0, 1051, 0, 1053,
	339, 1055, 1066, 1067, 1056, 0, 0, 0, 0, 0,
	99, 0, 1147, 1097, 1098, 1099, 1399, 0, 0, 1114,
	1142, 1145, 1137, 0, 0, 1125, 0, 1168, 1166, 1175,
	1321, 0, 0, 464, 465, 466, 488, 0, 1809, 1810,
	1807, 1829, 0, 1833, 1835, 0, 280, 282, 0, 0,
	190, 0, 0, 273, 0, 204, 0, 0, 0, 0,
	0, 728, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 714, 0, 718, 0, 719, 703,
	704, 83, 1722, 0, 0, 1295, 761, 0, 762, 0,
	0, 1012, 915, 916, 1014, -2, 1010, 1010, 761, 1010,
	0, 0, 0, 0, 0, 0, 953, 761, 1010, 1780,
	0, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1002, 1003, 761, 761, 761, 761, 761, 761, 761,
	761, 0, 0, 761, 761, 761, 761, 761, 761, 761,
	761, 761, 761, 761, 761, 761, 761, 761, 761, 0,
	761, 1006, 1047, 0, 1336, 1343, 0, 0, 1337, 0,
	1338, 1353, 1355, 1356, 1286, 0, 1328, 1282, -2, 0,
	1332, 1301, 1395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 74,
	2450, 0, 77, 0, 0, 1699, 1700, 1692, 0, 1767,
	1768, 1679, 1680, 1399, 0, 0, 1213, 1424, 1426, 1428,
	0, 1444, 1415, 1436, 1419, 0, 1416, 0, 1410, 1518,
	0, 0, 0, 0, 0, 0, 1449, 1516, 1517, 1519,
	0, 0, 0, 1523, 0, 0, 1527, 0, 0, 1569,
	0, 0, 1570, 1532, 0, 0, 0, 0, 0, 1538,
	1689, 0, 1648, 0, 0, 1541, 1542, 1543, 1544, 1564,
	0, 0, 0, 0, 1565, 1566, 1567, 1568, 1505, 0,
	1506, 0, 0, 0, 0, 0, 1512, 1513, 1514, 1515,
	1230, 1230, 1230, 1230, 1230, 1230, 1230, 1230, 1230, 1230,
	1230, 1230, 1557, 0, 0, 1384, 0, 1399, 0, 1399,
	1399, 101, 0, 1394, 108, 109, 0, 0, 115, 674,
	675, 676, 1758, 0, 297, 536, 818, 677, 0, 761,
	761, 761, 0, 761, 761, 761, 761, 761, 0, 0,
	761, 761, 761, 761, 761, 761, 761, 761, 761, 761,
	761, 0, 761, 761, 761, 761, 761, 0, 761, 0,
	0, 0, 789, -2, -2, 781, 781, 781, 780, 781,
	781, 772, 782, 783, 773, 796, 555, 556, 0, 558,
	559, 560, 561, 562, 563, 564, 565, 0, 0, 0,
	0, 570, 0, 0, 0, 0, 663, 0, 698, 700,
	0, 0, 571, 655, 0, 0, 0, 606, 643, 614,
	608, 609, 611, 612, 0, 639, 0, 0, 594, 0,
	814, 0, 1793, 116, 1721, 0, 0, 392, 393, 394,
	1382, 0, 299, 300, 0, 0, 0, 0, 0, 158,
	0, 368, 0, 0, 0, 0, 0, 134, 0, 0,
	0, 97, 343, 370, 0, 0, 1083, 1107, 0, 805,
	806, 1324, 1116, 1437, 1126, 1128, 1129, 1322, 1323, 102,
	0, 1831, 0, 0, 0, 0, 0, 0, 292, 275,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 1724, 1725,
	0, 690, 691, 692, 693, 694, 695, 696, 914, 677,
	1013, 0, 0, 0, 0, 1015, 0, 781, 0, 0,
	923, 924, 0, 1011, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 945, 946, 947, 0, 948, 0, 0, 0, 0,
	0, 0, 0, 1781, 1782, 1783, 965, 0, 0, 0,
	0, 0, 0, 0, 0, 1036, 0, 0, 0, 0,
	0, 0, 0, 0, 761, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 997, 998, 864, 865, 866, 867, 868, 880,
	881, 882, 869, 870, 871, 0, 382, 0, 0, 0,
	1340, 0, 1345, 0, 1330, 1287, -2, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1447, 1217, 0, 0, 0, 75, 664, 1706,
	1707, 46, 1681, 71, 72, 117, 1222, 1666, 0, 1417,
	0, 1420, 1486, 1230, 1230, 1230, 1230, 1230, 0, 641,
	641, 641, 1626, 641, 648, 1629, 1631, 1632, 1633, 641,
	1635, 641, 1638, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 1540, 1651,
	0, 0, 0, 0, 0, 1223, 1224, 1226, 1507, 1508,
	1509, 1510, 1511, 1490, 1231, 1491, 1492, 1494, 1495, 1497,
	1498, 1499, 1500, 1502, 1503, 1504, 1731, 1731, 0, -2,
	1713, 0, 1710, 1296, 1719, 1720, 0, 1399, 1739, 0,
	0, 0, 0, 1689, 1399, 92, 93, 0, 112, 113,
	114, 819, 890, 0, 0, 0, 761, 0, 761, 0,
	0, 0, 0, 0, 761, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 854, 855, 0, 0, 784, 641, 641,
	0, 779, 788, 765, 767, 768, 769, 771, 0, 797,
	557, 0, 0, 568, 0, 0, 669, 670, 671, 656,
	0, 0, 659, 660, 0, 1411, 1412, 1561, 1561, 1561,
	1561, 1561, 1561, 0, 0, 0, 0, 1561, 1561, 1561,
	0, 697, 699, 701, 702, 642, 644, 645, 615, 629,
	0, 630, 0, 649, 0, 801, 815, 816, 0, 118,
	0, 137, 0, 306, 0, 302, 0, 0, 0, 0,
	166, 0, 149, 150, 151, 153, 154, 0, 0, 0,
	147, 0, 352, 0, 355, 356, 357, 0, 0, 0,
	0, 0, 1052, 1054, 0, 0, 1327, 1072, 1400, 1145,
	664, 0, 292, 281, 283, 284, 0, 292, 295, 191,
	0, 192, 194, 0, 193, 736, 737, 738, 739, 740,
	741, 742, 743, 0, 0, 723, 721, 687, 688, 689,
	917, -2, 1010, 0, 0, 0, 1007, 0, 0, 1792,
	779, 1788, 0, 0, -2, 925, 926, 949, 950, 951,
	0, 1017, 0, 0, 0, 0, 931, 932, 933, 934,
	0, 761, 0, 0, 0, 0, 0, 0, 954, 955,
	956, 957, 1007, 0, 0, 961, 0, 0, 0, 0,
	0, 1024, 0, 0, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 967, 968, 969, 970, 971, 972, 973, 974,
	0, 0, 977, 978, 979, 980, 981, 859, 860, 861,
	982, 983, 984, 985, 986, 987, 872, 873, 874, 875,
	876, 877, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 0, 0, 386, 383, 384, 0, 380, 0, 379,
	0, 0, 0, 1329, 0, 1299, 1333, 1396, 1397, 1398,
	1309, 1310, 0, 1312, 1313, 0, 1315, 1316, 0, 1335,
	0, 0, 78, 1821, 665, 1686, 0, 1214, 1487, 1421,
	1489, 1493, 1488, 1496, 1501, 1521, 1621, 664, 664, 1627,
	1628, 1630, 1634, 1636, 1637, 1639, 1525, 1522, 1524, 1526,
	0, 0, 0, 0, 1533, 0, 0, 0, 0, 0,
	0, 1649, 0, 0, 1554, 1555, 1228, 1227, 84, 0,
	85, 1731, 0, 0, 0, 0, 0, 0, -2, -2,
	-2, 2113, 2077, 1717, 1733, 0, 0, 1689, 0, 0,
	0, 0, 0, 1697, 91, 896, 885, 0, 0, 894,
	895, 891, 820, 821, 822, 0, 761, 0, 825, 826,
	828, 829, 830, 0, 0, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 0, 0, 749, 0, 1694,
	1694, 781, 781, 0, 0, 0, 0, 666, 667, 668,
	657, 658, 0, 662, 640, 0, 0, 0, 0, 116,
	136, 0, 117, 307, 308, 0, 0, 0, 313, 0,
	0, 0, 0, 0, 301, 303, 304, 305, 379, 184,
	167, 168, 0, 0, 0, 0, 159, 160, 0, 0,
	0, 0, 0, 155, 156, 157, 351, 0, 0, 354,
	0, 0, 0, 0, 138, 139, 0, 141, 137, 0,
	0, 1115, 1821, 1383, 285, 292, 285, 0, 195, 746,
	747, 0, 919, 1008, 0, 554, 554, 0, 781, 781,
	0, 1039, 0, 952, 927, 929, 928, 930, 0, 0,
	937, 938, 1007, 0, 942, 0, 1018, 1019, 1020, 1021,
	958, 0, 0, 0, 0, 0, 1022, 1023, 0, 0,
	975, 976, 999, 1000, 0, 878, 1043, 0, 0, 1048,
	381, 1047, 0, 373, 388, 389, 0, 1341, 1331, 0,
	0, 0, 1218, 0, 1823, 1817, 1242, 0, 0, 1622,
	1623, 1624, 1625, 0, 0, 0, 0, 1534, 1535, 1536,
	1571, 1539, 1646, 0, 0, 1689, 0, 0, 86, 1328,
	-2, 1711, 0, 0, 1718, 1296, 1735, 0, 103, 1697,
	1740, 1741, 1742, 1743, 1744, 90, 898, 0, 0, 0,
	0, 892, 823, 0, 827, 862, 863, 831, 832, 856,
	857, 0, 748, 752, 0, 761, 0, 761, 761, 759,
	760, 785, 786, 787, 766, 770, 0, 551, 0, 0,
	661, 647, 650, 0, 116, 118, 0, 118, 309, 310,
	311, 312, 314, 315, 0, 0, 0, 382, 130, 0,
	0, 169, 0, 0, 0, 0, 179, 180, 181, 182,
	183, 161, 162, 163, 164, 165, 152, 0, 0, 353,
	0, 360, 362, 0, 361, 363, 0, 135, 0, 1326,
	1823, 187, 0, 285, 189, 293, 918, 1009, 543, 544,
	0, 1792, 0, 1016, 0, 0, 0, 936, 939, 940,
	943, 959, 960, 0, 0, 964, 0, 0, 0, 1001,
	116, 387, 385, 382, 371, 375, 0, 0, 0, 0,
	1361, 0, 2541, 76, 1825, -2, 0, 68, 0, 1687,
	1688, 1682, 1683, 1685, 1528, 1530, 1529, 1531, 0, 0,
	0, 1552, 1553, 1232, 0, 0, 1709, 1712, 1714, 0,
	1734, 1736, 89, 1037, 0, 897, 0, 0, 0, 0,
	0, 824, 858, 753, 754, 0, 756, 0, 0, 0,
	566, 552, 553, 0, 569, 750, 142, 0, 0, 79,
	316, 317, 318, 319, 386, 185, 186, 170, 171, 0,
	173, 174, 0, 0, 0, 365, 0, 358, 359, 0,
	1071, 1777, 286, 188, 0, 0, 0, 1040, 0, 935,
	761, 0, 0, 963, 0, 1026, 879, 79, 386, 0,
	377, 0, 1311, 1314, 1317, 0, 0, 0, 0, 0,
	0, 1817, 0, 1819, 0, 1816, 0, 1243, 1244, 0,
	0, 1537, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 884, 0, 890, 886, 0, 0, 0, 0, 755,
	757, 758, 0, 551, 123, 751, 124, 0, 116, 395,
	116, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 516, 517, 518, 519,
	520, 521, 522, 523, 524, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 0, 0, 0, 0, 0,
	79, 0, 79, 0, 0, 0, 440, 0, 79, 0,
	0, 175, 0, 177, 178, 364, 0, 140, 1328, 0,
	0, 750, 0, 0, 0, 0, 944, 962, 1025, 0,
	116, 1044, 0, 372, 0, 373, 1784, 1362, 1363, 0,
	0, 1364, 0, 0, 1824, 0, 1822, 0, 0, 1818,
	0, 0, 1684, 1572, 0, 1575, 1225, 1233, 0, 1236,
	0, 0, 0, 1272, 0, 1234, 1732, -2, 0, 0,
	887, 888, 0, 893, 0, 567, 0, 0, 0, 142,
	116, 0, 0, 129, 0, 0, 410, 0, 0, 1794,
	0, 0, -2, -2, -2, 1796, 437, 438, 0, 489,
	0, 0, 0, 454, 455, 0, 441, 0, 456, 320,
	0, 116, 172, 176, 366, 42, 0, 0, 920, 0,
	750, 0, 941, 1027, 1045, 116, 0, 373, 376, 0,
	1367, 0, 0, 0, 1826, 0, 0, 1245, 1246, 1573,
	0, 1237, 1238, 1239, 1240, 1241, 0, 1038, 0, 892,
	889, 0, 143, 0, 0, 125, 118, 396, 397, 0,
	0, 79, 411, 0, 79, 0, 0, 0, 664, 0,
	79, 79, 79, 79, 0, 79, 79, 0, 442, 79,
	79, 44, 0, 1778, 1779, 287, 288, 289, 291, 750,
	922, 0, 79, 374, 378, 1360, 1368, 1369, 0, 0,
	0, 1376, 0, 0, 1820, 1814, 0, 0, 1273, 0,
	0, 0, 144, 145, 79, 0, 79, 408, 0, 79,
	0, 0, 0, 0, 672, 1797, 0, 490, 321, 0,
	0, 0, 0, 0, 0, 0, 323, 116, 43, 0,
	921, 0, 2261, 116, 1370, 0, 0, 1371, 0, 0,
	0, 0, 0, 1365, 0, 0, 1235, 0, 0, 791,
	116, 398, 399, 400, 401, 402, 403, 79, 0, 406,
	0, 79, 0, 79, 420, 421, 422, 79, 429, 431,
	432, 433, 0, 435, 436, 424, 445, 322, 79, 79,
	79, 79, 0, 79, 439, 443, 132, 290, 1041, 1042,
	1046, 0, 0, 0, 0, 1372, 1373, 1377, 1379, 0,
	1366, 1574, 901, 0, 792, 793, 0, 128, 0, 405,
	80, 79, 0, -2, 0, 79, 0, 417, 0, 423,
	0, 434, 0, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 1380, 899, 0, 901, 794,
	0, 795, 0, 0, 0, 79, 0, 409, 413, 0,
	0, 79, 418, 0, 430, 425, 325, 446, 0, 79,
	448, 451, 444, 0, 0, 902, 900, 807, 809, 810,
	0, 0, 808, 404, 407, 79, 415, 0, 79, 447,
	0, 0, 1374, 1375, 811, 812, 813, 0, 79, 0,
	449, 452, 414, 0, -2, 450, 453, 416,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 101, 3, 3, 3, 137, 129, 3,
	76, 78, 134, 132, 77, 133, 187, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 80, 749,
	110, 109, 111, 3, 79, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 81, 82, 83, 84, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
	97, 98, 99, 100, 102, 103, 104, 105, 106, 107,
	108, 112, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 122, 123, 124, 125, 126, 127, 130, 131, 136,
	138, 141, 142, 143, 144, 145, 146, 147, 148, 149,
	150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 266, 267, 268, 269, 270,
	271, 272, 273, 274, 275, 276,
}

var yyTok3 = [...]int{
	57600, 277, 57601, 278, 57602, 279, 57603, 280, 57604, 281,
	57605, 282, 57606, 283, 57607, 284, 57608, 285, 57609, 286,
	57610, 287, 57611, 288, 57612, 289, 57613, 290, 57614, 291,
	57615, 292, 57616, 293, 57617, 294, 57618, 295, 57619, 296,
	57620, 297, 57621, 298, 57622, 299, 57623, 300, 57624, 301,
	57625, 302, 57626, 303, 57627, 304, 57628, 305, 57629, 306,
	57630, 307, 57631, 308, 57632, 309, 57633, 310, 57634, 311,
	57635, 312, 57636, 313, 57637, 314, 57638, 315, 57639, 316,
	57640, 317, 57641, 318, 57642, 319, 57643, 320, 57644, 321,
	57645, 322, 57646, 323, 57647, 324, 57648, 325, 57649, 326,
	57650, 327, 57651, 328, 57652, 329, 57653, 330, 57654, 331,
	57655, 332, 57656, 333, 57657, 334, 57658, 335, 57659, 336,
	57660, 337, 57661, 338, 57662, 339, 57663, 340, 57664, 341,
	57665, 342, 57666, 343, 57667, 344, 57668, 345, 57669, 346,
	57670, 347, 57671, 348, 57672, 349, 57673, 350, 57674, 351,
	57675, 352, 57676, 353, 57677, 354, 57678, 355, 57679, 356,
	57680, 357, 57681, 358, 57682, 359, 57683, 360, 57684, 361,
	57685, 362, 57686, 363, 57687, 364, 57688, 365, 57689, 366,
	57690, 367, 57691, 368, 57692, 369, 57693, 370, 57694, 371,
	57695, 372, 57696, 373, 57697, 374, 57698, 375, 57699, 376,
	57700, 377, 57701, 378, 57702, 379, 57703, 380, 57704, 381,
	57705, 382, 57706, 383, 57707, 384, 57708, 385, 57709, 386,
	57710, 387, 57711, 388, 57712, 389, 57713, 390, 57714, 391,
	57715, 392, 57716, 393, 57717, 394, 57718, 395, 57719, 396,
	57720, 397, 57721, 398, 57722, 399, 57723, 400, 57724, 401,
	57725, 402, 57726, 403, 57727, 404, 57728, 405, 57729, 406,
	57730, 407, 57731, 408, 57732, 409, 57733, 410, 57734, 411,
	57735, 412, 57736, 413, 57737, 414, 57738, 415, 57739, 416,
	57740, 417, 57741, 418, 57742, 419, 57743, 420, 57744, 421,
	57745, 422, 57746, 423, 57747, 424, 57748, 425, 57749, 426,
	57750, 427, 57751, 428, 57752, 429, 57753, 430, 57754, 431,
	57755, 432, 57756, 433, 57757, 434, 57758, 435, 57759, 436,
	57760, 437, 57761, 438, 57762, 439, 57763, 440, 57764, 441,
	57765, 442, 57766, 443, 57767, 444, 57768, 445, 57769, 446,
	57770, 447, 57771, 448, 57772, 449, 57773, 450, 57774, 451,
	57775, 452, 57776, 453, 57777, 454, 57778, 455, 57779, 456,
	57780, 457, 57781, 458, 57782, 459, 57783, 460, 57784, 461,
	57785, 462, 57786, 463, 57787, 464, 57788, 465, 57789, 466,
	57790, 467, 57791, 468, 57792, 469, 57793, 470, 57794, 471,
	57795, 472, 57796, 473, 57797, 474, 57798, 475, 57799, 476,
	57800, 477, 57801, 478, 57802, 479, 57803, 480, 57804, 481,
	57805, 482, 57806, 483, 57807, 484, 57808, 485, 57809, 486,
	57810, 487, 57811, 488, 57812, 489, 57813, 490, 57814, 491,
	57815, 492, 57816, 493, 57817, 494, 57818, 495, 57819, 496,
	57820, 497, 57821, 498, 57822, 499, 57823, 500, 57824, 501,
	57825, 502, 57826, 503, 57827, 504, 57828, 505, 57829, 506,
	57830, 507, 57831, 508, 57832, 509, 57833, 510, 57834, 511,
	57835, 512, 57836, 513, 57837, 514, 57838, 515, 57839, 516,
	57840, 517, 57841, 518, 57842, 519, 57843, 520, 57844, 521,
	57845, 522, 57846, 523, 57847, 524, 57848, 525, 57849, 526,
	57850, 527, 57851, 528, 57852, 529, 57853, 530, 57854, 531,
	57855, 532, 57856, 533, 57857, 534, 57858, 535, 57859, 536,
	57860, 537, 57861, 538, 57862, 539, 57863, 540, 57864, 541,
	57865, 542, 57866, 543, 57867, 544, 57868, 545, 57869, 546,
	57870, 547, 57871, 548, 57872, 549, 57873, 550, 57874, 551,
	57875, 552, 57876, 553, 57877, 554, 57878, 555, 57879, 556,
	57880, 557, 57881, 558, 57882, 559, 57883, 560, 57884, 561,
	57885, 562, 57886, 563, 57887, 564, 57888, 565, 57889, 566,
	57890, 567, 57891, 568, 57892, 569, 57893, 570, 57894, 571,
	57895, 572, 57896, 573, 57897, 574, 57898, 575, 57899, 576,
	57900, 577, 57901, 578, 57902, 579, 57903, 580, 57904, 581,
	57905, 582, 57906, 583, 57907, 584, 57908, 585, 57909, 586,
	57910, 587, 57911, 588, 57912, 589, 57913, 590, 57914, 591,
	57915, 592, 57916, 593, 57917, 594, 57918, 595, 57919, 596,
	57920, 597, 57921, 598, 57922, 599, 57923, 600, 57924, 601,
	57925, 602, 57926, 603, 57927, 604, 57928, 605, 57929, 606,
	57930, 607, 57931, 608, 57932, 609, 57933, 610, 57934, 611,
	57935, 612, 57936, 613, 57937, 614, 57938, 615, 57939, 616,
	57940, 617, 57941, 618, 57942, 619, 57943, 620, 57944, 621,
	57945, 622, 57946, 623, 57947, 624, 57948, 625, 57949, 626,
	57950, 627, 57951, 628, 57952, 629, 57953, 630, 57954, 631,
	57955, 632, 57956, 633, 57957, 634, 57958, 635, 57959, 636,
	57960, 637, 57961, 638, 57962, 639, 57963, 640, 57964, 641,
	57965, 642, 57966, 643, 57967, 644, 57968, 645, 57969, 646,
	57970, 647, 57971, 648, 57972, 649, 57973, 650, 57974, 651,
	57975, 652, 57976, 653, 57977, 654, 57978, 655, 57979, 656,
	57980, 657, 57981, 658, 57982, 659, 57983, 660, 57984, 661,
	57985, 662, 57986, 663, 57987, 664, 57988, 665, 57989, 666,
	57990, 667, 57991, 668, 57992, 669, 57993, 670, 57994, 671,
	57995, 672, 57996, 673, 57997, 674, 57998, 675, 57999, 676,
	58000, 677, 58001, 678, 58002, 679, 58003, 680, 58004, 681,
	58005, 682, 58006, 683, 58007, 684, 58008, 685, 58009, 686,
	58010, 687, 58011, 688, 58012, 689, 58013, 690, 58014, 691,
	58015, 692, 58016, 693, 58017, 694, 58018, 695, 58019, 696,
	58020, 697, 58021, 698, 58022, 699, 58023, 700, 58024, 701,
	58025, 702, 58026, 703, 58027, 704, 58028, 705, 58029, 706,
	58030, 707, 58031, 708, 58032, 709, 58033, 710, 58034, 711,
	58035, 712, 58036, 713, 58037, 714, 58038, 715, 58039, 716,
	58040, 717, 58041, 718, 58042, 719, 58043, 720, 58044, 721,
	58045, 722, 58046, 723, 58047, 724, 58048, 725, 58049, 726,
	58050, 727, 58051, 728, 58052, 729, 58053, 730, 58054, 731,
	58055, 732, 58056, 733, 58057, 734, 58058, 735, 58059, 736,
	58060, 737, 58061, 738, 58062, 739, 58063, 740, 58064, 741,
	58065, 742, 58066, 743, 58067, 744, 58068, 745, 58069, 746,
	58070, 747, 58071, 748, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:536
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:540
		{
			setParseTree(yylex, tryCastStatement(yyDollar[1].val))
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:591
		{
			setParseTree(yylex, nil)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:596
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:600
		{
			yyVAL.val = yyDollar[2].val.(AssignmentExprs)
		}
	case 44:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:606
		{
			yyVAL.val = &Load{
				Local:           yyDollar[3].val.(BoolVal),
				Infile:          yyDollar[4].val.(string),
				IgnoreOrReplace: yyDollar[5].val.(string),
				Table:           yyDollar[6].val.(TableName),
				Partition:       yyDollar[7].val.(Partitions),
				Charset:         yyDollar[8].val.(string),
				Fields:          yyDollar[9].val.(*Fields),
				Lines:           yyDollar[10].val.(*Lines),
				IgnoreNum:       yyDollar[11].val.(*SQLVal),
				Columns:         yyDollar[12].val.(Columns),
				SetExprs:        yyDollar[13].val.(AssignmentExprs),
				Auth: AuthInformation{
					AuthType:   AuthType_FILE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 45:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:628
		{
			s := yyDollar[1].val.(SelectStatement)
			s.SetOrderBy(yyDollar[2].val.(OrderBy))
			s.SetLimit(yyDollar[3].val.(*Limit))
			s.SetLock(yyDollar[4].val.(string))
			if err := s.SetInto(yyDollar[5].val.(*Into)); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = s
		}
	case 46:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:640
		{
			tableName := yyDollar[7].val.(TableName)
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: SelectExprs{Nextval{Expr: tryCastExpr(yyDollar[5].val)}},
				From: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_SELECT,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From: TableExprs{&AliasedTableExpr{
					Expr: yyDollar[1].val.(SimpleTableExpr),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				}},
				OrderBy: yyDollar[2].val.(OrderBy),
				Limit:   yyDollar[3].val.(*Limit),
			}
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:671
		{
			yyVAL.val = yyDollar[2].val.(SelectStatement)
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 50:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:687
		{
			yyVAL.val = &Stream{Comments: Comments(yyDollar[2].val.(Comments)), SelectExpr: yyDollar[3].val.(SelectExpr), Table: yyDollar[5].val.(TableName)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:699
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:706
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:727
		{
			yyVAL.val = &SetOp{Type: yyDollar[2].val.(string), Left: yyDollar[1].val.(SelectStatement), Right: yyDollar[3].val.(SelectStatement)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:734
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:742
		{
			yyVAL.val = &ParenSelect{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:750
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:754
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:762
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:766
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:772
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:776
		{
			with := yyDollar[2].val.(*With)
			selectStatement := yyDollar[3].val.(SelectStatement)
			handleCTEAuth(selectStatement, with)
			selectStatement.SetWith(with)
			yyVAL.val = selectStatement
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.val = &With{Ctes: yyDollar[2].val.([]*CommonTableExpr), Recursive: true}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:789
		{
			yyVAL.val = &With{Ctes: yyDollar[1].val.([]*CommonTableExpr), Recursive: false}
		}
	case 68:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:795
		{
			yyVAL.val = &Select{
				Comments:    Comments(yyDollar[2].val.(Comments)),
				QueryOpts:   yyDollar[3].val.(QueryOpts),
				SelectExprs: yyDollar[4].val.(SelectExprs),
				Into:        yyDollar[5].val.(*Into),
				From:        SetAuthType(yyDollar[6].val.(TableExprs), AuthType_SELECT, true).(TableExprs),
				Where:       NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				GroupBy:     GroupBy(yyDollar[8].val.(Exprs)),
				Having:      NewWhere(HavingStr, tryCastExpr(yyDollar[9].val)),
				Window:      yyDollar[10].val.(Window),
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.val = &Select{
				SelectExprs: SelectExprs{&StarExpr{}},
				From:        TableExprs{SetAuthType(yyDollar[2].val.(TableExpr), AuthType_SELECT, true).(TableExpr)},
			}
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:817
		{
			yyVAL.val = TableExprs(nil)
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:821
		{
			yyVAL.val = TableExprs(nil)
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.val = yyDollar[2].val.(TableExprs)
		}
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:834
		{
			yyVAL.val = (*Into)(nil)
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:838
		{
			yyVAL.val = &Into{Variables: yyDollar[2].val.(Variables)}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yyVAL.val = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:846
		{
			yyVAL.val = &Into{Outfile: string(yyDollar[3].bytes), Charset: yyDollar[4].val.(string), Fields: yyDollar[5].val.(*Fields), Lines: yyDollar[6].val.(*Lines)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:852
		{
			yyVAL.val = Variables{yyDollar[1].val.(ColIdent)}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.val = append(yyVAL.val.(Variables), yyDollar[3].val.(ColIdent))
		}
	case 79:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:861
		{
			yyVAL.val = (*With)(nil)
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:865
		{
			yyVAL.val = yyDollar[2].val.(*With)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.val = []*CommonTableExpr{yyDollar[1].val.(*CommonTableExpr)}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yyVAL.val = append(yyDollar[1].val.([]*CommonTableExpr), yyDollar[3].val.(*CommonTableExpr))
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:881
		{
			yyVAL.val = &CommonTableExpr{
				&AliasedTableExpr{
					Expr: yyDollar[4].val.(SimpleTableExpr),
					As:   yyDollar[1].val.(TableIdent),
					Auth: AuthInformation{AuthType: AuthType_IGNORE},
				},
				yyDollar[2].val.(Columns)}
		}
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:893
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:918
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].val.(*Insert)
			ins.Action = yyDollar[2].val.(string)
			ins.Comments = yyDollar[3].val.(Comments)
			ins.Ignore = yyDollar[4].val.(string)
			tableName := yyDollar[5].val.(TableName)
			ins.Table = tableName
			authType := AuthType_INSERT
			if ins.Action == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins.Auth = AuthInformation{
				AuthType:    authType,
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
			ins.Partitions = yyDollar[6].val.(Partitions)
			ins.OnDup = OnDup(yyDollar[8].val.(AssignmentExprs))
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:943
		{
			cols := make(Columns, 0, len(yyDollar[8].val.(AssignmentExprs)))
			vals := make(ValTuple, 0, len(yyDollar[9].val.(AssignmentExprs)))
			for _, updateList := range yyDollar[8].val.(AssignmentExprs) {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			tableName := yyDollar[5].val.(TableName)
			authType := AuthType_INSERT
			if yyDollar[2].val.(string) == ReplaceStr {
				authType = AuthType_REPLACE
			}
			ins := &Insert{
				Action:     yyDollar[2].val.(string),
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				Table:      tableName,
				Partitions: yyDollar[6].val.(Partitions),
				Columns:    cols,
				Rows:       &AliasedValues{Values: Values{vals}},
				OnDup:      OnDup(yyDollar[9].val.(AssignmentExprs)),
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(ins, with)
			ins.With = with
			yyVAL.val = ins
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.val = InsertStr
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.val = ReplaceStr
		}
	case 89:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:988
		{
			update := &Update{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Ignore:     yyDollar[4].val.(string),
				TableExprs: SetAuthType(yyDollar[5].val.(TableExprs), AuthType_UPDATE, true).(TableExprs),
				Exprs:      yyDollar[7].val.(AssignmentExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
				OrderBy:    yyDollar[9].val.(OrderBy),
				Limit:      yyDollar[10].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(update, with)
			update.With = with
			yyVAL.val = update
		}
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1006
		{
			tableName := yyDollar[5].val.(TableName)
			delete := &Delete{
				Comments: Comments(yyDollar[3].val.(Comments)),
				TableExprs: TableExprs{&AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_DELETE,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				}},
				Partitions: yyDollar[6].val.(Partitions),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
				OrderBy:    yyDollar[8].val.(OrderBy),
				Limit:      yyDollar[9].val.(*Limit),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1029
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[5].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[7].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[8].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 92:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1042
		{
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    yyDollar[4].val.(TableNames),
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1055
		{
			tableNames := yyDollar[4].val.(TableNames)
			authTargetNames := make([]string, len(tableNames)*2)
			for i, tableName := range tableNames {
				authTargetNames[2*i] = tableName.DbQualifier.String()
				authTargetNames[2*i+1] = tableName.Name.String()
			}
			delete := &Delete{
				Comments:   Comments(yyDollar[3].val.(Comments)),
				Targets:    tableNames,
				TableExprs: SetAuthType(yyDollar[6].val.(TableExprs), AuthType_DELETE, true).(TableExprs),
				Where:      NewWhere(WhereStr, tryCastExpr(yyDollar[7].val)),
			}
			with := yyDollar[1].val.(*With)
			handleCTEAuth(delete, with)
			delete.With = with
			yyVAL.val = delete
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1075
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1080
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName).ToViewName()}
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1084
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName).ToViewName())
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1094
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.val = TableNames{yyDollar[1].val.(TableName)}
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.val = append(yyVAL.val.(TableNames), yyDollar[3].val.(TableName))
		}
	case 102:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1109
		{
			yyVAL.val = Partitions(nil)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1113
		{
			yyVAL.val = yyDollar[3].val.(Partitions)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1119
		{
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[3].val.(SetVarExprs)}
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			for i := 0; i < len(yyDollar[4].val.(SetVarExprs)); i++ {
				yyDollar[4].val.(SetVarExprs)[i].Scope = SetScope_None
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[4].val.(SetVarExprs)}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1130
		{
			for i := 0; i < len(yyDollar[5].val.(SetVarExprs)); i++ {
				yyDollar[5].val.(SetVarExprs)[i].Scope = yyDollar[3].val.(SetScope)
			}
			yyVAL.val = &Set{Comments: Comments(yyDollar[2].val.(Comments)), Exprs: yyDollar[5].val.(SetVarExprs)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.val = append(yyVAL.val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1149
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].val.(string)))}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1153
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.val = IsolationLevelRepeatableRead
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.val = IsolationLevelReadCommitted
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.val = IsolationLevelReadUncommitted
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.val = IsolationLevelSerializable
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1180
		{
			yyVAL.val = yyPosition(yylex)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1185
		{
			yyVAL.val = yyOldPosition(yylex)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1190
		{
			yyVAL.val = yySpecialCommentMode(yylex)
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyDollar[1].val.(*DDL).TableSpec = yyDollar[2].val.(*TableSpec)
			if len(yyDollar[1].val.(*DDL).TableSpec.Constraints) > 0 {
				yyDollar[1].val.(*DDL).ConstraintAction = AddStr
			}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[3].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1214
		{
			yyDollar[1].val.(*DDL).OptSelect = &OptSelect{Select: yyDollar[2].val.(SelectStatement)}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1219
		{
			yyDollar[1].val.(*DDL).OptLike = &OptLike{LikeTables: []TableName{yyDollar[3].val.(TableName)}}
			yyVAL.val = yyDollar[1].val.(*DDL)
		}
	case 123:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1224
		{
			// For consistency, we always return AlterTable for any ALTER TABLE-equivalent statements
			tableName := yyDollar[7].val.(TableName)
			ddl := &DDL{
				Action: AlterStr,
				Table:  tableName,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  yyDollar[4].val.(ColIdent),
					Using:   yyDollar[5].val.(ColIdent),
					Type:    yyDollar[2].val.(string),
					Columns: yyDollar[9].val.([]*IndexColumn),
					Options: yyDollar[11].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      yyDollar[7].val.(TableName),
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 124:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1251
		{
			viewName := yyDollar[4].val.(TableName)
			yyDollar[2].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[2].val.(*ViewSpec).ViewExpr = yyDollar[9].val.(SelectStatement)
			yyDollar[2].val.(*ViewSpec).Columns = yyDollar[5].val.(Columns)
			yyDollar[2].val.(*ViewSpec).CheckOption = yyDollar[11].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[2].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[8].val.(bool),
				SubStatementPositionStart: yyDollar[7].val.(int),
				SubStatementPositionEnd:   yyDollar[10].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 125:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:1271
		{
			viewName := yyDollar[6].val.(TableName)
			yyDollar[4].val.(*ViewSpec).ViewName = viewName.ToViewName()
			yyDollar[4].val.(*ViewSpec).ViewExpr = yyDollar[11].val.(SelectStatement)
			yyDollar[4].val.(*ViewSpec).Columns = yyDollar[7].val.(Columns)
			yyDollar[4].val.(*ViewSpec).CheckOption = yyDollar[13].val.(ViewCheckOption)
			yyVAL.val = &DDL{
				Action:                    CreateStr,
				ViewSpec:                  yyDollar[4].val.(*ViewSpec),
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				OrReplace:                 true,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_VIEW,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{viewName.DbQualifier.String()},
				},
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1292
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1310
		{
			var ne bool
			if yyDollar[3].val.(int) != 0 {
				ne = true
			}
			yyVAL.val = &DBDDL{
				Action:           CreateStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfNotExists:      ne,
				CharsetCollate:   yyDollar[5].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 128:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1328
		{
			tableName := yyDollar[8].val.(TableName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				Table:  tableName,
				TriggerSpec: &TriggerSpec{
					TrigName: yyDollar[4].val.(TriggerName),
					Definer:  yyDollar[2].val.(string),
					Time:     yyDollar[5].val.(string),
					Event:    yyDollar[6].val.(string),
					Order:    yyDollar[12].val.(*TriggerOrder),
					Body:     tryCastStatement(yyDollar[15].val),
				},
				SpecialCommentMode:        yyDollar[14].val.(bool),
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[16].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 129:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1352
		{
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: CreateStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName:        procName,
					Definer:         yyDollar[2].val.(string),
					Params:          yyDollar[6].val.([]ProcedureParam),
					Characteristics: yyDollar[8].val.([]Characteristic),
					Body:            tryCastStatement(yyDollar[11].val),
				},
				SpecialCommentMode:        yyDollar[10].val.(bool),
				SubStatementPositionStart: yyDollar[9].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_CREATE_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 130:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1374
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].val.([]TLSOptionItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].val.([]AccountLimitItem))
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].val.([]PassLockItem))
			yyVAL.val = &CreateUser{
				IfNotExists:     notExists,
				Users:           yyDollar[4].val.([]AccountWithAuth),
				DefaultRoles:    yyDollar[5].val.([]AccountName),
				TLSOptions:      tlsOptions,
				AccountLimits:   accountLimits,
				PasswordOptions: passwordOptions,
				Locked:          locked,
				Attribute:       yyDollar[9].val.(string),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1406
		{
			var notExists bool
			if yyDollar[3].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &CreateRole{
				IfNotExists: notExists,
				Roles:       yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 132:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:1421
		{
			eventName := yyDollar[5].val.(EventName)
			var notExists bool
			if yyDollar[4].val.(int) != 0 {
				notExists = true
			}
			yyVAL.val = &DDL{
				Action: CreateStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					IfNotExists:          notExists,
					OnSchedule:           yyDollar[8].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[9].val.(EventOnCompletion),
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1455
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:    NewIntVal(yyDollar[5].bytes),
				SrsAttr: yyDollar[6].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 135:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1467
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:        NewIntVal(yyDollar[8].bytes),
				IfNotExists: true,
				SrsAttr:     yyDollar[9].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 136:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1480
		{
			yyVAL.val = &CreateSpatialRefSys{
				SRID:      NewIntVal(yyDollar[7].bytes),
				OrReplace: true,
				SrsAttr:   yyDollar[8].val.(*SrsAttribute),
				Auth: AuthInformation{
					AuthType:    AuthType_INSERT,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{"mysql", "st_spatial_references_systems"},
				},
			}
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1494
		{
			yyVAL.val = new(SrsAttribute)
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			if yyDollar[1].val.(*SrsAttribute).Name != "" {
				yylex.Error("multiple definitions of attribute name")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Name = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1507
		{
			if yyDollar[1].val.(*SrsAttribute).Definition != "" {
				yylex.Error("multiple definitions of attribute definition")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Definition = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1516
		{
			if yyDollar[1].val.(*SrsAttribute).Organization != "" {
				yylex.Error("multiple definitions of attribute organization")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Organization = string(yyDollar[3].bytes)
			yyDollar[1].val.(*SrsAttribute).OrgID = NewIntVal(yyDollar[6].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1526
		{
			if yyDollar[1].val.(*SrsAttribute).Description != "" {
				yylex.Error("multiple definitions of attribute description")
				return 1
			}
			yyDollar[1].val.(*SrsAttribute).Description = string(yyDollar[3].bytes)
			yyVAL.val = yyDollar[1].val.(*SrsAttribute)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1537
		{
			yyVAL.val = ViewCheckOptionUnspecified
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1545
		{
			yyVAL.val = ViewCheckOptionCascaded
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyVAL.val = ViewCheckOptionLocal
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1554
		{
			yyVAL.val = []AccountName(nil)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.val = yyDollar[3].val.([]AccountName)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1563
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.val = []TLSOptionItem(nil)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.val = yyDollar[2].val.([]TLSOptionItem)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1577
		{
			yyVAL.val = []TLSOptionItem{yyDollar[1].val.(TLSOptionItem)}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yyVAL.val = append(yyDollar[1].val.([]TLSOptionItem), yyDollar[3].val.(TLSOptionItem))
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.val = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.val = []AccountLimitItem(nil)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.val = yyDollar[2].val.([]AccountLimitItem)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.val = []AccountLimitItem{yyDollar[1].val.(AccountLimitItem)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountLimitItem), yyDollar[2].val.(AccountLimitItem))
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1636
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1640
		{
			yyVAL.val = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1645
		{
			yyVAL.val = []PassLockItem(nil)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.val = yyDollar[1].val.([]PassLockItem)
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.val = []PassLockItem{yyDollar[1].val.(PassLockItem)}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.val = append(yyDollar[1].val.([]PassLockItem), yyDollar[2].val.(PassLockItem))
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1673
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1685
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1693
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1697
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1701
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1709
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.val = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1722
		{
			yyVAL.val = ""
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.val = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1737
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1753
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &GrantPrivilege{
				Privileges:      allPriv,
				ObjectType:      yyDollar[5].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[6].val.(PrivilegeLevel),
				To:              yyDollar[8].val.([]AccountName),
				WithGrantOption: yyDollar[9].val.(bool),
				As:              yyDollar[10].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 189:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1769
		{
			yyVAL.val = &GrantPrivilege{
				Privileges:      yyDollar[2].val.([]Privilege),
				ObjectType:      yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel:  yyDollar[5].val.(PrivilegeLevel),
				To:              yyDollar[7].val.([]AccountName),
				WithGrantOption: yyDollar[8].val.(bool),
				As:              yyDollar[9].val.(*GrantUserAssumption),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1784
		{
			yyVAL.val = &GrantRole{
				Roles:           yyDollar[2].val.([]AccountName),
				To:              yyDollar[4].val.([]AccountName),
				WithAdminOption: yyDollar[5].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 191:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1796
		{
			yyVAL.val = &GrantProxy{
				On:              yyDollar[4].val.(AccountName),
				To:              yyDollar[6].val.([]AccountName),
				WithGrantOption: yyDollar[7].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_GRANT_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1810
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.val = &RevokePrivilege{
				Privileges:     allPriv,
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1824
		{
			yyVAL.val = &RevokePrivilege{
				Privileges:     yyDollar[2].val.([]Privilege),
				ObjectType:     yyDollar[4].val.(GrantObjectType),
				PrivilegeLevel: yyDollar[5].val.(PrivilegeLevel),
				From:           yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PRIVILEGE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 194:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1837
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[7].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 195:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1847
		{
			yyVAL.val = &RevokeAllPrivileges{
				From: yyDollar[8].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ALL,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1857
		{
			yyVAL.val = &RevokeRole{
				Roles: yyDollar[2].val.([]AccountName),
				From:  yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1868
		{
			yyVAL.val = &RevokeProxy{
				On:   yyDollar[4].val.(AccountName),
				From: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_REVOKE_PROXY,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].val.([]string)}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.val = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].val.([]string)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1893
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].val.([]string)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1897
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].val.([]string)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1901
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].val.([]string)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1905
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].val.([]string)}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].val.([]string)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yyVAL.val = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].val.([]string)}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].val.([]string)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].val.([]string)}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.val = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].val.([]string)}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].val.([]string)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].val.([]string)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.val = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].val.([]string)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.val = Privilege{Type: PrivilegeType_GrantOption, Columns: yyDollar[3].val.([]string)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].val.([]string)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].val.([]string)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.val = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].val.([]string)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].val.([]string)}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.val = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].val.([]string)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].val.([]string)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].val.([]string)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].val.([]string)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].val.([]string)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].val.([]string)}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.val = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].val.([]string)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].val.([]string)}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].val.([]string)}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].val.([]string)}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].val.([]string)}
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].val.([]string)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.val = Privilege{Type: PrivilegeType_Dynamic, DynamicName: strings.ToLower(string(yyDollar[1].bytes))}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.val = []Privilege{yyDollar[1].val.(Privilege)}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2019
		{
			yyVAL.val = append(yyDollar[1].val.([]Privilege), yyDollar[3].val.(Privilege))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2065
		{
			yyVAL.val = []string(nil)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyVAL.val = yyDollar[2].val.([]string)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.val = []string{yyDollar[1].val.(ColIdent).String()}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2079
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(ColIdent).String())
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2084
		{
			yyVAL.val = GrantObjectType_Any
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.val = GrantObjectType_Table
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.val = GrantObjectType_Function
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.val = GrantObjectType_Procedure
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.val = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.val = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].val.(ColIdent).String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: "*"}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.val = PrivilegeLevel{Database: yyDollar[1].val.(ColIdent).String(), TableRoutine: yyDollar[3].val.(ColIdent).String()}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2123
		{
			yyVAL.val = (*GrantUserAssumption)(nil)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2131
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2135
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2139
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].val.(AccountName), Roles: nil}
		}
	case 290:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2143
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].val.(AccountName), Roles: yyDollar[7].val.([]AccountName)}
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2147
		{
			yyVAL.val = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].val.(AccountName), Roles: yyDollar[5].val.([]AccountName)}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2152
		{
			yyVAL.val = false
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yyVAL.val = true
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2161
		{
			yyVAL.val = false
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2165
		{
			yyVAL.val = true
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2172
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2185
		{
			if yyDollar[1].val.(SelectStatement).GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].val.(SelectStatement).SetOrderBy(yyDollar[2].val.(OrderBy))
			yyDollar[1].val.(SelectStatement).SetLimit(yyDollar[3].val.(*Limit))
			yyDollar[1].val.(SelectStatement).SetLock(yyDollar[4].val.(string))
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2197
		{
			yyVAL.val = []ProcedureParam(nil)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2201
		{
			yyVAL.val = yyDollar[1].val.([]ProcedureParam)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.val = []ProcedureParam{yyDollar[1].val.(ProcedureParam)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2211
		{
			yyVAL.val = append(yyVAL.val.([]ProcedureParam), yyDollar[3].val.(ProcedureParam))
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2217
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].val.(ColIdent).String(), Type: yyDollar[2].val.(ColumnType)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.val = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].val.(ColIdent).String(), Type: yyDollar[3].val.(ColumnType)}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2234
		{
			yyVAL.val = []Characteristic(nil)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.val = yyDollar[1].val.([]Characteristic)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.val = []Characteristic{yyDollar[1].val.(Characteristic)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.val = append(yyVAL.val.([]Characteristic), yyDollar[2].val.(Characteristic))
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2254
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2258
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2278
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2286
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yyVAL.val = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.val = &BeginEndBlock{Label: ""}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2300
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2304
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[5].bytes) {
				yylex.Error("End-label " + string(yyDollar[5].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2313
		{
			yyVAL.val = &BeginEndBlock{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 324:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2317
		{
			yyVAL.val = &BeginEndBlock{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2321
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[7].bytes) {
				yylex.Error("End-label " + string(yyDollar[7].bytes) + " without match")
				return 1
			}
			yyVAL.val = &BeginEndBlock{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.val = &ViewSpec{Algorithm: "", Definer: yyDollar[1].val.(string), Security: yyDollar[2].val.(string)}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.val = &ViewSpec{Algorithm: yyDollar[1].val.(string), Definer: yyDollar[2].val.(string), Security: yyDollar[3].val.(string)}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2355
		{
			yyVAL.val = ""
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.val = yyDollar[3].val.(AccountName).String()
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2364
		{
			yyVAL.val = ""
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			anyHost := false
			if yyDollar[3].val.(string) == "%" {
				anyHost = true
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: anyHost}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2400
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2414
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: yyDollar[3].val.(string), AnyHost: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: false}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			if len(yyDollar[1].val.(string)) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.val = AccountName{Name: yyDollar[1].val.(string), Host: "", AnyHost: true}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.val = []AccountName{yyDollar[1].val.(AccountName)}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountName), yyDollar[3].val.(AccountName))
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName)}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication)}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2464
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), AuthInitial: yyDollar[5].val.(*Authentication)}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2468
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication)}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2472
		{
			yyVAL.val = AccountWithAuth{AccountName: yyDollar[1].val.(AccountName), Auth1: yyDollar[2].val.(*Authentication), Auth2: yyDollar[4].val.(*Authentication), Auth3: yyDollar[6].val.(*Authentication)}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2478
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2490
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2494
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2498
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2502
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2506
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2510
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2514
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2520
		{
			yyVAL.val = &Authentication{RandomPassword: true}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.val = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2528
		{
			yyVAL.val = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.val = []AccountWithAuth{yyDollar[1].val.(AccountWithAuth)}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2538
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountWithAuth), yyDollar[3].val.(AccountWithAuth))
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.val = EventName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yyVAL.val = EventName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.val = &EventScheduleSpec{At: &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2558
		{
			yyVAL.val = &EventScheduleSpec{EveryInterval: IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}, Starts: yyDollar[4].val.(*EventScheduleTimeSpec), Ends: yyDollar[5].val.(*EventScheduleTimeSpec)}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2563
		{
			yyVAL.val = []IntervalExpr{}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2567
		{
			yyVAL.val = append(yyDollar[1].val.([]IntervalExpr), IntervalExpr{Expr: tryCastExpr(yyDollar[4].val), Unit: string(yyDollar[5].bytes)})
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2572
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2576
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2581
		{
			yyVAL.val = (*EventScheduleTimeSpec)(nil)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yyVAL.val = &EventScheduleTimeSpec{EventTimestamp: tryCastExpr(yyDollar[2].val), EventIntervals: yyDollar[3].val.([]IntervalExpr)}
		}
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2590
		{
			yyVAL.val = EventOnCompletion_Undefined
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yyVAL.val = EventOnCompletion_Preserve
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2598
		{
			yyVAL.val = EventOnCompletion_NotPreserve
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2603
		{
			yyVAL.val = EventStatus_Undefined
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.val = EventStatus_Enable
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.val = EventStatus_Disable
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.val = EventStatus_DisableOnSlave
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.val = BeforeStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.val = AfterStr
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.val = InsertStr
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.val = UpdateStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.val = DeleteStr
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.val = (*TriggerOrder)(nil)
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2671
		{
			yyVAL.val = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2688
		{
			yyVAL.val = &BeginEndBlock{Statements: yyDollar[2].val.(Statements)}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2692
		{
			yyVAL.val = &BeginEndBlock{}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2698
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase)}
		}
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2702
		{
			yyVAL.val = &CaseStatement{Expr: tryCastExpr(yyDollar[2].val), Cases: yyDollar[3].val.([]CaseStatementCase), Else: yyDollar[5].val.(Statements)}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2706
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase)}
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2710
		{
			yyVAL.val = &CaseStatement{Expr: nil, Cases: yyDollar[2].val.([]CaseStatementCase), Else: yyDollar[4].val.(Statements)}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.val = []CaseStatementCase{yyDollar[1].val.(CaseStatementCase)}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2720
		{
			yyVAL.val = append(yyVAL.val.([]CaseStatementCase), yyDollar[2].val.(CaseStatementCase))
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2726
		{
			yyVAL.val = CaseStatementCase{Case: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2732
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 414:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2737
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[7].val.(Statements)}
		}
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2742
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds}
		}
	case 416:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:2748
		{
			conds := yyDollar[6].val.([]IfStatementCondition)
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}}, conds...)
			yyVAL.val = &IfStatement{Conditions: conds, Else: yyDollar[8].val.(Statements)}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.val = []IfStatementCondition{yyDollar[1].val.(IfStatementCondition)}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.val = append(yyVAL.val.([]IfStatementCondition), yyDollar[2].val.(IfStatementCondition))
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2766
		{
			yyVAL.val = IfStatementCondition{Expr: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2772
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2776
		{
			yyVAL.val = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2780
		{
			yyVAL.val = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].val.(SelectStatement)}}
		}
	case 423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2784
		{
			yyVAL.val = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].val.(DeclareHandlerAction), ConditionValues: yyDollar[5].val.([]DeclareHandlerCondition), Statement: tryCastStatement(yyDollar[6].val)}}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2788
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2795
		{
			ct := yyDollar[3].val.(ColumnType)
			ct.Charset = yyDollar[4].val.(string)
			ct.Collate = yyDollar[5].val.(string)
			ct.Default = tryCastExpr(yyDollar[7].val)
			yyVAL.val = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].val.([]ColIdent), VarType: ct}}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2805
		{
			yyVAL.val = DeclareHandlerAction_Continue
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.val = DeclareHandlerAction_Exit
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2813
		{
			yyVAL.val = DeclareHandlerAction_Undo
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.val = []DeclareHandlerCondition{yyDollar[1].val.(DeclareHandlerCondition)}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yyVAL.val = append(yyVAL.val.([]DeclareHandlerCondition), yyDollar[3].val.(DeclareHandlerCondition))
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.val = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.val = &OpenCursor{Name: string(yyDollar[2].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.val = &CloseCursor{Name: string(yyDollar[2].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2867
		{
			yyVAL.val = &FetchCursor{Name: string(yyDollar[3].bytes), Variables: yyDollar[5].val.([]string)}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2872
		{
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.val = []string{string(yyDollar[1].bytes)}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[3].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2889
		{
			yyVAL.val = &Loop{Label: "", Statements: yyDollar[2].val.(Statements)}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2893
		{
			yyVAL.val = &Loop{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements)}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2897
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[8].bytes) {
				yylex.Error("End-label " + string(yyDollar[8].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Loop{Label: label, Statements: yyDollar[4].val.(Statements)}
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2908
		{
			yyVAL.val = &Repeat{Label: "", Statements: yyDollar[2].val.(Statements), Condition: tryCastExpr(yyDollar[5].val)}
		}
	case 449:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2912
		{
			yyVAL.val = &Repeat{Label: string(yyDollar[1].bytes), Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 450:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2916
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &Repeat{Label: label, Statements: yyDollar[4].val.(Statements), Condition: tryCastExpr(yyDollar[7].val)}
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2927
		{
			yyVAL.val = &While{Label: "", Condition: tryCastExpr(yyDollar[2].val), Statements: yyDollar[4].val.(Statements)}
		}
	case 452:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2931
		{
			yyVAL.val = &While{Label: string(yyDollar[1].bytes), Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 453:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2935
		{
			label := string(yyDollar[1].bytes)
			if label != string(yyDollar[10].bytes) {
				yylex.Error("End-label " + string(yyDollar[10].bytes) + " without match")
				return 1
			}
			yyVAL.val = &While{Label: label, Condition: tryCastExpr(yyDollar[4].val), Statements: yyDollar[6].val.(Statements)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			yyVAL.val = &Leave{Label: string(yyDollar[2].bytes)}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.val = &Iterate{Label: string(yyDollar[2].bytes)}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.val = &Return{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2964
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2968
		{
			yyVAL.val = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2976
		{
			yyVAL.val = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.val = []SignalInfo{yyDollar[1].val.(SignalInfo)}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yyVAL.val = append(yyVAL.val.([]SignalInfo), yyDollar[3].val.(SignalInfo))
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: tryCastExpr(yyDollar[3].val).(*SQLVal)}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.val = SignalInfo{ConditionItemName: yyDollar[1].val.(SignalConditionItemName), Value: &ColName{Name: yyDollar[3].val.(ColIdent)}}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3012
		{
			yyVAL.val = SignalConditionItemName_ClassOrigin
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3016
		{
			yyVAL.val = SignalConditionItemName_SubclassOrigin
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3020
		{
			yyVAL.val = SignalConditionItemName_MessageText
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3024
		{
			yyVAL.val = SignalConditionItemName_MysqlErrno
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.val = SignalConditionItemName_ConstraintCatalog
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3032
		{
			yyVAL.val = SignalConditionItemName_ConstraintSchema
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.val = SignalConditionItemName_ConstraintName
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.val = SignalConditionItemName_CatalogName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.val = SignalConditionItemName_SchemaName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3048
		{
			yyVAL.val = SignalConditionItemName_TableName
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.val = SignalConditionItemName_ColumnName
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.val = SignalConditionItemName_CursorName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.val = &Resignal{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3070
		{
			yyVAL.val = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3074
		{
			yyVAL.val = &Resignal{Signal{Info: yyDollar[3].val.([]SignalInfo)}}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3078
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3082
		{
			yyVAL.val = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].val.([]SignalInfo)}}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3088
		{
			procName := yyDollar[2].val.(ProcedureName)
			exprs := yyDollar[3].val.(Exprs)
			yyVAL.val = &Call{
				ProcName: procName,
				Params:   exprs,
				AsOf:     tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:    AuthType_CALL,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{procName.Qualifier.String(), procName.Name.String(), fmt.Sprintf("%d", len(exprs))},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3104
		{
			yyVAL.val = Exprs(nil)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.val = Exprs(nil)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.val = yyDollar[2].val.(Exprs)
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3118
		{
			yyVAL.val = Statements{tryCastStatement(yyDollar[1].val)}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3122
		{
			yyVAL.val = append(yyVAL.val.(Statements), tryCastStatement(yyDollar[3].val))
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3176
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			tableName := yyDollar[5].val.(TableName)
			yyVAL.val = &DDL{
				Action:      CreateStr,
				Table:       tableName,
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3203
		{
			var ne bool
			if yyDollar[4].val.(int) != 0 {
				ne = true
			}

			authType := AuthType_CREATE
			var neTemp bool
			if yyDollar[2].val.(int) != 0 {
				neTemp = true
				authType = AuthType_CREATE_TEMP
			}

			yyVAL.val = &DDL{
				Action: CreateStr,
				Table: TableName{
					Name: NewTableIdent(string(yyDollar[5].bytes)),
				},
				IfNotExists: ne,
				Temporary:   neTemp,
				Auth: AuthInformation{
					AuthType:    authType,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3233
		{
			yyVAL.val = yyDollar[2].val.(*TableSpec)
			for _, opt := range yyDollar[4].val.([]*TableOption) {
				yyVAL.val.(*TableSpec).AddTableOption(opt)
			}
			yyVAL.val.(*TableSpec).PartitionOpt = yyDollar[5].val.(*PartitionOption)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[1].val.(*ColumnDefinition))
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.val = &TableSpec{}
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[1].val.(*ConstraintDefinition))
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			yyVAL.val.(*TableSpec).AddColumn(yyDollar[3].val.(*ColumnDefinition))
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3257
		{
			yyVAL.val.(*TableSpec).AddIndex(yyDollar[3].val.(*IndexDefinition))
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3261
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3265
		{
			yyVAL.val.(*TableSpec).AddConstraint(yyDollar[3].val.(*ConstraintDefinition))
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3271
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: yyDollar[1].val.(ColIdent), Type: *ctp}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3317
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3350
		{
			ct1 := yyDollar[2].val.(ColumnType)
			ct2 := yyDollar[3].val.(ColumnType)
			ctp := &ct1
			if err := ctp.merge(ct2); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: *ctp}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3362
		{
			yyVAL.val = BoolVal(false)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.val = BoolVal(false)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.val = BoolVal(true)
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3375
		{
			yyVAL.val = ColumnType{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3394
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3405
		{
			opt := ColumnType{Charset: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			if err := ct.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = ct
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			opt := ColumnType{Collate: yyDollar[2].val.(string)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3426
		{
			opt := ColumnType{BinaryCollate: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3437
		{
			opt := ColumnType{Default: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3448
		{
			opt := ColumnType{OnUpdate: tryCastExpr(yyDollar[2].val)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			opt := ColumnType{Autoincrement: yyDollar[2].val.(BoolVal), sawai: true}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3470
		{
			opt := ColumnType{KeyOpt: yyDollar[2].val.(ColumnKeyOption)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3481
		{
			opt := ColumnType{Comment: yyDollar[2].val.(*SQLVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3492
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[4].val)}, Stored: yyDollar[6].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3503
		{
			opt := ColumnType{GeneratedExpr: &ParenExpr{tryCastExpr(yyDollar[6].val)}, Stored: yyDollar[8].val.(BoolVal)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3514
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3526
		{
			opt := ColumnType{ForeignKeyDef: &ForeignKeyDefinition{ReferencedTable: yyDollar[3].val.(TableName), ReferencedColumns: yyDollar[5].val.(Columns)}}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			opt := ColumnType{Constraint: yyDollar[2].val.(*ConstraintDefinition)}
			ct := yyDollar[1].val.(ColumnType)
			ctp := &ct
			if err := ctp.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = *ctp
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Unsigned = yyDollar[2].val.(BoolVal)
			ct.Zerofill = yyDollar[3].val.(BoolVal)
			yyVAL.val = ct
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3562
		{
			ct := yyDollar[1].val.(ColumnType)
			ct.Length = yyDollar[2].val.(*SQLVal)
			yyVAL.val = ct
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.val = yyDollar[1].val.(ColumnType)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3582
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3586
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.val = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.val = ColumnType{Type: "tinyint"}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3618
		{
			yyVAL.val = ColumnType{Type: "smallint"}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3622
		{
			yyVAL.val = ColumnType{Type: "mediumint"}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.val = ColumnType{Type: "int"}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.val = ColumnType{Type: "bigint"}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3636
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3643
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3650
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			ct.Length = yyDollar[3].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[3].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3664
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3685
		{
			ct := ColumnType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3702
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3706
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3720
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3724
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3736
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3740
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3748
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].val.(*SQLVal)}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3756
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].val.(*SQLVal)}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3764
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3792
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3812
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3817
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].val.([]string)}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.val = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.val = make([]string, 0, 4)
			yyVAL.val = append(yyVAL.val.([]string), string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3862
		{
			yyVAL.val = append(yyDollar[1].val.([]string), string(yyDollar[3].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3867
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3876
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3880
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.val = NewValArg(yyDollar[2].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3889
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3893
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.val = LengthScaleOption{}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3911
		{
			yyVAL.val = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3919
		{
			yyVAL.val = BoolVal(false)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.val = BoolVal(false)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.val = BoolVal(true)
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3932
		{
			yyVAL.val = BoolVal(false)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.val = BoolVal(true)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3942
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			if num, ok := tryCastExpr(yyDollar[3].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[3].val)}
			}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[2].val.(string), Expr: NewStrVal(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3964
		{
			yyVAL.val = yyDollar[2].val.(BoolVal)
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3968
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3972
		{
			yyVAL.val = &ParenExpr{tryCastExpr(yyDollar[3].val)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.val = tryCastExpr(yyDollar[3].val)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.val = BoolVal(true)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3989
		{
			yyVAL.val = ""
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3999
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4003
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4007
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4015
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4019
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4025
		{
			yyVAL.val = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4039
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4048
		{
			yyVAL.val = false
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4052
		{
			yyVAL.val = true
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.val = []*CharsetAndCollate(nil)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.val = yyDollar[1].val.([]*CharsetAndCollate)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.val = []*CharsetAndCollate{yyDollar[1].val.(*CharsetAndCollate)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4079
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.val = append(yyDollar[1].val.([]*CharsetAndCollate), yyDollar[2].val.(*CharsetAndCollate))
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4093
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4097
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4101
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4105
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4109
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4113
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4119
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4123
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4127
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4133
		{
			yyVAL.val = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].val.(bool)}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4139
		{
			yyVAL.val = colKeyPrimary
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4143
		{
			yyVAL.val = colKey
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4147
		{
			yyVAL.val = colKeyUniqueKey
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.val = colKeyUnique
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4155
		{
			yyVAL.val = colKeyFulltextKey
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4161
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4167
		{
			yyVAL.val = &PurgeBinaryLogs{To: string(yyDollar[5].bytes)}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4171
		{
			yyVAL.val = &PurgeBinaryLogs{Before: tryCastExpr(yyDollar[5].val)}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yyVAL.val = &Flush{
				Type:   yyDollar[2].val.(string),
				Option: yyDollar[3].val.(*FlushOption),
				Auth: AuthInformation{
					AuthType:    AuthType_RELOAD,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4199
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4203
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4211
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4215
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].val.(string)}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4227
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4239
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4243
		{
			yyVAL.val = &FlushOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[2].val.(TableNames), ReadLock: yyDollar[3].val.(bool)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4248
		{
			yyVAL.val = false
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4250
		{
			yyVAL.val = true
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4253
		{
			yyVAL.val = ""
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4255
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4261
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.val = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4270
		{
			yyVAL.val = &ChangeReplicationSource{
				Options: yyDollar[5].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4280
		{
			yyVAL.val = &ChangeReplicationFilter{
				Options: yyDollar[4].val.([]*ReplicationOption),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4290
		{
			yyVAL.val = &StartReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4299
		{
			yyVAL.val = &StopReplica{
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.val = &ResetReplica{
				All: yyDollar[3].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_RELOAD,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.val = false
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.val = true
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4330
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4340
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4352
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4356
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: mustAtoi(yylex, string(yyDollar[3].bytes))}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			yyVAL.val = []*ReplicationOption{yyDollar[1].val.(*ReplicationOption)}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4370
		{
			yyVAL.val = append(yyVAL.val.([]*ReplicationOption), yyDollar[3].val.(*ReplicationOption))
		}
	case 746:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4376
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4380
		{
			yyVAL.val = &ReplicationOption{Name: string(yyDollar[1].bytes), Value: yyDollar[4].val.(TableNames)}
		}
	case 748:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4386
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn), Options: yyDollar[5].val.([]*IndexOption)}
		}
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4390
		{
			yyVAL.val = &IndexDefinition{Info: yyDollar[1].val.(*IndexInfo), Columns: yyDollar[3].val.([]*IndexColumn)}
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.val = []*IndexOption(nil)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.val = yyDollar[1].val.([]*IndexOption)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.val = []*IndexOption{yyDollar[1].val.(*IndexOption)}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.val = append(yyVAL.val.([]*IndexOption), yyDollar[2].val.(*IndexOption))
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4415
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			// should not be string
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4428
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4432
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[3].bytes)}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.val = &IndexOption{Name: string(yyDollar[1].bytes), Value: nil}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4446
		{
			yyVAL.val = ""
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4450
		{
			yyVAL.val = string(yyDollar[1].val.(string))
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.val = ":="
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4472
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4476
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Spatial: true, Unique: false}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4480
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Fulltext: true}
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4484
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Vector: true}
		}
	case 770:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4488
		{
			var name string
			name = yyDollar[2].val.(string)
			if name == "" {
				name = yyDollar[5].val.(string)
			}
			yyVAL.val = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].val.(string)), Name: NewColIdent(name), Unique: true}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4497
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].val.(string)), Name: NewColIdent(yyDollar[3].val.(string)), Unique: true}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4501
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].val.(string)), Unique: true}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.val = &IndexInfo{Type: string(yyDollar[1].val.(string)), Name: NewColIdent(yyDollar[2].val.(string)), Unique: false}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4515
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4519
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4534
		{
			yyVAL.val = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4543
		{
			yyVAL.val = ""
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4547
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.val = []*IndexColumn{yyDollar[1].val.(*IndexColumn)}
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.val = append(yyVAL.val.([]*IndexColumn), yyDollar[3].val.(*IndexColumn))
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4567
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yyVAL.val = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].val.(*SQLVal), Order: yyDollar[3].val.(string)}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4581
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 791:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:4591
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), Index: string(yyDollar[3].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4595
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 793:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:4599
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 794:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4603
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[12].val.(ReferenceAction), OnUpdate: yyDollar[13].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 795:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:4607
		{
			yyVAL.val = &ForeignKeyDefinition{Source: yyDollar[5].val.(Columns), ReferencedTable: yyDollar[8].val.(TableName), ReferencedColumns: yyDollar[10].val.(Columns), OnDelete: yyDollar[13].val.(ReferenceAction), OnUpdate: yyDollar[12].val.(ReferenceAction), Index: string(yyDollar[3].bytes)}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4612
		{
			yyVAL.bytes = []byte(nil)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4622
		{
			yyVAL.val = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].val.(ConstraintInfo)}
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[2].val.(ConstraintInfo)}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			yyVAL.val = &ConstraintDefinition{Details: yyDollar[1].val.(ConstraintInfo)}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4636
		{
			yyVAL.val = &CheckConstraintDefinition{Expr: tryCastExpr(yyDollar[3].val), Enforced: yyDollar[5].val.(bool)}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4651
		{
			yyVAL.val = ""
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4665
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.val = yyDollar[3].val.(ReferenceAction)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4677
		{
			yyVAL.val = Restrict
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.val = Cascade
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.val = NoAction
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4689
		{
			yyVAL.val = SetDefault
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4693
		{
			yyVAL.val = SetNull
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4698
		{
			yyVAL.val = true
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4702
		{
			yyVAL.val = true
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4706
		{
			yyVAL.val = false
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4711
		{
			yyVAL.val = []*TableOption(nil)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4715
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[2].val.(*TableOption))
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yyVAL.val = append(yyDollar[1].val.([]*TableOption), yyDollar[3].val.(*TableOption))
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4725
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4729
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4733
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4737
		{
			yyVAL.val = &TableOption{Name: "CHARACTER SET", Value: yyDollar[4].val.(string)}
		}
	case 824:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4741
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: yyDollar[5].val.(string)}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4745
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4749
		{
			yyVAL.val = &TableOption{Name: "CHECKSUM", Value: string(yyDollar[3].bytes)}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4753
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[2].bytes), Value: yyDollar[4].val.(string)}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4769
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4773
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes)}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4781
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4785
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4789
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4793
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4805
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4809
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4813
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4817
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4821
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes) + string(yyDollar[2].bytes)}
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4829
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4837
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4841
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4845
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4849
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4853
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[3].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4857
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[3].val.(string)}
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4861
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: yyDollar[2].val.(string)}
		}
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes)}
		}
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4869
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4873
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4877
		{
			yyVAL.val = &TableOption{Name: string(yyDollar[1].bytes), Value: "(" + yyDollar[4].val.(string) + ")"}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4883
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4891
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4901
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4907
		{
			yyVAL.val = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4916
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4920
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4938
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4944
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4948
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4952
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4960
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4964
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4974
		{
			yyVAL.val = yyDollar[1].val.(string) + "," + string(yyDollar[3].bytes)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4985
		{
			yyVAL.val = (*PartitionOption)(nil)
		}
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4989
		{
			yyDollar[3].val.(*PartitionOption).Partitions = yyDollar[4].val.(*SQLVal)
			yyDollar[3].val.(*PartitionOption).SubPartition = yyDollar[5].val.(*SubPartition)
			yyDollar[3].val.(*PartitionOption).Definitions = yyDollar[6].val.([]*PartitionDefinition)
			yyVAL.val = yyDollar[3].val.(*PartitionOption)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4998
		{
			yyVAL.val = yyDollar[1].val.(*PartitionOption)
		}
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5002
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				Expr:          tryCastExpr(yyDollar[3].val),
			}
		}
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5009
		{
			yyVAL.val = &PartitionOption{
				PartitionType: string(yyDollar[1].val.(string)),
				ColList:       yyDollar[4].val.(Columns),
			}
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5018
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				Expr:          tryCastExpr(yyDollar[4].val),
			}
		}
	case 889:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5026
		{
			yyVAL.val = &PartitionOption{
				IsLinear:      yyDollar[1].val.(bool),
				PartitionType: string(yyDollar[2].bytes),
				KeyAlgorithm:  yyDollar[3].val.(string),
				ColList:       yyDollar[5].val.(Columns),
			}
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5036
		{
			yyVAL.val = false
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.val = true
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.val = ""
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5049
		{
			yyVAL.val = string(yyDollar[1].bytes) + " = " + string(yyDollar[3].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5055
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5059
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5064
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5068
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5073
		{
			yyVAL.val = (*SubPartition)(nil)
		}
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5077
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				Expr:          tryCastExpr(yyDollar[6].val),
				SubPartitions: yyDollar[8].val.(*SQLVal),
			}
		}
	case 900:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5086
		{
			yyVAL.val = &SubPartition{
				IsLinear:      yyDollar[3].val.(bool),
				PartitionType: string(yyDollar[4].bytes),
				KeyAlgorithm:  yyDollar[5].val.(string),
				Expr:          tryCastExpr(yyDollar[7].val),
				SubPartitions: yyDollar[9].val.(*SQLVal),
			}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5097
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5101
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			yyVAL.val = ""
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.val = ""
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5114
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5119
		{
			yyVAL.val = string("")
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5123
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5135
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[3].bytes),
				CharsetCollate:   yyDollar[4].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{string(yyDollar[3].bytes)},
				},
			}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5149
		{
			yyVAL.val = &DBDDL{
				Action:           AlterStr,
				SchemaOrDatabase: "database",
				CharsetCollate:   yyDollar[3].val.([]*CharsetAndCollate),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5164
		{
			tableName := yyDollar[4].val.(TableName)
			ddls := yyDollar[5].val.([]*DDL)
			for i := 0; i < len(ddls); i++ {
				ddl := ddls[i]
				if ddl.Action == RenameStr {
					ddl.FromTables = append(TableNames{tableName}, ddl.FromTables...)
				} else {
					ddl.Table = tableName
				}
				PrependAuthTargetNames(ddl, []string{tableName.DbQualifier.String(), tableName.Name.String()})
			}
			yyVAL.val = &AlterTable{
				Table:          tableName,
				Statements:     ddls,
				PartitionSpecs: yyDollar[6].val.([]*PartitionSpec),
				Auth:           AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5184
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &AlterTable{
				Table:          tableName,
				PartitionSpecs: yyDollar[5].val.([]*PartitionSpec),
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.val = []*DDL{yyDollar[1].val.(*DDL)}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5203
		{
			yyVAL.val = append(yyVAL.val.([]*DDL), yyDollar[3].val.(*DDL))
		}
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5209
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			ddl.Column = yyDollar[4].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5224
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: AddStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 920:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5240
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(yyDollar[3].val.(string)),
					Using:   yyDollar[4].val.(ColIdent),
					Columns: yyDollar[6].val.([]*IndexColumn),
					Options: yyDollar[8].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 921:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:5257
		{
			idxName := yyDollar[5].val.(string)
			if len(idxName) == 0 {
				idxName = yyDollar[2].val.(string)
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:  CreateStr,
					ToName:  NewColIdent(idxName),
					Type:    yyDollar[3].val.(string),
					Using:   yyDollar[6].val.(ColIdent),
					Columns: yyDollar[8].val.([]*IndexColumn),
					Options: yyDollar[10].val.([]*IndexOption),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 922:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5281
		{
			ddl := &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: CreateStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.IndexSpec = &IndexSpec{
				Action:  CreateStr,
				Using:   NewColIdent(""),
				ToName:  NewColIdent(yyDollar[2].val.(string)),
				Type:    PrimaryStr,
				Columns: yyDollar[7].val.([]*IndexColumn),
				Options: yyDollar[9].val.([]*IndexOption),
			}
			yyVAL.val = ddl
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5303
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_FOREIGN_KEY,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5317
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: AddStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(yyDollar[2].val.(*ConstraintDefinition))
			yyVAL.val = ddl
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5331
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name: string(yyDollar[3].bytes),
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			yyVAL.val = &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec: &TableSpec{
					Constraints: []*ConstraintDefinition{
						&ConstraintDefinition{
							Name:    string(yyDollar[3].bytes),
							Details: &CheckConstraintDefinition{},
						},
					},
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5368
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5378
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5388
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5398
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5408
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5418
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5428
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5438
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5448
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: SetStr,
					Column: yyDollar[3].val.(ColIdent),
					Value:  tryCastExpr(yyDollar[6].val),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5463
		{
			colName := yyDollar[3].val.(ColIdent)
			yyVAL.val = &DDL{
				Action: AlterStr,
				DefaultSpec: &DefaultSpec{
					Action: DropStr,
					Column: colName,
				},
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER,
					TargetType:  AuthTargetType_TableColumn,
					TargetNames: []string{colName.String()},
				},
			}
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5479
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5489
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5499
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ChangeStr,
				TableSpec:    &TableSpec{},
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ColumnOrder:  yyDollar[5].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[4].val.(*ColumnDefinition))
			yyVAL.val = ddl
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5515
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 941:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5529
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[8].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5543
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: "",
					Collation:    yyDollar[4].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5557
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    "",
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 944:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5571
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				AlterCollationSpec: &AlterCollationSpec{
					CharacterSet: yyDollar[5].val.(string),
					Collation:    yyDollar[7].val.(string),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5585
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5598
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: string(yyDollar[1].bytes),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5611
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5621
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5631
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: DropStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5643
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					ToName: yyDollar[3].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5657
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action: DropStr,
					Type:   PrimaryStr,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5671
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: DropStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5688
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5698
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5708
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5718
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_LOCK,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5738
		{
			ddl := &DDL{
				Action:       AlterStr,
				ColumnAction: ModifyStr,
				TableSpec:    &TableSpec{},
				ColumnOrder:  yyDollar[4].val.(*ColumnOrder),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddColumn(yyDollar[3].val.(*ColumnDefinition))
			ddl.Column = yyDollar[3].val.(*ColumnDefinition).Name
			yyVAL.val = ddl
		}
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5755
		{
			yyVAL.val = &DDL{
				Action:       AlterStr,
				ColumnAction: RenameStr,
				Column:       NewColIdent(string(yyDollar[3].bytes)),
				ToColumn:     NewColIdent(string(yyDollar[5].bytes)),
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5768
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				IndexSpec: &IndexSpec{
					Action:   RenameStr,
					FromName: yyDollar[3].val.(ColIdent),
					ToName:   yyDollar[5].val.(ColIdent),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_INDEX,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5783
		{
			// Change this to a rename statement
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action:   RenameStr,
				ToTables: TableNames{tableName},
				Auth: AuthInformation{
					AuthType:    AuthType_RENAME,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 962:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5797
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[5].bytes),
				Details: &ForeignKeyDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[7].bytes),
				Details: &ForeignKeyDefinition{},
			})
			yyVAL.val = ddl
		}
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5818
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[4].bytes),
				Details: &CheckConstraintDefinition{},
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name:    string(yyDollar[6].bytes),
				Details: &CheckConstraintDefinition{},
			})
			yyVAL.val = ddl
		}
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5839
		{
			ddl := &DDL{
				Action:           AlterStr,
				ConstraintAction: RenameStr,
				TableSpec:        &TableSpec{},
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[3].bytes),
			})
			ddl.TableSpec.AddConstraint(&ConstraintDefinition{
				Name: string(yyDollar[5].bytes),
			})
			yyVAL.val = ddl
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5858
		{
			yyVAL.val = &DDL{
				Action: AlterStr,
				Auth: AuthInformation{
					AuthType:   AuthType_ALTER,
					TargetType: AuthTargetType_SingleTableIdentifier,
				},
			}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5868
		{
			ddl := yyDollar[1].val.(*DDL)
			ddl.Auth = AuthInformation{
				AuthType:   AuthType_ALTER,
				TargetType: AuthTargetType_SingleTableIdentifier,
			}
			yyVAL.val = ddl
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5880
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5884
		{
			yyVAL.val = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: tryCastExpr(yyDollar[3].val)}}
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5888
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5892
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5896
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5900
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5904
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5908
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5912
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5916
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5920
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5924
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5928
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5932
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5936
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5940
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5944
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5948
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5952
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5956
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5960
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5964
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5968
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5972
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5976
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5980
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5984
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5988
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5992
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5996
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6000
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6004
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6008
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6012
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6016
		{
			yyVAL.val = &DDL{Action: AlterStr}
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6022
		{
			yyVAL.val = true
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6026
		{
			yyVAL.val = false
		}
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6036
		{
			var ifExists bool
			if yyDollar[3].val.(int) != 0 {
				ifExists = true
			}
			accountName := yyDollar[4].val.(AccountName)
			yyVAL.val = &DDL{
				Action:         AlterStr,
				User:           accountName,
				Authentication: yyDollar[5].val.(*Authentication),
				IfExists:       ifExists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_USER,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{accountName.Name, accountName.Host},
				},
			}
		}
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6056
		{
			yyVAL.val = (*ColumnOrder)(nil)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6060
		{
			yyVAL.val = &ColumnOrder{First: true}
		}
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6064
		{
			yyVAL.val = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6069
		{
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6071
		{
		}
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6074
		{
			yyVAL.val = []*PartitionSpec(nil)
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.val = yyDollar[1].val.([]*PartitionSpec)
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			yyVAL.val = []*PartitionSpec{yyDollar[1].val.(*PartitionSpec)}
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6088
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionSpec), yyDollar[2].val.(*PartitionSpec))
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6094
		{
			yyVAL.val = &PartitionSpec{Action: AddStr, Definitions: yyDollar[4].val.([]*PartitionDefinition)}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6098
		{
			yyVAL.val = &PartitionSpec{Action: DropStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6102
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6106
		{
			yyVAL.val = &PartitionSpec{Action: DiscardStr, IsAll: true}
		}
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6110
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6114
		{
			yyVAL.val = &PartitionSpec{Action: ImportStr, IsAll: true}
		}
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6118
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6122
		{
			yyVAL.val = &PartitionSpec{Action: TruncateStr, IsAll: true}
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6126
		{
			yyVAL.val = &PartitionSpec{Action: CoalesceStr, Number: NewIntVal(yyDollar[3].bytes)}
		}
	case 1025:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6130
		{
			yyVAL.val = &PartitionSpec{Action: ReorganizeStr, Names: yyDollar[3].val.(Partitions), Definitions: yyDollar[6].val.([]*PartitionDefinition)}
		}
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6134
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName)}
		}
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6138
		{
			yyVAL.val = &PartitionSpec{Action: ExchangeStr, Names: Partitions{yyDollar[3].val.(ColIdent)}, TableName: yyDollar[6].val.(TableName), WithValidation: yyDollar[7].val.(bool)}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6142
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6146
		{
			yyVAL.val = &PartitionSpec{Action: AnalyzeStr, IsAll: true}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6159
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6163
		{
			yyVAL.val = &PartitionSpec{Action: OptimizeStr, IsAll: true}
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6167
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6171
		{
			yyVAL.val = &PartitionSpec{Action: RebuildStr, IsAll: true}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6175
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, Names: yyDollar[3].val.(Partitions)}
		}
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yyVAL.val = &PartitionSpec{Action: RepairStr, IsAll: true}
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6183
		{
			yyVAL.val = &PartitionSpec{Action: RemoveStr}
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6188
		{
			yyVAL.val = []*PartitionDefinition(nil)
		}
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6192
		{
			yyVAL.val = yyDollar[2].val.([]*PartitionDefinition)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			yyVAL.val = []*PartitionDefinition{yyDollar[1].val.(*PartitionDefinition)}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6202
		{
			yyVAL.val = append(yyDollar[1].val.([]*PartitionDefinition), yyDollar[3].val.(*PartitionDefinition))
		}
	case 1041:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6208
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Limit: tryCastExpr(yyDollar[7].val)}
		}
	case 1042:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6212
		{
			yyVAL.val = &PartitionDefinition{Name: yyDollar[2].val.(ColIdent), Maxvalue: true}
		}
	case 1043:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6218
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			es := &EventSpec{
				EventName:            eventName,
				Definer:              yyDollar[2].val.(string),
				OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
				RenameName:           renameName,
				Status:               yyDollar[7].val.(EventStatus),
				Comment:              yyDollar[8].val.(*SQLVal),
			}
			if err := es.ValidateAlterEvent(); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = &DDL{
				Action:    AlterStr,
				EventSpec: es,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1044:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:6248
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
				},
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1045:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:6274
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[6].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnCompletionPreserve: yyDollar[5].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[7].val.(EventStatus),
					Comment:              yyDollar[8].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[11].val),
				},
				SubStatementPositionStart: yyDollar[10].val.(int),
				SubStatementPositionEnd:   yyDollar[12].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1046:
		yyDollar = yyS[yypt-15 : yypt+1]
//line sql.y:6302
		{
			eventName := yyDollar[4].val.(EventName)
			renameName := yyDollar[9].val.(EventName)
			targetNames := []string{eventName.Qualifier.String()}
			if len(renameName.Qualifier.String()) > 0 {
				targetNames = append(targetNames, renameName.Qualifier.String())
			}
			yyVAL.val = &DDL{
				Action: AlterStr,
				EventSpec: &EventSpec{
					EventName:            eventName,
					Definer:              yyDollar[2].val.(string),
					OnSchedule:           yyDollar[7].val.(*EventScheduleSpec),
					OnCompletionPreserve: yyDollar[8].val.(EventOnCompletion),
					RenameName:           renameName,
					Status:               yyDollar[10].val.(EventStatus),
					Comment:              yyDollar[11].val.(*SQLVal),
					Body:                 tryCastStatement(yyDollar[14].val),
				},
				SubStatementPositionStart: yyDollar[13].val.(int),
				SubStatementPositionEnd:   yyDollar[15].val.(int) - 1,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: targetNames,
				},
			}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6332
		{
			yyVAL.val = EventName{}
		}
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6336
		{
			yyVAL.val = yyDollar[3].val.(EventName)
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6342
		{
			yyVAL.val = yyDollar[3].val.(*DDL)
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6346
		{
			yyVAL.val = &RenameUser{
				Accounts: yyDollar[3].val.([]AccountRename),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6358
		{
			fromTableName := yyDollar[1].val.(TableName)
			toTableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: RenameStr,
				FromTables: TableNames{
					fromTableName,
				},
				ToTables: TableNames{
					toTableName,
				},
				Auth: AuthInformation{
					AuthType:   AuthType_RENAME,
					TargetType: AuthTargetType_Ignore,
					TargetNames: []string{
						fromTableName.DbQualifier.String(),
						fromTableName.Name.String(),
						toTableName.DbQualifier.String(),
						toTableName.Name.String(),
					},
				},
			}
		}
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6382
		{
			yyVAL.val = yyDollar[1].val.(*DDL)
			fromTableName := yyDollar[3].val.(TableName)
			toTableName := yyDollar[5].val.(TableName)
			yyVAL.val.(*DDL).FromTables = append(yyVAL.val.(*DDL).FromTables, fromTableName)
			yyVAL.val.(*DDL).ToTables = append(yyVAL.val.(*DDL).ToTables, toTableName)
			yyVAL.val.(*DDL).Auth.TargetNames = append(yyVAL.val.(*DDL).Auth.TargetNames,
				fromTableName.DbQualifier.String(),
				fromTableName.Name.String(),
				toTableName.DbQualifier.String(),
				toTableName.Name.String(),
			)
		}
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6398
		{
			yyVAL.val = []AccountRename{{From: yyDollar[1].val.(AccountName), To: yyDollar[3].val.(AccountName)}}
		}
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6402
		{
			yyVAL.val = append(yyDollar[1].val.([]AccountRename), AccountRename{From: yyDollar[3].val.(AccountName), To: yyDollar[5].val.(AccountName)})
		}
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6408
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:     DropStr,
				FromTables: tableNames,
				IfExists:   exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_MultipleTableIdentifiers,
					TargetNames: tableNames.AuthMultipleTableIdentifiers(),
				},
			}
		}
	case 1056:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6426
		{
			// For consistency, we always use a AlterTable for ALTER TABLE equivalent statements
			tableName := yyDollar[5].val.(TableName)
			ddl := &DDL{
				Action:    AlterStr,
				Table:     tableName,
				IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].val.(ColIdent)},
				Auth: AuthInformation{
					AuthType:    AuthType_INDEX,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
			yyVAL.val = &AlterTable{
				Table:      tableName,
				Statements: []*DDL{ddl},
				Auth:       AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1057:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6446
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			tableNames := yyDollar[4].val.(TableNames)
			yyVAL.val = &DDL{
				Action:    DropStr,
				FromViews: tableNames,
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: tableNames.DbQualifiers(),
				},
			}
		}
	case 1058:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6464
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "database",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6481
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DBDDL{
				Action:           DropStr,
				SchemaOrDatabase: "schema",
				DBName:           string(yyDollar[4].bytes),
				IfExists:         exists,
				Auth: AuthInformation{
					AuthType:   AuthType_DROP,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6498
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			triggerName := yyDollar[4].val.(TriggerName)
			yyVAL.val = &DDL{
				Action: DropStr,
				TriggerSpec: &TriggerSpec{
					TrigName: triggerName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_TRIGGER,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{triggerName.Qualifier.String(), triggerName.Name.String()},
				},
			}
		}
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6518
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			procName := yyDollar[4].val.(ProcedureName)
			yyVAL.val = &DDL{
				Action: DropStr,
				ProcedureSpec: &ProcedureSpec{
					ProcName: procName,
				},
				IfExists: exists,
				Auth: AuthInformation{
					AuthType:    AuthType_ALTER_ROUTINE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{procName.Qualifier.String()},
				},
			}
		}
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6538
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropUser{
				IfExists:     exists,
				AccountNames: yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_CREATE_USER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6553
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			yyVAL.val = &DropRole{
				IfExists: exists,
				Roles:    yyDollar[4].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:   AuthType_DROP_ROLE,
					TargetType: AuthTargetType_Ignore,
				},
			}
		}
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6568
		{
			var exists bool
			if yyDollar[3].val.(int) != 0 {
				exists = true
			}
			eventName := yyDollar[4].val.(EventName)
			yyVAL.val = &DDL{
				Action:    DropStr,
				EventSpec: &EventSpec{EventName: eventName},
				IfExists:  exists,
				Auth: AuthInformation{
					AuthType:    AuthType_EVENT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{eventName.Qualifier.String()},
				},
			}
		}
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6587
		{

		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6591
		{
			yyVAL.val = Restrict
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6595
		{
			yyVAL.val = Cascade
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6601
		{
			tableName := yyDollar[3].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6614
		{
			tableName := yyDollar[2].val.(TableName)
			yyVAL.val = &DDL{
				Action: TruncateStr,
				Table:  tableName,
				Auth: AuthInformation{
					AuthType:    AuthType_DROP,
					TargetType:  AuthTargetType_SingleTableIdentifier,
					TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
				},
			}
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6629
		{
			yyVAL.val = tryCastStatement(yyDollar[3].val)
		}
	case 1071:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6635
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: UpdateStr, Columns: yyDollar[5].val.(Columns), Using: tryCastExpr(yyDollar[8].val)}
		}
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6639
		{
			yyVAL.val = &Analyze{Tables: []TableName{yyDollar[1].val.(TableName)}, Action: DropStr, Columns: yyDollar[5].val.(Columns)}
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6643
		{
			yyVAL.val = &Analyze{Tables: yyDollar[1].val.(TableNames)}
		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6655
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6659
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].bytes)}
		}
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6663
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1081:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6667
		{
			yyVAL.val = &Prepare{Name: string(yyDollar[2].bytes), Expr: string(yyDollar[4].val.(string))}
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6673
		{
			yyVAL.val = []string{yyDollar[1].val.(string)}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6677
		{
			yyVAL.val = append(yyDollar[1].val.([]string), yyDollar[3].val.(string))
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6684
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6688
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6694
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6698
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes)}
		}
	case 1088:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6702
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6706
		{
			yyVAL.val = &Execute{Name: string(yyDollar[2].bytes), VarList: yyDollar[4].val.([]string)}
		}
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6712
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6716
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6720
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6724
		{
			yyVAL.val = &Deallocate{Name: string(yyDollar[3].bytes)}
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6730
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6741
		{
			yyVAL.val = &Show{
				Type:   CharsetStr,
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6752
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6763
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1098:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6775
		{
			yyVAL.val = &Show{
				Type:        string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				IfNotExists: yyDollar[4].val.(int) == 1,
				Database:    string(yyDollar[5].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6787
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          CreateTableStr,
				Table:         yyDollar[4].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6800
		{
			tableName := yyDollar[4].val.(TableName)
			yyVAL.val = &Show{
				Type:  CreateProcedureStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:    AuthType_SHOW_CREATE_PROCEDURE,
					TargetType:  AuthTargetType_Ignore,
					TargetNames: []string{tableName.DbQualifier.String()},
				},
			}
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6813
		{
			yyVAL.val = &Show{
				Type:  CreateTriggerStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6824
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6835
		{
			yyVAL.val = &Show{
				Type:  CreateEventStr,
				Table: yyDollar[4].val.(TableName),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6846
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes),
				Filter: yyDollar[3].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6857
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6867
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6877
		{
			yyVAL.val = &Show{
				Type:               IndexStr,
				Table:              yyDollar[4].val.(TableName),
				Database:           yyDollar[5].val.(string),
				ShowIndexFilterOpt: tryCastExpr(yyDollar[6].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6890
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6900
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6911
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6921
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6931
		{
			yyVAL.val = &Show{
				Type:   string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6942
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6954
		{
			yyVAL.val = &Show{
				Type:     string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Database: yyDollar[4].val.(string),
				Filter:   yyDollar[5].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1115:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:6966
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].val.(string), AsOf: tryCastExpr(yyDollar[7].val), Filter: yyDollar[8].val.(*ShowFilter)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].val.(string)),
				ShowTablesOpt: showTablesOpt,
				Table:         yyDollar[5].val.(TableName),
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1116:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6980
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].val.(string), Filter: yyDollar[6].val.(*ShowFilter), AsOf: tryCastExpr(yyDollar[5].val)}
			yyVAL.val = &Show{
				Type:          string(yyDollar[3].bytes),
				ShowTablesOpt: showTablesOpt,
				Full:          yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6993
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[3].bytes),
				Full: yyDollar[2].val.(bool),
				Auth: AuthInformation{
					AuthType:   AuthType_PROCESS,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7004
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7018
		{
			yyVAL.val = &Show{
				Scope:  yyDollar[2].val.(string),
				Type:   string(yyDollar[3].bytes),
				Filter: yyDollar[4].val.(*ShowFilter),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7030
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7040
		{
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: tryCastExpr(yyDollar[4].val),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7051
		{
			cmp := tryCastExpr(yyDollar[3].val).(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			yyVAL.val = &Show{
				Type:                   string(yyDollar[2].bytes),
				ShowCollationFilterOpt: cmp,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7064
		{
			yyVAL.val = &ShowGrants{
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7074
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For: &an,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7086
		{
			yyVAL.val = &ShowGrants{
				CurrentUser: true,
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7097
		{
			an := yyDollar[4].val.(AccountName)
			yyVAL.val = &ShowGrants{
				For:   &an,
				Using: yyDollar[6].val.([]AccountName),
				Auth: AuthInformation{
					AuthType:    AuthType_SELECT,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{"mysql"},
				},
			}
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7110
		{
			yyVAL.val = &ShowPrivileges{
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7119
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7130
		{
			yyVAL.val = &Show{
				Type:      string(yyDollar[6].bytes),
				CountStar: true,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7141
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7152
		{
			yyVAL.val = &Show{
				Type:  string(yyDollar[2].bytes),
				Limit: yyDollar[3].val.(*Limit),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7163
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				ShowTablesOpt: &ShowTablesOpt{
					DbName: yyDollar[3].val.(string),
					Filter: yyDollar[4].val.(*ShowFilter),
				},
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7177
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7187
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7197
		{
			yyVAL.val = &Show{
				Type: "BINARY LOG STATUS",
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7207
		{
			yyVAL.val = &Show{
				Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_REPLICATION_CLIENT,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7219
		{
			yyVAL.val = &ComparisonExpr{Operator: LikeStr, Right: tryCastExpr(yyDollar[2].val), Escape: tryCastExpr(yyDollar[3].val)}
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7225
		{
			yyVAL.val = false
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7229
		{
			yyVAL.val = true
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7235
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7239
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7245
		{
			yyVAL.val = ""
		}
	case 1143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7249
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7253
		{
			yyVAL.val = yyDollar[2].val.(TableIdent).v
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7259
		{
			yyVAL.val = (*ShowFilter)(nil)
		}
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7263
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7267
		{
			yyVAL.val = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7271
		{
			yyVAL.val = &ShowFilter{Filter: tryCastExpr(yyDollar[2].val)}
		}
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7277
		{
			yyVAL.val = ""
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7281
		{
			yyVAL.val = SessionStr
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7285
		{
			yyVAL.val = GlobalStr
		}
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7291
		{
			tableIdent := yyDollar[2].val.(TableIdent)
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{tableIdent.String()},
				},
			}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7303
		{
			firstTableIdent := yyDollar[2].val.(TableIdent)
			tableIdent := TableIdent{v: firstTableIdent.v + "/" + yyDollar[4].val.(TableIdent).v}
			yyVAL.val = &Use{
				DBName: tableIdent,
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{firstTableIdent.String()},
				},
			}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7316
		{
			yyVAL.val = &Use{
				DBName: TableIdent{v: ""},
				Auth: AuthInformation{
					AuthType:    AuthType_VISIBLE,
					TargetType:  AuthTargetType_DatabaseIdentifiers,
					TargetNames: []string{""},
				},
			}
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7328
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7332
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7338
		{
			yyVAL.val = &Begin{}
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7342
		{
			yyVAL.val = tryCastStatement(yyDollar[1].val)
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7348
		{
			yyVAL.val = &Begin{}
		}
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7352
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7356
		{
			yyVAL.val = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7360
		{
			yyVAL.val = &Begin{}
		}
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7365
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7369
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7374
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7378
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7383
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7387
		{
			yyVAL.bytes = []byte(nil)
		}
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7393
		{
			yyVAL.val = &Commit{}
		}
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7399
		{
			yyVAL.val = &Rollback{}
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7405
		{
			yyVAL.val = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7411
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7415
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7419
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 1175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7423
		{
			yyVAL.val = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7429
		{
			yyVAL.val = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7435
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[2].val.(string), Statement: tryCastStatement(yyDollar[3].val)}
		}
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7439
		{
			yyVAL.val = &Explain{ExplainFormat: yyDollar[3].val.(string), Statement: tryCastStatement(yyDollar[4].val)}
		}
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7443
		{
			yyVAL.val = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].val.(SelectStatement)}
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7449
		{
			yyVAL.val = yyDollar[1].val.(SelectStatement)
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7457
		{
			yyVAL.val = ""
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7461
		{
			yyVAL.val = string(yyDollar[3].bytes)
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7473
		{
			showTablesOpt := &ShowTablesOpt{AsOf: tryCastExpr(yyDollar[3].val)}
			yyVAL.val = &Show{
				Type:          "columns",
				Table:         yyDollar[2].val.(TableName),
				ShowTablesOpt: showTablesOpt,
				Auth: AuthInformation{
					AuthType:   AuthType_SHOW,
					TargetType: AuthTargetType_TODO,
				},
			}
		}
	case 1190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7493
		{
			setAllowComments(yylex, true)
		}
	case 1191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7497
		{
			// this is an extension of the previous rule, so
			// we use $2 here
			yyVAL.val = yyDollar[2].val
			setAllowComments(yylex, false)
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7505
		{
			yyVAL.val = Comments(nil)
		}
	case 1193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7509
		{
			yyVAL.val = append(yyDollar[1].val.(Comments), yyDollar[2].bytes)
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7515
		{
			yyVAL.val = UnionStr
		}
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7519
		{
			yyVAL.val = UnionAllStr
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7523
		{
			yyVAL.val = UnionDistinctStr
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7529
		{
			yyVAL.val = IntersectStr
		}
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7533
		{
			yyVAL.val = IntersectAllStr
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7537
		{
			yyVAL.val = IntersectDistinctStr
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7543
		{
			yyVAL.val = ExceptStr
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7547
		{
			yyVAL.val = ExceptAllStr
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7551
		{
			yyVAL.val = ExceptDistinctStr
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7556
		{
			yyVAL.val = QueryOpts{}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7560
		{
			opt := QueryOpts{All: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7571
		{
			opt := QueryOpts{Distinct: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7582
		{
			opt := QueryOpts{StraightJoinHint: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7593
		{
			opt := QueryOpts{SQLCalcFoundRows: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7604
		{
			opt := QueryOpts{SQLCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7615
		{
			opt := QueryOpts{SQLNoCache: true}
			qo := yyDollar[1].val.(QueryOpts)
			qop := &qo
			if err := qop.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.val = qo
		}
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7627
		{
			yyVAL.val = ""
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7631
		{
			yyVAL.val = AllStr
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7635
		{
			yyVAL.val = DistinctStr
		}
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7641
		{
			if ae, ok := yyDollar[2].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].val.(int)
				ae.EndParsePos = yyDollar[3].val.(int) - 1
			}
			yyVAL.val = SelectExprs{yyDollar[2].val.(SelectExpr)}
		}
	case 1214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7649
		{
			if ae, ok := yyDollar[4].val.(SelectExpr).(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].val.(int)
				ae.EndParsePos = yyDollar[5].val.(int) - 1
			}
			yyVAL.val = append(yyVAL.val.(SelectExprs), yyDollar[4].val.(SelectExpr))
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7660
		{
			yyVAL.val = &StarExpr{}
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7664
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7668
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7672
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7678
		{
			yyVAL.val = &StarExpr{}
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7682
		{
			yyVAL.val = &AliasedExpr{Expr: tryCastExpr(yyDollar[1].val), As: yyDollar[2].val.(ColIdent)}
		}
	case 1221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7686
		{
			yyVAL.val = &StarExpr{TableName: TableName{Name: yyDollar[1].val.(TableIdent)}}
		}
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7690
		{
			yyVAL.val = &StarExpr{TableName: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}}
		}
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7696
		{
			yyVAL.val = &Over{NameRef: yyDollar[2].val.(ColIdent)}
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7700
		{
			yyVAL.val = (*Over)(yyDollar[2].val.(*WindowDef))
		}
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:7706
		{
			yyVAL.val = &WindowDef{NameRef: yyDollar[2].val.(ColIdent), PartitionBy: yyDollar[3].val.(Exprs), OrderBy: yyDollar[4].val.(OrderBy), Frame: yyDollar[5].val.(*Frame)}
		}
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7711
		{
			yyVAL.val = ColIdent{}
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7714
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7719
		{
			yyVAL.val = Exprs(nil)
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7723
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7728
		{
			yyVAL.val = (*Over)(nil)
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7732
		{
			yyVAL.val = yyDollar[1].val.(*Over)
		}
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7737
		{
			yyVAL.val = (*Frame)(nil)
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7741
		{
			yyVAL.val = &Frame{Unit: RowsUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7745
		{
			yyVAL.val = &Frame{Unit: RangeUnit, Extent: yyDollar[2].val.(*FrameExtent)}
		}
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7752
		{
			startBound := yyDollar[2].val.(*FrameBound)
			endBound := yyDollar[4].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound, End: endBound}
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7775
		{
			startBound := yyDollar[1].val.(*FrameBound)
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.val = &FrameExtent{Start: startBound}
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7790
		{
			yyVAL.val = &FrameBound{Type: UnboundedPreceding}
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7794
		{
			yyVAL.val = &FrameBound{Type: UnboundedFollowing}
		}
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7798
		{
			yyVAL.val = &FrameBound{Type: CurrentRow}
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7802
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprPreceding,
			}
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7809
		{
			yyVAL.val = &FrameBound{
				Expr: tryCastExpr(yyDollar[1].val),
				Type: ExprFollowing,
			}
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7817
		{
			yyVAL.val = Window(nil)
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7820
		{
			yyVAL.val = yyDollar[2].val.(Window)
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7826
		{
			yyVAL.val = Window{yyDollar[1].val.(*WindowDef)}
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7829
		{
			yyVAL.val = append(yyDollar[1].val.(Window), yyDollar[3].val.(*WindowDef))
		}
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7835
		{
			def := yyDollar[3].val.(*WindowDef)
			def.Name = yyDollar[1].val.(ColIdent)
			yyVAL.val = def
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7875
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1273:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7879
		{
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: string(yyDollar[3].bytes)}
		}
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7884
		{
			yyVAL.val = ColIdent{}
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7888
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7892
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7896
		{
			yyVAL.val = NewColIdent(string(yyDollar[2].bytes))
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7902
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7906
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7910
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7916
		{
			yyVAL.val = TableExprs{yyDollar[1].val.(TableExpr)}
		}
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7920
		{
			yyVAL.val = append(yyVAL.val.(TableExprs), yyDollar[3].val.(TableExpr))
		}
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7930
		{
			yyVAL.val = yyDollar[1].val.(*AliasedTableExpr)
		}
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7934
		{
			switch n := yyDollar[1].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[4].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: false,
				Expr:    yyDollar[1].val.(SimpleTableExpr),
				As:      yyDollar[3].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7949
		{
			switch n := yyDollar[2].val.(SimpleTableExpr).(type) {
			case *Subquery:
				n.Columns = yyDollar[5].val.(Columns)
			case *ValuesStatement:
				n.Columns = yyDollar[5].val.(Columns)
			}
			yyVAL.val = &AliasedTableExpr{
				Lateral: true,
				Expr:    yyDollar[2].val.(SimpleTableExpr),
				As:      yyDollar[4].val.(TableIdent),
				Auth:    AuthInformation{AuthType: AuthType_IGNORE},
			}
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7964
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7970
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7976
		{
			yyVAL.val = &ParenTableExpr{Exprs: yyDollar[2].val.(TableExprs)}
		}
	case 1293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7984
		{
			yyVAL.val = &ValuesStatement{Rows: yyDollar[2].val.(Values)}
		}
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7990
		{
			yyVAL.val = Values{yyDollar[2].val.(ValTuple)}
		}
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7994
		{
			yyVAL.val = append(yyVAL.val.(Values), yyDollar[4].val.(ValTuple))
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7999
		{
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8001
		{
		}
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8005
		{
			yyVAL.val = yyDollar[2].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8015
		{
			yyVAL.val = yyDollar[6].val.(*AliasedTableExpr)
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val.(*AliasedTableExpr).Expr = tableName
			yyVAL.val.(*AliasedTableExpr).Partitions = yyDollar[4].val.(Partitions)
			yyVAL.val.(*AliasedTableExpr).Auth = AuthInformation{
				TargetType:  AuthTargetType_SingleTableIdentifier,
				TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
			}
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8030
		{
			yyVAL.val = &AliasedTableExpr{Hints: yyDollar[1].val.(*IndexHints)}
		}
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8034
		{
			yyVAL.val = &AliasedTableExpr{As: yyDollar[2].val.(TableIdent), Hints: yyDollar[3].val.(*IndexHints)}
		}
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8038
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), Hints: yyDollar[2].val.(*IndexHints)}
		}
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8042
		{
			yyVAL.val = &AliasedTableExpr{AsOf: yyDollar[1].val.(*AsOf), As: yyDollar[3].val.(TableIdent), Hints: yyDollar[4].val.(*IndexHints)}
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8048
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8052
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8056
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8060
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8064
		{
			yyVAL.val = yyDollar[1].val.(*AsOf)
		}
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8070
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8074
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1311:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8078
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8084
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8088
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1314:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8092
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8096
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val), EndInclusive: true}
		}
	case 1316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8100
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[3].val), End: tryCastExpr(yyDollar[5].val)}
		}
	case 1317:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8104
		{
			yyVAL.val = &AsOf{Start: tryCastExpr(yyDollar[5].val), End: tryCastExpr(yyDollar[7].val), StartInclusive: true, EndInclusive: true}
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8110
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8116
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8120
		{
			yyVAL.val = &AsOf{All: true}
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8126
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[3].val)}
		}
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8130
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8134
		{
			yyVAL.val = &AsOf{Time: tryCastExpr(yyDollar[4].val)}
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8139
		{
			yyVAL.val = Expr(nil)
		}
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8143
		{
			yyVAL.val = yyDollar[1].val.(*AsOf).Time
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8149
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8153
		{
			yyVAL.val = yyDollar[1].val.(Columns)
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8158
		{
			yyVAL.val = Columns(nil)
		}
	case 1329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8162
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8168
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8172
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8178
		{
			yyVAL.val = Partitions{yyDollar[1].val.(ColIdent)}
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8182
		{
			yyVAL.val = append(yyVAL.val.(Partitions), yyDollar[3].val.(ColIdent))
		}
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8188
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8192
		{
			yyVAL.val = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].val.(SelectExprs), Alias: yyDollar[6].val.(TableIdent)}
		}
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8206
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8210
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8214
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr), Condition: yyDollar[4].val.(JoinCondition)}
		}
	case 1339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8218
		{
			yyVAL.val = &JoinTableExpr{LeftExpr: yyDollar[1].val.(TableExpr), Join: yyDollar[2].val.(string), RightExpr: yyDollar[3].val.(TableExpr)}
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8224
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8226
		{
			yyVAL.val = JoinCondition{Using: yyDollar[3].val.(Columns)}
		}
	case 1342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8230
		{
			yyVAL.val = JoinCondition{}
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8232
		{
			yyVAL.val = yyDollar[1].val.(JoinCondition)
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8236
		{
			yyVAL.val = JoinCondition{}
		}
	case 1345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8238
		{
			yyVAL.val = JoinCondition{On: tryCastExpr(yyDollar[2].val)}
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8243
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8249
		{
			yyVAL.val = JoinStr
		}
	case 1349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8253
		{
			yyVAL.val = JoinStr
		}
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8257
		{
			yyVAL.val = JoinStr
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8263
		{
			yyVAL.val = StraightJoinStr
		}
	case 1352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8269
		{
			yyVAL.val = LeftJoinStr
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8273
		{
			yyVAL.val = LeftJoinStr
		}
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8277
		{
			yyVAL.val = RightJoinStr
		}
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8281
		{
			yyVAL.val = RightJoinStr
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8285
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8289
		{
			yyVAL.val = FullOuterJoinStr
		}
	case 1358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8295
		{
			yyVAL.val = NaturalJoinStr
		}
	case 1359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8299
		{
			if yyDollar[2].val.(string) == LeftJoinStr {
				yyVAL.val = NaturalLeftJoinStr
			} else {
				yyVAL.val = NaturalRightJoinStr
			}
		}
	case 1360:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:8309
		{
			yyDollar[8].val.(*JSONTableSpec).Path = string(yyDollar[5].bytes)
			yyVAL.val = &JSONTableExpr{Data: tryCastExpr(yyDollar[3].val), Spec: yyDollar[8].val.(*JSONTableSpec), Alias: yyDollar[12].val.(TableIdent)}
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8316
		{
			yyVAL.val = &JSONTableSpec{}
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[1].val.(*JSONTableColDef))
		}
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8321
		{
			yyVAL.val.(*JSONTableSpec).AddColumn(yyDollar[3].val.(*JSONTableColDef))
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8327
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: yyDollar[2].val.(ColumnType), Opts: yyDollar[3].val.(JSONTableColOpts)}
		}
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8331
		{
			yyVAL.val = &JSONTableColDef{Name: yyDollar[1].val.(ColIdent), Type: ColumnType{Type: "INTEGER", Unsigned: true, Autoincrement: true}}
		}
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8335
		{
			yyDollar[5].val.(*JSONTableSpec).Path = string(yyDollar[2].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[5].val.(*JSONTableSpec)}
		}
	case 1366:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:8340
		{
			yyDollar[6].val.(*JSONTableSpec).Path = string(yyDollar[3].bytes)
			yyVAL.val = &JSONTableColDef{Spec: yyDollar[6].val.(*JSONTableSpec)}
		}
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8347
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes)}
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8351
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val)}
		}
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8355
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8359
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[3].val), ValOnError: tryCastExpr(yyDollar[4].val)}
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8363
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ValOnEmpty: tryCastExpr(yyDollar[4].val), ValOnError: tryCastExpr(yyDollar[3].val)}
		}
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8367
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true}
		}
	case 1373:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8371
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnError: true}
		}
	case 1374:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8375
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1375:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:8379
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[2].bytes), ErrorOnEmpty: true, ErrorOnError: true}
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8383
		{
			yyVAL.val = JSONTableColOpts{Path: string(yyDollar[3].bytes), Exists: true}
		}
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8389
		{
			yyVAL.val = &NullVal{}
		}
	case 1378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8393
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8399
		{
			yyVAL.val = &NullVal{}
		}
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8403
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8409
		{
			yyVAL.val = TriggerName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8413
		{
			yyVAL.val = TriggerName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8419
		{
			yyVAL.val = yyDollar[3].val.(TableName)
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8425
		{
			yyVAL.val = yyDollar[2].val.(TableName)
		}
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8429
		{
			yyVAL.val = yyDollar[1].val.(TableName)
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8435
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8439
		{
			yyVAL.val = TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8443
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8447
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8451
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8455
		{
			yyVAL.val = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8461
		{
			yyVAL.val = ProcedureName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8465
		{
			yyVAL.val = ProcedureName{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent)}
		}
	case 1394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8471
		{
			yyVAL.val = TableName{Name: yyDollar[1].val.(TableIdent)}
		}
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8476
		{
			yyVAL.val = (*IndexHints)(nil)
		}
	case 1396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8480
		{
			yyVAL.val = &IndexHints{Type: UseStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8484
		{
			yyVAL.val = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8488
		{
			yyVAL.val = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].val.(Columns)}
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8493
		{
			yyVAL.val = Expr(nil)
		}
	case 1400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8497
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8503
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8507
		{
			yyVAL.val = &AndExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8511
		{
			yyVAL.val = &OrExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8515
		{
			yyVAL.val = &XorExpr{Left: tryCastExpr(yyDollar[1].val), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8519
		{
			yyVAL.val = &NotExpr{Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8523
		{
			yyVAL.val = &IsExpr{Operator: yyDollar[3].val.(string), Expr: tryCastExpr(yyDollar[1].val)}
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8527
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8531
		{
			yyVAL.val = &Default{ColName: yyDollar[2].val.(string)}
		}
	case 1409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8537
		{
			yyVAL.val = ""
		}
	case 1410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8541
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8547
		{
			yyVAL.val = BoolVal(true)
		}
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8551
		{
			yyVAL.val = BoolVal(false)
		}
	case 1413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8557
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: yyDollar[2].val.(string), Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8561
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: InStr, Right: yyDollar[3].val.(ColTuple)}
		}
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8565
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotInStr, Right: yyDollar[4].val.(ColTuple)}
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8569
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: LikeStr, Right: tryCastExpr(yyDollar[3].val), Escape: tryCastExpr(yyDollar[4].val)}
		}
	case 1417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8573
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotLikeStr, Right: tryCastExpr(yyDollar[4].val), Escape: tryCastExpr(yyDollar[5].val)}
		}
	case 1418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8577
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: RegexpStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8581
		{
			yyVAL.val = &ComparisonExpr{Left: tryCastExpr(yyDollar[1].val), Operator: NotRegexpStr, Right: tryCastExpr(yyDollar[4].val)}
		}
	case 1420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8585
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: BetweenStr, From: tryCastExpr(yyDollar[3].val), To: tryCastExpr(yyDollar[5].val)}
		}
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8589
		{
			yyVAL.val = &RangeCond{Left: tryCastExpr(yyDollar[1].val), Operator: NotBetweenStr, From: tryCastExpr(yyDollar[4].val), To: tryCastExpr(yyDollar[6].val)}
		}
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8593
		{
			yyVAL.val = &ExistsExpr{Subquery: yyDollar[2].val.(*Subquery)}
		}
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8599
		{
			yyVAL.val = IsNullStr
		}
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8603
		{
			yyVAL.val = IsNotNullStr
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8607
		{
			yyVAL.val = IsTrueStr
		}
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8611
		{
			yyVAL.val = IsNotTrueStr
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8615
		{
			yyVAL.val = IsFalseStr
		}
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8619
		{
			yyVAL.val = IsNotFalseStr
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8625
		{
			yyVAL.val = EqualStr
		}
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8629
		{
			yyVAL.val = LessThanStr
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8633
		{
			yyVAL.val = GreaterThanStr
		}
	case 1432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8637
		{
			yyVAL.val = LessEqualStr
		}
	case 1433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8641
		{
			yyVAL.val = GreaterEqualStr
		}
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8645
		{
			yyVAL.val = NotEqualStr
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8649
		{
			yyVAL.val = NullSafeEqualStr
		}
	case 1436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8654
		{
			yyVAL.val = Expr(nil)
		}
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8658
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8664
		{
			yyVAL.val = yyDollar[1].val.(ValTuple)
		}
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8668
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8672
		{
			yyVAL.val = ListArg(yyDollar[1].bytes)
		}
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8678
		{
			yyVAL.val = &Subquery{Select: yyDollar[2].val.(SelectStatement)}
		}
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8684
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8688
		{
			yyVAL.val = yyDollar[2].val.(SimpleTableExpr)
		}
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8693
		{
			yyVAL.val = SelectExprs(nil)
		}
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8700
		{
			yyVAL.val = SelectExprs{yyDollar[1].val.(SelectExpr)}
		}
	case 1447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8704
		{
			yyVAL.val = append(yyDollar[1].val.(SelectExprs), yyDollar[3].val.(SelectExpr))
		}
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8710
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8714
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8720
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8724
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8728
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8732
		{
			yyVAL.val = yyDollar[1].val.(BoolVal)
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8736
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8740
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8744
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8748
		{
			yyVAL.val = yyDollar[1].val.(*Subquery)
		}
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8752
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitAndStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8756
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitOrStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8760
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: BitXorStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8764
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: PlusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8768
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MinusStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8772
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: MultStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8776
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: DivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8780
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: IntDivStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8784
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8788
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ModStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8792
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftLeftStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8796
		{
			yyVAL.val = &BinaryExpr{Left: tryCastExpr(yyDollar[1].val), Operator: ShiftRightStr, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8800
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8804
		{
			yyVAL.val = &BinaryExpr{Left: yyDollar[1].val.(*ColName), Operator: JSONUnquoteExtractOp, Right: tryCastExpr(yyDollar[3].val)}
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8808
		{
			yyVAL.val = &CollateExpr{Expr: tryCastExpr(yyDollar[1].val), Collation: yyDollar[3].val.(string)}
		}
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8812
		{
			yyVAL.val = &UnaryExpr{Operator: BinaryStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8816
		{
			yyVAL.val = &UnaryExpr{Operator: yyDollar[1].val.(string), Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8820
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				yyVAL.val = num
			} else {
				yyVAL.val = &UnaryExpr{Operator: UPlusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8828
		{
			if num, ok := tryCastExpr(yyDollar[2].val).(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.val = num
				} else {
					yyVAL.val = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.val = &UnaryExpr{Operator: UMinusStr, Expr: tryCastExpr(yyDollar[2].val)}
			}
		}
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8842
		{
			yyVAL.val = &UnaryExpr{Operator: TildaStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:8846
		{
			yyVAL.val = &UnaryExpr{Operator: BangStr, Expr: tryCastExpr(yyDollar[2].val)}
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:8850
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.val = &IntervalExpr{Expr: tryCastExpr(yyDollar[2].val), Unit: yyDollar[3].val.(ColIdent).String()}
		}
	case 1486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8870
		{
			yyVAL.val = &FuncExpr{Name: yyDollar[1].val.(ColIdent), Distinct: yyDollar[3].val.(string) == DistinctStr, Exprs: yyDollar[4].val.(SelectExprs)}
		}
	case 1487:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8874
		{
			yyVAL.val = &FuncExpr{Qualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(ColIdent), Exprs: yyDollar[5].val.(SelectExprs)}
		}
	case 1488:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8884
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1489:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8888
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8892
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1491:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8896
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1492:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8900
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1493:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8904
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8908
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1495:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8912
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1496:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8916
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8920
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8924
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1499:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8928
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8932
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1501:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:8936
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].val.(SelectExprs), Distinct: yyDollar[3].val.(string) == DistinctStr, Over: yyDollar[6].val.(*Over)}
		}
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8940
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8944
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8948
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8957
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8961
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8965
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8969
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8973
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].val.(SelectExpr)}, Over: yyDollar[5].val.(*Over)}
		}
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8977
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:8981
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs), Over: yyDollar[5].val.(*Over)}
		}
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8985
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8989
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8993
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:8997
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].val.(*Over)}
		}
	case 1516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9008
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9012
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9016
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1519:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9020
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9024
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1521:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9028
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1522:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9032
		{
			yyVAL.val = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(*ConvertType)}
		}
	case 1523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9036
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1524:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9040
		{
			yyVAL.val = &CharExpr{Exprs: yyDollar[3].val.(SelectExprs), Type: yyDollar[5].val.(string)}
		}
	case 1525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9044
		{
			yyVAL.val = &ConvertUsingExpr{Expr: tryCastExpr(yyDollar[3].val), Type: yyDollar[5].val.(string)}
		}
	case 1526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9048
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent("LOCATE"), Exprs: []SelectExpr{&AliasedExpr{Expr: tryCastExpr(yyDollar[3].val)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9052
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1528:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9056
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1529:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9060
		{
			yyVAL.val = &SubstrExpr{Name: yyDollar[3].val.(*ColName), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1530:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9064
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1531:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9068
		{
			yyVAL.val = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: tryCastExpr(yyDollar[5].val), To: tryCastExpr(yyDollar[7].val)}
		}
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9072
		{
			yyVAL.val = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: tryCastExpr(yyDollar[3].val), Dir: Both}
		}
	case 1533:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9076
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[3].val), Str: tryCastExpr(yyDollar[5].val), Dir: Both}
		}
	case 1534:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9080
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Leading}
		}
	case 1535:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9084
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Trailing}
		}
	case 1536:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9088
		{
			yyVAL.val = &TrimExpr{Pattern: tryCastExpr(yyDollar[4].val), Str: tryCastExpr(yyDollar[6].val), Dir: Both}
		}
	case 1537:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:9092
		{
			yyVAL.val = &MatchExpr{Columns: yyDollar[3].val.(SelectExprs), Expr: tryCastExpr(yyDollar[7].val), Option: yyDollar[8].val.(string)}
		}
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9096
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1539:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9100
		{
			yyVAL.val = &GroupConcatExpr{Distinct: yyDollar[3].val.(string), Exprs: yyDollar[4].val.(SelectExprs), OrderBy: yyDollar[5].val.(OrderBy), Separator: yyDollar[6].val.(Separator)}
		}
	case 1540:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9104
		{
			yyVAL.val = &CaseExpr{Expr: tryCastExpr(yyDollar[2].val), Whens: yyDollar[3].val.([]*When), Else: tryCastExpr(yyDollar[4].val)}
		}
	case 1541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9108
		{
			yyVAL.val = &ValuesFuncExpr{Name: yyDollar[3].val.(*ColName)}
		}
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9112
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9117
		{
			yyVAL.val = &ValuesFuncExpr{Name: NewColName(string(yyDollar[3].bytes))}
		}
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9121
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9132
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9136
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9140
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9145
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9149
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9153
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9157
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1552:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9161
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampadd"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1553:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:9165
		{
			yyVAL.val = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: string(yyDollar[3].bytes), Expr1: tryCastExpr(yyDollar[5].val), Expr2: tryCastExpr(yyDollar[7].val)}
		}
	case 1554:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9169
		{
			yyVAL.val = &ExtractFuncExpr{Name: string(yyDollar[1].bytes), Unit: string(yyDollar[3].bytes), Expr: tryCastExpr(yyDollar[5].val)}
		}
	case 1555:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9173
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewStrVal(yyDollar[3].bytes)}, &AliasedExpr{Expr: tryCastExpr(yyDollar[5].val)}}}
		}
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9181
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9185
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: NewIntVal(yyDollar[3].bytes)}}}
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9189
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9193
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9197
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{&AliasedExpr{Expr: tryCastExpr(yyDollar[2].val)}}}
		}
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9210
		{
			yyVAL.val = NewIntVal([]byte("0"))
		}
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9214
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9224
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9228
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9232
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9236
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9240
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9244
		{
			yyVAL.val = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].val.(SelectExprs)}
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9250
		{
			yyVAL.val = ""
		}
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9254
		{
			yyVAL.val = BooleanModeStr
		}
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9258
		{
			yyVAL.val = NaturalLanguageModeStr
		}
	case 1574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:9262
		{
			yyVAL.val = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9266
		{
			yyVAL.val = QueryExpansionStr
		}
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9272
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9276
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9280
		{
			yyVAL.val = string(yyDollar[1].bytes)
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9286
		{
			yyVAL.val = Armscii8Str
		}
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9290
		{
			yyVAL.val = AsciiStr
		}
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9294
		{
			yyVAL.val = Big5Str
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9298
		{
			yyVAL.val = UBinaryStr
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9302
		{
			yyVAL.val = Cp1250Str
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9306
		{
			yyVAL.val = Cp1251Str
		}
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9310
		{
			yyVAL.val = Cp1256Str
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9314
		{
			yyVAL.val = Cp1257Str
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9318
		{
			yyVAL.val = Cp850Str
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9322
		{
			yyVAL.val = Cp852Str
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9326
		{
			yyVAL.val = Cp866Str
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9330
		{
			yyVAL.val = Cp932Str
		}
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9334
		{
			yyVAL.val = Dec8Str
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9338
		{
			yyVAL.val = EucjpmsStr
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9342
		{
			yyVAL.val = EuckrStr
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9346
		{
			yyVAL.val = Gb18030Str
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9350
		{
			yyVAL.val = Gb2312Str
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9354
		{
			yyVAL.val = GbkStr
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9358
		{
			yyVAL.val = Geostd8Str
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9362
		{
			yyVAL.val = GreekStr
		}
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9366
		{
			yyVAL.val = HebrewStr
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9370
		{
			yyVAL.val = Hp8Str
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9374
		{
			yyVAL.val = Keybcs2Str
		}
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9378
		{
			yyVAL.val = Koi8rStr
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9382
		{
			yyVAL.val = Koi8uStr
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9386
		{
			yyVAL.val = Latin1Str
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9390
		{
			yyVAL.val = Latin2Str
		}
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9394
		{
			yyVAL.val = Latin5Str
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9398
		{
			yyVAL.val = Latin7Str
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9402
		{
			yyVAL.val = MacceStr
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9406
		{
			yyVAL.val = MacromanStr
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9410
		{
			yyVAL.val = SjisStr
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9414
		{
			yyVAL.val = Swe7Str
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9418
		{
			yyVAL.val = Tis620Str
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9422
		{
			yyVAL.val = Ucs2Str
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9426
		{
			yyVAL.val = UjisStr
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9430
		{
			yyVAL.val = Utf16Str
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9434
		{
			yyVAL.val = Utf16leStr
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9438
		{
			yyVAL.val = Utf32Str
		}
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9442
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9446
		{
			yyVAL.val = Utf8mb3Str
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9450
		{
			yyVAL.val = Utf8mb4Str
		}
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9456
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9460
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9464
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9468
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: yyDollar[3].val.(string), Operator: CharacterSetStr}
		}
	case 1625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9472
		{
			yyVAL.val = &ConvertType{Type: "CHAR", Length: yyDollar[2].val.(*SQLVal), Charset: string(yyDollar[3].bytes)}
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9476
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9480
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9484
		{
			ct := &ConvertType{Type: string(yyDollar[1].bytes)}
			ct.Length = yyDollar[2].val.(LengthScaleOption).Length
			ct.Scale = yyDollar[2].val.(LengthScaleOption).Scale
			yyVAL.val = ct
		}
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9491
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9495
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9499
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9503
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9507
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9511
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9515
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9519
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9523
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].val.(*SQLVal)}
		}
	case 1638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9527
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9531
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9535
		{
			yyVAL.val = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9541
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9545
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 1643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9550
		{
			yyVAL.val = Expr(nil)
		}
	case 1644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9554
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9559
		{
			yyVAL.val = Separator{SeparatorString: "", DefaultSeparator: true}
		}
	case 1646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9563
		{
			yyVAL.val = Separator{SeparatorString: string(yyDollar[2].bytes), DefaultSeparator: false}
		}
	case 1647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9569
		{
			yyVAL.val = []*When{yyDollar[1].val.(*When)}
		}
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9573
		{
			yyVAL.val = append(yyDollar[1].val.([]*When), yyDollar[2].val.(*When))
		}
	case 1649:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9579
		{
			yyVAL.val = &When{Cond: tryCastExpr(yyDollar[2].val), Val: tryCastExpr(yyDollar[4].val)}
		}
	case 1650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9584
		{
			yyVAL.val = Expr(nil)
		}
	case 1651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9588
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9594
		{
			yyVAL.val = &ColName{Name: yyDollar[1].val.(ColIdent)}
		}
	case 1653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9598
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9602
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9606
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9610
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9614
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9618
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: yyDollar[1].val.(TableIdent)}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9622
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9626
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9630
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9634
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9638
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9642
		{
			yyVAL.val = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].val.(ColIdent)}
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9646
		{
			yyVAL.val = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1666:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9650
		{
			yyVAL.val = &ColName{Qualifier: TableName{DbQualifier: yyDollar[1].val.(TableIdent), Name: yyDollar[3].val.(TableIdent)}, Name: yyDollar[5].val.(ColIdent)}
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9656
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9660
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9664
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9668
		{
			yyVAL.val = NewStrVal(yyDollar[2].bytes)
		}
	case 1671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9672
		{
			yyVAL.val = NewHexVal(yyDollar[1].bytes)
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9676
		{
			yyVAL.val = NewBitVal(yyDollar[1].bytes)
		}
	case 1673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9680
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9684
		{
			yyVAL.val = NewFloatVal(yyDollar[1].bytes)
		}
	case 1675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9688
		{
			yyVAL.val = NewHexNum(yyDollar[1].bytes)
		}
	case 1676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9692
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9696
		{
			yyVAL.val = &NullVal{}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9702
		{
			yyVAL.val = NewIntVal([]byte("1"))
		}
	case 1679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9706
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9710
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9715
		{
			yyVAL.val = Exprs(nil)
		}
	case 1682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9719
		{
			yyVAL.val = yyDollar[3].val.(Exprs)
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9725
		{
			yyVAL.val = Exprs{tryCastExpr(yyDollar[1].val)}
		}
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9729
		{
			yyVAL.val = append(yyDollar[1].val.(Exprs), tryCastExpr(yyDollar[3].val))
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9735
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9740
		{
			yyVAL.val = Expr(nil)
		}
	case 1687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9744
		{
			yyVAL.val = tryCastExpr(yyDollar[2].val)
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9750
		{
			yyVAL.val = tryCastExpr(yyDollar[1].val)
		}
	case 1689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9755
		{
			yyVAL.val = OrderBy(nil)
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9759
		{
			yyVAL.val = yyDollar[3].val.(OrderBy)
		}
	case 1691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9765
		{
			yyVAL.val = OrderBy{yyDollar[1].val.(*Order)}
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9769
		{
			yyVAL.val = append(yyDollar[1].val.(OrderBy), yyDollar[3].val.(*Order))
		}
	case 1693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9775
		{
			yyVAL.val = &Order{Expr: tryCastExpr(yyDollar[1].val), Direction: yyDollar[2].val.(string)}
		}
	case 1694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9780
		{
			yyVAL.val = AscScr
		}
	case 1695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9784
		{
			yyVAL.val = AscScr
		}
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9788
		{
			yyVAL.val = DescScr
		}
	case 1697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9793
		{
			yyVAL.val = (*Limit)(nil)
		}
	case 1698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9797
		{
			yyVAL.val = &Limit{Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9801
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[2].val), Rowcount: tryCastExpr(yyDollar[4].val)}
		}
	case 1700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9805
		{
			yyVAL.val = &Limit{Offset: tryCastExpr(yyDollar[4].val), Rowcount: tryCastExpr(yyDollar[2].val)}
		}
	case 1701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9811
		{
			yyVAL.val = NewIntVal(yyDollar[1].bytes)
		}
	case 1702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9815
		{
			yyVAL.val = NewValArg(yyDollar[1].bytes)
		}
	case 1703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9819
		{
			yyVAL.val = yyDollar[1].val.(*ColName)
		}
	case 1704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9824
		{
			yyVAL.val = ""
		}
	case 1705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9828
		{
			yyVAL.val = ForUpdateStr
		}
	case 1706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9832
		{
			yyVAL.val = ForUpdateSkipLockedStr
		}
	case 1707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9836
		{
			yyVAL.val = ShareModeStr
		}
	case 1708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9842
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9846
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
			// Rows is guarenteed to be an *AliasedValues here.
			rows := yyVAL.val.(*Insert).Rows.(*AliasedValues)
			rows.As = yyDollar[3].val.(TableIdent)
			if yyDollar[4].val.(Columns) != nil {
				rows.Columns = yyDollar[4].val.(Columns)
			}
			yyVAL.val.(*Insert).Rows = rows
		}
	case 1710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9866
		{
			yyVAL.val = yyDollar[1].val.(*Insert)
		}
	case 1711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9870
		{
			yyDollar[3].val.(*Insert).Columns = []ColIdent{}
			yyVAL.val = yyDollar[3].val.(*Insert)
		}
	case 1712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9875
		{
			yyDollar[4].val.(*Insert).Columns = yyDollar[2].val.(Columns)
			yyVAL.val = yyDollar[4].val.(*Insert)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9882
		{
			yyVAL.val = &Insert{Rows: yyDollar[1].val.(SelectStatement)}
		}
	case 1714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:9886
		{
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[4].val.(SelectStatement)}
		}
	case 1715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9890
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Rows: yyDollar[2].val.(SelectStatement)}
		}
	case 1716:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:9895
		{
			// Drop the redundant parenthesis.
			yyVAL.val = &Insert{Columns: yyDollar[2].val.(Columns), Rows: yyDollar[5].val.(SelectStatement)}
		}
	case 1717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9902
		{
			yyVAL.val = &Insert{Rows: &AliasedValues{Values: yyDollar[2].val.(Values)}, Auth: AuthInformation{AuthType: AuthType_IGNORE}}
		}
	case 1718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9906
		{
			yyVAL.val = yyDollar[2].val.(*Insert)
		}
	case 1721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9915
		{
			yyVAL.val = Columns(nil)
		}
	case 1722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9919
		{
			yyVAL.val = yyDollar[2].val.(Columns)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9925
		{
			yyVAL.val = Columns{yyDollar[1].val.(ColIdent)}
		}
	case 1724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9929
		{
			yyVAL.val = append(yyVAL.val.(Columns), yyDollar[3].val.(ColIdent))
		}
	case 1725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9935
		{
			yyVAL.val = yyDollar[3].val.(ColIdent)
		}
	case 1726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9939
		{
			yyVAL.val = yyDollar[1].val.(ColIdent)
		}
	case 1727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9943
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9947
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9951
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9955
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:9960
		{
			yyVAL.val = AssignmentExprs(nil)
		}
	case 1732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:9964
		{
			yyVAL.val = yyDollar[5].val.(AssignmentExprs)
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9970
		{
			yyVAL.val = Values{yyDollar[1].val.(ValTuple)}
		}
	case 1734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9974
		{
			yyVAL.val = append(yyDollar[1].val.(Values), yyDollar[3].val.(ValTuple))
		}
	case 1735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:9980
		{
			yyVAL.val = yyDollar[2].val.(ValTuple)
		}
	case 1736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9984
		{
			yyVAL.val = ValTuple{}
		}
	case 1737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:9990
		{
			yyVAL.val = ValTuple(yyDollar[2].val.(Exprs))
		}
	case 1738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:9996
		{
			if len(yyDollar[1].val.(ValTuple)) == 1 {
				yyVAL.val = &ParenExpr{yyDollar[1].val.(ValTuple)[0]}
			} else {
				yyVAL.val = yyDollar[1].val.(ValTuple)
			}
		}
	case 1739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10006
		{
			yyVAL.val = AssignmentExprs{yyDollar[1].val.(*AssignmentExpr)}
		}
	case 1740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10010
		{
			yyVAL.val = append(yyDollar[1].val.(AssignmentExprs), yyDollar[3].val.(*AssignmentExpr))
		}
	case 1741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10016
		{
			yyVAL.val = &AssignmentExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10019
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10023
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10027
		{
			yyVAL.val = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: tryCastExpr(yyDollar[3].val)}
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10033
		{
			yyVAL.val = SetVarExprs{yyDollar[1].val.(*SetVarExpr)}
		}
	case 1746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10037
		{
			yyVAL.val = append(yyDollar[1].val.(SetVarExprs), yyDollar[3].val.(*SetVarExpr))
		}
	case 1747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10043
		{
			colName, scope, _, err := VarScopeForColName(yyDollar[1].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].val.(*SetVarExpr).Name = colName
			yyDollar[1].val.(*SetVarExpr).Scope = scope
			yyVAL.val = yyDollar[1].val.(*SetVarExpr)
		}
	case 1748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10054
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10067
		{
			_, scope, _, err := VarScopeForColName(yyDollar[2].val.(*SetVarExpr).Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].val.(*SetVarExpr).Name.Name.val))
				return 1
			}
			yyDollar[2].val.(*SetVarExpr).Scope = yyDollar[1].val.(SetScope)
			yyVAL.val = yyDollar[2].val.(*SetVarExpr)
		}
	case 1750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10080
		{
			yyVAL.val = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: tryCastExpr(yyDollar[2].val), Scope: SetScope_Session}
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10086
		{
			yyVAL.val = SetScope_Global
		}
	case 1752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10090
		{
			yyVAL.val = SetScope_Session
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10096
		{
			yyVAL.val = SetScope_Session
		}
	case 1754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10100
		{
			yyVAL.val = SetScope_Persist
		}
	case 1755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10104
		{
			yyVAL.val = SetScope_PersistOnly
		}
	case 1756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10110
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10114
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10118
		{
			// NOTE: This is a fix to allow MySQL dumps to load cleanly when they contain the following:
			//       SET @@GLOBAL.GTID_PURGED= /*!80000 '+'*/ 'beabe64c-9dc6-11ed-8021-a0f9021e8e70:1-126';
			//       The full fix is for any adjacent single-quoted or double-quoted strings to be concatenated but
			//       this fixes the most pressing case. For more details, see: https://github.com/dolthub/dolt/issues/5232
			// In other places we can correctly concatenate adjacent string literals, but the special comments break it

			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: NewStrVal([]byte(string(yyDollar[3].bytes) + string(yyDollar[4].bytes))), Scope: SetScope_None}
		}
	case 1759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10128
		{
			yyVAL.val = &SetVarExpr{Name: yyDollar[1].val.(*ColName), Expr: tryCastExpr(yyDollar[3].val), Scope: SetScope_None}
		}
	case 1761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10135
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10142
		{
			yyVAL.val = NewStrVal([]byte(yyDollar[1].val.(ColIdent).String()))
		}
	case 1764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10146
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10150
		{
			yyVAL.val = &Default{}
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10154
		{
			yyVAL.val = NewStrVal(yyDollar[1].bytes)
		}
	case 1769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10163
		{
			yyVAL.val = 0
		}
	case 1770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10165
		{
			yyVAL.val = 1
		}
	case 1771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10168
		{
			yyVAL.val = 0
		}
	case 1772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10170
		{
			yyVAL.val = 1
		}
	case 1773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10173
		{
			yyVAL.val = 0
		}
	case 1774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10175
		{
			yyVAL.val = 1
		}
	case 1775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10178
		{
			yyVAL.val = ""
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10180
		{
			yyVAL.val = IgnoreStr
		}
	case 1777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10183
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10185
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10187
		{
			yyVAL.val = NewIntVal(yyDollar[2].bytes)
		}
	case 1780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10190
		{
			yyVAL.val = struct{}{}
		}
	case 1781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10192
		{
			yyVAL.val = struct{}{}
		}
	case 1782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10196
		{
			yyVAL.val = struct{}{}
		}
	case 1783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10198
		{
			yyVAL.val = struct{}{}
		}
	case 1784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10201
		{
			yyVAL.val = struct{}{}
		}
	case 1785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10203
		{
			yyVAL.val = struct{}{}
		}
	case 1786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10207
		{
			yyVAL.val = UniqueStr
		}
	case 1787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10209
		{
			yyVAL.val = FulltextStr
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10211
		{
			yyVAL.val = SpatialStr
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10213
		{
			yyVAL.val = VectorStr
		}
	case 1790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10216
		{
			yyVAL.val = ""
		}
	case 1791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10218
		{
			yyVAL.val = yyDollar[1].val.(string)
		}
	case 1792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10221
		{
			yyVAL.val = ColIdent{}
		}
	case 1793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10223
		{
			yyVAL.val = yyDollar[2].val.(ColIdent)
		}
	case 1794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10227
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10231
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10237
		{
			yyVAL.val = []ColIdent{yyDollar[1].val.(ColIdent)}
		}
	case 1797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10241
		{
			yyVAL.val = append(yyVAL.val.([]ColIdent), yyDollar[3].val.(ColIdent))
		}
	case 1799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10248
		{
			yyVAL.val = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10254
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10258
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10265
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10269
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10273
		{
			yyVAL.val = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10278
		{
			yyVAL.val = string("")
		}
	case 1807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10280
		{
			yyVAL.val = string(yyDollar[2].bytes)
		}
	case 1808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10283
		{
			yyVAL.val = string("")
		}
	case 1809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10285
		{
			yyVAL.val = IgnoreStr
		}
	case 1810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10287
		{
			yyVAL.val = ReplaceStr
		}
	case 1811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10290
		{
			yyVAL.val = BoolVal(false)
		}
	case 1812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10292
		{
			yyVAL.val = BoolVal(true)
		}
	case 1813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10295
		{
			yyVAL.val = (*EnclosedBy)(nil)
		}
	case 1814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10299
		{
			yyVAL.val = &EnclosedBy{Optionally: yyDollar[1].val.(BoolVal), Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10304
		{
			yyVAL.val = BoolVal(false)
		}
	case 1816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10308
		{
			yyVAL.val = BoolVal(true)
		}
	case 1817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10313
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10317
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10322
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10326
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10334
		{
			yyVAL.val = (*Fields)(nil)
		}
	case 1822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10338
		{
			yyVAL.val = &Fields{TerminatedBy: yyDollar[2].val.(*SQLVal), EnclosedBy: yyDollar[3].val.(*EnclosedBy), EscapedBy: yyDollar[4].val.(*SQLVal)}
		}
	case 1823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10343
		{
			yyVAL.val = (*Lines)(nil)
		}
	case 1824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10347
		{
			yyVAL.val = &Lines{StartingBy: yyDollar[2].val.(*SQLVal), TerminatedBy: yyDollar[3].val.(*SQLVal)}
		}
	case 1825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:10352
		{
			yyVAL.val = (*SQLVal)(nil)
		}
	case 1826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10356
		{
			yyVAL.val = NewStrVal(yyDollar[3].bytes)
		}
	case 1827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10362
		{
			yyVAL.val = &LockTables{Tables: yyDollar[3].val.(TableAndLockTypes)}
		}
	case 1828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10368
		{
			yyVAL.val = TableAndLockTypes{yyDollar[1].val.(*TableAndLockType)}
		}
	case 1829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10372
		{
			yyVAL.val = append(yyDollar[1].val.(TableAndLockTypes), yyDollar[3].val.(*TableAndLockType))
		}
	case 1830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10378
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[2].val.(LockType),
			}
		}
	case 1831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:10393
		{
			tableName := yyDollar[1].val.(TableName)
			yyVAL.val = &TableAndLockType{
				Table: &AliasedTableExpr{
					Expr: tableName,
					As:   yyDollar[3].val.(TableIdent),
					Auth: AuthInformation{
						AuthType:    AuthType_LOCK,
						TargetType:  AuthTargetType_SingleTableIdentifier,
						TargetNames: []string{tableName.DbQualifier.String(), tableName.Name.String()},
					},
				},
				Lock: yyDollar[4].val.(LockType),
			}
		}
	case 1832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10411
		{
			yyVAL.val = LockRead
		}
	case 1833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10415
		{
			yyVAL.val = LockReadLocal
		}
	case 1834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:10419
		{
			yyVAL.val = LockWrite
		}
	case 1835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10423
		{
			yyVAL.val = LockLowPriorityWrite
		}
	case 1836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10429
		{
			yyVAL.val = &UnlockTables{}
		}
	case 1837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:10435
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[2].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10446
		{
			yyVAL.val = &Kill{
				ConnID: NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 1839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:10456
		{
			yyVAL.val = &Kill{
				Connection: true,
				ConnID:     NewIntVal(yyDollar[3].bytes),
				Auth: AuthInformation{
					AuthType:   AuthType_SUPER,
					TargetType: AuthTargetType_Global,
				},
			}
		}
	case 2713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11381
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:11390
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
